/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	var dc = __webpack_require__(1);
	var fixtures = __webpack_require__(39);
	
	__webpack_require__(40);
	//include styles
	//better data set for paging
	//don't require the group, its not using it
	
	var id, dynatable, data;
	var assistanceCategoryId, assistanceCategoryDimension, assistanceCategoryGroup, assistanceCategoryChart;
	var regionId, regionDimension, regionGroup, regionChart;
	var listingDimension, listingGroup;
	
	data = crossfilter(fixtures.loadForeignAidFixture());
	
	id = 'dynatable';
	
	assistanceCategoryId = 'assistance-category-chart';
	
	regionId = 'region-chart';
	
	listingDimension = data.dimension(function(d) {return d.activity_name;});
	listingGroup = listingDimension.group(); 
	
	assistanceCategoryDimension = data.dimension(function(d) { return d.assistance_category_name; });
	assistanceCategoryGroup = assistanceCategoryDimension.group();
	
	regionDimension = data.dimension(function(d) { return d.region_name; });
	regionGroup = regionDimension.group();
	
	assistanceCategoryChart = dc.rowChart('#' + assistanceCategoryId);
	assistanceCategoryChart.dimension(assistanceCategoryDimension).group(assistanceCategoryGroup)
	  .width(600).height(200).gap(10)
	  .transitionDuration(0);
	
	regionChart = dc.rowChart('#' + regionId);
	regionChart.dimension(regionDimension).group(regionGroup)
	  .width(600).height(200).gap(10)
	  .transitionDuration(0);
	
	dynatable = dc.dynatableComponent('#' + id)
				  .dimension(listingDimension)
				  .group(listingGroup);
	dynatable.columns([{label: "Region", csvColumnName: "region_name"},
					   {label: "Assitance Category", csvColumnName: "assistance_category_name"},
					   {label: "Sector", csvColumnName: "dac_sector_name"},
					   {label: "Country", csvColumnName: "country_name"}]);
	dynatable.shortLoad(true);
	
	dc.renderAll();
	
	dynatable.redraw(); //manually redraw since the initial load only included 10 records because of short load

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	var dc = __webpack_require__(2),
	    jQuery = __webpack_require__(7);
	var $ = jQuery;
	
	var jsPath = './src/javascripts/';
	
	var dcCustom = {
	  filterBuilder: __webpack_require__(8)(jsPath + 'filter-builder'),
	  dynatableComponent: __webpack_require__(27)(jsPath + 'dynatable-component'),
	  audioDash: __webpack_require__(32)(jsPath + 'audio-dash'),
	  toolTipsify: __webpack_require__(34)(jsPath + 'tool-tipsify')
	};
	
	jQuery.extend(dc, dcCustom);
	
	module.exports = dc;


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	// Import DC and dependencies
	
	d3 = __webpack_require__(3);
	crossfilter = __webpack_require__(4);
	module.exports = __webpack_require__(6);


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {
	  var d3 = {
	    version: "3.4.13"
	  };
	  if (!Date.now) Date.now = function() {
	    return +new Date();
	  };
	  var d3_arraySlice = [].slice, d3_array = function(list) {
	    return d3_arraySlice.call(list);
	  };
	  var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;
	  try {
	    d3_array(d3_documentElement.childNodes)[0].nodeType;
	  } catch (e) {
	    d3_array = function(list) {
	      var i = list.length, array = new Array(i);
	      while (i--) array[i] = list[i];
	      return array;
	    };
	  }
	  try {
	    d3_document.createElement("div").style.setProperty("opacity", 0, "");
	  } catch (error) {
	    var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;
	    d3_element_prototype.setAttribute = function(name, value) {
	      d3_element_setAttribute.call(this, name, value + "");
	    };
	    d3_element_prototype.setAttributeNS = function(space, local, value) {
	      d3_element_setAttributeNS.call(this, space, local, value + "");
	    };
	    d3_style_prototype.setProperty = function(name, value, priority) {
	      d3_style_setProperty.call(this, name, value + "", priority);
	    };
	  }
	  d3.ascending = d3_ascending;
	  function d3_ascending(a, b) {
	    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
	  }
	  d3.descending = function(a, b) {
	    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
	  };
	  d3.min = function(array, f) {
	    var i = -1, n = array.length, a, b;
	    if (arguments.length === 1) {
	      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;
	      while (++i < n) if ((b = array[i]) != null && a > b) a = b;
	    } else {
	      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;
	    }
	    return a;
	  };
	  d3.max = function(array, f) {
	    var i = -1, n = array.length, a, b;
	    if (arguments.length === 1) {
	      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;
	      while (++i < n) if ((b = array[i]) != null && b > a) a = b;
	    } else {
	      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;
	    }
	    return a;
	  };
	  d3.extent = function(array, f) {
	    var i = -1, n = array.length, a, b, c;
	    if (arguments.length === 1) {
	      while (++i < n && !((a = c = array[i]) != null && a <= a)) a = c = undefined;
	      while (++i < n) if ((b = array[i]) != null) {
	        if (a > b) a = b;
	        if (c < b) c = b;
	      }
	    } else {
	      while (++i < n && !((a = c = f.call(array, array[i], i)) != null && a <= a)) a = undefined;
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {
	        if (a > b) a = b;
	        if (c < b) c = b;
	      }
	    }
	    return [ a, c ];
	  };
	  function d3_number(x) {
	    return x === null ? NaN : +x;
	  }
	  function d3_numeric(x) {
	    return !isNaN(x);
	  }
	  d3.sum = function(array, f) {
	    var s = 0, n = array.length, a, i = -1;
	    if (arguments.length === 1) {
	      while (++i < n) if (d3_numeric(a = +array[i])) s += a;
	    } else {
	      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;
	    }
	    return s;
	  };
	  d3.mean = function(array, f) {
	    var s = 0, n = array.length, a, i = -1, j = n;
	    if (arguments.length === 1) {
	      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;
	    } else {
	      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;
	    }
	    return j ? s / j : undefined;
	  };
	  d3.quantile = function(values, p) {
	    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;
	    return e ? v + e * (values[h] - v) : v;
	  };
	  d3.median = function(array, f) {
	    var numbers = [], n = array.length, a, i = -1;
	    if (arguments.length === 1) {
	      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);
	    } else {
	      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);
	    }
	    return numbers.length ? d3.quantile(numbers.sort(d3_ascending), .5) : undefined;
	  };
	  function d3_bisector(compare) {
	    return {
	      left: function(a, x, lo, hi) {
	        if (arguments.length < 3) lo = 0;
	        if (arguments.length < 4) hi = a.length;
	        while (lo < hi) {
	          var mid = lo + hi >>> 1;
	          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;
	        }
	        return lo;
	      },
	      right: function(a, x, lo, hi) {
	        if (arguments.length < 3) lo = 0;
	        if (arguments.length < 4) hi = a.length;
	        while (lo < hi) {
	          var mid = lo + hi >>> 1;
	          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;
	        }
	        return lo;
	      }
	    };
	  }
	  var d3_bisect = d3_bisector(d3_ascending);
	  d3.bisectLeft = d3_bisect.left;
	  d3.bisect = d3.bisectRight = d3_bisect.right;
	  d3.bisector = function(f) {
	    return d3_bisector(f.length === 1 ? function(d, x) {
	      return d3_ascending(f(d), x);
	    } : f);
	  };
	  d3.shuffle = function(array) {
	    var m = array.length, t, i;
	    while (m) {
	      i = Math.random() * m-- | 0;
	      t = array[m], array[m] = array[i], array[i] = t;
	    }
	    return array;
	  };
	  d3.permute = function(array, indexes) {
	    var i = indexes.length, permutes = new Array(i);
	    while (i--) permutes[i] = array[indexes[i]];
	    return permutes;
	  };
	  d3.pairs = function(array) {
	    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);
	    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];
	    return pairs;
	  };
	  d3.zip = function() {
	    if (!(n = arguments.length)) return [];
	    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {
	      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {
	        zip[j] = arguments[j][i];
	      }
	    }
	    return zips;
	  };
	  function d3_zipLength(d) {
	    return d.length;
	  }
	  d3.transpose = function(matrix) {
	    return d3.zip.apply(d3, matrix);
	  };
	  d3.keys = function(map) {
	    var keys = [];
	    for (var key in map) keys.push(key);
	    return keys;
	  };
	  d3.values = function(map) {
	    var values = [];
	    for (var key in map) values.push(map[key]);
	    return values;
	  };
	  d3.entries = function(map) {
	    var entries = [];
	    for (var key in map) entries.push({
	      key: key,
	      value: map[key]
	    });
	    return entries;
	  };
	  d3.merge = function(arrays) {
	    var n = arrays.length, m, i = -1, j = 0, merged, array;
	    while (++i < n) j += arrays[i].length;
	    merged = new Array(j);
	    while (--n >= 0) {
	      array = arrays[n];
	      m = array.length;
	      while (--m >= 0) {
	        merged[--j] = array[m];
	      }
	    }
	    return merged;
	  };
	  var abs = Math.abs;
	  d3.range = function(start, stop, step) {
	    if (arguments.length < 3) {
	      step = 1;
	      if (arguments.length < 2) {
	        stop = start;
	        start = 0;
	      }
	    }
	    if ((stop - start) / step === Infinity) throw new Error("infinite range");
	    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;
	    start *= k, stop *= k, step *= k;
	    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);
	    return range;
	  };
	  function d3_range_integerScale(x) {
	    var k = 1;
	    while (x * k % 1) k *= 10;
	    return k;
	  }
	  function d3_class(ctor, properties) {
	    for (var key in properties) {
	      Object.defineProperty(ctor.prototype, key, {
	        value: properties[key],
	        enumerable: false
	      });
	    }
	  }
	  d3.map = function(object) {
	    var map = new d3_Map();
	    if (object instanceof d3_Map) object.forEach(function(key, value) {
	      map.set(key, value);
	    }); else for (var key in object) map.set(key, object[key]);
	    return map;
	  };
	  function d3_Map() {
	    this._ = Object.create(null);
	  }
	  var d3_map_proto = "__proto__", d3_map_zero = "\x00";
	  d3_class(d3_Map, {
	    has: d3_map_has,
	    get: function(key) {
	      return this._[d3_map_escape(key)];
	    },
	    set: function(key, value) {
	      return this._[d3_map_escape(key)] = value;
	    },
	    remove: d3_map_remove,
	    keys: d3_map_keys,
	    values: function() {
	      var values = [];
	      for (var key in this._) values.push(this._[key]);
	      return values;
	    },
	    entries: function() {
	      var entries = [];
	      for (var key in this._) entries.push({
	        key: d3_map_unescape(key),
	        value: this._[key]
	      });
	      return entries;
	    },
	    size: d3_map_size,
	    empty: d3_map_empty,
	    forEach: function(f) {
	      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);
	    }
	  });
	  function d3_map_escape(key) {
	    return (key += "") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;
	  }
	  function d3_map_unescape(key) {
	    return (key += "")[0] === d3_map_zero ? key.slice(1) : key;
	  }
	  function d3_map_has(key) {
	    return d3_map_escape(key) in this._;
	  }
	  function d3_map_remove(key) {
	    return (key = d3_map_escape(key)) in this._ && delete this._[key];
	  }
	  function d3_map_keys() {
	    var keys = [];
	    for (var key in this._) keys.push(d3_map_unescape(key));
	    return keys;
	  }
	  function d3_map_size() {
	    var size = 0;
	    for (var key in this._) ++size;
	    return size;
	  }
	  function d3_map_empty() {
	    for (var key in this._) return false;
	    return true;
	  }
	  d3.nest = function() {
	    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;
	    function map(mapType, array, depth) {
	      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;
	      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;
	      while (++i < n) {
	        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {
	          values.push(object);
	        } else {
	          valuesByKey.set(keyValue, [ object ]);
	        }
	      }
	      if (mapType) {
	        object = mapType();
	        setter = function(keyValue, values) {
	          object.set(keyValue, map(mapType, values, depth));
	        };
	      } else {
	        object = {};
	        setter = function(keyValue, values) {
	          object[keyValue] = map(mapType, values, depth);
	        };
	      }
	      valuesByKey.forEach(setter);
	      return object;
	    }
	    function entries(map, depth) {
	      if (depth >= keys.length) return map;
	      var array = [], sortKey = sortKeys[depth++];
	      map.forEach(function(key, keyMap) {
	        array.push({
	          key: key,
	          values: entries(keyMap, depth)
	        });
	      });
	      return sortKey ? array.sort(function(a, b) {
	        return sortKey(a.key, b.key);
	      }) : array;
	    }
	    nest.map = function(array, mapType) {
	      return map(mapType, array, 0);
	    };
	    nest.entries = function(array) {
	      return entries(map(d3.map, array, 0), 0);
	    };
	    nest.key = function(d) {
	      keys.push(d);
	      return nest;
	    };
	    nest.sortKeys = function(order) {
	      sortKeys[keys.length - 1] = order;
	      return nest;
	    };
	    nest.sortValues = function(order) {
	      sortValues = order;
	      return nest;
	    };
	    nest.rollup = function(f) {
	      rollup = f;
	      return nest;
	    };
	    return nest;
	  };
	  d3.set = function(array) {
	    var set = new d3_Set();
	    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);
	    return set;
	  };
	  function d3_Set() {
	    this._ = Object.create(null);
	  }
	  d3_class(d3_Set, {
	    has: d3_map_has,
	    add: function(key) {
	      this._[d3_map_escape(key += "")] = true;
	      return key;
	    },
	    remove: d3_map_remove,
	    values: d3_map_keys,
	    size: d3_map_size,
	    empty: d3_map_empty,
	    forEach: function(f) {
	      for (var key in this._) f.call(this, d3_map_unescape(key));
	    }
	  });
	  d3.behavior = {};
	  d3.rebind = function(target, source) {
	    var i = 1, n = arguments.length, method;
	    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);
	    return target;
	  };
	  function d3_rebind(target, source, method) {
	    return function() {
	      var value = method.apply(source, arguments);
	      return value === source ? target : value;
	    };
	  }
	  function d3_vendorSymbol(object, name) {
	    if (name in object) return name;
	    name = name.charAt(0).toUpperCase() + name.slice(1);
	    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {
	      var prefixName = d3_vendorPrefixes[i] + name;
	      if (prefixName in object) return prefixName;
	    }
	  }
	  var d3_vendorPrefixes = [ "webkit", "ms", "moz", "Moz", "o", "O" ];
	  function d3_noop() {}
	  d3.dispatch = function() {
	    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;
	    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
	    return dispatch;
	  };
	  function d3_dispatch() {}
	  d3_dispatch.prototype.on = function(type, listener) {
	    var i = type.indexOf("."), name = "";
	    if (i >= 0) {
	      name = type.slice(i + 1);
	      type = type.slice(0, i);
	    }
	    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);
	    if (arguments.length === 2) {
	      if (listener == null) for (type in this) {
	        if (this.hasOwnProperty(type)) this[type].on(name, null);
	      }
	      return this;
	    }
	  };
	  function d3_dispatch_event(dispatch) {
	    var listeners = [], listenerByName = new d3_Map();
	    function event() {
	      var z = listeners, i = -1, n = z.length, l;
	      while (++i < n) if (l = z[i].on) l.apply(this, arguments);
	      return dispatch;
	    }
	    event.on = function(name, listener) {
	      var l = listenerByName.get(name), i;
	      if (arguments.length < 2) return l && l.on;
	      if (l) {
	        l.on = null;
	        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));
	        listenerByName.remove(name);
	      }
	      if (listener) listeners.push(listenerByName.set(name, {
	        on: listener
	      }));
	      return dispatch;
	    };
	    return event;
	  }
	  d3.event = null;
	  function d3_eventPreventDefault() {
	    d3.event.preventDefault();
	  }
	  function d3_eventSource() {
	    var e = d3.event, s;
	    while (s = e.sourceEvent) e = s;
	    return e;
	  }
	  function d3_eventDispatch(target) {
	    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;
	    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
	    dispatch.of = function(thiz, argumentz) {
	      return function(e1) {
	        try {
	          var e0 = e1.sourceEvent = d3.event;
	          e1.target = target;
	          d3.event = e1;
	          dispatch[e1.type].apply(thiz, argumentz);
	        } finally {
	          d3.event = e0;
	        }
	      };
	    };
	    return dispatch;
	  }
	  d3.requote = function(s) {
	    return s.replace(d3_requote_re, "\\$&");
	  };
	  var d3_requote_re = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
	  var d3_subclass = {}.__proto__ ? function(object, prototype) {
	    object.__proto__ = prototype;
	  } : function(object, prototype) {
	    for (var property in prototype) object[property] = prototype[property];
	  };
	  function d3_selection(groups) {
	    d3_subclass(groups, d3_selectionPrototype);
	    return groups;
	  }
	  var d3_select = function(s, n) {
	    return n.querySelector(s);
	  }, d3_selectAll = function(s, n) {
	    return n.querySelectorAll(s);
	  }, d3_selectMatcher = d3_documentElement.matches || d3_documentElement[d3_vendorSymbol(d3_documentElement, "matchesSelector")], d3_selectMatches = function(n, s) {
	    return d3_selectMatcher.call(n, s);
	  };
	  if (typeof Sizzle === "function") {
	    d3_select = function(s, n) {
	      return Sizzle(s, n)[0] || null;
	    };
	    d3_selectAll = Sizzle;
	    d3_selectMatches = Sizzle.matchesSelector;
	  }
	  d3.selection = function() {
	    return d3_selectionRoot;
	  };
	  var d3_selectionPrototype = d3.selection.prototype = [];
	  d3_selectionPrototype.select = function(selector) {
	    var subgroups = [], subgroup, subnode, group, node;
	    selector = d3_selection_selector(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      subgroups.push(subgroup = []);
	      subgroup.parentNode = (group = this[j]).parentNode;
	      for (var i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          subgroup.push(subnode = selector.call(node, node.__data__, i, j));
	          if (subnode && "__data__" in node) subnode.__data__ = node.__data__;
	        } else {
	          subgroup.push(null);
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  function d3_selection_selector(selector) {
	    return typeof selector === "function" ? selector : function() {
	      return d3_select(selector, this);
	    };
	  }
	  d3_selectionPrototype.selectAll = function(selector) {
	    var subgroups = [], subgroup, node;
	    selector = d3_selection_selectorAll(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));
	          subgroup.parentNode = node;
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  function d3_selection_selectorAll(selector) {
	    return typeof selector === "function" ? selector : function() {
	      return d3_selectAll(selector, this);
	    };
	  }
	  var d3_nsPrefix = {
	    svg: "http://www.w3.org/2000/svg",
	    xhtml: "http://www.w3.org/1999/xhtml",
	    xlink: "http://www.w3.org/1999/xlink",
	    xml: "http://www.w3.org/XML/1998/namespace",
	    xmlns: "http://www.w3.org/2000/xmlns/"
	  };
	  d3.ns = {
	    prefix: d3_nsPrefix,
	    qualify: function(name) {
	      var i = name.indexOf(":"), prefix = name;
	      if (i >= 0) {
	        prefix = name.slice(0, i);
	        name = name.slice(i + 1);
	      }
	      return d3_nsPrefix.hasOwnProperty(prefix) ? {
	        space: d3_nsPrefix[prefix],
	        local: name
	      } : name;
	    }
	  };
	  d3_selectionPrototype.attr = function(name, value) {
	    if (arguments.length < 2) {
	      if (typeof name === "string") {
	        var node = this.node();
	        name = d3.ns.qualify(name);
	        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);
	      }
	      for (value in name) this.each(d3_selection_attr(value, name[value]));
	      return this;
	    }
	    return this.each(d3_selection_attr(name, value));
	  };
	  function d3_selection_attr(name, value) {
	    name = d3.ns.qualify(name);
	    function attrNull() {
	      this.removeAttribute(name);
	    }
	    function attrNullNS() {
	      this.removeAttributeNS(name.space, name.local);
	    }
	    function attrConstant() {
	      this.setAttribute(name, value);
	    }
	    function attrConstantNS() {
	      this.setAttributeNS(name.space, name.local, value);
	    }
	    function attrFunction() {
	      var x = value.apply(this, arguments);
	      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);
	    }
	    function attrFunctionNS() {
	      var x = value.apply(this, arguments);
	      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);
	    }
	    return value == null ? name.local ? attrNullNS : attrNull : typeof value === "function" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;
	  }
	  function d3_collapse(s) {
	    return s.trim().replace(/\s+/g, " ");
	  }
	  d3_selectionPrototype.classed = function(name, value) {
	    if (arguments.length < 2) {
	      if (typeof name === "string") {
	        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;
	        if (value = node.classList) {
	          while (++i < n) if (!value.contains(name[i])) return false;
	        } else {
	          value = node.getAttribute("class");
	          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;
	        }
	        return true;
	      }
	      for (value in name) this.each(d3_selection_classed(value, name[value]));
	      return this;
	    }
	    return this.each(d3_selection_classed(name, value));
	  };
	  function d3_selection_classedRe(name) {
	    return new RegExp("(?:^|\\s+)" + d3.requote(name) + "(?:\\s+|$)", "g");
	  }
	  function d3_selection_classes(name) {
	    return (name + "").trim().split(/^|\s+/);
	  }
	  function d3_selection_classed(name, value) {
	    name = d3_selection_classes(name).map(d3_selection_classedName);
	    var n = name.length;
	    function classedConstant() {
	      var i = -1;
	      while (++i < n) name[i](this, value);
	    }
	    function classedFunction() {
	      var i = -1, x = value.apply(this, arguments);
	      while (++i < n) name[i](this, x);
	    }
	    return typeof value === "function" ? classedFunction : classedConstant;
	  }
	  function d3_selection_classedName(name) {
	    var re = d3_selection_classedRe(name);
	    return function(node, value) {
	      if (c = node.classList) return value ? c.add(name) : c.remove(name);
	      var c = node.getAttribute("class") || "";
	      if (value) {
	        re.lastIndex = 0;
	        if (!re.test(c)) node.setAttribute("class", d3_collapse(c + " " + name));
	      } else {
	        node.setAttribute("class", d3_collapse(c.replace(re, " ")));
	      }
	    };
	  }
	  d3_selectionPrototype.style = function(name, value, priority) {
	    var n = arguments.length;
	    if (n < 3) {
	      if (typeof name !== "string") {
	        if (n < 2) value = "";
	        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));
	        return this;
	      }
	      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);
	      priority = "";
	    }
	    return this.each(d3_selection_style(name, value, priority));
	  };
	  function d3_selection_style(name, value, priority) {
	    function styleNull() {
	      this.style.removeProperty(name);
	    }
	    function styleConstant() {
	      this.style.setProperty(name, value, priority);
	    }
	    function styleFunction() {
	      var x = value.apply(this, arguments);
	      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);
	    }
	    return value == null ? styleNull : typeof value === "function" ? styleFunction : styleConstant;
	  }
	  d3_selectionPrototype.property = function(name, value) {
	    if (arguments.length < 2) {
	      if (typeof name === "string") return this.node()[name];
	      for (value in name) this.each(d3_selection_property(value, name[value]));
	      return this;
	    }
	    return this.each(d3_selection_property(name, value));
	  };
	  function d3_selection_property(name, value) {
	    function propertyNull() {
	      delete this[name];
	    }
	    function propertyConstant() {
	      this[name] = value;
	    }
	    function propertyFunction() {
	      var x = value.apply(this, arguments);
	      if (x == null) delete this[name]; else this[name] = x;
	    }
	    return value == null ? propertyNull : typeof value === "function" ? propertyFunction : propertyConstant;
	  }
	  d3_selectionPrototype.text = function(value) {
	    return arguments.length ? this.each(typeof value === "function" ? function() {
	      var v = value.apply(this, arguments);
	      this.textContent = v == null ? "" : v;
	    } : value == null ? function() {
	      this.textContent = "";
	    } : function() {
	      this.textContent = value;
	    }) : this.node().textContent;
	  };
	  d3_selectionPrototype.html = function(value) {
	    return arguments.length ? this.each(typeof value === "function" ? function() {
	      var v = value.apply(this, arguments);
	      this.innerHTML = v == null ? "" : v;
	    } : value == null ? function() {
	      this.innerHTML = "";
	    } : function() {
	      this.innerHTML = value;
	    }) : this.node().innerHTML;
	  };
	  d3_selectionPrototype.append = function(name) {
	    name = d3_selection_creator(name);
	    return this.select(function() {
	      return this.appendChild(name.apply(this, arguments));
	    });
	  };
	  function d3_selection_creator(name) {
	    return typeof name === "function" ? name : (name = d3.ns.qualify(name)).local ? function() {
	      return this.ownerDocument.createElementNS(name.space, name.local);
	    } : function() {
	      return this.ownerDocument.createElementNS(this.namespaceURI, name);
	    };
	  }
	  d3_selectionPrototype.insert = function(name, before) {
	    name = d3_selection_creator(name);
	    before = d3_selection_selector(before);
	    return this.select(function() {
	      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);
	    });
	  };
	  d3_selectionPrototype.remove = function() {
	    return this.each(function() {
	      var parent = this.parentNode;
	      if (parent) parent.removeChild(this);
	    });
	  };
	  d3_selectionPrototype.data = function(value, key) {
	    var i = -1, n = this.length, group, node;
	    if (!arguments.length) {
	      value = new Array(n = (group = this[0]).length);
	      while (++i < n) {
	        if (node = group[i]) {
	          value[i] = node.__data__;
	        }
	      }
	      return value;
	    }
	    function bind(group, groupData) {
	      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;
	      if (key) {
	        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;
	        for (i = -1; ++i < n; ) {
	          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {
	            exitNodes[i] = node;
	          } else {
	            nodeByKeyValue.set(keyValue, node);
	          }
	          keyValues[i] = keyValue;
	        }
	        for (i = -1; ++i < m; ) {
	          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {
	            enterNodes[i] = d3_selection_dataNode(nodeData);
	          } else if (node !== true) {
	            updateNodes[i] = node;
	            node.__data__ = nodeData;
	          }
	          nodeByKeyValue.set(keyValue, true);
	        }
	        for (i = -1; ++i < n; ) {
	          if (nodeByKeyValue.get(keyValues[i]) !== true) {
	            exitNodes[i] = group[i];
	          }
	        }
	      } else {
	        for (i = -1; ++i < n0; ) {
	          node = group[i];
	          nodeData = groupData[i];
	          if (node) {
	            node.__data__ = nodeData;
	            updateNodes[i] = node;
	          } else {
	            enterNodes[i] = d3_selection_dataNode(nodeData);
	          }
	        }
	        for (;i < m; ++i) {
	          enterNodes[i] = d3_selection_dataNode(groupData[i]);
	        }
	        for (;i < n; ++i) {
	          exitNodes[i] = group[i];
	        }
	      }
	      enterNodes.update = updateNodes;
	      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;
	      enter.push(enterNodes);
	      update.push(updateNodes);
	      exit.push(exitNodes);
	    }
	    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);
	    if (typeof value === "function") {
	      while (++i < n) {
	        bind(group = this[i], value.call(group, group.parentNode.__data__, i));
	      }
	    } else {
	      while (++i < n) {
	        bind(group = this[i], value);
	      }
	    }
	    update.enter = function() {
	      return enter;
	    };
	    update.exit = function() {
	      return exit;
	    };
	    return update;
	  };
	  function d3_selection_dataNode(data) {
	    return {
	      __data__: data
	    };
	  }
	  d3_selectionPrototype.datum = function(value) {
	    return arguments.length ? this.property("__data__", value) : this.property("__data__");
	  };
	  d3_selectionPrototype.filter = function(filter) {
	    var subgroups = [], subgroup, group, node;
	    if (typeof filter !== "function") filter = d3_selection_filter(filter);
	    for (var j = 0, m = this.length; j < m; j++) {
	      subgroups.push(subgroup = []);
	      subgroup.parentNode = (group = this[j]).parentNode;
	      for (var i = 0, n = group.length; i < n; i++) {
	        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
	          subgroup.push(node);
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  function d3_selection_filter(selector) {
	    return function() {
	      return d3_selectMatches(this, selector);
	    };
	  }
	  d3_selectionPrototype.order = function() {
	    for (var j = -1, m = this.length; ++j < m; ) {
	      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {
	        if (node = group[i]) {
	          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);
	          next = node;
	        }
	      }
	    }
	    return this;
	  };
	  d3_selectionPrototype.sort = function(comparator) {
	    comparator = d3_selection_sortComparator.apply(this, arguments);
	    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);
	    return this.order();
	  };
	  function d3_selection_sortComparator(comparator) {
	    if (!arguments.length) comparator = d3_ascending;
	    return function(a, b) {
	      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;
	    };
	  }
	  d3_selectionPrototype.each = function(callback) {
	    return d3_selection_each(this, function(node, i, j) {
	      callback.call(node, node.__data__, i, j);
	    });
	  };
	  function d3_selection_each(groups, callback) {
	    for (var j = 0, m = groups.length; j < m; j++) {
	      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {
	        if (node = group[i]) callback(node, i, j);
	      }
	    }
	    return groups;
	  }
	  d3_selectionPrototype.call = function(callback) {
	    var args = d3_array(arguments);
	    callback.apply(args[0] = this, args);
	    return this;
	  };
	  d3_selectionPrototype.empty = function() {
	    return !this.node();
	  };
	  d3_selectionPrototype.node = function() {
	    for (var j = 0, m = this.length; j < m; j++) {
	      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
	        var node = group[i];
	        if (node) return node;
	      }
	    }
	    return null;
	  };
	  d3_selectionPrototype.size = function() {
	    var n = 0;
	    d3_selection_each(this, function() {
	      ++n;
	    });
	    return n;
	  };
	  function d3_selection_enter(selection) {
	    d3_subclass(selection, d3_selection_enterPrototype);
	    return selection;
	  }
	  var d3_selection_enterPrototype = [];
	  d3.selection.enter = d3_selection_enter;
	  d3.selection.enter.prototype = d3_selection_enterPrototype;
	  d3_selection_enterPrototype.append = d3_selectionPrototype.append;
	  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;
	  d3_selection_enterPrototype.node = d3_selectionPrototype.node;
	  d3_selection_enterPrototype.call = d3_selectionPrototype.call;
	  d3_selection_enterPrototype.size = d3_selectionPrototype.size;
	  d3_selection_enterPrototype.select = function(selector) {
	    var subgroups = [], subgroup, subnode, upgroup, group, node;
	    for (var j = -1, m = this.length; ++j < m; ) {
	      upgroup = (group = this[j]).update;
	      subgroups.push(subgroup = []);
	      subgroup.parentNode = group.parentNode;
	      for (var i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));
	          subnode.__data__ = node.__data__;
	        } else {
	          subgroup.push(null);
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  d3_selection_enterPrototype.insert = function(name, before) {
	    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);
	    return d3_selectionPrototype.insert.call(this, name, before);
	  };
	  function d3_selection_enterInsertBefore(enter) {
	    var i0, j0;
	    return function(d, i, j) {
	      var group = enter[j].update, n = group.length, node;
	      if (j != j0) j0 = j, i0 = 0;
	      if (i >= i0) i0 = i + 1;
	      while (!(node = group[i0]) && ++i0 < n) ;
	      return node;
	    };
	  }
	  d3_selectionPrototype.transition = function() {
	    var id = d3_transitionInheritId || ++d3_transitionId, subgroups = [], subgroup, node, transition = d3_transitionInherit || {
	      time: Date.now(),
	      ease: d3_ease_cubicInOut,
	      delay: 0,
	      duration: 250
	    };
	    for (var j = -1, m = this.length; ++j < m; ) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) d3_transitionNode(node, i, id, transition);
	        subgroup.push(node);
	      }
	    }
	    return d3_transition(subgroups, id);
	  };
	  d3_selectionPrototype.interrupt = function() {
	    return this.each(d3_selection_interrupt);
	  };
	  function d3_selection_interrupt() {
	    var lock = this.__transition__;
	    if (lock) ++lock.active;
	  }
	  d3.select = function(node) {
	    var group = [ typeof node === "string" ? d3_select(node, d3_document) : node ];
	    group.parentNode = d3_documentElement;
	    return d3_selection([ group ]);
	  };
	  d3.selectAll = function(nodes) {
	    var group = d3_array(typeof nodes === "string" ? d3_selectAll(nodes, d3_document) : nodes);
	    group.parentNode = d3_documentElement;
	    return d3_selection([ group ]);
	  };
	  var d3_selectionRoot = d3.select(d3_documentElement);
	  d3_selectionPrototype.on = function(type, listener, capture) {
	    var n = arguments.length;
	    if (n < 3) {
	      if (typeof type !== "string") {
	        if (n < 2) listener = false;
	        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));
	        return this;
	      }
	      if (n < 2) return (n = this.node()["__on" + type]) && n._;
	      capture = false;
	    }
	    return this.each(d3_selection_on(type, listener, capture));
	  };
	  function d3_selection_on(type, listener, capture) {
	    var name = "__on" + type, i = type.indexOf("."), wrap = d3_selection_onListener;
	    if (i > 0) type = type.slice(0, i);
	    var filter = d3_selection_onFilters.get(type);
	    if (filter) type = filter, wrap = d3_selection_onFilter;
	    function onRemove() {
	      var l = this[name];
	      if (l) {
	        this.removeEventListener(type, l, l.$);
	        delete this[name];
	      }
	    }
	    function onAdd() {
	      var l = wrap(listener, d3_array(arguments));
	      onRemove.call(this);
	      this.addEventListener(type, this[name] = l, l.$ = capture);
	      l._ = listener;
	    }
	    function removeAll() {
	      var re = new RegExp("^__on([^.]+)" + d3.requote(type) + "$"), match;
	      for (var name in this) {
	        if (match = name.match(re)) {
	          var l = this[name];
	          this.removeEventListener(match[1], l, l.$);
	          delete this[name];
	        }
	      }
	    }
	    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;
	  }
	  var d3_selection_onFilters = d3.map({
	    mouseenter: "mouseover",
	    mouseleave: "mouseout"
	  });
	  d3_selection_onFilters.forEach(function(k) {
	    if ("on" + k in d3_document) d3_selection_onFilters.remove(k);
	  });
	  function d3_selection_onListener(listener, argumentz) {
	    return function(e) {
	      var o = d3.event;
	      d3.event = e;
	      argumentz[0] = this.__data__;
	      try {
	        listener.apply(this, argumentz);
	      } finally {
	        d3.event = o;
	      }
	    };
	  }
	  function d3_selection_onFilter(listener, argumentz) {
	    var l = d3_selection_onListener(listener, argumentz);
	    return function(e) {
	      var target = this, related = e.relatedTarget;
	      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {
	        l.call(target, e);
	      }
	    };
	  }
	  var d3_event_dragSelect = "onselectstart" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, "userSelect"), d3_event_dragId = 0;
	  function d3_event_dragSuppress() {
	    var name = ".dragsuppress-" + ++d3_event_dragId, click = "click" + name, w = d3.select(d3_window).on("touchmove" + name, d3_eventPreventDefault).on("dragstart" + name, d3_eventPreventDefault).on("selectstart" + name, d3_eventPreventDefault);
	    if (d3_event_dragSelect) {
	      var style = d3_documentElement.style, select = style[d3_event_dragSelect];
	      style[d3_event_dragSelect] = "none";
	    }
	    return function(suppressClick) {
	      w.on(name, null);
	      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;
	      if (suppressClick) {
	        function off() {
	          w.on(click, null);
	        }
	        w.on(click, function() {
	          d3_eventPreventDefault();
	          off();
	        }, true);
	        setTimeout(off, 0);
	      }
	    };
	  }
	  d3.mouse = function(container) {
	    return d3_mousePoint(container, d3_eventSource());
	  };
	  var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;
	  function d3_mousePoint(container, e) {
	    if (e.changedTouches) e = e.changedTouches[0];
	    var svg = container.ownerSVGElement || container;
	    if (svg.createSVGPoint) {
	      var point = svg.createSVGPoint();
	      if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {
	        svg = d3.select("body").append("svg").style({
	          position: "absolute",
	          top: 0,
	          left: 0,
	          margin: 0,
	          padding: 0,
	          border: "none"
	        }, "important");
	        var ctm = svg[0][0].getScreenCTM();
	        d3_mouse_bug44083 = !(ctm.f || ctm.e);
	        svg.remove();
	      }
	      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, 
	      point.y = e.clientY;
	      point = point.matrixTransform(container.getScreenCTM().inverse());
	      return [ point.x, point.y ];
	    }
	    var rect = container.getBoundingClientRect();
	    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];
	  }
	  d3.touch = function(container, touches, identifier) {
	    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;
	    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {
	      if ((touch = touches[i]).identifier === identifier) {
	        return d3_mousePoint(container, touch);
	      }
	    }
	  };
	  d3.behavior.drag = function() {
	    var event = d3_eventDispatch(drag, "drag", "dragstart", "dragend"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_behavior_dragMouseSubject, "mousemove", "mouseup"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_behavior_dragTouchSubject, "touchmove", "touchend");
	    function drag() {
	      this.on("mousedown.drag", mousedown).on("touchstart.drag", touchstart);
	    }
	    function dragstart(id, position, subject, move, end) {
	      return function() {
	        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = ".drag" + (dragId == null ? "" : "-" + dragId), dragOffset, dragSubject = d3.select(subject()).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(), position0 = position(parent, dragId);
	        if (origin) {
	          dragOffset = origin.apply(that, arguments);
	          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];
	        } else {
	          dragOffset = [ 0, 0 ];
	        }
	        dispatch({
	          type: "dragstart"
	        });
	        function moved() {
	          var position1 = position(parent, dragId), dx, dy;
	          if (!position1) return;
	          dx = position1[0] - position0[0];
	          dy = position1[1] - position0[1];
	          dragged |= dx | dy;
	          position0 = position1;
	          dispatch({
	            type: "drag",
	            x: position1[0] + dragOffset[0],
	            y: position1[1] + dragOffset[1],
	            dx: dx,
	            dy: dy
	          });
	        }
	        function ended() {
	          if (!position(parent, dragId)) return;
	          dragSubject.on(move + dragName, null).on(end + dragName, null);
	          dragRestore(dragged && d3.event.target === target);
	          dispatch({
	            type: "dragend"
	          });
	        }
	      };
	    }
	    drag.origin = function(x) {
	      if (!arguments.length) return origin;
	      origin = x;
	      return drag;
	    };
	    return d3.rebind(drag, event, "on");
	  };
	  function d3_behavior_dragTouchId() {
	    return d3.event.changedTouches[0].identifier;
	  }
	  function d3_behavior_dragTouchSubject() {
	    return d3.event.target;
	  }
	  function d3_behavior_dragMouseSubject() {
	    return d3_window;
	  }
	  d3.touches = function(container, touches) {
	    if (arguments.length < 2) touches = d3_eventSource().touches;
	    return touches ? d3_array(touches).map(function(touch) {
	      var point = d3_mousePoint(container, touch);
	      point.identifier = touch.identifier;
	      return point;
	    }) : [];
	  };
	  var π = Math.PI, τ = 2 * π, halfπ = π / 2, ε = 1e-6, ε2 = ε * ε, d3_radians = π / 180, d3_degrees = 180 / π;
	  function d3_sgn(x) {
	    return x > 0 ? 1 : x < 0 ? -1 : 0;
	  }
	  function d3_cross2d(a, b, c) {
	    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
	  }
	  function d3_acos(x) {
	    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);
	  }
	  function d3_asin(x) {
	    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);
	  }
	  function d3_sinh(x) {
	    return ((x = Math.exp(x)) - 1 / x) / 2;
	  }
	  function d3_cosh(x) {
	    return ((x = Math.exp(x)) + 1 / x) / 2;
	  }
	  function d3_tanh(x) {
	    return ((x = Math.exp(2 * x)) - 1) / (x + 1);
	  }
	  function d3_haversin(x) {
	    return (x = Math.sin(x / 2)) * x;
	  }
	  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;
	  d3.interpolateZoom = function(p0, p1) {
	    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];
	    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;
	    function interpolate(t) {
	      var s = t * S;
	      if (dr) {
	        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));
	        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];
	      }
	      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];
	    }
	    interpolate.duration = S * 1e3;
	    return interpolate;
	  };
	  d3.behavior.zoom = function() {
	    var view = {
	      x: 0,
	      y: 0,
	      k: 1
	    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, mousedown = "mousedown.zoom", mousemove = "mousemove.zoom", mouseup = "mouseup.zoom", mousewheelTimer, touchstart = "touchstart.zoom", touchtime, event = d3_eventDispatch(zoom, "zoomstart", "zoom", "zoomend"), x0, x1, y0, y1;
	    function zoom(g) {
	      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + ".zoom", mousewheeled).on("dblclick.zoom", dblclicked).on(touchstart, touchstarted);
	    }
	    zoom.event = function(g) {
	      g.each(function() {
	        var dispatch = event.of(this, arguments), view1 = view;
	        if (d3_transitionInheritId) {
	          d3.select(this).transition().each("start.zoom", function() {
	            view = this.__chart__ || {
	              x: 0,
	              y: 0,
	              k: 1
	            };
	            zoomstarted(dispatch);
	          }).tween("zoom:zoom", function() {
	            var dx = size[0], dy = size[1], cx = dx / 2, cy = dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);
	            return function(t) {
	              var l = i(t), k = dx / l[2];
	              this.__chart__ = view = {
	                x: cx - l[0] * k,
	                y: cy - l[1] * k,
	                k: k
	              };
	              zoomed(dispatch);
	            };
	          }).each("end.zoom", function() {
	            zoomended(dispatch);
	          });
	        } else {
	          this.__chart__ = view;
	          zoomstarted(dispatch);
	          zoomed(dispatch);
	          zoomended(dispatch);
	        }
	      });
	    };
	    zoom.translate = function(_) {
	      if (!arguments.length) return [ view.x, view.y ];
	      view = {
	        x: +_[0],
	        y: +_[1],
	        k: view.k
	      };
	      rescale();
	      return zoom;
	    };
	    zoom.scale = function(_) {
	      if (!arguments.length) return view.k;
	      view = {
	        x: view.x,
	        y: view.y,
	        k: +_
	      };
	      rescale();
	      return zoom;
	    };
	    zoom.scaleExtent = function(_) {
	      if (!arguments.length) return scaleExtent;
	      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];
	      return zoom;
	    };
	    zoom.center = function(_) {
	      if (!arguments.length) return center;
	      center = _ && [ +_[0], +_[1] ];
	      return zoom;
	    };
	    zoom.size = function(_) {
	      if (!arguments.length) return size;
	      size = _ && [ +_[0], +_[1] ];
	      return zoom;
	    };
	    zoom.x = function(z) {
	      if (!arguments.length) return x1;
	      x1 = z;
	      x0 = z.copy();
	      view = {
	        x: 0,
	        y: 0,
	        k: 1
	      };
	      return zoom;
	    };
	    zoom.y = function(z) {
	      if (!arguments.length) return y1;
	      y1 = z;
	      y0 = z.copy();
	      view = {
	        x: 0,
	        y: 0,
	        k: 1
	      };
	      return zoom;
	    };
	    function location(p) {
	      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];
	    }
	    function point(l) {
	      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];
	    }
	    function scaleTo(s) {
	      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));
	    }
	    function translateTo(p, l) {
	      l = point(l);
	      view.x += p[0] - l[0];
	      view.y += p[1] - l[1];
	    }
	    function rescale() {
	      if (x1) x1.domain(x0.range().map(function(x) {
	        return (x - view.x) / view.k;
	      }).map(x0.invert));
	      if (y1) y1.domain(y0.range().map(function(y) {
	        return (y - view.y) / view.k;
	      }).map(y0.invert));
	    }
	    function zoomstarted(dispatch) {
	      dispatch({
	        type: "zoomstart"
	      });
	    }
	    function zoomed(dispatch) {
	      rescale();
	      dispatch({
	        type: "zoom",
	        scale: view.k,
	        translate: [ view.x, view.y ]
	      });
	    }
	    function zoomended(dispatch) {
	      dispatch({
	        type: "zoomend"
	      });
	    }
	    function mousedowned() {
	      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress();
	      d3_selection_interrupt.call(that);
	      zoomstarted(dispatch);
	      function moved() {
	        dragged = 1;
	        translateTo(d3.mouse(that), location0);
	        zoomed(dispatch);
	      }
	      function ended() {
	        subject.on(mousemove, null).on(mouseup, null);
	        dragRestore(dragged && d3.event.target === target);
	        zoomended(dispatch);
	      }
	    }
	    function touchstarted() {
	      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = ".zoom-" + d3.event.changedTouches[0].identifier, touchmove = "touchmove" + zoomName, touchend = "touchend" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress();
	      d3_selection_interrupt.call(that);
	      started();
	      zoomstarted(dispatch);
	      subject.on(mousedown, null).on(touchstart, started);
	      function relocate() {
	        var touches = d3.touches(that);
	        scale0 = view.k;
	        touches.forEach(function(t) {
	          if (t.identifier in locations0) locations0[t.identifier] = location(t);
	        });
	        return touches;
	      }
	      function started() {
	        var target = d3.event.target;
	        d3.select(target).on(touchmove, moved).on(touchend, ended);
	        targets.push(target);
	        var changed = d3.event.changedTouches;
	        for (var i = 0, n = changed.length; i < n; ++i) {
	          locations0[changed[i].identifier] = null;
	        }
	        var touches = relocate(), now = Date.now();
	        if (touches.length === 1) {
	          if (now - touchtime < 500) {
	            var p = touches[0], l = locations0[p.identifier];
	            scaleTo(view.k * 2);
	            translateTo(p, l);
	            d3_eventPreventDefault();
	            zoomed(dispatch);
	          }
	          touchtime = now;
	        } else if (touches.length > 1) {
	          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];
	          distance0 = dx * dx + dy * dy;
	        }
	      }
	      function moved() {
	        var touches = d3.touches(that), p0, l0, p1, l1;
	        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {
	          p1 = touches[i];
	          if (l1 = locations0[p1.identifier]) {
	            if (l0) break;
	            p0 = p1, l0 = l1;
	          }
	        }
	        if (l1) {
	          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);
	          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];
	          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];
	          scaleTo(scale1 * scale0);
	        }
	        touchtime = null;
	        translateTo(p0, l0);
	        zoomed(dispatch);
	      }
	      function ended() {
	        if (d3.event.touches.length) {
	          var changed = d3.event.changedTouches;
	          for (var i = 0, n = changed.length; i < n; ++i) {
	            delete locations0[changed[i].identifier];
	          }
	          for (var identifier in locations0) {
	            return void relocate();
	          }
	        }
	        d3.selectAll(targets).on(zoomName, null);
	        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);
	        dragRestore();
	        zoomended(dispatch);
	      }
	    }
	    function mousewheeled() {
	      var dispatch = event.of(this, arguments);
	      if (mousewheelTimer) clearTimeout(mousewheelTimer); else translate0 = location(center0 = center || d3.mouse(this)), 
	      d3_selection_interrupt.call(this), zoomstarted(dispatch);
	      mousewheelTimer = setTimeout(function() {
	        mousewheelTimer = null;
	        zoomended(dispatch);
	      }, 50);
	      d3_eventPreventDefault();
	      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);
	      translateTo(center0, translate0);
	      zoomed(dispatch);
	    }
	    function dblclicked() {
	      var dispatch = event.of(this, arguments), p = d3.mouse(this), l = location(p), k = Math.log(view.k) / Math.LN2;
	      zoomstarted(dispatch);
	      scaleTo(Math.pow(2, d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1));
	      translateTo(p, l);
	      zoomed(dispatch);
	      zoomended(dispatch);
	    }
	    return d3.rebind(zoom, event, "on");
	  };
	  var d3_behavior_zoomInfinity = [ 0, Infinity ];
	  var d3_behavior_zoomDelta, d3_behavior_zoomWheel = "onwheel" in d3_document ? (d3_behavior_zoomDelta = function() {
	    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);
	  }, "wheel") : "onmousewheel" in d3_document ? (d3_behavior_zoomDelta = function() {
	    return d3.event.wheelDelta;
	  }, "mousewheel") : (d3_behavior_zoomDelta = function() {
	    return -d3.event.detail;
	  }, "MozMousePixelScroll");
	  d3.color = d3_color;
	  function d3_color() {}
	  d3_color.prototype.toString = function() {
	    return this.rgb() + "";
	  };
	  d3.hsl = d3_hsl;
	  function d3_hsl(h, s, l) {
	    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse("" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);
	  }
	  var d3_hslPrototype = d3_hsl.prototype = new d3_color();
	  d3_hslPrototype.brighter = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    return new d3_hsl(this.h, this.s, this.l / k);
	  };
	  d3_hslPrototype.darker = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    return new d3_hsl(this.h, this.s, k * this.l);
	  };
	  d3_hslPrototype.rgb = function() {
	    return d3_hsl_rgb(this.h, this.s, this.l);
	  };
	  function d3_hsl_rgb(h, s, l) {
	    var m1, m2;
	    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;
	    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;
	    l = l < 0 ? 0 : l > 1 ? 1 : l;
	    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;
	    m1 = 2 * l - m2;
	    function v(h) {
	      if (h > 360) h -= 360; else if (h < 0) h += 360;
	      if (h < 60) return m1 + (m2 - m1) * h / 60;
	      if (h < 180) return m2;
	      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;
	      return m1;
	    }
	    function vv(h) {
	      return Math.round(v(h) * 255);
	    }
	    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));
	  }
	  d3.hcl = d3_hcl;
	  function d3_hcl(h, c, l) {
	    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);
	  }
	  var d3_hclPrototype = d3_hcl.prototype = new d3_color();
	  d3_hclPrototype.brighter = function(k) {
	    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));
	  };
	  d3_hclPrototype.darker = function(k) {
	    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));
	  };
	  d3_hclPrototype.rgb = function() {
	    return d3_hcl_lab(this.h, this.c, this.l).rgb();
	  };
	  function d3_hcl_lab(h, c, l) {
	    if (isNaN(h)) h = 0;
	    if (isNaN(c)) c = 0;
	    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);
	  }
	  d3.lab = d3_lab;
	  function d3_lab(l, a, b) {
	    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);
	  }
	  var d3_lab_K = 18;
	  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;
	  var d3_labPrototype = d3_lab.prototype = new d3_color();
	  d3_labPrototype.brighter = function(k) {
	    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
	  };
	  d3_labPrototype.darker = function(k) {
	    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
	  };
	  d3_labPrototype.rgb = function() {
	    return d3_lab_rgb(this.l, this.a, this.b);
	  };
	  function d3_lab_rgb(l, a, b) {
	    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;
	    x = d3_lab_xyz(x) * d3_lab_X;
	    y = d3_lab_xyz(y) * d3_lab_Y;
	    z = d3_lab_xyz(z) * d3_lab_Z;
	    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));
	  }
	  function d3_lab_hcl(l, a, b) {
	    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);
	  }
	  function d3_lab_xyz(x) {
	    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;
	  }
	  function d3_xyz_lab(x) {
	    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;
	  }
	  function d3_xyz_rgb(r) {
	    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));
	  }
	  d3.rgb = d3_rgb;
	  function d3_rgb(r, g, b) {
	    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse("" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);
	  }
	  function d3_rgbNumber(value) {
	    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);
	  }
	  function d3_rgbString(value) {
	    return d3_rgbNumber(value) + "";
	  }
	  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();
	  d3_rgbPrototype.brighter = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    var r = this.r, g = this.g, b = this.b, i = 30;
	    if (!r && !g && !b) return new d3_rgb(i, i, i);
	    if (r && r < i) r = i;
	    if (g && g < i) g = i;
	    if (b && b < i) b = i;
	    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));
	  };
	  d3_rgbPrototype.darker = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    return new d3_rgb(k * this.r, k * this.g, k * this.b);
	  };
	  d3_rgbPrototype.hsl = function() {
	    return d3_rgb_hsl(this.r, this.g, this.b);
	  };
	  d3_rgbPrototype.toString = function() {
	    return "#" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);
	  };
	  function d3_rgb_hex(v) {
	    return v < 16 ? "0" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);
	  }
	  function d3_rgb_parse(format, rgb, hsl) {
	    var r = 0, g = 0, b = 0, m1, m2, color;
	    m1 = /([a-z]+)\((.*)\)/i.exec(format);
	    if (m1) {
	      m2 = m1[2].split(",");
	      switch (m1[1]) {
	       case "hsl":
	        {
	          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);
	        }
	
	       case "rgb":
	        {
	          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));
	        }
	      }
	    }
	    if (color = d3_rgb_names.get(format)) return rgb(color.r, color.g, color.b);
	    if (format != null && format.charAt(0) === "#" && !isNaN(color = parseInt(format.slice(1), 16))) {
	      if (format.length === 4) {
	        r = (color & 3840) >> 4;
	        r = r >> 4 | r;
	        g = color & 240;
	        g = g >> 4 | g;
	        b = color & 15;
	        b = b << 4 | b;
	      } else if (format.length === 7) {
	        r = (color & 16711680) >> 16;
	        g = (color & 65280) >> 8;
	        b = color & 255;
	      }
	    }
	    return rgb(r, g, b);
	  }
	  function d3_rgb_hsl(r, g, b) {
	    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;
	    if (d) {
	      s = l < .5 ? d / (max + min) : d / (2 - max - min);
	      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;
	      h *= 60;
	    } else {
	      h = NaN;
	      s = l > 0 && l < 1 ? 0 : h;
	    }
	    return new d3_hsl(h, s, l);
	  }
	  function d3_rgb_lab(r, g, b) {
	    r = d3_rgb_xyz(r);
	    g = d3_rgb_xyz(g);
	    b = d3_rgb_xyz(b);
	    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);
	    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));
	  }
	  function d3_rgb_xyz(r) {
	    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);
	  }
	  function d3_rgb_parseNumber(c) {
	    var f = parseFloat(c);
	    return c.charAt(c.length - 1) === "%" ? Math.round(f * 2.55) : f;
	  }
	  var d3_rgb_names = d3.map({
	    aliceblue: 15792383,
	    antiquewhite: 16444375,
	    aqua: 65535,
	    aquamarine: 8388564,
	    azure: 15794175,
	    beige: 16119260,
	    bisque: 16770244,
	    black: 0,
	    blanchedalmond: 16772045,
	    blue: 255,
	    blueviolet: 9055202,
	    brown: 10824234,
	    burlywood: 14596231,
	    cadetblue: 6266528,
	    chartreuse: 8388352,
	    chocolate: 13789470,
	    coral: 16744272,
	    cornflowerblue: 6591981,
	    cornsilk: 16775388,
	    crimson: 14423100,
	    cyan: 65535,
	    darkblue: 139,
	    darkcyan: 35723,
	    darkgoldenrod: 12092939,
	    darkgray: 11119017,
	    darkgreen: 25600,
	    darkgrey: 11119017,
	    darkkhaki: 12433259,
	    darkmagenta: 9109643,
	    darkolivegreen: 5597999,
	    darkorange: 16747520,
	    darkorchid: 10040012,
	    darkred: 9109504,
	    darksalmon: 15308410,
	    darkseagreen: 9419919,
	    darkslateblue: 4734347,
	    darkslategray: 3100495,
	    darkslategrey: 3100495,
	    darkturquoise: 52945,
	    darkviolet: 9699539,
	    deeppink: 16716947,
	    deepskyblue: 49151,
	    dimgray: 6908265,
	    dimgrey: 6908265,
	    dodgerblue: 2003199,
	    firebrick: 11674146,
	    floralwhite: 16775920,
	    forestgreen: 2263842,
	    fuchsia: 16711935,
	    gainsboro: 14474460,
	    ghostwhite: 16316671,
	    gold: 16766720,
	    goldenrod: 14329120,
	    gray: 8421504,
	    green: 32768,
	    greenyellow: 11403055,
	    grey: 8421504,
	    honeydew: 15794160,
	    hotpink: 16738740,
	    indianred: 13458524,
	    indigo: 4915330,
	    ivory: 16777200,
	    khaki: 15787660,
	    lavender: 15132410,
	    lavenderblush: 16773365,
	    lawngreen: 8190976,
	    lemonchiffon: 16775885,
	    lightblue: 11393254,
	    lightcoral: 15761536,
	    lightcyan: 14745599,
	    lightgoldenrodyellow: 16448210,
	    lightgray: 13882323,
	    lightgreen: 9498256,
	    lightgrey: 13882323,
	    lightpink: 16758465,
	    lightsalmon: 16752762,
	    lightseagreen: 2142890,
	    lightskyblue: 8900346,
	    lightslategray: 7833753,
	    lightslategrey: 7833753,
	    lightsteelblue: 11584734,
	    lightyellow: 16777184,
	    lime: 65280,
	    limegreen: 3329330,
	    linen: 16445670,
	    magenta: 16711935,
	    maroon: 8388608,
	    mediumaquamarine: 6737322,
	    mediumblue: 205,
	    mediumorchid: 12211667,
	    mediumpurple: 9662683,
	    mediumseagreen: 3978097,
	    mediumslateblue: 8087790,
	    mediumspringgreen: 64154,
	    mediumturquoise: 4772300,
	    mediumvioletred: 13047173,
	    midnightblue: 1644912,
	    mintcream: 16121850,
	    mistyrose: 16770273,
	    moccasin: 16770229,
	    navajowhite: 16768685,
	    navy: 128,
	    oldlace: 16643558,
	    olive: 8421376,
	    olivedrab: 7048739,
	    orange: 16753920,
	    orangered: 16729344,
	    orchid: 14315734,
	    palegoldenrod: 15657130,
	    palegreen: 10025880,
	    paleturquoise: 11529966,
	    palevioletred: 14381203,
	    papayawhip: 16773077,
	    peachpuff: 16767673,
	    peru: 13468991,
	    pink: 16761035,
	    plum: 14524637,
	    powderblue: 11591910,
	    purple: 8388736,
	    red: 16711680,
	    rosybrown: 12357519,
	    royalblue: 4286945,
	    saddlebrown: 9127187,
	    salmon: 16416882,
	    sandybrown: 16032864,
	    seagreen: 3050327,
	    seashell: 16774638,
	    sienna: 10506797,
	    silver: 12632256,
	    skyblue: 8900331,
	    slateblue: 6970061,
	    slategray: 7372944,
	    slategrey: 7372944,
	    snow: 16775930,
	    springgreen: 65407,
	    steelblue: 4620980,
	    tan: 13808780,
	    teal: 32896,
	    thistle: 14204888,
	    tomato: 16737095,
	    turquoise: 4251856,
	    violet: 15631086,
	    wheat: 16113331,
	    white: 16777215,
	    whitesmoke: 16119285,
	    yellow: 16776960,
	    yellowgreen: 10145074
	  });
	  d3_rgb_names.forEach(function(key, value) {
	    d3_rgb_names.set(key, d3_rgbNumber(value));
	  });
	  function d3_functor(v) {
	    return typeof v === "function" ? v : function() {
	      return v;
	    };
	  }
	  d3.functor = d3_functor;
	  function d3_identity(d) {
	    return d;
	  }
	  d3.xhr = d3_xhrType(d3_identity);
	  function d3_xhrType(response) {
	    return function(url, mimeType, callback) {
	      if (arguments.length === 2 && typeof mimeType === "function") callback = mimeType, 
	      mimeType = null;
	      return d3_xhr(url, mimeType, response, callback);
	    };
	  }
	  function d3_xhr(url, mimeType, response, callback) {
	    var xhr = {}, dispatch = d3.dispatch("beforesend", "progress", "load", "error"), headers = {}, request = new XMLHttpRequest(), responseType = null;
	    if (d3_window.XDomainRequest && !("withCredentials" in request) && /^(http(s)?:)?\/\//.test(url)) request = new XDomainRequest();
	    "onload" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {
	      request.readyState > 3 && respond();
	    };
	    function respond() {
	      var status = request.status, result;
	      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {
	        try {
	          result = response.call(xhr, request);
	        } catch (e) {
	          dispatch.error.call(xhr, e);
	          return;
	        }
	        dispatch.load.call(xhr, result);
	      } else {
	        dispatch.error.call(xhr, request);
	      }
	    }
	    request.onprogress = function(event) {
	      var o = d3.event;
	      d3.event = event;
	      try {
	        dispatch.progress.call(xhr, request);
	      } finally {
	        d3.event = o;
	      }
	    };
	    xhr.header = function(name, value) {
	      name = (name + "").toLowerCase();
	      if (arguments.length < 2) return headers[name];
	      if (value == null) delete headers[name]; else headers[name] = value + "";
	      return xhr;
	    };
	    xhr.mimeType = function(value) {
	      if (!arguments.length) return mimeType;
	      mimeType = value == null ? null : value + "";
	      return xhr;
	    };
	    xhr.responseType = function(value) {
	      if (!arguments.length) return responseType;
	      responseType = value;
	      return xhr;
	    };
	    xhr.response = function(value) {
	      response = value;
	      return xhr;
	    };
	    [ "get", "post" ].forEach(function(method) {
	      xhr[method] = function() {
	        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));
	      };
	    });
	    xhr.send = function(method, data, callback) {
	      if (arguments.length === 2 && typeof data === "function") callback = data, data = null;
	      request.open(method, url, true);
	      if (mimeType != null && !("accept" in headers)) headers["accept"] = mimeType + ",*/*";
	      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);
	      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);
	      if (responseType != null) request.responseType = responseType;
	      if (callback != null) xhr.on("error", callback).on("load", function(request) {
	        callback(null, request);
	      });
	      dispatch.beforesend.call(xhr, request);
	      request.send(data == null ? null : data);
	      return xhr;
	    };
	    xhr.abort = function() {
	      request.abort();
	      return xhr;
	    };
	    d3.rebind(xhr, dispatch, "on");
	    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));
	  }
	  function d3_xhr_fixCallback(callback) {
	    return callback.length === 1 ? function(error, request) {
	      callback(error == null ? request : null);
	    } : callback;
	  }
	  function d3_xhrHasResponse(request) {
	    var type = request.responseType;
	    return type && type !== "text" ? request.response : request.responseText;
	  }
	  d3.dsv = function(delimiter, mimeType) {
	    var reFormat = new RegExp('["' + delimiter + "\n]"), delimiterCode = delimiter.charCodeAt(0);
	    function dsv(url, row, callback) {
	      if (arguments.length < 3) callback = row, row = null;
	      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);
	      xhr.row = function(_) {
	        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;
	      };
	      return xhr;
	    }
	    function response(request) {
	      return dsv.parse(request.responseText);
	    }
	    function typedResponse(f) {
	      return function(request) {
	        return dsv.parse(request.responseText, f);
	      };
	    }
	    dsv.parse = function(text, f) {
	      var o;
	      return dsv.parseRows(text, function(row, i) {
	        if (o) return o(row, i - 1);
	        var a = new Function("d", "return {" + row.map(function(name, i) {
	          return JSON.stringify(name) + ": d[" + i + "]";
	        }).join(",") + "}");
	        o = f ? function(row, i) {
	          return f(a(row), i);
	        } : a;
	      });
	    };
	    dsv.parseRows = function(text, f) {
	      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;
	      function token() {
	        if (I >= N) return EOF;
	        if (eol) return eol = false, EOL;
	        var j = I;
	        if (text.charCodeAt(j) === 34) {
	          var i = j;
	          while (i++ < N) {
	            if (text.charCodeAt(i) === 34) {
	              if (text.charCodeAt(i + 1) !== 34) break;
	              ++i;
	            }
	          }
	          I = i + 2;
	          var c = text.charCodeAt(i + 1);
	          if (c === 13) {
	            eol = true;
	            if (text.charCodeAt(i + 2) === 10) ++I;
	          } else if (c === 10) {
	            eol = true;
	          }
	          return text.slice(j + 1, i).replace(/""/g, '"');
	        }
	        while (I < N) {
	          var c = text.charCodeAt(I++), k = 1;
	          if (c === 10) eol = true; else if (c === 13) {
	            eol = true;
	            if (text.charCodeAt(I) === 10) ++I, ++k;
	          } else if (c !== delimiterCode) continue;
	          return text.slice(j, I - k);
	        }
	        return text.slice(j);
	      }
	      while ((t = token()) !== EOF) {
	        var a = [];
	        while (t !== EOL && t !== EOF) {
	          a.push(t);
	          t = token();
	        }
	        if (f && (a = f(a, n++)) == null) continue;
	        rows.push(a);
	      }
	      return rows;
	    };
	    dsv.format = function(rows) {
	      if (Array.isArray(rows[0])) return dsv.formatRows(rows);
	      var fieldSet = new d3_Set(), fields = [];
	      rows.forEach(function(row) {
	        for (var field in row) {
	          if (!fieldSet.has(field)) {
	            fields.push(fieldSet.add(field));
	          }
	        }
	      });
	      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {
	        return fields.map(function(field) {
	          return formatValue(row[field]);
	        }).join(delimiter);
	      })).join("\n");
	    };
	    dsv.formatRows = function(rows) {
	      return rows.map(formatRow).join("\n");
	    };
	    function formatRow(row) {
	      return row.map(formatValue).join(delimiter);
	    }
	    function formatValue(text) {
	      return reFormat.test(text) ? '"' + text.replace(/\"/g, '""') + '"' : text;
	    }
	    return dsv;
	  };
	  d3.csv = d3.dsv(",", "text/csv");
	  d3.tsv = d3.dsv("	", "text/tab-separated-values");
	  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, "requestAnimationFrame")] || function(callback) {
	    setTimeout(callback, 17);
	  };
	  d3.timer = function(callback, delay, then) {
	    var n = arguments.length;
	    if (n < 2) delay = 0;
	    if (n < 3) then = Date.now();
	    var time = then + delay, timer = {
	      c: callback,
	      t: time,
	      f: false,
	      n: null
	    };
	    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;
	    d3_timer_queueTail = timer;
	    if (!d3_timer_interval) {
	      d3_timer_timeout = clearTimeout(d3_timer_timeout);
	      d3_timer_interval = 1;
	      d3_timer_frame(d3_timer_step);
	    }
	  };
	  function d3_timer_step() {
	    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;
	    if (delay > 24) {
	      if (isFinite(delay)) {
	        clearTimeout(d3_timer_timeout);
	        d3_timer_timeout = setTimeout(d3_timer_step, delay);
	      }
	      d3_timer_interval = 0;
	    } else {
	      d3_timer_interval = 1;
	      d3_timer_frame(d3_timer_step);
	    }
	  }
	  d3.timer.flush = function() {
	    d3_timer_mark();
	    d3_timer_sweep();
	  };
	  function d3_timer_mark() {
	    var now = Date.now();
	    d3_timer_active = d3_timer_queueHead;
	    while (d3_timer_active) {
	      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);
	      d3_timer_active = d3_timer_active.n;
	    }
	    return now;
	  }
	  function d3_timer_sweep() {
	    var t0, t1 = d3_timer_queueHead, time = Infinity;
	    while (t1) {
	      if (t1.f) {
	        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;
	      } else {
	        if (t1.t < time) time = t1.t;
	        t1 = (t0 = t1).n;
	      }
	    }
	    d3_timer_queueTail = t0;
	    return time;
	  }
	  function d3_format_precision(x, p) {
	    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);
	  }
	  d3.round = function(x, n) {
	    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);
	  };
	  var d3_formatPrefixes = [ "y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y" ].map(d3_formatPrefix);
	  d3.formatPrefix = function(value, precision) {
	    var i = 0;
	    if (value) {
	      if (value < 0) value *= -1;
	      if (precision) value = d3.round(value, d3_format_precision(value, precision));
	      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);
	      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));
	    }
	    return d3_formatPrefixes[8 + i / 3];
	  };
	  function d3_formatPrefix(d, i) {
	    var k = Math.pow(10, abs(8 - i) * 3);
	    return {
	      scale: i > 8 ? function(d) {
	        return d / k;
	      } : function(d) {
	        return d * k;
	      },
	      symbol: d
	    };
	  }
	  function d3_locale_numberFormat(locale) {
	    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {
	      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;
	      while (i > 0 && g > 0) {
	        if (length + g + 1 > width) g = Math.max(1, width - length);
	        t.push(value.substring(i -= g, i + g));
	        if ((length += g + 1) > width) break;
	        g = locale_grouping[j = (j + 1) % locale_grouping.length];
	      }
	      return t.reverse().join(locale_thousands);
	    } : d3_identity;
	    return function(specifier) {
	      var match = d3_format_re.exec(specifier), fill = match[1] || " ", align = match[2] || ">", sign = match[3] || "-", symbol = match[4] || "", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = "", suffix = "", integer = false, exponent = true;
	      if (precision) precision = +precision.substring(1);
	      if (zfill || fill === "0" && align === "=") {
	        zfill = fill = "0";
	        align = "=";
	      }
	      switch (type) {
	       case "n":
	        comma = true;
	        type = "g";
	        break;
	
	       case "%":
	        scale = 100;
	        suffix = "%";
	        type = "f";
	        break;
	
	       case "p":
	        scale = 100;
	        suffix = "%";
	        type = "r";
	        break;
	
	       case "b":
	       case "o":
	       case "x":
	       case "X":
	        if (symbol === "#") prefix = "0" + type.toLowerCase();
	
	       case "c":
	        exponent = false;
	
	       case "d":
	        integer = true;
	        precision = 0;
	        break;
	
	       case "s":
	        scale = -1;
	        type = "r";
	        break;
	      }
	      if (symbol === "$") prefix = locale_currency[0], suffix = locale_currency[1];
	      if (type == "r" && !precision) type = "g";
	      if (precision != null) {
	        if (type == "g") precision = Math.max(1, Math.min(21, precision)); else if (type == "e" || type == "f") precision = Math.max(0, Math.min(20, precision));
	      }
	      type = d3_format_types.get(type) || d3_format_typeDefault;
	      var zcomma = zfill && comma;
	      return function(value) {
	        var fullSuffix = suffix;
	        if (integer && value % 1) return "";
	        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, "-") : sign === "-" ? "" : sign;
	        if (scale < 0) {
	          var unit = d3.formatPrefix(value, precision);
	          value = unit.scale(value);
	          fullSuffix = unit.symbol + suffix;
	        } else {
	          value *= scale;
	        }
	        value = type(value, precision);
	        var i = value.lastIndexOf("."), before, after;
	        if (i < 0) {
	          var j = exponent ? value.lastIndexOf("e") : -1;
	          if (j < 0) before = value, after = ""; else before = value.substring(0, j), after = value.substring(j);
	        } else {
	          before = value.substring(0, i);
	          after = locale_decimal + value.substring(i + 1);
	        }
	        if (!zfill && comma) before = formatGroup(before, Infinity);
	        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : "";
	        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);
	        negative += prefix;
	        value = before + after;
	        return (align === "<" ? negative + value + padding : align === ">" ? padding + negative + value : align === "^" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;
	      };
	    };
	  }
	  var d3_format_re = /(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i;
	  var d3_format_types = d3.map({
	    b: function(x) {
	      return x.toString(2);
	    },
	    c: function(x) {
	      return String.fromCharCode(x);
	    },
	    o: function(x) {
	      return x.toString(8);
	    },
	    x: function(x) {
	      return x.toString(16);
	    },
	    X: function(x) {
	      return x.toString(16).toUpperCase();
	    },
	    g: function(x, p) {
	      return x.toPrecision(p);
	    },
	    e: function(x, p) {
	      return x.toExponential(p);
	    },
	    f: function(x, p) {
	      return x.toFixed(p);
	    },
	    r: function(x, p) {
	      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));
	    }
	  });
	  function d3_format_typeDefault(x) {
	    return x + "";
	  }
	  var d3_time = d3.time = {}, d3_date = Date;
	  function d3_date_utc() {
	    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);
	  }
	  d3_date_utc.prototype = {
	    getDate: function() {
	      return this._.getUTCDate();
	    },
	    getDay: function() {
	      return this._.getUTCDay();
	    },
	    getFullYear: function() {
	      return this._.getUTCFullYear();
	    },
	    getHours: function() {
	      return this._.getUTCHours();
	    },
	    getMilliseconds: function() {
	      return this._.getUTCMilliseconds();
	    },
	    getMinutes: function() {
	      return this._.getUTCMinutes();
	    },
	    getMonth: function() {
	      return this._.getUTCMonth();
	    },
	    getSeconds: function() {
	      return this._.getUTCSeconds();
	    },
	    getTime: function() {
	      return this._.getTime();
	    },
	    getTimezoneOffset: function() {
	      return 0;
	    },
	    valueOf: function() {
	      return this._.valueOf();
	    },
	    setDate: function() {
	      d3_time_prototype.setUTCDate.apply(this._, arguments);
	    },
	    setDay: function() {
	      d3_time_prototype.setUTCDay.apply(this._, arguments);
	    },
	    setFullYear: function() {
	      d3_time_prototype.setUTCFullYear.apply(this._, arguments);
	    },
	    setHours: function() {
	      d3_time_prototype.setUTCHours.apply(this._, arguments);
	    },
	    setMilliseconds: function() {
	      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);
	    },
	    setMinutes: function() {
	      d3_time_prototype.setUTCMinutes.apply(this._, arguments);
	    },
	    setMonth: function() {
	      d3_time_prototype.setUTCMonth.apply(this._, arguments);
	    },
	    setSeconds: function() {
	      d3_time_prototype.setUTCSeconds.apply(this._, arguments);
	    },
	    setTime: function() {
	      d3_time_prototype.setTime.apply(this._, arguments);
	    }
	  };
	  var d3_time_prototype = Date.prototype;
	  function d3_time_interval(local, step, number) {
	    function round(date) {
	      var d0 = local(date), d1 = offset(d0, 1);
	      return date - d0 < d1 - date ? d0 : d1;
	    }
	    function ceil(date) {
	      step(date = local(new d3_date(date - 1)), 1);
	      return date;
	    }
	    function offset(date, k) {
	      step(date = new d3_date(+date), k);
	      return date;
	    }
	    function range(t0, t1, dt) {
	      var time = ceil(t0), times = [];
	      if (dt > 1) {
	        while (time < t1) {
	          if (!(number(time) % dt)) times.push(new Date(+time));
	          step(time, 1);
	        }
	      } else {
	        while (time < t1) times.push(new Date(+time)), step(time, 1);
	      }
	      return times;
	    }
	    function range_utc(t0, t1, dt) {
	      try {
	        d3_date = d3_date_utc;
	        var utc = new d3_date_utc();
	        utc._ = t0;
	        return range(utc, t1, dt);
	      } finally {
	        d3_date = Date;
	      }
	    }
	    local.floor = local;
	    local.round = round;
	    local.ceil = ceil;
	    local.offset = offset;
	    local.range = range;
	    var utc = local.utc = d3_time_interval_utc(local);
	    utc.floor = utc;
	    utc.round = d3_time_interval_utc(round);
	    utc.ceil = d3_time_interval_utc(ceil);
	    utc.offset = d3_time_interval_utc(offset);
	    utc.range = range_utc;
	    return local;
	  }
	  function d3_time_interval_utc(method) {
	    return function(date, k) {
	      try {
	        d3_date = d3_date_utc;
	        var utc = new d3_date_utc();
	        utc._ = date;
	        return method(utc, k)._;
	      } finally {
	        d3_date = Date;
	      }
	    };
	  }
	  d3_time.year = d3_time_interval(function(date) {
	    date = d3_time.day(date);
	    date.setMonth(0, 1);
	    return date;
	  }, function(date, offset) {
	    date.setFullYear(date.getFullYear() + offset);
	  }, function(date) {
	    return date.getFullYear();
	  });
	  d3_time.years = d3_time.year.range;
	  d3_time.years.utc = d3_time.year.utc.range;
	  d3_time.day = d3_time_interval(function(date) {
	    var day = new d3_date(2e3, 0);
	    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());
	    return day;
	  }, function(date, offset) {
	    date.setDate(date.getDate() + offset);
	  }, function(date) {
	    return date.getDate() - 1;
	  });
	  d3_time.days = d3_time.day.range;
	  d3_time.days.utc = d3_time.day.utc.range;
	  d3_time.dayOfYear = function(date) {
	    var year = d3_time.year(date);
	    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);
	  };
	  [ "sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday" ].forEach(function(day, i) {
	    i = 7 - i;
	    var interval = d3_time[day] = d3_time_interval(function(date) {
	      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);
	      return date;
	    }, function(date, offset) {
	      date.setDate(date.getDate() + Math.floor(offset) * 7);
	    }, function(date) {
	      var day = d3_time.year(date).getDay();
	      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);
	    });
	    d3_time[day + "s"] = interval.range;
	    d3_time[day + "s"].utc = interval.utc.range;
	    d3_time[day + "OfYear"] = function(date) {
	      var day = d3_time.year(date).getDay();
	      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);
	    };
	  });
	  d3_time.week = d3_time.sunday;
	  d3_time.weeks = d3_time.sunday.range;
	  d3_time.weeks.utc = d3_time.sunday.utc.range;
	  d3_time.weekOfYear = d3_time.sundayOfYear;
	  function d3_locale_timeFormat(locale) {
	    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;
	    function d3_time_format(template) {
	      var n = template.length;
	      function format(date) {
	        var string = [], i = -1, j = 0, c, p, f;
	        while (++i < n) {
	          if (template.charCodeAt(i) === 37) {
	            string.push(template.slice(j, i));
	            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);
	            if (f = d3_time_formats[c]) c = f(date, p == null ? c === "e" ? " " : "0" : p);
	            string.push(c);
	            j = i + 1;
	          }
	        }
	        string.push(template.slice(j, i));
	        return string.join("");
	      }
	      format.parse = function(string) {
	        var d = {
	          y: 1900,
	          m: 0,
	          d: 1,
	          H: 0,
	          M: 0,
	          S: 0,
	          L: 0,
	          Z: null
	        }, i = d3_time_parse(d, template, string, 0);
	        if (i != string.length) return null;
	        if ("p" in d) d.H = d.H % 12 + d.p * 12;
	        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();
	        if ("j" in d) date.setFullYear(d.y, 0, d.j); else if ("w" in d && ("W" in d || "U" in d)) {
	          date.setFullYear(d.y, 0, 1);
	          date.setFullYear(d.y, 0, "W" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);
	        } else date.setFullYear(d.y, d.m, d.d);
	        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);
	        return localZ ? date._ : date;
	      };
	      format.toString = function() {
	        return template;
	      };
	      return format;
	    }
	    function d3_time_parse(date, template, string, j) {
	      var c, p, t, i = 0, n = template.length, m = string.length;
	      while (i < n) {
	        if (j >= m) return -1;
	        c = template.charCodeAt(i++);
	        if (c === 37) {
	          t = template.charAt(i++);
	          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];
	          if (!p || (j = p(date, string, j)) < 0) return -1;
	        } else if (c != string.charCodeAt(j++)) {
	          return -1;
	        }
	      }
	      return j;
	    }
	    d3_time_format.utc = function(template) {
	      var local = d3_time_format(template);
	      function format(date) {
	        try {
	          d3_date = d3_date_utc;
	          var utc = new d3_date();
	          utc._ = date;
	          return local(utc);
	        } finally {
	          d3_date = Date;
	        }
	      }
	      format.parse = function(string) {
	        try {
	          d3_date = d3_date_utc;
	          var date = local.parse(string);
	          return date && date._;
	        } finally {
	          d3_date = Date;
	        }
	      };
	      format.toString = local.toString;
	      return format;
	    };
	    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;
	    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);
	    locale_periods.forEach(function(p, i) {
	      d3_time_periodLookup.set(p.toLowerCase(), i);
	    });
	    var d3_time_formats = {
	      a: function(d) {
	        return locale_shortDays[d.getDay()];
	      },
	      A: function(d) {
	        return locale_days[d.getDay()];
	      },
	      b: function(d) {
	        return locale_shortMonths[d.getMonth()];
	      },
	      B: function(d) {
	        return locale_months[d.getMonth()];
	      },
	      c: d3_time_format(locale_dateTime),
	      d: function(d, p) {
	        return d3_time_formatPad(d.getDate(), p, 2);
	      },
	      e: function(d, p) {
	        return d3_time_formatPad(d.getDate(), p, 2);
	      },
	      H: function(d, p) {
	        return d3_time_formatPad(d.getHours(), p, 2);
	      },
	      I: function(d, p) {
	        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);
	      },
	      j: function(d, p) {
	        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);
	      },
	      L: function(d, p) {
	        return d3_time_formatPad(d.getMilliseconds(), p, 3);
	      },
	      m: function(d, p) {
	        return d3_time_formatPad(d.getMonth() + 1, p, 2);
	      },
	      M: function(d, p) {
	        return d3_time_formatPad(d.getMinutes(), p, 2);
	      },
	      p: function(d) {
	        return locale_periods[+(d.getHours() >= 12)];
	      },
	      S: function(d, p) {
	        return d3_time_formatPad(d.getSeconds(), p, 2);
	      },
	      U: function(d, p) {
	        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);
	      },
	      w: function(d) {
	        return d.getDay();
	      },
	      W: function(d, p) {
	        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);
	      },
	      x: d3_time_format(locale_date),
	      X: d3_time_format(locale_time),
	      y: function(d, p) {
	        return d3_time_formatPad(d.getFullYear() % 100, p, 2);
	      },
	      Y: function(d, p) {
	        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);
	      },
	      Z: d3_time_zone,
	      "%": function() {
	        return "%";
	      }
	    };
	    var d3_time_parsers = {
	      a: d3_time_parseWeekdayAbbrev,
	      A: d3_time_parseWeekday,
	      b: d3_time_parseMonthAbbrev,
	      B: d3_time_parseMonth,
	      c: d3_time_parseLocaleFull,
	      d: d3_time_parseDay,
	      e: d3_time_parseDay,
	      H: d3_time_parseHour24,
	      I: d3_time_parseHour24,
	      j: d3_time_parseDayOfYear,
	      L: d3_time_parseMilliseconds,
	      m: d3_time_parseMonthNumber,
	      M: d3_time_parseMinutes,
	      p: d3_time_parseAmPm,
	      S: d3_time_parseSeconds,
	      U: d3_time_parseWeekNumberSunday,
	      w: d3_time_parseWeekdayNumber,
	      W: d3_time_parseWeekNumberMonday,
	      x: d3_time_parseLocaleDate,
	      X: d3_time_parseLocaleTime,
	      y: d3_time_parseYear,
	      Y: d3_time_parseFullYear,
	      Z: d3_time_parseZone,
	      "%": d3_time_parseLiteralPercent
	    };
	    function d3_time_parseWeekdayAbbrev(date, string, i) {
	      d3_time_dayAbbrevRe.lastIndex = 0;
	      var n = d3_time_dayAbbrevRe.exec(string.slice(i));
	      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseWeekday(date, string, i) {
	      d3_time_dayRe.lastIndex = 0;
	      var n = d3_time_dayRe.exec(string.slice(i));
	      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseMonthAbbrev(date, string, i) {
	      d3_time_monthAbbrevRe.lastIndex = 0;
	      var n = d3_time_monthAbbrevRe.exec(string.slice(i));
	      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseMonth(date, string, i) {
	      d3_time_monthRe.lastIndex = 0;
	      var n = d3_time_monthRe.exec(string.slice(i));
	      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseLocaleFull(date, string, i) {
	      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);
	    }
	    function d3_time_parseLocaleDate(date, string, i) {
	      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);
	    }
	    function d3_time_parseLocaleTime(date, string, i) {
	      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);
	    }
	    function d3_time_parseAmPm(date, string, i) {
	      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());
	      return n == null ? -1 : (date.p = n, i);
	    }
	    return d3_time_format;
	  }
	  var d3_time_formatPads = {
	    "-": "",
	    _: " ",
	    "0": "0"
	  }, d3_time_numberRe = /^\s*\d+/, d3_time_percentRe = /^%/;
	  function d3_time_formatPad(value, fill, width) {
	    var sign = value < 0 ? "-" : "", string = (sign ? -value : value) + "", length = string.length;
	    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
	  }
	  function d3_time_formatRe(names) {
	    return new RegExp("^(?:" + names.map(d3.requote).join("|") + ")", "i");
	  }
	  function d3_time_formatLookup(names) {
	    var map = new d3_Map(), i = -1, n = names.length;
	    while (++i < n) map.set(names[i].toLowerCase(), i);
	    return map;
	  }
	  function d3_time_parseWeekdayNumber(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 1));
	    return n ? (date.w = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseWeekNumberSunday(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i));
	    return n ? (date.U = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseWeekNumberMonday(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i));
	    return n ? (date.W = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseFullYear(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 4));
	    return n ? (date.y = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseYear(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;
	  }
	  function d3_time_parseZone(date, string, i) {
	    return /^[+-]\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, 
	    i + 5) : -1;
	  }
	  function d3_time_expandYear(d) {
	    return d + (d > 68 ? 1900 : 2e3);
	  }
	  function d3_time_parseMonthNumber(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;
	  }
	  function d3_time_parseDay(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.d = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseDayOfYear(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 3));
	    return n ? (date.j = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseHour24(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.H = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseMinutes(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.M = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseSeconds(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.S = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseMilliseconds(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 3));
	    return n ? (date.L = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_zone(d) {
	    var z = d.getTimezoneOffset(), zs = z > 0 ? "-" : "+", zh = abs(z) / 60 | 0, zm = abs(z) % 60;
	    return zs + d3_time_formatPad(zh, "0", 2) + d3_time_formatPad(zm, "0", 2);
	  }
	  function d3_time_parseLiteralPercent(date, string, i) {
	    d3_time_percentRe.lastIndex = 0;
	    var n = d3_time_percentRe.exec(string.slice(i, i + 1));
	    return n ? i + n[0].length : -1;
	  }
	  function d3_time_formatMulti(formats) {
	    var n = formats.length, i = -1;
	    while (++i < n) formats[i][0] = this(formats[i][0]);
	    return function(date) {
	      var i = 0, f = formats[i];
	      while (!f[1](date)) f = formats[++i];
	      return f[0](date);
	    };
	  }
	  d3.locale = function(locale) {
	    return {
	      numberFormat: d3_locale_numberFormat(locale),
	      timeFormat: d3_locale_timeFormat(locale)
	    };
	  };
	  var d3_locale_enUS = d3.locale({
	    decimal: ".",
	    thousands: ",",
	    grouping: [ 3 ],
	    currency: [ "$", "" ],
	    dateTime: "%a %b %e %X %Y",
	    date: "%m/%d/%Y",
	    time: "%H:%M:%S",
	    periods: [ "AM", "PM" ],
	    days: [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ],
	    shortDays: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ],
	    months: [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ],
	    shortMonths: [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ]
	  });
	  d3.format = d3_locale_enUS.numberFormat;
	  d3.geo = {};
	  function d3_adder() {}
	  d3_adder.prototype = {
	    s: 0,
	    t: 0,
	    add: function(y) {
	      d3_adderSum(y, this.t, d3_adderTemp);
	      d3_adderSum(d3_adderTemp.s, this.s, this);
	      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;
	    },
	    reset: function() {
	      this.s = this.t = 0;
	    },
	    valueOf: function() {
	      return this.s;
	    }
	  };
	  var d3_adderTemp = new d3_adder();
	  function d3_adderSum(a, b, o) {
	    var x = o.s = a + b, bv = x - a, av = x - bv;
	    o.t = a - av + (b - bv);
	  }
	  d3.geo.stream = function(object, listener) {
	    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {
	      d3_geo_streamObjectType[object.type](object, listener);
	    } else {
	      d3_geo_streamGeometry(object, listener);
	    }
	  };
	  function d3_geo_streamGeometry(geometry, listener) {
	    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {
	      d3_geo_streamGeometryType[geometry.type](geometry, listener);
	    }
	  }
	  var d3_geo_streamObjectType = {
	    Feature: function(feature, listener) {
	      d3_geo_streamGeometry(feature.geometry, listener);
	    },
	    FeatureCollection: function(object, listener) {
	      var features = object.features, i = -1, n = features.length;
	      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);
	    }
	  };
	  var d3_geo_streamGeometryType = {
	    Sphere: function(object, listener) {
	      listener.sphere();
	    },
	    Point: function(object, listener) {
	      object = object.coordinates;
	      listener.point(object[0], object[1], object[2]);
	    },
	    MultiPoint: function(object, listener) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);
	    },
	    LineString: function(object, listener) {
	      d3_geo_streamLine(object.coordinates, listener, 0);
	    },
	    MultiLineString: function(object, listener) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);
	    },
	    Polygon: function(object, listener) {
	      d3_geo_streamPolygon(object.coordinates, listener);
	    },
	    MultiPolygon: function(object, listener) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);
	    },
	    GeometryCollection: function(object, listener) {
	      var geometries = object.geometries, i = -1, n = geometries.length;
	      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);
	    }
	  };
	  function d3_geo_streamLine(coordinates, listener, closed) {
	    var i = -1, n = coordinates.length - closed, coordinate;
	    listener.lineStart();
	    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);
	    listener.lineEnd();
	  }
	  function d3_geo_streamPolygon(coordinates, listener) {
	    var i = -1, n = coordinates.length;
	    listener.polygonStart();
	    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);
	    listener.polygonEnd();
	  }
	  d3.geo.area = function(object) {
	    d3_geo_areaSum = 0;
	    d3.geo.stream(object, d3_geo_area);
	    return d3_geo_areaSum;
	  };
	  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();
	  var d3_geo_area = {
	    sphere: function() {
	      d3_geo_areaSum += 4 * π;
	    },
	    point: d3_noop,
	    lineStart: d3_noop,
	    lineEnd: d3_noop,
	    polygonStart: function() {
	      d3_geo_areaRingSum.reset();
	      d3_geo_area.lineStart = d3_geo_areaRingStart;
	    },
	    polygonEnd: function() {
	      var area = 2 * d3_geo_areaRingSum;
	      d3_geo_areaSum += area < 0 ? 4 * π + area : area;
	      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;
	    }
	  };
	  function d3_geo_areaRingStart() {
	    var λ00, φ00, λ0, cosφ0, sinφ0;
	    d3_geo_area.point = function(λ, φ) {
	      d3_geo_area.point = nextPoint;
	      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), 
	      sinφ0 = Math.sin(φ);
	    };
	    function nextPoint(λ, φ) {
	      λ *= d3_radians;
	      φ = φ * d3_radians / 2 + π / 4;
	      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);
	      d3_geo_areaRingSum.add(Math.atan2(v, u));
	      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;
	    }
	    d3_geo_area.lineEnd = function() {
	      nextPoint(λ00, φ00);
	    };
	  }
	  function d3_geo_cartesian(spherical) {
	    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);
	    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];
	  }
	  function d3_geo_cartesianDot(a, b) {
	    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
	  }
	  function d3_geo_cartesianCross(a, b) {
	    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];
	  }
	  function d3_geo_cartesianAdd(a, b) {
	    a[0] += b[0];
	    a[1] += b[1];
	    a[2] += b[2];
	  }
	  function d3_geo_cartesianScale(vector, k) {
	    return [ vector[0] * k, vector[1] * k, vector[2] * k ];
	  }
	  function d3_geo_cartesianNormalize(d) {
	    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
	    d[0] /= l;
	    d[1] /= l;
	    d[2] /= l;
	  }
	  function d3_geo_spherical(cartesian) {
	    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];
	  }
	  function d3_geo_sphericalEqual(a, b) {
	    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;
	  }
	  d3.geo.bounds = function() {
	    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;
	    var bound = {
	      point: point,
	      lineStart: lineStart,
	      lineEnd: lineEnd,
	      polygonStart: function() {
	        bound.point = ringPoint;
	        bound.lineStart = ringStart;
	        bound.lineEnd = ringEnd;
	        dλSum = 0;
	        d3_geo_area.polygonStart();
	      },
	      polygonEnd: function() {
	        d3_geo_area.polygonEnd();
	        bound.point = point;
	        bound.lineStart = lineStart;
	        bound.lineEnd = lineEnd;
	        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;
	        range[0] = λ0, range[1] = λ1;
	      }
	    };
	    function point(λ, φ) {
	      ranges.push(range = [ λ0 = λ, λ1 = λ ]);
	      if (φ < φ0) φ0 = φ;
	      if (φ > φ1) φ1 = φ;
	    }
	    function linePoint(λ, φ) {
	      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);
	      if (p0) {
	        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);
	        d3_geo_cartesianNormalize(inflection);
	        inflection = d3_geo_spherical(inflection);
	        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;
	        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
	          var φi = inflection[1] * d3_degrees;
	          if (φi > φ1) φ1 = φi;
	        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
	          var φi = -inflection[1] * d3_degrees;
	          if (φi < φ0) φ0 = φi;
	        } else {
	          if (φ < φ0) φ0 = φ;
	          if (φ > φ1) φ1 = φ;
	        }
	        if (antimeridian) {
	          if (λ < λ_) {
	            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
	          } else {
	            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
	          }
	        } else {
	          if (λ1 >= λ0) {
	            if (λ < λ0) λ0 = λ;
	            if (λ > λ1) λ1 = λ;
	          } else {
	            if (λ > λ_) {
	              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
	            } else {
	              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
	            }
	          }
	        }
	      } else {
	        point(λ, φ);
	      }
	      p0 = p, λ_ = λ;
	    }
	    function lineStart() {
	      bound.point = linePoint;
	    }
	    function lineEnd() {
	      range[0] = λ0, range[1] = λ1;
	      bound.point = point;
	      p0 = null;
	    }
	    function ringPoint(λ, φ) {
	      if (p0) {
	        var dλ = λ - λ_;
	        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;
	      } else λ__ = λ, φ__ = φ;
	      d3_geo_area.point(λ, φ);
	      linePoint(λ, φ);
	    }
	    function ringStart() {
	      d3_geo_area.lineStart();
	    }
	    function ringEnd() {
	      ringPoint(λ__, φ__);
	      d3_geo_area.lineEnd();
	      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);
	      range[0] = λ0, range[1] = λ1;
	      p0 = null;
	    }
	    function angle(λ0, λ1) {
	      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;
	    }
	    function compareRanges(a, b) {
	      return a[0] - b[0];
	    }
	    function withinRange(x, range) {
	      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
	    }
	    return function(feature) {
	      φ1 = λ1 = -(λ0 = φ0 = Infinity);
	      ranges = [];
	      d3.geo.stream(feature, bound);
	      var n = ranges.length;
	      if (n) {
	        ranges.sort(compareRanges);
	        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {
	          b = ranges[i];
	          if (withinRange(b[0], a) || withinRange(b[1], a)) {
	            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
	            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
	          } else {
	            merged.push(a = b);
	          }
	        }
	        var best = -Infinity, dλ;
	        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {
	          b = merged[i];
	          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];
	        }
	      }
	      ranges = range = null;
	      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];
	    };
	  }();
	  d3.geo.centroid = function(object) {
	    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
	    d3.geo.stream(object, d3_geo_centroid);
	    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;
	    if (m < ε2) {
	      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;
	      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;
	      m = x * x + y * y + z * z;
	      if (m < ε2) return [ NaN, NaN ];
	    }
	    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];
	  };
	  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;
	  var d3_geo_centroid = {
	    sphere: d3_noop,
	    point: d3_geo_centroidPoint,
	    lineStart: d3_geo_centroidLineStart,
	    lineEnd: d3_geo_centroidLineEnd,
	    polygonStart: function() {
	      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;
	    },
	    polygonEnd: function() {
	      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;
	    }
	  };
	  function d3_geo_centroidPoint(λ, φ) {
	    λ *= d3_radians;
	    var cosφ = Math.cos(φ *= d3_radians);
	    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));
	  }
	  function d3_geo_centroidPointXYZ(x, y, z) {
	    ++d3_geo_centroidW0;
	    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;
	    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;
	    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;
	  }
	  function d3_geo_centroidLineStart() {
	    var x0, y0, z0;
	    d3_geo_centroid.point = function(λ, φ) {
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians);
	      x0 = cosφ * Math.cos(λ);
	      y0 = cosφ * Math.sin(λ);
	      z0 = Math.sin(φ);
	      d3_geo_centroid.point = nextPoint;
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    };
	    function nextPoint(λ, φ) {
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
	      d3_geo_centroidW1 += w;
	      d3_geo_centroidX1 += w * (x0 + (x0 = x));
	      d3_geo_centroidY1 += w * (y0 + (y0 = y));
	      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    }
	  }
	  function d3_geo_centroidLineEnd() {
	    d3_geo_centroid.point = d3_geo_centroidPoint;
	  }
	  function d3_geo_centroidRingStart() {
	    var λ00, φ00, x0, y0, z0;
	    d3_geo_centroid.point = function(λ, φ) {
	      λ00 = λ, φ00 = φ;
	      d3_geo_centroid.point = nextPoint;
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians);
	      x0 = cosφ * Math.cos(λ);
	      y0 = cosφ * Math.sin(λ);
	      z0 = Math.sin(φ);
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    };
	    d3_geo_centroid.lineEnd = function() {
	      nextPoint(λ00, φ00);
	      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;
	      d3_geo_centroid.point = d3_geo_centroidPoint;
	    };
	    function nextPoint(λ, φ) {
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);
	      d3_geo_centroidX2 += v * cx;
	      d3_geo_centroidY2 += v * cy;
	      d3_geo_centroidZ2 += v * cz;
	      d3_geo_centroidW1 += w;
	      d3_geo_centroidX1 += w * (x0 + (x0 = x));
	      d3_geo_centroidY1 += w * (y0 + (y0 = y));
	      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    }
	  }
	  function d3_true() {
	    return true;
	  }
	  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {
	    var subject = [], clip = [];
	    segments.forEach(function(segment) {
	      if ((n = segment.length - 1) <= 0) return;
	      var n, p0 = segment[0], p1 = segment[n];
	      if (d3_geo_sphericalEqual(p0, p1)) {
	        listener.lineStart();
	        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);
	        listener.lineEnd();
	        return;
	      }
	      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);
	      a.o = b;
	      subject.push(a);
	      clip.push(b);
	      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);
	      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);
	      a.o = b;
	      subject.push(a);
	      clip.push(b);
	    });
	    clip.sort(compare);
	    d3_geo_clipPolygonLinkCircular(subject);
	    d3_geo_clipPolygonLinkCircular(clip);
	    if (!subject.length) return;
	    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {
	      clip[i].e = entry = !entry;
	    }
	    var start = subject[0], points, point;
	    while (1) {
	      var current = start, isSubject = true;
	      while (current.v) if ((current = current.n) === start) return;
	      points = current.z;
	      listener.lineStart();
	      do {
	        current.v = current.o.v = true;
	        if (current.e) {
	          if (isSubject) {
	            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);
	          } else {
	            interpolate(current.x, current.n.x, 1, listener);
	          }
	          current = current.n;
	        } else {
	          if (isSubject) {
	            points = current.p.z;
	            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);
	          } else {
	            interpolate(current.x, current.p.x, -1, listener);
	          }
	          current = current.p;
	        }
	        current = current.o;
	        points = current.z;
	        isSubject = !isSubject;
	      } while (!current.v);
	      listener.lineEnd();
	    }
	  }
	  function d3_geo_clipPolygonLinkCircular(array) {
	    if (!(n = array.length)) return;
	    var n, i = 0, a = array[0], b;
	    while (++i < n) {
	      a.n = b = array[i];
	      b.p = a;
	      a = b;
	    }
	    a.n = b = array[0];
	    b.p = a;
	  }
	  function d3_geo_clipPolygonIntersection(point, points, other, entry) {
	    this.x = point;
	    this.z = points;
	    this.o = other;
	    this.e = entry;
	    this.v = false;
	    this.n = this.p = null;
	  }
	  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {
	    return function(rotate, listener) {
	      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);
	      var clip = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() {
	          clip.point = pointRing;
	          clip.lineStart = ringStart;
	          clip.lineEnd = ringEnd;
	          segments = [];
	          polygon = [];
	        },
	        polygonEnd: function() {
	          clip.point = point;
	          clip.lineStart = lineStart;
	          clip.lineEnd = lineEnd;
	          segments = d3.merge(segments);
	          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);
	          if (segments.length) {
	            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
	            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);
	          } else if (clipStartInside) {
	            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
	            listener.lineStart();
	            interpolate(null, null, 1, listener);
	            listener.lineEnd();
	          }
	          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;
	          segments = polygon = null;
	        },
	        sphere: function() {
	          listener.polygonStart();
	          listener.lineStart();
	          interpolate(null, null, 1, listener);
	          listener.lineEnd();
	          listener.polygonEnd();
	        }
	      };
	      function point(λ, φ) {
	        var point = rotate(λ, φ);
	        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);
	      }
	      function pointLine(λ, φ) {
	        var point = rotate(λ, φ);
	        line.point(point[0], point[1]);
	      }
	      function lineStart() {
	        clip.point = pointLine;
	        line.lineStart();
	      }
	      function lineEnd() {
	        clip.point = point;
	        line.lineEnd();
	      }
	      var segments;
	      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;
	      function pointRing(λ, φ) {
	        ring.push([ λ, φ ]);
	        var point = rotate(λ, φ);
	        ringListener.point(point[0], point[1]);
	      }
	      function ringStart() {
	        ringListener.lineStart();
	        ring = [];
	      }
	      function ringEnd() {
	        pointRing(ring[0][0], ring[0][1]);
	        ringListener.lineEnd();
	        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;
	        ring.pop();
	        polygon.push(ring);
	        ring = null;
	        if (!n) return;
	        if (clean & 1) {
	          segment = ringSegments[0];
	          var n = segment.length - 1, i = -1, point;
	          if (n > 0) {
	            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
	            listener.lineStart();
	            while (++i < n) listener.point((point = segment[i])[0], point[1]);
	            listener.lineEnd();
	          }
	          return;
	        }
	        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
	        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));
	      }
	      return clip;
	    };
	  }
	  function d3_geo_clipSegmentLength1(segment) {
	    return segment.length > 1;
	  }
	  function d3_geo_clipBufferListener() {
	    var lines = [], line;
	    return {
	      lineStart: function() {
	        lines.push(line = []);
	      },
	      point: function(λ, φ) {
	        line.push([ λ, φ ]);
	      },
	      lineEnd: d3_noop,
	      buffer: function() {
	        var buffer = lines;
	        lines = [];
	        line = null;
	        return buffer;
	      },
	      rejoin: function() {
	        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
	      }
	    };
	  }
	  function d3_geo_clipSort(a, b) {
	    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);
	  }
	  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);
	  function d3_geo_clipAntimeridianLine(listener) {
	    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;
	    return {
	      lineStart: function() {
	        listener.lineStart();
	        clean = 1;
	      },
	      point: function(λ1, φ1) {
	        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);
	        if (abs(dλ - π) < ε) {
	          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);
	          listener.point(sλ0, φ0);
	          listener.lineEnd();
	          listener.lineStart();
	          listener.point(sλ1, φ0);
	          listener.point(λ1, φ0);
	          clean = 0;
	        } else if (sλ0 !== sλ1 && dλ >= π) {
	          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;
	          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;
	          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);
	          listener.point(sλ0, φ0);
	          listener.lineEnd();
	          listener.lineStart();
	          listener.point(sλ1, φ0);
	          clean = 0;
	        }
	        listener.point(λ0 = λ1, φ0 = φ1);
	        sλ0 = sλ1;
	      },
	      lineEnd: function() {
	        listener.lineEnd();
	        λ0 = φ0 = NaN;
	      },
	      clean: function() {
	        return 2 - clean;
	      }
	    };
	  }
	  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {
	    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);
	    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;
	  }
	  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {
	    var φ;
	    if (from == null) {
	      φ = direction * halfπ;
	      listener.point(-π, φ);
	      listener.point(0, φ);
	      listener.point(π, φ);
	      listener.point(π, 0);
	      listener.point(π, -φ);
	      listener.point(0, -φ);
	      listener.point(-π, -φ);
	      listener.point(-π, 0);
	      listener.point(-π, φ);
	    } else if (abs(from[0] - to[0]) > ε) {
	      var s = from[0] < to[0] ? π : -π;
	      φ = direction * s / 2;
	      listener.point(-s, φ);
	      listener.point(0, φ);
	      listener.point(s, φ);
	    } else {
	      listener.point(to[0], to[1]);
	    }
	  }
	  function d3_geo_pointInPolygon(point, polygon) {
	    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;
	    d3_geo_areaRingSum.reset();
	    for (var i = 0, n = polygon.length; i < n; ++i) {
	      var ring = polygon[i], m = ring.length;
	      if (!m) continue;
	      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;
	      while (true) {
	        if (j === m) j = 0;
	        point = ring[j];
	        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;
	        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));
	        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;
	        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {
	          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));
	          d3_geo_cartesianNormalize(arc);
	          var intersection = d3_geo_cartesianCross(meridianNormal, arc);
	          d3_geo_cartesianNormalize(intersection);
	          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);
	          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {
	            winding += antimeridian ^ dλ >= 0 ? 1 : -1;
	          }
	        }
	        if (!j++) break;
	        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;
	      }
	    }
	    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;
	  }
	  function d3_geo_clipCircle(radius) {
	    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);
	    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);
	    function visible(λ, φ) {
	      return Math.cos(λ) * Math.cos(φ) > cr;
	    }
	    function clipLine(listener) {
	      var point0, c0, v0, v00, clean;
	      return {
	        lineStart: function() {
	          v00 = v0 = false;
	          clean = 1;
	        },
	        point: function(λ, φ) {
	          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;
	          if (!point0 && (v00 = v0 = v)) listener.lineStart();
	          if (v !== v0) {
	            point2 = intersect(point0, point1);
	            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {
	              point1[0] += ε;
	              point1[1] += ε;
	              v = visible(point1[0], point1[1]);
	            }
	          }
	          if (v !== v0) {
	            clean = 0;
	            if (v) {
	              listener.lineStart();
	              point2 = intersect(point1, point0);
	              listener.point(point2[0], point2[1]);
	            } else {
	              point2 = intersect(point0, point1);
	              listener.point(point2[0], point2[1]);
	              listener.lineEnd();
	            }
	            point0 = point2;
	          } else if (notHemisphere && point0 && smallRadius ^ v) {
	            var t;
	            if (!(c & c0) && (t = intersect(point1, point0, true))) {
	              clean = 0;
	              if (smallRadius) {
	                listener.lineStart();
	                listener.point(t[0][0], t[0][1]);
	                listener.point(t[1][0], t[1][1]);
	                listener.lineEnd();
	              } else {
	                listener.point(t[1][0], t[1][1]);
	                listener.lineEnd();
	                listener.lineStart();
	                listener.point(t[0][0], t[0][1]);
	              }
	            }
	          }
	          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {
	            listener.point(point1[0], point1[1]);
	          }
	          point0 = point1, v0 = v, c0 = c;
	        },
	        lineEnd: function() {
	          if (v0) listener.lineEnd();
	          point0 = null;
	        },
	        clean: function() {
	          return clean | (v00 && v0) << 1;
	        }
	      };
	    }
	    function intersect(a, b, two) {
	      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);
	      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;
	      if (!determinant) return !two && a;
	      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);
	      d3_geo_cartesianAdd(A, B);
	      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);
	      if (t2 < 0) return;
	      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);
	      d3_geo_cartesianAdd(q, A);
	      q = d3_geo_spherical(q);
	      if (!two) return q;
	      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;
	      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;
	      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;
	      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;
	      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {
	        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);
	        d3_geo_cartesianAdd(q1, A);
	        return [ q, d3_geo_spherical(q1) ];
	      }
	    }
	    function code(λ, φ) {
	      var r = smallRadius ? radius : π - radius, code = 0;
	      if (λ < -r) code |= 1; else if (λ > r) code |= 2;
	      if (φ < -r) code |= 4; else if (φ > r) code |= 8;
	      return code;
	    }
	  }
	  function d3_geom_clipLine(x0, y0, x1, y1) {
	    return function(line) {
	      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;
	      r = x0 - ax;
	      if (!dx && r > 0) return;
	      r /= dx;
	      if (dx < 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      } else if (dx > 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      }
	      r = x1 - ax;
	      if (!dx && r < 0) return;
	      r /= dx;
	      if (dx < 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      } else if (dx > 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      }
	      r = y0 - ay;
	      if (!dy && r > 0) return;
	      r /= dy;
	      if (dy < 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      } else if (dy > 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      }
	      r = y1 - ay;
	      if (!dy && r < 0) return;
	      r /= dy;
	      if (dy < 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      } else if (dy > 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      }
	      if (t0 > 0) line.a = {
	        x: ax + t0 * dx,
	        y: ay + t0 * dy
	      };
	      if (t1 < 1) line.b = {
	        x: ax + t1 * dx,
	        y: ay + t1 * dy
	      };
	      return line;
	    };
	  }
	  var d3_geo_clipExtentMAX = 1e9;
	  d3.geo.clipExtent = function() {
	    var x0, y0, x1, y1, stream, clip, clipExtent = {
	      stream: function(output) {
	        if (stream) stream.valid = false;
	        stream = clip(output);
	        stream.valid = true;
	        return stream;
	      },
	      extent: function(_) {
	        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
	        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);
	        if (stream) stream.valid = false, stream = null;
	        return clipExtent;
	      }
	    };
	    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);
	  };
	  function d3_geo_clipExtent(x0, y0, x1, y1) {
	    return function(listener) {
	      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;
	      var clip = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() {
	          listener = bufferListener;
	          segments = [];
	          polygon = [];
	          clean = true;
	        },
	        polygonEnd: function() {
	          listener = listener_;
	          segments = d3.merge(segments);
	          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;
	          if (inside || visible) {
	            listener.polygonStart();
	            if (inside) {
	              listener.lineStart();
	              interpolate(null, null, 1, listener);
	              listener.lineEnd();
	            }
	            if (visible) {
	              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);
	            }
	            listener.polygonEnd();
	          }
	          segments = polygon = ring = null;
	        }
	      };
	      function insidePolygon(p) {
	        var wn = 0, n = polygon.length, y = p[1];
	        for (var i = 0; i < n; ++i) {
	          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {
	            b = v[j];
	            if (a[1] <= y) {
	              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;
	            } else {
	              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;
	            }
	            a = b;
	          }
	        }
	        return wn !== 0;
	      }
	      function interpolate(from, to, direction, listener) {
	        var a = 0, a1 = 0;
	        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {
	          do {
	            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
	          } while ((a = (a + direction + 4) % 4) !== a1);
	        } else {
	          listener.point(to[0], to[1]);
	        }
	      }
	      function pointVisible(x, y) {
	        return x0 <= x && x <= x1 && y0 <= y && y <= y1;
	      }
	      function point(x, y) {
	        if (pointVisible(x, y)) listener.point(x, y);
	      }
	      var x__, y__, v__, x_, y_, v_, first, clean;
	      function lineStart() {
	        clip.point = linePoint;
	        if (polygon) polygon.push(ring = []);
	        first = true;
	        v_ = false;
	        x_ = y_ = NaN;
	      }
	      function lineEnd() {
	        if (segments) {
	          linePoint(x__, y__);
	          if (v__ && v_) bufferListener.rejoin();
	          segments.push(bufferListener.buffer());
	        }
	        clip.point = point;
	        if (v_) listener.lineEnd();
	      }
	      function linePoint(x, y) {
	        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));
	        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));
	        var v = pointVisible(x, y);
	        if (polygon) ring.push([ x, y ]);
	        if (first) {
	          x__ = x, y__ = y, v__ = v;
	          first = false;
	          if (v) {
	            listener.lineStart();
	            listener.point(x, y);
	          }
	        } else {
	          if (v && v_) listener.point(x, y); else {
	            var l = {
	              a: {
	                x: x_,
	                y: y_
	              },
	              b: {
	                x: x,
	                y: y
	              }
	            };
	            if (clipLine(l)) {
	              if (!v_) {
	                listener.lineStart();
	                listener.point(l.a.x, l.a.y);
	              }
	              listener.point(l.b.x, l.b.y);
	              if (!v) listener.lineEnd();
	              clean = false;
	            } else if (v) {
	              listener.lineStart();
	              listener.point(x, y);
	              clean = false;
	            }
	          }
	        }
	        x_ = x, y_ = y, v_ = v;
	      }
	      return clip;
	    };
	    function corner(p, direction) {
	      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;
	    }
	    function compare(a, b) {
	      return comparePoints(a.x, b.x);
	    }
	    function comparePoints(a, b) {
	      var ca = corner(a, 1), cb = corner(b, 1);
	      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
	    }
	  }
	  function d3_geo_compose(a, b) {
	    function compose(x, y) {
	      return x = a(x, y), b(x[0], x[1]);
	    }
	    if (a.invert && b.invert) compose.invert = function(x, y) {
	      return x = b.invert(x, y), x && a.invert(x[0], x[1]);
	    };
	    return compose;
	  }
	  function d3_geo_conic(projectAt) {
	    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);
	    p.parallels = function(_) {
	      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];
	      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);
	    };
	    return p;
	  }
	  function d3_geo_conicEqualArea(φ0, φ1) {
	    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;
	    function forward(λ, φ) {
	      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;
	      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];
	    }
	    forward.invert = function(x, y) {
	      var ρ0_y = ρ0 - y;
	      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];
	    };
	    return forward;
	  }
	  (d3.geo.conicEqualArea = function() {
	    return d3_geo_conic(d3_geo_conicEqualArea);
	  }).raw = d3_geo_conicEqualArea;
	  d3.geo.albers = function() {
	    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);
	  };
	  d3.geo.albersUsa = function() {
	    var lower48 = d3.geo.albers();
	    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);
	    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);
	    var point, pointStream = {
	      point: function(x, y) {
	        point = [ x, y ];
	      }
	    }, lower48Point, alaskaPoint, hawaiiPoint;
	    function albersUsa(coordinates) {
	      var x = coordinates[0], y = coordinates[1];
	      point = null;
	      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);
	      return point;
	    }
	    albersUsa.invert = function(coordinates) {
	      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;
	      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);
	    };
	    albersUsa.stream = function(stream) {
	      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);
	      return {
	        point: function(x, y) {
	          lower48Stream.point(x, y);
	          alaskaStream.point(x, y);
	          hawaiiStream.point(x, y);
	        },
	        sphere: function() {
	          lower48Stream.sphere();
	          alaskaStream.sphere();
	          hawaiiStream.sphere();
	        },
	        lineStart: function() {
	          lower48Stream.lineStart();
	          alaskaStream.lineStart();
	          hawaiiStream.lineStart();
	        },
	        lineEnd: function() {
	          lower48Stream.lineEnd();
	          alaskaStream.lineEnd();
	          hawaiiStream.lineEnd();
	        },
	        polygonStart: function() {
	          lower48Stream.polygonStart();
	          alaskaStream.polygonStart();
	          hawaiiStream.polygonStart();
	        },
	        polygonEnd: function() {
	          lower48Stream.polygonEnd();
	          alaskaStream.polygonEnd();
	          hawaiiStream.polygonEnd();
	        }
	      };
	    };
	    albersUsa.precision = function(_) {
	      if (!arguments.length) return lower48.precision();
	      lower48.precision(_);
	      alaska.precision(_);
	      hawaii.precision(_);
	      return albersUsa;
	    };
	    albersUsa.scale = function(_) {
	      if (!arguments.length) return lower48.scale();
	      lower48.scale(_);
	      alaska.scale(_ * .35);
	      hawaii.scale(_);
	      return albersUsa.translate(lower48.translate());
	    };
	    albersUsa.translate = function(_) {
	      if (!arguments.length) return lower48.translate();
	      var k = lower48.scale(), x = +_[0], y = +_[1];
	      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;
	      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
	      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
	      return albersUsa;
	    };
	    return albersUsa.scale(1070);
	  };
	  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {
	    point: d3_noop,
	    lineStart: d3_noop,
	    lineEnd: d3_noop,
	    polygonStart: function() {
	      d3_geo_pathAreaPolygon = 0;
	      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;
	    },
	    polygonEnd: function() {
	      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;
	      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);
	    }
	  };
	  function d3_geo_pathAreaRingStart() {
	    var x00, y00, x0, y0;
	    d3_geo_pathArea.point = function(x, y) {
	      d3_geo_pathArea.point = nextPoint;
	      x00 = x0 = x, y00 = y0 = y;
	    };
	    function nextPoint(x, y) {
	      d3_geo_pathAreaPolygon += y0 * x - x0 * y;
	      x0 = x, y0 = y;
	    }
	    d3_geo_pathArea.lineEnd = function() {
	      nextPoint(x00, y00);
	    };
	  }
	  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;
	  var d3_geo_pathBounds = {
	    point: d3_geo_pathBoundsPoint,
	    lineStart: d3_noop,
	    lineEnd: d3_noop,
	    polygonStart: d3_noop,
	    polygonEnd: d3_noop
	  };
	  function d3_geo_pathBoundsPoint(x, y) {
	    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;
	    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;
	    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;
	    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;
	  }
	  function d3_geo_pathBuffer() {
	    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];
	    var stream = {
	      point: point,
	      lineStart: function() {
	        stream.point = pointLineStart;
	      },
	      lineEnd: lineEnd,
	      polygonStart: function() {
	        stream.lineEnd = lineEndPolygon;
	      },
	      polygonEnd: function() {
	        stream.lineEnd = lineEnd;
	        stream.point = point;
	      },
	      pointRadius: function(_) {
	        pointCircle = d3_geo_pathBufferCircle(_);
	        return stream;
	      },
	      result: function() {
	        if (buffer.length) {
	          var result = buffer.join("");
	          buffer = [];
	          return result;
	        }
	      }
	    };
	    function point(x, y) {
	      buffer.push("M", x, ",", y, pointCircle);
	    }
	    function pointLineStart(x, y) {
	      buffer.push("M", x, ",", y);
	      stream.point = pointLine;
	    }
	    function pointLine(x, y) {
	      buffer.push("L", x, ",", y);
	    }
	    function lineEnd() {
	      stream.point = point;
	    }
	    function lineEndPolygon() {
	      buffer.push("Z");
	    }
	    return stream;
	  }
	  function d3_geo_pathBufferCircle(radius) {
	    return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
	  }
	  var d3_geo_pathCentroid = {
	    point: d3_geo_pathCentroidPoint,
	    lineStart: d3_geo_pathCentroidLineStart,
	    lineEnd: d3_geo_pathCentroidLineEnd,
	    polygonStart: function() {
	      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;
	    },
	    polygonEnd: function() {
	      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
	      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;
	      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;
	    }
	  };
	  function d3_geo_pathCentroidPoint(x, y) {
	    d3_geo_centroidX0 += x;
	    d3_geo_centroidY0 += y;
	    ++d3_geo_centroidZ0;
	  }
	  function d3_geo_pathCentroidLineStart() {
	    var x0, y0;
	    d3_geo_pathCentroid.point = function(x, y) {
	      d3_geo_pathCentroid.point = nextPoint;
	      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
	    };
	    function nextPoint(x, y) {
	      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
	      d3_geo_centroidX1 += z * (x0 + x) / 2;
	      d3_geo_centroidY1 += z * (y0 + y) / 2;
	      d3_geo_centroidZ1 += z;
	      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
	    }
	  }
	  function d3_geo_pathCentroidLineEnd() {
	    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
	  }
	  function d3_geo_pathCentroidRingStart() {
	    var x00, y00, x0, y0;
	    d3_geo_pathCentroid.point = function(x, y) {
	      d3_geo_pathCentroid.point = nextPoint;
	      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);
	    };
	    function nextPoint(x, y) {
	      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
	      d3_geo_centroidX1 += z * (x0 + x) / 2;
	      d3_geo_centroidY1 += z * (y0 + y) / 2;
	      d3_geo_centroidZ1 += z;
	      z = y0 * x - x0 * y;
	      d3_geo_centroidX2 += z * (x0 + x);
	      d3_geo_centroidY2 += z * (y0 + y);
	      d3_geo_centroidZ2 += z * 3;
	      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
	    }
	    d3_geo_pathCentroid.lineEnd = function() {
	      nextPoint(x00, y00);
	    };
	  }
	  function d3_geo_pathContext(context) {
	    var pointRadius = 4.5;
	    var stream = {
	      point: point,
	      lineStart: function() {
	        stream.point = pointLineStart;
	      },
	      lineEnd: lineEnd,
	      polygonStart: function() {
	        stream.lineEnd = lineEndPolygon;
	      },
	      polygonEnd: function() {
	        stream.lineEnd = lineEnd;
	        stream.point = point;
	      },
	      pointRadius: function(_) {
	        pointRadius = _;
	        return stream;
	      },
	      result: d3_noop
	    };
	    function point(x, y) {
	      context.moveTo(x, y);
	      context.arc(x, y, pointRadius, 0, τ);
	    }
	    function pointLineStart(x, y) {
	      context.moveTo(x, y);
	      stream.point = pointLine;
	    }
	    function pointLine(x, y) {
	      context.lineTo(x, y);
	    }
	    function lineEnd() {
	      stream.point = point;
	    }
	    function lineEndPolygon() {
	      context.closePath();
	    }
	    return stream;
	  }
	  function d3_geo_resample(project) {
	    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;
	    function resample(stream) {
	      return (maxDepth ? resampleRecursive : resampleNone)(stream);
	    }
	    function resampleNone(stream) {
	      return d3_geo_transformPoint(stream, function(x, y) {
	        x = project(x, y);
	        stream.point(x[0], x[1]);
	      });
	    }
	    function resampleRecursive(stream) {
	      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;
	      var resample = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() {
	          stream.polygonStart();
	          resample.lineStart = ringStart;
	        },
	        polygonEnd: function() {
	          stream.polygonEnd();
	          resample.lineStart = lineStart;
	        }
	      };
	      function point(x, y) {
	        x = project(x, y);
	        stream.point(x[0], x[1]);
	      }
	      function lineStart() {
	        x0 = NaN;
	        resample.point = linePoint;
	        stream.lineStart();
	      }
	      function linePoint(λ, φ) {
	        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);
	        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
	        stream.point(x0, y0);
	      }
	      function lineEnd() {
	        resample.point = point;
	        stream.lineEnd();
	      }
	      function ringStart() {
	        lineStart();
	        resample.point = ringPoint;
	        resample.lineEnd = ringEnd;
	      }
	      function ringPoint(λ, φ) {
	        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
	        resample.point = linePoint;
	      }
	      function ringEnd() {
	        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);
	        resample.lineEnd = lineEnd;
	        lineEnd();
	      }
	      return resample;
	    }
	    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {
	      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;
	      if (d2 > 4 * δ2 && depth--) {
	        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;
	        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
	          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);
	          stream.point(x2, y2);
	          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);
	        }
	      }
	    }
	    resample.precision = function(_) {
	      if (!arguments.length) return Math.sqrt(δ2);
	      maxDepth = (δ2 = _ * _) > 0 && 16;
	      return resample;
	    };
	    return resample;
	  }
	  d3.geo.path = function() {
	    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;
	    function path(object) {
	      if (object) {
	        if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
	        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);
	        d3.geo.stream(object, cacheStream);
	      }
	      return contextStream.result();
	    }
	    path.area = function(object) {
	      d3_geo_pathAreaSum = 0;
	      d3.geo.stream(object, projectStream(d3_geo_pathArea));
	      return d3_geo_pathAreaSum;
	    };
	    path.centroid = function(object) {
	      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
	      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));
	      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];
	    };
	    path.bounds = function(object) {
	      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);
	      d3.geo.stream(object, projectStream(d3_geo_pathBounds));
	      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];
	    };
	    path.projection = function(_) {
	      if (!arguments.length) return projection;
	      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;
	      return reset();
	    };
	    path.context = function(_) {
	      if (!arguments.length) return context;
	      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);
	      if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
	      return reset();
	    };
	    path.pointRadius = function(_) {
	      if (!arguments.length) return pointRadius;
	      pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
	      return path;
	    };
	    function reset() {
	      cacheStream = null;
	      return path;
	    }
	    return path.projection(d3.geo.albersUsa()).context(null);
	  };
	  function d3_geo_pathProjectStream(project) {
	    var resample = d3_geo_resample(function(x, y) {
	      return project([ x * d3_degrees, y * d3_degrees ]);
	    });
	    return function(stream) {
	      return d3_geo_projectionRadians(resample(stream));
	    };
	  }
	  d3.geo.transform = function(methods) {
	    return {
	      stream: function(stream) {
	        var transform = new d3_geo_transform(stream);
	        for (var k in methods) transform[k] = methods[k];
	        return transform;
	      }
	    };
	  };
	  function d3_geo_transform(stream) {
	    this.stream = stream;
	  }
	  d3_geo_transform.prototype = {
	    point: function(x, y) {
	      this.stream.point(x, y);
	    },
	    sphere: function() {
	      this.stream.sphere();
	    },
	    lineStart: function() {
	      this.stream.lineStart();
	    },
	    lineEnd: function() {
	      this.stream.lineEnd();
	    },
	    polygonStart: function() {
	      this.stream.polygonStart();
	    },
	    polygonEnd: function() {
	      this.stream.polygonEnd();
	    }
	  };
	  function d3_geo_transformPoint(stream, point) {
	    return {
	      point: point,
	      sphere: function() {
	        stream.sphere();
	      },
	      lineStart: function() {
	        stream.lineStart();
	      },
	      lineEnd: function() {
	        stream.lineEnd();
	      },
	      polygonStart: function() {
	        stream.polygonStart();
	      },
	      polygonEnd: function() {
	        stream.polygonEnd();
	      }
	    };
	  }
	  d3.geo.projection = d3_geo_projection;
	  d3.geo.projectionMutator = d3_geo_projectionMutator;
	  function d3_geo_projection(project) {
	    return d3_geo_projectionMutator(function() {
	      return project;
	    })();
	  }
	  function d3_geo_projectionMutator(projectAt) {
	    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {
	      x = project(x, y);
	      return [ x[0] * k + δx, δy - x[1] * k ];
	    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;
	    function projection(point) {
	      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);
	      return [ point[0] * k + δx, δy - point[1] * k ];
	    }
	    function invert(point) {
	      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);
	      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];
	    }
	    projection.stream = function(output) {
	      if (stream) stream.valid = false;
	      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));
	      stream.valid = true;
	      return stream;
	    };
	    projection.clipAngle = function(_) {
	      if (!arguments.length) return clipAngle;
	      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);
	      return invalidate();
	    };
	    projection.clipExtent = function(_) {
	      if (!arguments.length) return clipExtent;
	      clipExtent = _;
	      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;
	      return invalidate();
	    };
	    projection.scale = function(_) {
	      if (!arguments.length) return k;
	      k = +_;
	      return reset();
	    };
	    projection.translate = function(_) {
	      if (!arguments.length) return [ x, y ];
	      x = +_[0];
	      y = +_[1];
	      return reset();
	    };
	    projection.center = function(_) {
	      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];
	      λ = _[0] % 360 * d3_radians;
	      φ = _[1] % 360 * d3_radians;
	      return reset();
	    };
	    projection.rotate = function(_) {
	      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];
	      δλ = _[0] % 360 * d3_radians;
	      δφ = _[1] % 360 * d3_radians;
	      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;
	      return reset();
	    };
	    d3.rebind(projection, projectResample, "precision");
	    function reset() {
	      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);
	      var center = project(λ, φ);
	      δx = x - center[0] * k;
	      δy = y + center[1] * k;
	      return invalidate();
	    }
	    function invalidate() {
	      if (stream) stream.valid = false, stream = null;
	      return projection;
	    }
	    return function() {
	      project = projectAt.apply(this, arguments);
	      projection.invert = project.invert && invert;
	      return reset();
	    };
	  }
	  function d3_geo_projectionRadians(stream) {
	    return d3_geo_transformPoint(stream, function(x, y) {
	      stream.point(x * d3_radians, y * d3_radians);
	    });
	  }
	  function d3_geo_equirectangular(λ, φ) {
	    return [ λ, φ ];
	  }
	  (d3.geo.equirectangular = function() {
	    return d3_geo_projection(d3_geo_equirectangular);
	  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;
	  d3.geo.rotation = function(rotate) {
	    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);
	    function forward(coordinates) {
	      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
	      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
	    }
	    forward.invert = function(coordinates) {
	      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
	      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
	    };
	    return forward;
	  };
	  function d3_geo_identityRotation(λ, φ) {
	    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
	  }
	  d3_geo_identityRotation.invert = d3_geo_equirectangular;
	  function d3_geo_rotation(δλ, δφ, δγ) {
	    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;
	  }
	  function d3_geo_forwardRotationλ(δλ) {
	    return function(λ, φ) {
	      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
	    };
	  }
	  function d3_geo_rotationλ(δλ) {
	    var rotation = d3_geo_forwardRotationλ(δλ);
	    rotation.invert = d3_geo_forwardRotationλ(-δλ);
	    return rotation;
	  }
	  function d3_geo_rotationφγ(δφ, δγ) {
	    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);
	    function rotation(λ, φ) {
	      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;
	      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];
	    }
	    rotation.invert = function(λ, φ) {
	      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;
	      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];
	    };
	    return rotation;
	  }
	  d3.geo.circle = function() {
	    var origin = [ 0, 0 ], angle, precision = 6, interpolate;
	    function circle() {
	      var center = typeof origin === "function" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];
	      interpolate(null, null, 1, {
	        point: function(x, y) {
	          ring.push(x = rotate(x, y));
	          x[0] *= d3_degrees, x[1] *= d3_degrees;
	        }
	      });
	      return {
	        type: "Polygon",
	        coordinates: [ ring ]
	      };
	    }
	    circle.origin = function(x) {
	      if (!arguments.length) return origin;
	      origin = x;
	      return circle;
	    };
	    circle.angle = function(x) {
	      if (!arguments.length) return angle;
	      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);
	      return circle;
	    };
	    circle.precision = function(_) {
	      if (!arguments.length) return precision;
	      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);
	      return circle;
	    };
	    return circle.angle(90);
	  };
	  function d3_geo_circleInterpolate(radius, precision) {
	    var cr = Math.cos(radius), sr = Math.sin(radius);
	    return function(from, to, direction, listener) {
	      var step = direction * precision;
	      if (from != null) {
	        from = d3_geo_circleAngle(cr, from);
	        to = d3_geo_circleAngle(cr, to);
	        if (direction > 0 ? from < to : from > to) from += direction * τ;
	      } else {
	        from = radius + direction * τ;
	        to = radius - .5 * step;
	      }
	      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {
	        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);
	      }
	    };
	  }
	  function d3_geo_circleAngle(cr, point) {
	    var a = d3_geo_cartesian(point);
	    a[0] -= cr;
	    d3_geo_cartesianNormalize(a);
	    var angle = d3_acos(-a[1]);
	    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);
	  }
	  d3.geo.distance = function(a, b) {
	    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;
	    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);
	  };
	  d3.geo.graticule = function() {
	    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;
	    function graticule() {
	      return {
	        type: "MultiLineString",
	        coordinates: lines()
	      };
	    }
	    function lines() {
	      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {
	        return abs(x % DX) > ε;
	      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {
	        return abs(y % DY) > ε;
	      }).map(y));
	    }
	    graticule.lines = function() {
	      return lines().map(function(coordinates) {
	        return {
	          type: "LineString",
	          coordinates: coordinates
	        };
	      });
	    };
	    graticule.outline = function() {
	      return {
	        type: "Polygon",
	        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]
	      };
	    };
	    graticule.extent = function(_) {
	      if (!arguments.length) return graticule.minorExtent();
	      return graticule.majorExtent(_).minorExtent(_);
	    };
	    graticule.majorExtent = function(_) {
	      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];
	      X0 = +_[0][0], X1 = +_[1][0];
	      Y0 = +_[0][1], Y1 = +_[1][1];
	      if (X0 > X1) _ = X0, X0 = X1, X1 = _;
	      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
	      return graticule.precision(precision);
	    };
	    graticule.minorExtent = function(_) {
	      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
	      x0 = +_[0][0], x1 = +_[1][0];
	      y0 = +_[0][1], y1 = +_[1][1];
	      if (x0 > x1) _ = x0, x0 = x1, x1 = _;
	      if (y0 > y1) _ = y0, y0 = y1, y1 = _;
	      return graticule.precision(precision);
	    };
	    graticule.step = function(_) {
	      if (!arguments.length) return graticule.minorStep();
	      return graticule.majorStep(_).minorStep(_);
	    };
	    graticule.majorStep = function(_) {
	      if (!arguments.length) return [ DX, DY ];
	      DX = +_[0], DY = +_[1];
	      return graticule;
	    };
	    graticule.minorStep = function(_) {
	      if (!arguments.length) return [ dx, dy ];
	      dx = +_[0], dy = +_[1];
	      return graticule;
	    };
	    graticule.precision = function(_) {
	      if (!arguments.length) return precision;
	      precision = +_;
	      x = d3_geo_graticuleX(y0, y1, 90);
	      y = d3_geo_graticuleY(x0, x1, precision);
	      X = d3_geo_graticuleX(Y0, Y1, 90);
	      Y = d3_geo_graticuleY(X0, X1, precision);
	      return graticule;
	    };
	    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);
	  };
	  function d3_geo_graticuleX(y0, y1, dy) {
	    var y = d3.range(y0, y1 - ε, dy).concat(y1);
	    return function(x) {
	      return y.map(function(y) {
	        return [ x, y ];
	      });
	    };
	  }
	  function d3_geo_graticuleY(x0, x1, dx) {
	    var x = d3.range(x0, x1 - ε, dx).concat(x1);
	    return function(y) {
	      return x.map(function(x) {
	        return [ x, y ];
	      });
	    };
	  }
	  function d3_source(d) {
	    return d.source;
	  }
	  function d3_target(d) {
	    return d.target;
	  }
	  d3.geo.greatArc = function() {
	    var source = d3_source, source_, target = d3_target, target_;
	    function greatArc() {
	      return {
	        type: "LineString",
	        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]
	      };
	    }
	    greatArc.distance = function() {
	      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));
	    };
	    greatArc.source = function(_) {
	      if (!arguments.length) return source;
	      source = _, source_ = typeof _ === "function" ? null : _;
	      return greatArc;
	    };
	    greatArc.target = function(_) {
	      if (!arguments.length) return target;
	      target = _, target_ = typeof _ === "function" ? null : _;
	      return greatArc;
	    };
	    greatArc.precision = function() {
	      return arguments.length ? greatArc : 0;
	    };
	    return greatArc;
	  };
	  d3.geo.interpolate = function(source, target) {
	    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);
	  };
	  function d3_geo_interpolate(x0, y0, x1, y1) {
	    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);
	    var interpolate = d ? function(t) {
	      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;
	      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];
	    } : function() {
	      return [ x0 * d3_degrees, y0 * d3_degrees ];
	    };
	    interpolate.distance = d;
	    return interpolate;
	  }
	  d3.geo.length = function(object) {
	    d3_geo_lengthSum = 0;
	    d3.geo.stream(object, d3_geo_length);
	    return d3_geo_lengthSum;
	  };
	  var d3_geo_lengthSum;
	  var d3_geo_length = {
	    sphere: d3_noop,
	    point: d3_noop,
	    lineStart: d3_geo_lengthLineStart,
	    lineEnd: d3_noop,
	    polygonStart: d3_noop,
	    polygonEnd: d3_noop
	  };
	  function d3_geo_lengthLineStart() {
	    var λ0, sinφ0, cosφ0;
	    d3_geo_length.point = function(λ, φ) {
	      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);
	      d3_geo_length.point = nextPoint;
	    };
	    d3_geo_length.lineEnd = function() {
	      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;
	    };
	    function nextPoint(λ, φ) {
	      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);
	      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);
	      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;
	    }
	  }
	  function d3_geo_azimuthal(scale, angle) {
	    function azimuthal(λ, φ) {
	      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);
	      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];
	    }
	    azimuthal.invert = function(x, y) {
	      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);
	      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];
	    };
	    return azimuthal;
	  }
	  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {
	    return Math.sqrt(2 / (1 + cosλcosφ));
	  }, function(ρ) {
	    return 2 * Math.asin(ρ / 2);
	  });
	  (d3.geo.azimuthalEqualArea = function() {
	    return d3_geo_projection(d3_geo_azimuthalEqualArea);
	  }).raw = d3_geo_azimuthalEqualArea;
	  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {
	    var c = Math.acos(cosλcosφ);
	    return c && c / Math.sin(c);
	  }, d3_identity);
	  (d3.geo.azimuthalEquidistant = function() {
	    return d3_geo_projection(d3_geo_azimuthalEquidistant);
	  }).raw = d3_geo_azimuthalEquidistant;
	  function d3_geo_conicConformal(φ0, φ1) {
	    var cosφ0 = Math.cos(φ0), t = function(φ) {
	      return Math.tan(π / 4 + φ / 2);
	    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;
	    if (!n) return d3_geo_mercator;
	    function forward(λ, φ) {
	      if (F > 0) {
	        if (φ < -halfπ + ε) φ = -halfπ + ε;
	      } else {
	        if (φ > halfπ - ε) φ = halfπ - ε;
	      }
	      var ρ = F / Math.pow(t(φ), n);
	      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];
	    }
	    forward.invert = function(x, y) {
	      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);
	      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];
	    };
	    return forward;
	  }
	  (d3.geo.conicConformal = function() {
	    return d3_geo_conic(d3_geo_conicConformal);
	  }).raw = d3_geo_conicConformal;
	  function d3_geo_conicEquidistant(φ0, φ1) {
	    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;
	    if (abs(n) < ε) return d3_geo_equirectangular;
	    function forward(λ, φ) {
	      var ρ = G - φ;
	      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];
	    }
	    forward.invert = function(x, y) {
	      var ρ0_y = G - y;
	      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];
	    };
	    return forward;
	  }
	  (d3.geo.conicEquidistant = function() {
	    return d3_geo_conic(d3_geo_conicEquidistant);
	  }).raw = d3_geo_conicEquidistant;
	  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {
	    return 1 / cosλcosφ;
	  }, Math.atan);
	  (d3.geo.gnomonic = function() {
	    return d3_geo_projection(d3_geo_gnomonic);
	  }).raw = d3_geo_gnomonic;
	  function d3_geo_mercator(λ, φ) {
	    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];
	  }
	  d3_geo_mercator.invert = function(x, y) {
	    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];
	  };
	  function d3_geo_mercatorProjection(project) {
	    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;
	    m.scale = function() {
	      var v = scale.apply(m, arguments);
	      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
	    };
	    m.translate = function() {
	      var v = translate.apply(m, arguments);
	      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
	    };
	    m.clipExtent = function(_) {
	      var v = clipExtent.apply(m, arguments);
	      if (v === m) {
	        if (clipAuto = _ == null) {
	          var k = π * scale(), t = translate();
	          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);
	        }
	      } else if (clipAuto) {
	        v = null;
	      }
	      return v;
	    };
	    return m.clipExtent(null);
	  }
	  (d3.geo.mercator = function() {
	    return d3_geo_mercatorProjection(d3_geo_mercator);
	  }).raw = d3_geo_mercator;
	  var d3_geo_orthographic = d3_geo_azimuthal(function() {
	    return 1;
	  }, Math.asin);
	  (d3.geo.orthographic = function() {
	    return d3_geo_projection(d3_geo_orthographic);
	  }).raw = d3_geo_orthographic;
	  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {
	    return 1 / (1 + cosλcosφ);
	  }, function(ρ) {
	    return 2 * Math.atan(ρ);
	  });
	  (d3.geo.stereographic = function() {
	    return d3_geo_projection(d3_geo_stereographic);
	  }).raw = d3_geo_stereographic;
	  function d3_geo_transverseMercator(λ, φ) {
	    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];
	  }
	  d3_geo_transverseMercator.invert = function(x, y) {
	    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];
	  };
	  (d3.geo.transverseMercator = function() {
	    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;
	    projection.center = function(_) {
	      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);
	    };
	    projection.rotate = function(_) {
	      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), 
	      [ _[0], _[1], _[2] - 90 ]);
	    };
	    return rotate([ 0, 0, 90 ]);
	  }).raw = d3_geo_transverseMercator;
	  d3.geom = {};
	  function d3_geom_pointX(d) {
	    return d[0];
	  }
	  function d3_geom_pointY(d) {
	    return d[1];
	  }
	  d3.geom.hull = function(vertices) {
	    var x = d3_geom_pointX, y = d3_geom_pointY;
	    if (arguments.length) return hull(vertices);
	    function hull(data) {
	      if (data.length < 3) return [];
	      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];
	      for (i = 0; i < n; i++) {
	        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);
	      }
	      points.sort(d3_geom_hullOrder);
	      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);
	      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);
	      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];
	      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);
	      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);
	      return polygon;
	    }
	    hull.x = function(_) {
	      return arguments.length ? (x = _, hull) : x;
	    };
	    hull.y = function(_) {
	      return arguments.length ? (y = _, hull) : y;
	    };
	    return hull;
	  };
	  function d3_geom_hullUpper(points) {
	    var n = points.length, hull = [ 0, 1 ], hs = 2;
	    for (var i = 2; i < n; i++) {
	      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;
	      hull[hs++] = i;
	    }
	    return hull.slice(0, hs);
	  }
	  function d3_geom_hullOrder(a, b) {
	    return a[0] - b[0] || a[1] - b[1];
	  }
	  d3.geom.polygon = function(coordinates) {
	    d3_subclass(coordinates, d3_geom_polygonPrototype);
	    return coordinates;
	  };
	  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];
	  d3_geom_polygonPrototype.area = function() {
	    var i = -1, n = this.length, a, b = this[n - 1], area = 0;
	    while (++i < n) {
	      a = b;
	      b = this[i];
	      area += a[1] * b[0] - a[0] * b[1];
	    }
	    return area * .5;
	  };
	  d3_geom_polygonPrototype.centroid = function(k) {
	    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;
	    if (!arguments.length) k = -1 / (6 * this.area());
	    while (++i < n) {
	      a = b;
	      b = this[i];
	      c = a[0] * b[1] - b[0] * a[1];
	      x += (a[0] + b[0]) * c;
	      y += (a[1] + b[1]) * c;
	    }
	    return [ x * k, y * k ];
	  };
	  d3_geom_polygonPrototype.clip = function(subject) {
	    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;
	    while (++i < n) {
	      input = subject.slice();
	      subject.length = 0;
	      b = this[i];
	      c = input[(m = input.length - closed) - 1];
	      j = -1;
	      while (++j < m) {
	        d = input[j];
	        if (d3_geom_polygonInside(d, a, b)) {
	          if (!d3_geom_polygonInside(c, a, b)) {
	            subject.push(d3_geom_polygonIntersect(c, d, a, b));
	          }
	          subject.push(d);
	        } else if (d3_geom_polygonInside(c, a, b)) {
	          subject.push(d3_geom_polygonIntersect(c, d, a, b));
	        }
	        c = d;
	      }
	      if (closed) subject.push(subject[0]);
	      a = b;
	    }
	    return subject;
	  };
	  function d3_geom_polygonInside(p, a, b) {
	    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);
	  }
	  function d3_geom_polygonIntersect(c, d, a, b) {
	    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);
	    return [ x1 + ua * x21, y1 + ua * y21 ];
	  }
	  function d3_geom_polygonClosed(coordinates) {
	    var a = coordinates[0], b = coordinates[coordinates.length - 1];
	    return !(a[0] - b[0] || a[1] - b[1]);
	  }
	  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];
	  function d3_geom_voronoiBeach() {
	    d3_geom_voronoiRedBlackNode(this);
	    this.edge = this.site = this.circle = null;
	  }
	  function d3_geom_voronoiCreateBeach(site) {
	    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();
	    beach.site = site;
	    return beach;
	  }
	  function d3_geom_voronoiDetachBeach(beach) {
	    d3_geom_voronoiDetachCircle(beach);
	    d3_geom_voronoiBeaches.remove(beach);
	    d3_geom_voronoiBeachPool.push(beach);
	    d3_geom_voronoiRedBlackNode(beach);
	  }
	  function d3_geom_voronoiRemoveBeach(beach) {
	    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {
	      x: x,
	      y: y
	    }, previous = beach.P, next = beach.N, disappearing = [ beach ];
	    d3_geom_voronoiDetachBeach(beach);
	    var lArc = previous;
	    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {
	      previous = lArc.P;
	      disappearing.unshift(lArc);
	      d3_geom_voronoiDetachBeach(lArc);
	      lArc = previous;
	    }
	    disappearing.unshift(lArc);
	    d3_geom_voronoiDetachCircle(lArc);
	    var rArc = next;
	    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {
	      next = rArc.N;
	      disappearing.push(rArc);
	      d3_geom_voronoiDetachBeach(rArc);
	      rArc = next;
	    }
	    disappearing.push(rArc);
	    d3_geom_voronoiDetachCircle(rArc);
	    var nArcs = disappearing.length, iArc;
	    for (iArc = 1; iArc < nArcs; ++iArc) {
	      rArc = disappearing[iArc];
	      lArc = disappearing[iArc - 1];
	      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);
	    }
	    lArc = disappearing[0];
	    rArc = disappearing[nArcs - 1];
	    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);
	    d3_geom_voronoiAttachCircle(lArc);
	    d3_geom_voronoiAttachCircle(rArc);
	  }
	  function d3_geom_voronoiAddBeach(site) {
	    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;
	    while (node) {
	      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;
	      if (dxl > ε) node = node.L; else {
	        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);
	        if (dxr > ε) {
	          if (!node.R) {
	            lArc = node;
	            break;
	          }
	          node = node.R;
	        } else {
	          if (dxl > -ε) {
	            lArc = node.P;
	            rArc = node;
	          } else if (dxr > -ε) {
	            lArc = node;
	            rArc = node.N;
	          } else {
	            lArc = rArc = node;
	          }
	          break;
	        }
	      }
	    }
	    var newArc = d3_geom_voronoiCreateBeach(site);
	    d3_geom_voronoiBeaches.insert(lArc, newArc);
	    if (!lArc && !rArc) return;
	    if (lArc === rArc) {
	      d3_geom_voronoiDetachCircle(lArc);
	      rArc = d3_geom_voronoiCreateBeach(lArc.site);
	      d3_geom_voronoiBeaches.insert(newArc, rArc);
	      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
	      d3_geom_voronoiAttachCircle(lArc);
	      d3_geom_voronoiAttachCircle(rArc);
	      return;
	    }
	    if (!rArc) {
	      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
	      return;
	    }
	    d3_geom_voronoiDetachCircle(lArc);
	    d3_geom_voronoiDetachCircle(rArc);
	    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {
	      x: (cy * hb - by * hc) / d + ax,
	      y: (bx * hc - cx * hb) / d + ay
	    };
	    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);
	    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);
	    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);
	    d3_geom_voronoiAttachCircle(lArc);
	    d3_geom_voronoiAttachCircle(rArc);
	  }
	  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {
	    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;
	    if (!pby2) return rfocx;
	    var lArc = arc.P;
	    if (!lArc) return -Infinity;
	    site = lArc.site;
	    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;
	    if (!plby2) return lfocx;
	    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;
	    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
	    return (rfocx + lfocx) / 2;
	  }
	  function d3_geom_voronoiRightBreakPoint(arc, directrix) {
	    var rArc = arc.N;
	    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);
	    var site = arc.site;
	    return site.y === directrix ? site.x : Infinity;
	  }
	  function d3_geom_voronoiCell(site) {
	    this.site = site;
	    this.edges = [];
	  }
	  d3_geom_voronoiCell.prototype.prepare = function() {
	    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;
	    while (iHalfEdge--) {
	      edge = halfEdges[iHalfEdge].edge;
	      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);
	    }
	    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);
	    return halfEdges.length;
	  };
	  function d3_geom_voronoiCloseCells(extent) {
	    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;
	    while (iCell--) {
	      cell = cells[iCell];
	      if (!cell || !cell.prepare()) continue;
	      halfEdges = cell.edges;
	      nHalfEdges = halfEdges.length;
	      iHalfEdge = 0;
	      while (iHalfEdge < nHalfEdges) {
	        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;
	        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;
	        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {
	          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {
	            x: x0,
	            y: abs(x2 - x0) < ε ? y2 : y1
	          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {
	            x: abs(y2 - y1) < ε ? x2 : x1,
	            y: y1
	          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {
	            x: x1,
	            y: abs(x2 - x1) < ε ? y2 : y0
	          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {
	            x: abs(y2 - y0) < ε ? x2 : x0,
	            y: y0
	          } : null), cell.site, null));
	          ++nHalfEdges;
	        }
	      }
	    }
	  }
	  function d3_geom_voronoiHalfEdgeOrder(a, b) {
	    return b.angle - a.angle;
	  }
	  function d3_geom_voronoiCircle() {
	    d3_geom_voronoiRedBlackNode(this);
	    this.x = this.y = this.arc = this.site = this.cy = null;
	  }
	  function d3_geom_voronoiAttachCircle(arc) {
	    var lArc = arc.P, rArc = arc.N;
	    if (!lArc || !rArc) return;
	    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;
	    if (lSite === rSite) return;
	    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;
	    var d = 2 * (ax * cy - ay * cx);
	    if (d >= -ε2) return;
	    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;
	    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();
	    circle.arc = arc;
	    circle.site = cSite;
	    circle.x = x + bx;
	    circle.y = cy + Math.sqrt(x * x + y * y);
	    circle.cy = cy;
	    arc.circle = circle;
	    var before = null, node = d3_geom_voronoiCircles._;
	    while (node) {
	      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
	        if (node.L) node = node.L; else {
	          before = node.P;
	          break;
	        }
	      } else {
	        if (node.R) node = node.R; else {
	          before = node;
	          break;
	        }
	      }
	    }
	    d3_geom_voronoiCircles.insert(before, circle);
	    if (!before) d3_geom_voronoiFirstCircle = circle;
	  }
	  function d3_geom_voronoiDetachCircle(arc) {
	    var circle = arc.circle;
	    if (circle) {
	      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;
	      d3_geom_voronoiCircles.remove(circle);
	      d3_geom_voronoiCirclePool.push(circle);
	      d3_geom_voronoiRedBlackNode(circle);
	      arc.circle = null;
	    }
	  }
	  function d3_geom_voronoiClipEdges(extent) {
	    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;
	    while (i--) {
	      e = edges[i];
	      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {
	        e.a = e.b = null;
	        edges.splice(i, 1);
	      }
	    }
	  }
	  function d3_geom_voronoiConnectEdge(edge, extent) {
	    var vb = edge.b;
	    if (vb) return true;
	    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;
	    if (ry === ly) {
	      if (fx < x0 || fx >= x1) return;
	      if (lx > rx) {
	        if (!va) va = {
	          x: fx,
	          y: y0
	        }; else if (va.y >= y1) return;
	        vb = {
	          x: fx,
	          y: y1
	        };
	      } else {
	        if (!va) va = {
	          x: fx,
	          y: y1
	        }; else if (va.y < y0) return;
	        vb = {
	          x: fx,
	          y: y0
	        };
	      }
	    } else {
	      fm = (lx - rx) / (ry - ly);
	      fb = fy - fm * fx;
	      if (fm < -1 || fm > 1) {
	        if (lx > rx) {
	          if (!va) va = {
	            x: (y0 - fb) / fm,
	            y: y0
	          }; else if (va.y >= y1) return;
	          vb = {
	            x: (y1 - fb) / fm,
	            y: y1
	          };
	        } else {
	          if (!va) va = {
	            x: (y1 - fb) / fm,
	            y: y1
	          }; else if (va.y < y0) return;
	          vb = {
	            x: (y0 - fb) / fm,
	            y: y0
	          };
	        }
	      } else {
	        if (ly < ry) {
	          if (!va) va = {
	            x: x0,
	            y: fm * x0 + fb
	          }; else if (va.x >= x1) return;
	          vb = {
	            x: x1,
	            y: fm * x1 + fb
	          };
	        } else {
	          if (!va) va = {
	            x: x1,
	            y: fm * x1 + fb
	          }; else if (va.x < x0) return;
	          vb = {
	            x: x0,
	            y: fm * x0 + fb
	          };
	        }
	      }
	    }
	    edge.a = va;
	    edge.b = vb;
	    return true;
	  }
	  function d3_geom_voronoiEdge(lSite, rSite) {
	    this.l = lSite;
	    this.r = rSite;
	    this.a = this.b = null;
	  }
	  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {
	    var edge = new d3_geom_voronoiEdge(lSite, rSite);
	    d3_geom_voronoiEdges.push(edge);
	    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);
	    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);
	    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));
	    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));
	    return edge;
	  }
	  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {
	    var edge = new d3_geom_voronoiEdge(lSite, null);
	    edge.a = va;
	    edge.b = vb;
	    d3_geom_voronoiEdges.push(edge);
	    return edge;
	  }
	  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {
	    if (!edge.a && !edge.b) {
	      edge.a = vertex;
	      edge.l = lSite;
	      edge.r = rSite;
	    } else if (edge.l === rSite) {
	      edge.b = vertex;
	    } else {
	      edge.a = vertex;
	    }
	  }
	  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {
	    var va = edge.a, vb = edge.b;
	    this.edge = edge;
	    this.site = lSite;
	    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);
	  }
	  d3_geom_voronoiHalfEdge.prototype = {
	    start: function() {
	      return this.edge.l === this.site ? this.edge.a : this.edge.b;
	    },
	    end: function() {
	      return this.edge.l === this.site ? this.edge.b : this.edge.a;
	    }
	  };
	  function d3_geom_voronoiRedBlackTree() {
	    this._ = null;
	  }
	  function d3_geom_voronoiRedBlackNode(node) {
	    node.U = node.C = node.L = node.R = node.P = node.N = null;
	  }
	  d3_geom_voronoiRedBlackTree.prototype = {
	    insert: function(after, node) {
	      var parent, grandpa, uncle;
	      if (after) {
	        node.P = after;
	        node.N = after.N;
	        if (after.N) after.N.P = node;
	        after.N = node;
	        if (after.R) {
	          after = after.R;
	          while (after.L) after = after.L;
	          after.L = node;
	        } else {
	          after.R = node;
	        }
	        parent = after;
	      } else if (this._) {
	        after = d3_geom_voronoiRedBlackFirst(this._);
	        node.P = null;
	        node.N = after;
	        after.P = after.L = node;
	        parent = after;
	      } else {
	        node.P = node.N = null;
	        this._ = node;
	        parent = null;
	      }
	      node.L = node.R = null;
	      node.U = parent;
	      node.C = true;
	      after = node;
	      while (parent && parent.C) {
	        grandpa = parent.U;
	        if (parent === grandpa.L) {
	          uncle = grandpa.R;
	          if (uncle && uncle.C) {
	            parent.C = uncle.C = false;
	            grandpa.C = true;
	            after = grandpa;
	          } else {
	            if (after === parent.R) {
	              d3_geom_voronoiRedBlackRotateLeft(this, parent);
	              after = parent;
	              parent = after.U;
	            }
	            parent.C = false;
	            grandpa.C = true;
	            d3_geom_voronoiRedBlackRotateRight(this, grandpa);
	          }
	        } else {
	          uncle = grandpa.L;
	          if (uncle && uncle.C) {
	            parent.C = uncle.C = false;
	            grandpa.C = true;
	            after = grandpa;
	          } else {
	            if (after === parent.L) {
	              d3_geom_voronoiRedBlackRotateRight(this, parent);
	              after = parent;
	              parent = after.U;
	            }
	            parent.C = false;
	            grandpa.C = true;
	            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);
	          }
	        }
	        parent = after.U;
	      }
	      this._.C = false;
	    },
	    remove: function(node) {
	      if (node.N) node.N.P = node.P;
	      if (node.P) node.P.N = node.N;
	      node.N = node.P = null;
	      var parent = node.U, sibling, left = node.L, right = node.R, next, red;
	      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);
	      if (parent) {
	        if (parent.L === node) parent.L = next; else parent.R = next;
	      } else {
	        this._ = next;
	      }
	      if (left && right) {
	        red = next.C;
	        next.C = node.C;
	        next.L = left;
	        left.U = next;
	        if (next !== right) {
	          parent = next.U;
	          next.U = node.U;
	          node = next.R;
	          parent.L = node;
	          next.R = right;
	          right.U = next;
	        } else {
	          next.U = parent;
	          parent = next;
	          node = next.R;
	        }
	      } else {
	        red = node.C;
	        node = next;
	      }
	      if (node) node.U = parent;
	      if (red) return;
	      if (node && node.C) {
	        node.C = false;
	        return;
	      }
	      do {
	        if (node === this._) break;
	        if (node === parent.L) {
	          sibling = parent.R;
	          if (sibling.C) {
	            sibling.C = false;
	            parent.C = true;
	            d3_geom_voronoiRedBlackRotateLeft(this, parent);
	            sibling = parent.R;
	          }
	          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
	            if (!sibling.R || !sibling.R.C) {
	              sibling.L.C = false;
	              sibling.C = true;
	              d3_geom_voronoiRedBlackRotateRight(this, sibling);
	              sibling = parent.R;
	            }
	            sibling.C = parent.C;
	            parent.C = sibling.R.C = false;
	            d3_geom_voronoiRedBlackRotateLeft(this, parent);
	            node = this._;
	            break;
	          }
	        } else {
	          sibling = parent.L;
	          if (sibling.C) {
	            sibling.C = false;
	            parent.C = true;
	            d3_geom_voronoiRedBlackRotateRight(this, parent);
	            sibling = parent.L;
	          }
	          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
	            if (!sibling.L || !sibling.L.C) {
	              sibling.R.C = false;
	              sibling.C = true;
	              d3_geom_voronoiRedBlackRotateLeft(this, sibling);
	              sibling = parent.L;
	            }
	            sibling.C = parent.C;
	            parent.C = sibling.L.C = false;
	            d3_geom_voronoiRedBlackRotateRight(this, parent);
	            node = this._;
	            break;
	          }
	        }
	        sibling.C = true;
	        node = parent;
	        parent = parent.U;
	      } while (!node.C);
	      if (node) node.C = false;
	    }
	  };
	  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {
	    var p = node, q = node.R, parent = p.U;
	    if (parent) {
	      if (parent.L === p) parent.L = q; else parent.R = q;
	    } else {
	      tree._ = q;
	    }
	    q.U = parent;
	    p.U = q;
	    p.R = q.L;
	    if (p.R) p.R.U = p;
	    q.L = p;
	  }
	  function d3_geom_voronoiRedBlackRotateRight(tree, node) {
	    var p = node, q = node.L, parent = p.U;
	    if (parent) {
	      if (parent.L === p) parent.L = q; else parent.R = q;
	    } else {
	      tree._ = q;
	    }
	    q.U = parent;
	    p.U = q;
	    p.L = q.R;
	    if (p.L) p.L.U = p;
	    q.R = p;
	  }
	  function d3_geom_voronoiRedBlackFirst(node) {
	    while (node.L) node = node.L;
	    return node;
	  }
	  function d3_geom_voronoi(sites, bbox) {
	    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;
	    d3_geom_voronoiEdges = [];
	    d3_geom_voronoiCells = new Array(sites.length);
	    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();
	    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();
	    while (true) {
	      circle = d3_geom_voronoiFirstCircle;
	      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {
	        if (site.x !== x0 || site.y !== y0) {
	          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);
	          d3_geom_voronoiAddBeach(site);
	          x0 = site.x, y0 = site.y;
	        }
	        site = sites.pop();
	      } else if (circle) {
	        d3_geom_voronoiRemoveBeach(circle.arc);
	      } else {
	        break;
	      }
	    }
	    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);
	    var diagram = {
	      cells: d3_geom_voronoiCells,
	      edges: d3_geom_voronoiEdges
	    };
	    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;
	    return diagram;
	  }
	  function d3_geom_voronoiVertexOrder(a, b) {
	    return b.y - a.y || b.x - a.x;
	  }
	  d3.geom.voronoi = function(points) {
	    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;
	    if (points) return voronoi(points);
	    function voronoi(data) {
	      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];
	      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {
	        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {
	          var s = e.start();
	          return [ s.x, s.y ];
	        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];
	        polygon.point = data[i];
	      });
	      return polygons;
	    }
	    function sites(data) {
	      return data.map(function(d, i) {
	        return {
	          x: Math.round(fx(d, i) / ε) * ε,
	          y: Math.round(fy(d, i) / ε) * ε,
	          i: i
	        };
	      });
	    }
	    voronoi.links = function(data) {
	      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {
	        return edge.l && edge.r;
	      }).map(function(edge) {
	        return {
	          source: data[edge.l.i],
	          target: data[edge.r.i]
	        };
	      });
	    };
	    voronoi.triangles = function(data) {
	      var triangles = [];
	      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {
	        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;
	        while (++j < m) {
	          e0 = e1;
	          s0 = s1;
	          e1 = edges[j].edge;
	          s1 = e1.l === site ? e1.r : e1.l;
	          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {
	            triangles.push([ data[i], data[s0.i], data[s1.i] ]);
	          }
	        }
	      });
	      return triangles;
	    };
	    voronoi.x = function(_) {
	      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;
	    };
	    voronoi.y = function(_) {
	      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;
	    };
	    voronoi.clipExtent = function(_) {
	      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;
	      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;
	      return voronoi;
	    };
	    voronoi.size = function(_) {
	      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];
	      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);
	    };
	    return voronoi;
	  };
	  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];
	  function d3_geom_voronoiTriangleArea(a, b, c) {
	    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);
	  }
	  d3.geom.delaunay = function(vertices) {
	    return d3.geom.voronoi().triangles(vertices);
	  };
	  d3.geom.quadtree = function(points, x1, y1, x2, y2) {
	    var x = d3_geom_pointX, y = d3_geom_pointY, compat;
	    if (compat = arguments.length) {
	      x = d3_geom_quadtreeCompatX;
	      y = d3_geom_quadtreeCompatY;
	      if (compat === 3) {
	        y2 = y1;
	        x2 = x1;
	        y1 = x1 = 0;
	      }
	      return quadtree(points);
	    }
	    function quadtree(data) {
	      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;
	      if (x1 != null) {
	        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;
	      } else {
	        x2_ = y2_ = -(x1_ = y1_ = Infinity);
	        xs = [], ys = [];
	        n = data.length;
	        if (compat) for (i = 0; i < n; ++i) {
	          d = data[i];
	          if (d.x < x1_) x1_ = d.x;
	          if (d.y < y1_) y1_ = d.y;
	          if (d.x > x2_) x2_ = d.x;
	          if (d.y > y2_) y2_ = d.y;
	          xs.push(d.x);
	          ys.push(d.y);
	        } else for (i = 0; i < n; ++i) {
	          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);
	          if (x_ < x1_) x1_ = x_;
	          if (y_ < y1_) y1_ = y_;
	          if (x_ > x2_) x2_ = x_;
	          if (y_ > y2_) y2_ = y_;
	          xs.push(x_);
	          ys.push(y_);
	        }
	      }
	      var dx = x2_ - x1_, dy = y2_ - y1_;
	      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;
	      function insert(n, d, x, y, x1, y1, x2, y2) {
	        if (isNaN(x) || isNaN(y)) return;
	        if (n.leaf) {
	          var nx = n.x, ny = n.y;
	          if (nx != null) {
	            if (abs(nx - x) + abs(ny - y) < .01) {
	              insertChild(n, d, x, y, x1, y1, x2, y2);
	            } else {
	              var nPoint = n.point;
	              n.x = n.y = n.point = null;
	              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);
	              insertChild(n, d, x, y, x1, y1, x2, y2);
	            }
	          } else {
	            n.x = x, n.y = y, n.point = d;
	          }
	        } else {
	          insertChild(n, d, x, y, x1, y1, x2, y2);
	        }
	      }
	      function insertChild(n, d, x, y, x1, y1, x2, y2) {
	        var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, right = x >= sx, bottom = y >= sy, i = (bottom << 1) + right;
	        n.leaf = false;
	        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());
	        if (right) x1 = sx; else x2 = sx;
	        if (bottom) y1 = sy; else y2 = sy;
	        insert(n, d, x, y, x1, y1, x2, y2);
	      }
	      var root = d3_geom_quadtreeNode();
	      root.add = function(d) {
	        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);
	      };
	      root.visit = function(f) {
	        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);
	      };
	      i = -1;
	      if (x1 == null) {
	        while (++i < n) {
	          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);
	        }
	        --i;
	      } else data.forEach(root.add);
	      xs = ys = data = d = null;
	      return root;
	    }
	    quadtree.x = function(_) {
	      return arguments.length ? (x = _, quadtree) : x;
	    };
	    quadtree.y = function(_) {
	      return arguments.length ? (y = _, quadtree) : y;
	    };
	    quadtree.extent = function(_) {
	      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];
	      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], 
	      y2 = +_[1][1];
	      return quadtree;
	    };
	    quadtree.size = function(_) {
	      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];
	      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];
	      return quadtree;
	    };
	    return quadtree;
	  };
	  function d3_geom_quadtreeCompatX(d) {
	    return d.x;
	  }
	  function d3_geom_quadtreeCompatY(d) {
	    return d.y;
	  }
	  function d3_geom_quadtreeNode() {
	    return {
	      leaf: true,
	      nodes: [],
	      point: null,
	      x: null,
	      y: null
	    };
	  }
	  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {
	    if (!f(node, x1, y1, x2, y2)) {
	      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;
	      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);
	      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);
	      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);
	      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);
	    }
	  }
	  d3.interpolateRgb = d3_interpolateRgb;
	  function d3_interpolateRgb(a, b) {
	    a = d3.rgb(a);
	    b = d3.rgb(b);
	    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;
	    return function(t) {
	      return "#" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));
	    };
	  }
	  d3.interpolateObject = d3_interpolateObject;
	  function d3_interpolateObject(a, b) {
	    var i = {}, c = {}, k;
	    for (k in a) {
	      if (k in b) {
	        i[k] = d3_interpolate(a[k], b[k]);
	      } else {
	        c[k] = a[k];
	      }
	    }
	    for (k in b) {
	      if (!(k in a)) {
	        c[k] = b[k];
	      }
	    }
	    return function(t) {
	      for (k in i) c[k] = i[k](t);
	      return c;
	    };
	  }
	  d3.interpolateNumber = d3_interpolateNumber;
	  function d3_interpolateNumber(a, b) {
	    a = +a, b = +b;
	    return function(t) {
	      return a * (1 - t) + b * t;
	    };
	  }
	  d3.interpolateString = d3_interpolateString;
	  function d3_interpolateString(a, b) {
	    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];
	    a = a + "", b = b + "";
	    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {
	      if ((bs = bm.index) > bi) {
	        bs = b.slice(bi, bs);
	        if (s[i]) s[i] += bs; else s[++i] = bs;
	      }
	      if ((am = am[0]) === (bm = bm[0])) {
	        if (s[i]) s[i] += bm; else s[++i] = bm;
	      } else {
	        s[++i] = null;
	        q.push({
	          i: i,
	          x: d3_interpolateNumber(am, bm)
	        });
	      }
	      bi = d3_interpolate_numberB.lastIndex;
	    }
	    if (bi < b.length) {
	      bs = b.slice(bi);
	      if (s[i]) s[i] += bs; else s[++i] = bs;
	    }
	    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {
	      return b(t) + "";
	    }) : function() {
	      return b;
	    } : (b = q.length, function(t) {
	      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
	      return s.join("");
	    });
	  }
	  var d3_interpolate_numberA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, "g");
	  d3.interpolate = d3_interpolate;
	  function d3_interpolate(a, b) {
	    var i = d3.interpolators.length, f;
	    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;
	    return f;
	  }
	  d3.interpolators = [ function(a, b) {
	    var t = typeof b;
	    return (t === "string" ? d3_rgb_names.has(b) || /^(#|rgb\(|hsl\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === "object" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);
	  } ];
	  d3.interpolateArray = d3_interpolateArray;
	  function d3_interpolateArray(a, b) {
	    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;
	    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));
	    for (;i < na; ++i) c[i] = a[i];
	    for (;i < nb; ++i) c[i] = b[i];
	    return function(t) {
	      for (i = 0; i < n0; ++i) c[i] = x[i](t);
	      return c;
	    };
	  }
	  var d3_ease_default = function() {
	    return d3_identity;
	  };
	  var d3_ease = d3.map({
	    linear: d3_ease_default,
	    poly: d3_ease_poly,
	    quad: function() {
	      return d3_ease_quad;
	    },
	    cubic: function() {
	      return d3_ease_cubic;
	    },
	    sin: function() {
	      return d3_ease_sin;
	    },
	    exp: function() {
	      return d3_ease_exp;
	    },
	    circle: function() {
	      return d3_ease_circle;
	    },
	    elastic: d3_ease_elastic,
	    back: d3_ease_back,
	    bounce: function() {
	      return d3_ease_bounce;
	    }
	  });
	  var d3_ease_mode = d3.map({
	    "in": d3_identity,
	    out: d3_ease_reverse,
	    "in-out": d3_ease_reflect,
	    "out-in": function(f) {
	      return d3_ease_reflect(d3_ease_reverse(f));
	    }
	  });
	  d3.ease = function(name) {
	    var i = name.indexOf("-"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : "in";
	    t = d3_ease.get(t) || d3_ease_default;
	    m = d3_ease_mode.get(m) || d3_identity;
	    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));
	  };
	  function d3_ease_clamp(f) {
	    return function(t) {
	      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);
	    };
	  }
	  function d3_ease_reverse(f) {
	    return function(t) {
	      return 1 - f(1 - t);
	    };
	  }
	  function d3_ease_reflect(f) {
	    return function(t) {
	      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));
	    };
	  }
	  function d3_ease_quad(t) {
	    return t * t;
	  }
	  function d3_ease_cubic(t) {
	    return t * t * t;
	  }
	  function d3_ease_cubicInOut(t) {
	    if (t <= 0) return 0;
	    if (t >= 1) return 1;
	    var t2 = t * t, t3 = t2 * t;
	    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);
	  }
	  function d3_ease_poly(e) {
	    return function(t) {
	      return Math.pow(t, e);
	    };
	  }
	  function d3_ease_sin(t) {
	    return 1 - Math.cos(t * halfπ);
	  }
	  function d3_ease_exp(t) {
	    return Math.pow(2, 10 * (t - 1));
	  }
	  function d3_ease_circle(t) {
	    return 1 - Math.sqrt(1 - t * t);
	  }
	  function d3_ease_elastic(a, p) {
	    var s;
	    if (arguments.length < 2) p = .45;
	    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;
	    return function(t) {
	      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);
	    };
	  }
	  function d3_ease_back(s) {
	    if (!s) s = 1.70158;
	    return function(t) {
	      return t * t * ((s + 1) * t - s);
	    };
	  }
	  function d3_ease_bounce(t) {
	    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
	  }
	  d3.interpolateHcl = d3_interpolateHcl;
	  function d3_interpolateHcl(a, b) {
	    a = d3.hcl(a);
	    b = d3.hcl(b);
	    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;
	    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;
	    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
	    return function(t) {
	      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + "";
	    };
	  }
	  d3.interpolateHsl = d3_interpolateHsl;
	  function d3_interpolateHsl(a, b) {
	    a = d3.hsl(a);
	    b = d3.hsl(b);
	    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;
	    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;
	    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
	    return function(t) {
	      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + "";
	    };
	  }
	  d3.interpolateLab = d3_interpolateLab;
	  function d3_interpolateLab(a, b) {
	    a = d3.lab(a);
	    b = d3.lab(b);
	    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;
	    return function(t) {
	      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + "";
	    };
	  }
	  d3.interpolateRound = d3_interpolateRound;
	  function d3_interpolateRound(a, b) {
	    b -= a;
	    return function(t) {
	      return Math.round(a + b * t);
	    };
	  }
	  d3.transform = function(string) {
	    var g = d3_document.createElementNS(d3.ns.prefix.svg, "g");
	    return (d3.transform = function(string) {
	      if (string != null) {
	        g.setAttribute("transform", string);
	        var t = g.transform.baseVal.consolidate();
	      }
	      return new d3_transform(t ? t.matrix : d3_transformIdentity);
	    })(string);
	  };
	  function d3_transform(m) {
	    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;
	    if (r0[0] * r1[1] < r1[0] * r0[1]) {
	      r0[0] *= -1;
	      r0[1] *= -1;
	      kx *= -1;
	      kz *= -1;
	    }
	    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;
	    this.translate = [ m.e, m.f ];
	    this.scale = [ kx, ky ];
	    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;
	  }
	  d3_transform.prototype.toString = function() {
	    return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")";
	  };
	  function d3_transformDot(a, b) {
	    return a[0] * b[0] + a[1] * b[1];
	  }
	  function d3_transformNormalize(a) {
	    var k = Math.sqrt(d3_transformDot(a, a));
	    if (k) {
	      a[0] /= k;
	      a[1] /= k;
	    }
	    return k;
	  }
	  function d3_transformCombine(a, b, k) {
	    a[0] += k * b[0];
	    a[1] += k * b[1];
	    return a;
	  }
	  var d3_transformIdentity = {
	    a: 1,
	    b: 0,
	    c: 0,
	    d: 1,
	    e: 0,
	    f: 0
	  };
	  d3.interpolateTransform = d3_interpolateTransform;
	  function d3_interpolateTransform(a, b) {
	    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;
	    if (ta[0] != tb[0] || ta[1] != tb[1]) {
	      s.push("translate(", null, ",", null, ")");
	      q.push({
	        i: 1,
	        x: d3_interpolateNumber(ta[0], tb[0])
	      }, {
	        i: 3,
	        x: d3_interpolateNumber(ta[1], tb[1])
	      });
	    } else if (tb[0] || tb[1]) {
	      s.push("translate(" + tb + ")");
	    } else {
	      s.push("");
	    }
	    if (ra != rb) {
	      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;
	      q.push({
	        i: s.push(s.pop() + "rotate(", null, ")") - 2,
	        x: d3_interpolateNumber(ra, rb)
	      });
	    } else if (rb) {
	      s.push(s.pop() + "rotate(" + rb + ")");
	    }
	    if (wa != wb) {
	      q.push({
	        i: s.push(s.pop() + "skewX(", null, ")") - 2,
	        x: d3_interpolateNumber(wa, wb)
	      });
	    } else if (wb) {
	      s.push(s.pop() + "skewX(" + wb + ")");
	    }
	    if (ka[0] != kb[0] || ka[1] != kb[1]) {
	      n = s.push(s.pop() + "scale(", null, ",", null, ")");
	      q.push({
	        i: n - 4,
	        x: d3_interpolateNumber(ka[0], kb[0])
	      }, {
	        i: n - 2,
	        x: d3_interpolateNumber(ka[1], kb[1])
	      });
	    } else if (kb[0] != 1 || kb[1] != 1) {
	      s.push(s.pop() + "scale(" + kb + ")");
	    }
	    n = q.length;
	    return function(t) {
	      var i = -1, o;
	      while (++i < n) s[(o = q[i]).i] = o.x(t);
	      return s.join("");
	    };
	  }
	  function d3_uninterpolateNumber(a, b) {
	    b = (b -= a = +a) || 1 / b;
	    return function(x) {
	      return (x - a) / b;
	    };
	  }
	  function d3_uninterpolateClamp(a, b) {
	    b = (b -= a = +a) || 1 / b;
	    return function(x) {
	      return Math.max(0, Math.min(1, (x - a) / b));
	    };
	  }
	  d3.layout = {};
	  d3.layout.bundle = function() {
	    return function(links) {
	      var paths = [], i = -1, n = links.length;
	      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));
	      return paths;
	    };
	  };
	  function d3_layout_bundlePath(link) {
	    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];
	    while (start !== lca) {
	      start = start.parent;
	      points.push(start);
	    }
	    var k = points.length;
	    while (end !== lca) {
	      points.splice(k, 0, end);
	      end = end.parent;
	    }
	    return points;
	  }
	  function d3_layout_bundleAncestors(node) {
	    var ancestors = [], parent = node.parent;
	    while (parent != null) {
	      ancestors.push(node);
	      node = parent;
	      parent = parent.parent;
	    }
	    ancestors.push(node);
	    return ancestors;
	  }
	  function d3_layout_bundleLeastCommonAncestor(a, b) {
	    if (a === b) return a;
	    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;
	    while (aNode === bNode) {
	      sharedNode = aNode;
	      aNode = aNodes.pop();
	      bNode = bNodes.pop();
	    }
	    return sharedNode;
	  }
	  d3.layout.chord = function() {
	    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;
	    function relayout() {
	      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;
	      chords = [];
	      groups = [];
	      k = 0, i = -1;
	      while (++i < n) {
	        x = 0, j = -1;
	        while (++j < n) {
	          x += matrix[i][j];
	        }
	        groupSums.push(x);
	        subgroupIndex.push(d3.range(n));
	        k += x;
	      }
	      if (sortGroups) {
	        groupIndex.sort(function(a, b) {
	          return sortGroups(groupSums[a], groupSums[b]);
	        });
	      }
	      if (sortSubgroups) {
	        subgroupIndex.forEach(function(d, i) {
	          d.sort(function(a, b) {
	            return sortSubgroups(matrix[i][a], matrix[i][b]);
	          });
	        });
	      }
	      k = (τ - padding * n) / k;
	      x = 0, i = -1;
	      while (++i < n) {
	        x0 = x, j = -1;
	        while (++j < n) {
	          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;
	          subgroups[di + "-" + dj] = {
	            index: di,
	            subindex: dj,
	            startAngle: a0,
	            endAngle: a1,
	            value: v
	          };
	        }
	        groups[di] = {
	          index: di,
	          startAngle: x0,
	          endAngle: x,
	          value: (x - x0) / k
	        };
	        x += padding;
	      }
	      i = -1;
	      while (++i < n) {
	        j = i - 1;
	        while (++j < n) {
	          var source = subgroups[i + "-" + j], target = subgroups[j + "-" + i];
	          if (source.value || target.value) {
	            chords.push(source.value < target.value ? {
	              source: target,
	              target: source
	            } : {
	              source: source,
	              target: target
	            });
	          }
	        }
	      }
	      if (sortChords) resort();
	    }
	    function resort() {
	      chords.sort(function(a, b) {
	        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);
	      });
	    }
	    chord.matrix = function(x) {
	      if (!arguments.length) return matrix;
	      n = (matrix = x) && matrix.length;
	      chords = groups = null;
	      return chord;
	    };
	    chord.padding = function(x) {
	      if (!arguments.length) return padding;
	      padding = x;
	      chords = groups = null;
	      return chord;
	    };
	    chord.sortGroups = function(x) {
	      if (!arguments.length) return sortGroups;
	      sortGroups = x;
	      chords = groups = null;
	      return chord;
	    };
	    chord.sortSubgroups = function(x) {
	      if (!arguments.length) return sortSubgroups;
	      sortSubgroups = x;
	      chords = null;
	      return chord;
	    };
	    chord.sortChords = function(x) {
	      if (!arguments.length) return sortChords;
	      sortChords = x;
	      if (chords) resort();
	      return chord;
	    };
	    chord.chords = function() {
	      if (!chords) relayout();
	      return chords;
	    };
	    chord.groups = function() {
	      if (!groups) relayout();
	      return groups;
	    };
	    return chord;
	  };
	  d3.layout.force = function() {
	    var force = {}, event = d3.dispatch("start", "tick", "end"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;
	    function repulse(node) {
	      return function(quad, x1, _, x2) {
	        if (quad.point !== node) {
	          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;
	          if (dw * dw / theta2 < dn) {
	            if (dn < chargeDistance2) {
	              var k = quad.charge / dn;
	              node.px -= dx * k;
	              node.py -= dy * k;
	            }
	            return true;
	          }
	          if (quad.point && dn && dn < chargeDistance2) {
	            var k = quad.pointCharge / dn;
	            node.px -= dx * k;
	            node.py -= dy * k;
	          }
	        }
	        return !quad.charge;
	      };
	    }
	    force.tick = function() {
	      if ((alpha *= .99) < .005) {
	        event.end({
	          type: "end",
	          alpha: alpha = 0
	        });
	        return true;
	      }
	      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;
	      for (i = 0; i < m; ++i) {
	        o = links[i];
	        s = o.source;
	        t = o.target;
	        x = t.x - s.x;
	        y = t.y - s.y;
	        if (l = x * x + y * y) {
	          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;
	          x *= l;
	          y *= l;
	          t.x -= x * (k = s.weight / (t.weight + s.weight));
	          t.y -= y * k;
	          s.x += x * (k = 1 - k);
	          s.y += y * k;
	        }
	      }
	      if (k = alpha * gravity) {
	        x = size[0] / 2;
	        y = size[1] / 2;
	        i = -1;
	        if (k) while (++i < n) {
	          o = nodes[i];
	          o.x += (x - o.x) * k;
	          o.y += (y - o.y) * k;
	        }
	      }
	      if (charge) {
	        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);
	        i = -1;
	        while (++i < n) {
	          if (!(o = nodes[i]).fixed) {
	            q.visit(repulse(o));
	          }
	        }
	      }
	      i = -1;
	      while (++i < n) {
	        o = nodes[i];
	        if (o.fixed) {
	          o.x = o.px;
	          o.y = o.py;
	        } else {
	          o.x -= (o.px - (o.px = o.x)) * friction;
	          o.y -= (o.py - (o.py = o.y)) * friction;
	        }
	      }
	      event.tick({
	        type: "tick",
	        alpha: alpha
	      });
	    };
	    force.nodes = function(x) {
	      if (!arguments.length) return nodes;
	      nodes = x;
	      return force;
	    };
	    force.links = function(x) {
	      if (!arguments.length) return links;
	      links = x;
	      return force;
	    };
	    force.size = function(x) {
	      if (!arguments.length) return size;
	      size = x;
	      return force;
	    };
	    force.linkDistance = function(x) {
	      if (!arguments.length) return linkDistance;
	      linkDistance = typeof x === "function" ? x : +x;
	      return force;
	    };
	    force.distance = force.linkDistance;
	    force.linkStrength = function(x) {
	      if (!arguments.length) return linkStrength;
	      linkStrength = typeof x === "function" ? x : +x;
	      return force;
	    };
	    force.friction = function(x) {
	      if (!arguments.length) return friction;
	      friction = +x;
	      return force;
	    };
	    force.charge = function(x) {
	      if (!arguments.length) return charge;
	      charge = typeof x === "function" ? x : +x;
	      return force;
	    };
	    force.chargeDistance = function(x) {
	      if (!arguments.length) return Math.sqrt(chargeDistance2);
	      chargeDistance2 = x * x;
	      return force;
	    };
	    force.gravity = function(x) {
	      if (!arguments.length) return gravity;
	      gravity = +x;
	      return force;
	    };
	    force.theta = function(x) {
	      if (!arguments.length) return Math.sqrt(theta2);
	      theta2 = x * x;
	      return force;
	    };
	    force.alpha = function(x) {
	      if (!arguments.length) return alpha;
	      x = +x;
	      if (alpha) {
	        if (x > 0) alpha = x; else alpha = 0;
	      } else if (x > 0) {
	        event.start({
	          type: "start",
	          alpha: alpha = x
	        });
	        d3.timer(force.tick);
	      }
	      return force;
	    };
	    force.start = function() {
	      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;
	      for (i = 0; i < n; ++i) {
	        (o = nodes[i]).index = i;
	        o.weight = 0;
	      }
	      for (i = 0; i < m; ++i) {
	        o = links[i];
	        if (typeof o.source == "number") o.source = nodes[o.source];
	        if (typeof o.target == "number") o.target = nodes[o.target];
	        ++o.source.weight;
	        ++o.target.weight;
	      }
	      for (i = 0; i < n; ++i) {
	        o = nodes[i];
	        if (isNaN(o.x)) o.x = position("x", w);
	        if (isNaN(o.y)) o.y = position("y", h);
	        if (isNaN(o.px)) o.px = o.x;
	        if (isNaN(o.py)) o.py = o.y;
	      }
	      distances = [];
	      if (typeof linkDistance === "function") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;
	      strengths = [];
	      if (typeof linkStrength === "function") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;
	      charges = [];
	      if (typeof charge === "function") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;
	      function position(dimension, size) {
	        if (!neighbors) {
	          neighbors = new Array(n);
	          for (j = 0; j < n; ++j) {
	            neighbors[j] = [];
	          }
	          for (j = 0; j < m; ++j) {
	            var o = links[j];
	            neighbors[o.source.index].push(o.target);
	            neighbors[o.target.index].push(o.source);
	          }
	        }
	        var candidates = neighbors[i], j = -1, m = candidates.length, x;
	        while (++j < m) if (!isNaN(x = candidates[j][dimension])) return x;
	        return Math.random() * size;
	      }
	      return force.resume();
	    };
	    force.resume = function() {
	      return force.alpha(.1);
	    };
	    force.stop = function() {
	      return force.alpha(0);
	    };
	    force.drag = function() {
	      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on("dragstart.force", d3_layout_forceDragstart).on("drag.force", dragmove).on("dragend.force", d3_layout_forceDragend);
	      if (!arguments.length) return drag;
	      this.on("mouseover.force", d3_layout_forceMouseover).on("mouseout.force", d3_layout_forceMouseout).call(drag);
	    };
	    function dragmove(d) {
	      d.px = d3.event.x, d.py = d3.event.y;
	      force.resume();
	    }
	    return d3.rebind(force, event, "on");
	  };
	  function d3_layout_forceDragstart(d) {
	    d.fixed |= 2;
	  }
	  function d3_layout_forceDragend(d) {
	    d.fixed &= ~6;
	  }
	  function d3_layout_forceMouseover(d) {
	    d.fixed |= 4;
	    d.px = d.x, d.py = d.y;
	  }
	  function d3_layout_forceMouseout(d) {
	    d.fixed &= ~4;
	  }
	  function d3_layout_forceAccumulate(quad, alpha, charges) {
	    var cx = 0, cy = 0;
	    quad.charge = 0;
	    if (!quad.leaf) {
	      var nodes = quad.nodes, n = nodes.length, i = -1, c;
	      while (++i < n) {
	        c = nodes[i];
	        if (c == null) continue;
	        d3_layout_forceAccumulate(c, alpha, charges);
	        quad.charge += c.charge;
	        cx += c.charge * c.cx;
	        cy += c.charge * c.cy;
	      }
	    }
	    if (quad.point) {
	      if (!quad.leaf) {
	        quad.point.x += Math.random() - .5;
	        quad.point.y += Math.random() - .5;
	      }
	      var k = alpha * charges[quad.point.index];
	      quad.charge += quad.pointCharge = k;
	      cx += k * quad.point.x;
	      cy += k * quad.point.y;
	    }
	    quad.cx = cx / quad.charge;
	    quad.cy = cy / quad.charge;
	  }
	  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;
	  d3.layout.hierarchy = function() {
	    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;
	    function hierarchy(root) {
	      var stack = [ root ], nodes = [], node;
	      root.depth = 0;
	      while ((node = stack.pop()) != null) {
	        nodes.push(node);
	        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {
	          var n, childs, child;
	          while (--n >= 0) {
	            stack.push(child = childs[n]);
	            child.parent = node;
	            child.depth = node.depth + 1;
	          }
	          if (value) node.value = 0;
	          node.children = childs;
	        } else {
	          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;
	          delete node.children;
	        }
	      }
	      d3_layout_hierarchyVisitAfter(root, function(node) {
	        var childs, parent;
	        if (sort && (childs = node.children)) childs.sort(sort);
	        if (value && (parent = node.parent)) parent.value += node.value;
	      });
	      return nodes;
	    }
	    hierarchy.sort = function(x) {
	      if (!arguments.length) return sort;
	      sort = x;
	      return hierarchy;
	    };
	    hierarchy.children = function(x) {
	      if (!arguments.length) return children;
	      children = x;
	      return hierarchy;
	    };
	    hierarchy.value = function(x) {
	      if (!arguments.length) return value;
	      value = x;
	      return hierarchy;
	    };
	    hierarchy.revalue = function(root) {
	      if (value) {
	        d3_layout_hierarchyVisitBefore(root, function(node) {
	          if (node.children) node.value = 0;
	        });
	        d3_layout_hierarchyVisitAfter(root, function(node) {
	          var parent;
	          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;
	          if (parent = node.parent) parent.value += node.value;
	        });
	      }
	      return root;
	    };
	    return hierarchy;
	  };
	  function d3_layout_hierarchyRebind(object, hierarchy) {
	    d3.rebind(object, hierarchy, "sort", "children", "value");
	    object.nodes = object;
	    object.links = d3_layout_hierarchyLinks;
	    return object;
	  }
	  function d3_layout_hierarchyVisitBefore(node, callback) {
	    var nodes = [ node ];
	    while ((node = nodes.pop()) != null) {
	      callback(node);
	      if ((children = node.children) && (n = children.length)) {
	        var n, children;
	        while (--n >= 0) nodes.push(children[n]);
	      }
	    }
	  }
	  function d3_layout_hierarchyVisitAfter(node, callback) {
	    var nodes = [ node ], nodes2 = [];
	    while ((node = nodes.pop()) != null) {
	      nodes2.push(node);
	      if ((children = node.children) && (n = children.length)) {
	        var i = -1, n, children;
	        while (++i < n) nodes.push(children[i]);
	      }
	    }
	    while ((node = nodes2.pop()) != null) {
	      callback(node);
	    }
	  }
	  function d3_layout_hierarchyChildren(d) {
	    return d.children;
	  }
	  function d3_layout_hierarchyValue(d) {
	    return d.value;
	  }
	  function d3_layout_hierarchySort(a, b) {
	    return b.value - a.value;
	  }
	  function d3_layout_hierarchyLinks(nodes) {
	    return d3.merge(nodes.map(function(parent) {
	      return (parent.children || []).map(function(child) {
	        return {
	          source: parent,
	          target: child
	        };
	      });
	    }));
	  }
	  d3.layout.partition = function() {
	    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];
	    function position(node, x, dx, dy) {
	      var children = node.children;
	      node.x = x;
	      node.y = node.depth * dy;
	      node.dx = dx;
	      node.dy = dy;
	      if (children && (n = children.length)) {
	        var i = -1, n, c, d;
	        dx = node.value ? dx / node.value : 0;
	        while (++i < n) {
	          position(c = children[i], x, d = c.value * dx, dy);
	          x += d;
	        }
	      }
	    }
	    function depth(node) {
	      var children = node.children, d = 0;
	      if (children && (n = children.length)) {
	        var i = -1, n;
	        while (++i < n) d = Math.max(d, depth(children[i]));
	      }
	      return 1 + d;
	    }
	    function partition(d, i) {
	      var nodes = hierarchy.call(this, d, i);
	      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));
	      return nodes;
	    }
	    partition.size = function(x) {
	      if (!arguments.length) return size;
	      size = x;
	      return partition;
	    };
	    return d3_layout_hierarchyRebind(partition, hierarchy);
	  };
	  d3.layout.pie = function() {
	    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ;
	    function pie(data) {
	      var values = data.map(function(d, i) {
	        return +value.call(pie, d, i);
	      });
	      var a = +(typeof startAngle === "function" ? startAngle.apply(this, arguments) : startAngle);
	      var k = ((typeof endAngle === "function" ? endAngle.apply(this, arguments) : endAngle) - a) / d3.sum(values);
	      var index = d3.range(data.length);
	      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {
	        return values[j] - values[i];
	      } : function(i, j) {
	        return sort(data[i], data[j]);
	      });
	      var arcs = [];
	      index.forEach(function(i) {
	        var d;
	        arcs[i] = {
	          data: data[i],
	          value: d = values[i],
	          startAngle: a,
	          endAngle: a += d * k
	        };
	      });
	      return arcs;
	    }
	    pie.value = function(x) {
	      if (!arguments.length) return value;
	      value = x;
	      return pie;
	    };
	    pie.sort = function(x) {
	      if (!arguments.length) return sort;
	      sort = x;
	      return pie;
	    };
	    pie.startAngle = function(x) {
	      if (!arguments.length) return startAngle;
	      startAngle = x;
	      return pie;
	    };
	    pie.endAngle = function(x) {
	      if (!arguments.length) return endAngle;
	      endAngle = x;
	      return pie;
	    };
	    return pie;
	  };
	  var d3_layout_pieSortByValue = {};
	  d3.layout.stack = function() {
	    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;
	    function stack(data, index) {
	      if (!(n = data.length)) return data;
	      var series = data.map(function(d, i) {
	        return values.call(stack, d, i);
	      });
	      var points = series.map(function(d) {
	        return d.map(function(v, i) {
	          return [ x.call(stack, v, i), y.call(stack, v, i) ];
	        });
	      });
	      var orders = order.call(stack, points, index);
	      series = d3.permute(series, orders);
	      points = d3.permute(points, orders);
	      var offsets = offset.call(stack, points, index);
	      var m = series[0].length, n, i, j, o;
	      for (j = 0; j < m; ++j) {
	        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);
	        for (i = 1; i < n; ++i) {
	          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);
	        }
	      }
	      return data;
	    }
	    stack.values = function(x) {
	      if (!arguments.length) return values;
	      values = x;
	      return stack;
	    };
	    stack.order = function(x) {
	      if (!arguments.length) return order;
	      order = typeof x === "function" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;
	      return stack;
	    };
	    stack.offset = function(x) {
	      if (!arguments.length) return offset;
	      offset = typeof x === "function" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;
	      return stack;
	    };
	    stack.x = function(z) {
	      if (!arguments.length) return x;
	      x = z;
	      return stack;
	    };
	    stack.y = function(z) {
	      if (!arguments.length) return y;
	      y = z;
	      return stack;
	    };
	    stack.out = function(z) {
	      if (!arguments.length) return out;
	      out = z;
	      return stack;
	    };
	    return stack;
	  };
	  function d3_layout_stackX(d) {
	    return d.x;
	  }
	  function d3_layout_stackY(d) {
	    return d.y;
	  }
	  function d3_layout_stackOut(d, y0, y) {
	    d.y0 = y0;
	    d.y = y;
	  }
	  var d3_layout_stackOrders = d3.map({
	    "inside-out": function(data) {
	      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {
	        return max[a] - max[b];
	      }), top = 0, bottom = 0, tops = [], bottoms = [];
	      for (i = 0; i < n; ++i) {
	        j = index[i];
	        if (top < bottom) {
	          top += sums[j];
	          tops.push(j);
	        } else {
	          bottom += sums[j];
	          bottoms.push(j);
	        }
	      }
	      return bottoms.reverse().concat(tops);
	    },
	    reverse: function(data) {
	      return d3.range(data.length).reverse();
	    },
	    "default": d3_layout_stackOrderDefault
	  });
	  var d3_layout_stackOffsets = d3.map({
	    silhouette: function(data) {
	      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];
	      for (j = 0; j < m; ++j) {
	        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
	        if (o > max) max = o;
	        sums.push(o);
	      }
	      for (j = 0; j < m; ++j) {
	        y0[j] = (max - sums[j]) / 2;
	      }
	      return y0;
	    },
	    wiggle: function(data) {
	      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];
	      y0[0] = o = o0 = 0;
	      for (j = 1; j < m; ++j) {
	        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];
	        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {
	          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {
	            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;
	          }
	          s2 += s3 * data[i][j][1];
	        }
	        y0[j] = o -= s1 ? s2 / s1 * dx : 0;
	        if (o < o0) o0 = o;
	      }
	      for (j = 0; j < m; ++j) y0[j] -= o0;
	      return y0;
	    },
	    expand: function(data) {
	      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];
	      for (j = 0; j < m; ++j) {
	        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
	        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;
	      }
	      for (j = 0; j < m; ++j) y0[j] = 0;
	      return y0;
	    },
	    zero: d3_layout_stackOffsetZero
	  });
	  function d3_layout_stackOrderDefault(data) {
	    return d3.range(data.length);
	  }
	  function d3_layout_stackOffsetZero(data) {
	    var j = -1, m = data[0].length, y0 = [];
	    while (++j < m) y0[j] = 0;
	    return y0;
	  }
	  function d3_layout_stackMaxIndex(array) {
	    var i = 1, j = 0, v = array[0][1], k, n = array.length;
	    for (;i < n; ++i) {
	      if ((k = array[i][1]) > v) {
	        j = i;
	        v = k;
	      }
	    }
	    return j;
	  }
	  function d3_layout_stackReduceSum(d) {
	    return d.reduce(d3_layout_stackSum, 0);
	  }
	  function d3_layout_stackSum(p, d) {
	    return p + d[1];
	  }
	  d3.layout.histogram = function() {
	    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;
	    function histogram(data, i) {
	      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;
	      while (++i < m) {
	        bin = bins[i] = [];
	        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);
	        bin.y = 0;
	      }
	      if (m > 0) {
	        i = -1;
	        while (++i < n) {
	          x = values[i];
	          if (x >= range[0] && x <= range[1]) {
	            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];
	            bin.y += k;
	            bin.push(data[i]);
	          }
	        }
	      }
	      return bins;
	    }
	    histogram.value = function(x) {
	      if (!arguments.length) return valuer;
	      valuer = x;
	      return histogram;
	    };
	    histogram.range = function(x) {
	      if (!arguments.length) return ranger;
	      ranger = d3_functor(x);
	      return histogram;
	    };
	    histogram.bins = function(x) {
	      if (!arguments.length) return binner;
	      binner = typeof x === "number" ? function(range) {
	        return d3_layout_histogramBinFixed(range, x);
	      } : d3_functor(x);
	      return histogram;
	    };
	    histogram.frequency = function(x) {
	      if (!arguments.length) return frequency;
	      frequency = !!x;
	      return histogram;
	    };
	    return histogram;
	  };
	  function d3_layout_histogramBinSturges(range, values) {
	    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));
	  }
	  function d3_layout_histogramBinFixed(range, n) {
	    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];
	    while (++x <= n) f[x] = m * x + b;
	    return f;
	  }
	  function d3_layout_histogramRange(values) {
	    return [ d3.min(values), d3.max(values) ];
	  }
	  d3.layout.pack = function() {
	    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;
	    function pack(d, i) {
	      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === "function" ? radius : function() {
	        return radius;
	      };
	      root.x = root.y = 0;
	      d3_layout_hierarchyVisitAfter(root, function(d) {
	        d.r = +r(d.value);
	      });
	      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
	      if (padding) {
	        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;
	        d3_layout_hierarchyVisitAfter(root, function(d) {
	          d.r += dr;
	        });
	        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
	        d3_layout_hierarchyVisitAfter(root, function(d) {
	          d.r -= dr;
	        });
	      }
	      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));
	      return nodes;
	    }
	    pack.size = function(_) {
	      if (!arguments.length) return size;
	      size = _;
	      return pack;
	    };
	    pack.radius = function(_) {
	      if (!arguments.length) return radius;
	      radius = _ == null || typeof _ === "function" ? _ : +_;
	      return pack;
	    };
	    pack.padding = function(_) {
	      if (!arguments.length) return padding;
	      padding = +_;
	      return pack;
	    };
	    return d3_layout_hierarchyRebind(pack, hierarchy);
	  };
	  function d3_layout_packSort(a, b) {
	    return a.value - b.value;
	  }
	  function d3_layout_packInsert(a, b) {
	    var c = a._pack_next;
	    a._pack_next = b;
	    b._pack_prev = a;
	    b._pack_next = c;
	    c._pack_prev = b;
	  }
	  function d3_layout_packSplice(a, b) {
	    a._pack_next = b;
	    b._pack_prev = a;
	  }
	  function d3_layout_packIntersects(a, b) {
	    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;
	    return .999 * dr * dr > dx * dx + dy * dy;
	  }
	  function d3_layout_packSiblings(node) {
	    if (!(nodes = node.children) || !(n = nodes.length)) return;
	    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;
	    function bound(node) {
	      xMin = Math.min(node.x - node.r, xMin);
	      xMax = Math.max(node.x + node.r, xMax);
	      yMin = Math.min(node.y - node.r, yMin);
	      yMax = Math.max(node.y + node.r, yMax);
	    }
	    nodes.forEach(d3_layout_packLink);
	    a = nodes[0];
	    a.x = -a.r;
	    a.y = 0;
	    bound(a);
	    if (n > 1) {
	      b = nodes[1];
	      b.x = b.r;
	      b.y = 0;
	      bound(b);
	      if (n > 2) {
	        c = nodes[2];
	        d3_layout_packPlace(a, b, c);
	        bound(c);
	        d3_layout_packInsert(a, c);
	        a._pack_prev = c;
	        d3_layout_packInsert(c, b);
	        b = a._pack_next;
	        for (i = 3; i < n; i++) {
	          d3_layout_packPlace(a, b, c = nodes[i]);
	          var isect = 0, s1 = 1, s2 = 1;
	          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {
	            if (d3_layout_packIntersects(j, c)) {
	              isect = 1;
	              break;
	            }
	          }
	          if (isect == 1) {
	            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {
	              if (d3_layout_packIntersects(k, c)) {
	                break;
	              }
	            }
	          }
	          if (isect) {
	            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);
	            i--;
	          } else {
	            d3_layout_packInsert(a, c);
	            b = c;
	            bound(c);
	          }
	        }
	      }
	    }
	    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;
	    for (i = 0; i < n; i++) {
	      c = nodes[i];
	      c.x -= cx;
	      c.y -= cy;
	      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));
	    }
	    node.r = cr;
	    nodes.forEach(d3_layout_packUnlink);
	  }
	  function d3_layout_packLink(node) {
	    node._pack_next = node._pack_prev = node;
	  }
	  function d3_layout_packUnlink(node) {
	    delete node._pack_next;
	    delete node._pack_prev;
	  }
	  function d3_layout_packTransform(node, x, y, k) {
	    var children = node.children;
	    node.x = x += k * node.x;
	    node.y = y += k * node.y;
	    node.r *= k;
	    if (children) {
	      var i = -1, n = children.length;
	      while (++i < n) d3_layout_packTransform(children[i], x, y, k);
	    }
	  }
	  function d3_layout_packPlace(a, b, c) {
	    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;
	    if (db && (dx || dy)) {
	      var da = b.r + c.r, dc = dx * dx + dy * dy;
	      da *= da;
	      db *= db;
	      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);
	      c.x = a.x + x * dx + y * dy;
	      c.y = a.y + x * dy - y * dx;
	    } else {
	      c.x = a.x + db;
	      c.y = a.y;
	    }
	  }
	  d3.layout.tree = function() {
	    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;
	    function tree(d, i) {
	      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);
	      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;
	      d3_layout_hierarchyVisitBefore(root1, secondWalk);
	      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {
	        var left = root0, right = root0, bottom = root0;
	        d3_layout_hierarchyVisitBefore(root0, function(node) {
	          if (node.x < left.x) left = node;
	          if (node.x > right.x) right = node;
	          if (node.depth > bottom.depth) bottom = node;
	        });
	        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);
	        d3_layout_hierarchyVisitBefore(root0, function(node) {
	          node.x = (node.x + tx) * kx;
	          node.y = node.depth * ky;
	        });
	      }
	      return nodes;
	    }
	    function wrapTree(root0) {
	      var root1 = {
	        A: null,
	        children: [ root0 ]
	      }, queue = [ root1 ], node1;
	      while ((node1 = queue.pop()) != null) {
	        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {
	          queue.push((children[i] = child = {
	            _: children[i],
	            parent: node1,
	            children: (child = children[i].children) && child.slice() || [],
	            A: null,
	            a: null,
	            z: 0,
	            m: 0,
	            c: 0,
	            s: 0,
	            t: null,
	            i: i
	          }).a = child);
	        }
	      }
	      return root1.children[0];
	    }
	    function firstWalk(v) {
	      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;
	      if (children.length) {
	        d3_layout_treeShift(v);
	        var midpoint = (children[0].z + children[children.length - 1].z) / 2;
	        if (w) {
	          v.z = w.z + separation(v._, w._);
	          v.m = v.z - midpoint;
	        } else {
	          v.z = midpoint;
	        }
	      } else if (w) {
	        v.z = w.z + separation(v._, w._);
	      }
	      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
	    }
	    function secondWalk(v) {
	      v._.x = v.z + v.parent.m;
	      v.m += v.parent.m;
	    }
	    function apportion(v, w, ancestor) {
	      if (w) {
	        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;
	        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {
	          vom = d3_layout_treeLeft(vom);
	          vop = d3_layout_treeRight(vop);
	          vop.a = v;
	          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
	          if (shift > 0) {
	            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);
	            sip += shift;
	            sop += shift;
	          }
	          sim += vim.m;
	          sip += vip.m;
	          som += vom.m;
	          sop += vop.m;
	        }
	        if (vim && !d3_layout_treeRight(vop)) {
	          vop.t = vim;
	          vop.m += sim - sop;
	        }
	        if (vip && !d3_layout_treeLeft(vom)) {
	          vom.t = vip;
	          vom.m += sip - som;
	          ancestor = v;
	        }
	      }
	      return ancestor;
	    }
	    function sizeNode(node) {
	      node.x *= size[0];
	      node.y = node.depth * size[1];
	    }
	    tree.separation = function(x) {
	      if (!arguments.length) return separation;
	      separation = x;
	      return tree;
	    };
	    tree.size = function(x) {
	      if (!arguments.length) return nodeSize ? null : size;
	      nodeSize = (size = x) == null ? sizeNode : null;
	      return tree;
	    };
	    tree.nodeSize = function(x) {
	      if (!arguments.length) return nodeSize ? size : null;
	      nodeSize = (size = x) == null ? null : sizeNode;
	      return tree;
	    };
	    return d3_layout_hierarchyRebind(tree, hierarchy);
	  };
	  function d3_layout_treeSeparation(a, b) {
	    return a.parent == b.parent ? 1 : 2;
	  }
	  function d3_layout_treeLeft(v) {
	    var children = v.children;
	    return children.length ? children[0] : v.t;
	  }
	  function d3_layout_treeRight(v) {
	    var children = v.children, n;
	    return (n = children.length) ? children[n - 1] : v.t;
	  }
	  function d3_layout_treeMove(wm, wp, shift) {
	    var change = shift / (wp.i - wm.i);
	    wp.c -= change;
	    wp.s += shift;
	    wm.c += change;
	    wp.z += shift;
	    wp.m += shift;
	  }
	  function d3_layout_treeShift(v) {
	    var shift = 0, change = 0, children = v.children, i = children.length, w;
	    while (--i >= 0) {
	      w = children[i];
	      w.z += shift;
	      w.m += shift;
	      shift += w.s + (change += w.c);
	    }
	  }
	  function d3_layout_treeAncestor(vim, v, ancestor) {
	    return vim.a.parent === v.parent ? vim.a : ancestor;
	  }
	  d3.layout.cluster = function() {
	    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;
	    function cluster(d, i) {
	      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;
	      d3_layout_hierarchyVisitAfter(root, function(node) {
	        var children = node.children;
	        if (children && children.length) {
	          node.x = d3_layout_clusterX(children);
	          node.y = d3_layout_clusterY(children);
	        } else {
	          node.x = previousNode ? x += separation(node, previousNode) : 0;
	          node.y = 0;
	          previousNode = node;
	        }
	      });
	      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;
	      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {
	        node.x = (node.x - root.x) * size[0];
	        node.y = (root.y - node.y) * size[1];
	      } : function(node) {
	        node.x = (node.x - x0) / (x1 - x0) * size[0];
	        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];
	      });
	      return nodes;
	    }
	    cluster.separation = function(x) {
	      if (!arguments.length) return separation;
	      separation = x;
	      return cluster;
	    };
	    cluster.size = function(x) {
	      if (!arguments.length) return nodeSize ? null : size;
	      nodeSize = (size = x) == null;
	      return cluster;
	    };
	    cluster.nodeSize = function(x) {
	      if (!arguments.length) return nodeSize ? size : null;
	      nodeSize = (size = x) != null;
	      return cluster;
	    };
	    return d3_layout_hierarchyRebind(cluster, hierarchy);
	  };
	  function d3_layout_clusterY(children) {
	    return 1 + d3.max(children, function(child) {
	      return child.y;
	    });
	  }
	  function d3_layout_clusterX(children) {
	    return children.reduce(function(x, child) {
	      return x + child.x;
	    }, 0) / children.length;
	  }
	  function d3_layout_clusterLeft(node) {
	    var children = node.children;
	    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;
	  }
	  function d3_layout_clusterRight(node) {
	    var children = node.children, n;
	    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;
	  }
	  d3.layout.treemap = function() {
	    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = "squarify", ratio = .5 * (1 + Math.sqrt(5));
	    function scale(children, k) {
	      var i = -1, n = children.length, child, area;
	      while (++i < n) {
	        area = (child = children[i]).value * (k < 0 ? 0 : k);
	        child.area = isNaN(area) || area <= 0 ? 0 : area;
	      }
	    }
	    function squarify(node) {
	      var children = node.children;
	      if (children && children.length) {
	        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === "slice" ? rect.dx : mode === "dice" ? rect.dy : mode === "slice-dice" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;
	        scale(remaining, rect.dx * rect.dy / node.value);
	        row.area = 0;
	        while ((n = remaining.length) > 0) {
	          row.push(child = remaining[n - 1]);
	          row.area += child.area;
	          if (mode !== "squarify" || (score = worst(row, u)) <= best) {
	            remaining.pop();
	            best = score;
	          } else {
	            row.area -= row.pop().area;
	            position(row, u, rect, false);
	            u = Math.min(rect.dx, rect.dy);
	            row.length = row.area = 0;
	            best = Infinity;
	          }
	        }
	        if (row.length) {
	          position(row, u, rect, true);
	          row.length = row.area = 0;
	        }
	        children.forEach(squarify);
	      }
	    }
	    function stickify(node) {
	      var children = node.children;
	      if (children && children.length) {
	        var rect = pad(node), remaining = children.slice(), child, row = [];
	        scale(remaining, rect.dx * rect.dy / node.value);
	        row.area = 0;
	        while (child = remaining.pop()) {
	          row.push(child);
	          row.area += child.area;
	          if (child.z != null) {
	            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);
	            row.length = row.area = 0;
	          }
	        }
	        children.forEach(stickify);
	      }
	    }
	    function worst(row, u) {
	      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;
	      while (++i < n) {
	        if (!(r = row[i].area)) continue;
	        if (r < rmin) rmin = r;
	        if (r > rmax) rmax = r;
	      }
	      s *= s;
	      u *= u;
	      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;
	    }
	    function position(row, u, rect, flush) {
	      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;
	      if (u == rect.dx) {
	        if (flush || v > rect.dy) v = rect.dy;
	        while (++i < n) {
	          o = row[i];
	          o.x = x;
	          o.y = y;
	          o.dy = v;
	          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);
	        }
	        o.z = true;
	        o.dx += rect.x + rect.dx - x;
	        rect.y += v;
	        rect.dy -= v;
	      } else {
	        if (flush || v > rect.dx) v = rect.dx;
	        while (++i < n) {
	          o = row[i];
	          o.x = x;
	          o.y = y;
	          o.dx = v;
	          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);
	        }
	        o.z = false;
	        o.dy += rect.y + rect.dy - y;
	        rect.x += v;
	        rect.dx -= v;
	      }
	    }
	    function treemap(d) {
	      var nodes = stickies || hierarchy(d), root = nodes[0];
	      root.x = 0;
	      root.y = 0;
	      root.dx = size[0];
	      root.dy = size[1];
	      if (stickies) hierarchy.revalue(root);
	      scale([ root ], root.dx * root.dy / root.value);
	      (stickies ? stickify : squarify)(root);
	      if (sticky) stickies = nodes;
	      return nodes;
	    }
	    treemap.size = function(x) {
	      if (!arguments.length) return size;
	      size = x;
	      return treemap;
	    };
	    treemap.padding = function(x) {
	      if (!arguments.length) return padding;
	      function padFunction(node) {
	        var p = x.call(treemap, node, node.depth);
	        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === "number" ? [ p, p, p, p ] : p);
	      }
	      function padConstant(node) {
	        return d3_layout_treemapPad(node, x);
	      }
	      var type;
	      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === "function" ? padFunction : type === "number" ? (x = [ x, x, x, x ], 
	      padConstant) : padConstant;
	      return treemap;
	    };
	    treemap.round = function(x) {
	      if (!arguments.length) return round != Number;
	      round = x ? Math.round : Number;
	      return treemap;
	    };
	    treemap.sticky = function(x) {
	      if (!arguments.length) return sticky;
	      sticky = x;
	      stickies = null;
	      return treemap;
	    };
	    treemap.ratio = function(x) {
	      if (!arguments.length) return ratio;
	      ratio = x;
	      return treemap;
	    };
	    treemap.mode = function(x) {
	      if (!arguments.length) return mode;
	      mode = x + "";
	      return treemap;
	    };
	    return d3_layout_hierarchyRebind(treemap, hierarchy);
	  };
	  function d3_layout_treemapPadNull(node) {
	    return {
	      x: node.x,
	      y: node.y,
	      dx: node.dx,
	      dy: node.dy
	    };
	  }
	  function d3_layout_treemapPad(node, padding) {
	    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];
	    if (dx < 0) {
	      x += dx / 2;
	      dx = 0;
	    }
	    if (dy < 0) {
	      y += dy / 2;
	      dy = 0;
	    }
	    return {
	      x: x,
	      y: y,
	      dx: dx,
	      dy: dy
	    };
	  }
	  d3.random = {
	    normal: function(µ, σ) {
	      var n = arguments.length;
	      if (n < 2) σ = 1;
	      if (n < 1) µ = 0;
	      return function() {
	        var x, y, r;
	        do {
	          x = Math.random() * 2 - 1;
	          y = Math.random() * 2 - 1;
	          r = x * x + y * y;
	        } while (!r || r > 1);
	        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);
	      };
	    },
	    logNormal: function() {
	      var random = d3.random.normal.apply(d3, arguments);
	      return function() {
	        return Math.exp(random());
	      };
	    },
	    bates: function(m) {
	      var random = d3.random.irwinHall(m);
	      return function() {
	        return random() / m;
	      };
	    },
	    irwinHall: function(m) {
	      return function() {
	        for (var s = 0, j = 0; j < m; j++) s += Math.random();
	        return s;
	      };
	    }
	  };
	  d3.scale = {};
	  function d3_scaleExtent(domain) {
	    var start = domain[0], stop = domain[domain.length - 1];
	    return start < stop ? [ start, stop ] : [ stop, start ];
	  }
	  function d3_scaleRange(scale) {
	    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());
	  }
	  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {
	    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);
	    return function(x) {
	      return i(u(x));
	    };
	  }
	  function d3_scale_nice(domain, nice) {
	    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;
	    if (x1 < x0) {
	      dx = i0, i0 = i1, i1 = dx;
	      dx = x0, x0 = x1, x1 = dx;
	    }
	    domain[i0] = nice.floor(x0);
	    domain[i1] = nice.ceil(x1);
	    return domain;
	  }
	  function d3_scale_niceStep(step) {
	    return step ? {
	      floor: function(x) {
	        return Math.floor(x / step) * step;
	      },
	      ceil: function(x) {
	        return Math.ceil(x / step) * step;
	      }
	    } : d3_scale_niceIdentity;
	  }
	  var d3_scale_niceIdentity = {
	    floor: d3_identity,
	    ceil: d3_identity
	  };
	  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {
	    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;
	    if (domain[k] < domain[0]) {
	      domain = domain.slice().reverse();
	      range = range.slice().reverse();
	    }
	    while (++j <= k) {
	      u.push(uninterpolate(domain[j - 1], domain[j]));
	      i.push(interpolate(range[j - 1], range[j]));
	    }
	    return function(x) {
	      var j = d3.bisect(domain, x, 1, k) - 1;
	      return i[j](u[j](x));
	    };
	  }
	  d3.scale.linear = function() {
	    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);
	  };
	  function d3_scale_linear(domain, range, interpolate, clamp) {
	    var output, input;
	    function rescale() {
	      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;
	      output = linear(domain, range, uninterpolate, interpolate);
	      input = linear(range, domain, uninterpolate, d3_interpolate);
	      return scale;
	    }
	    function scale(x) {
	      return output(x);
	    }
	    scale.invert = function(y) {
	      return input(y);
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      domain = x.map(Number);
	      return rescale();
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      return rescale();
	    };
	    scale.rangeRound = function(x) {
	      return scale.range(x).interpolate(d3_interpolateRound);
	    };
	    scale.clamp = function(x) {
	      if (!arguments.length) return clamp;
	      clamp = x;
	      return rescale();
	    };
	    scale.interpolate = function(x) {
	      if (!arguments.length) return interpolate;
	      interpolate = x;
	      return rescale();
	    };
	    scale.ticks = function(m) {
	      return d3_scale_linearTicks(domain, m);
	    };
	    scale.tickFormat = function(m, format) {
	      return d3_scale_linearTickFormat(domain, m, format);
	    };
	    scale.nice = function(m) {
	      d3_scale_linearNice(domain, m);
	      return rescale();
	    };
	    scale.copy = function() {
	      return d3_scale_linear(domain, range, interpolate, clamp);
	    };
	    return rescale();
	  }
	  function d3_scale_linearRebind(scale, linear) {
	    return d3.rebind(scale, linear, "range", "rangeRound", "interpolate", "clamp");
	  }
	  function d3_scale_linearNice(domain, m) {
	    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
	  }
	  function d3_scale_linearTickRange(domain, m) {
	    if (m == null) m = 10;
	    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;
	    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;
	    extent[0] = Math.ceil(extent[0] / step) * step;
	    extent[1] = Math.floor(extent[1] / step) * step + step * .5;
	    extent[2] = step;
	    return extent;
	  }
	  function d3_scale_linearTicks(domain, m) {
	    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));
	  }
	  function d3_scale_linearTickFormat(domain, m, format) {
	    var range = d3_scale_linearTickRange(domain, m);
	    if (format) {
	      var match = d3_format_re.exec(format);
	      match.shift();
	      if (match[8] === "s") {
	        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));
	        if (!match[7]) match[7] = "." + d3_scale_linearPrecision(prefix.scale(range[2]));
	        match[8] = "f";
	        format = d3.format(match.join(""));
	        return function(d) {
	          return format(prefix.scale(d)) + prefix.symbol;
	        };
	      }
	      if (!match[7]) match[7] = "." + d3_scale_linearFormatPrecision(match[8], range);
	      format = match.join("");
	    } else {
	      format = ",." + d3_scale_linearPrecision(range[2]) + "f";
	    }
	    return d3.format(format);
	  }
	  var d3_scale_linearFormatSignificant = {
	    s: 1,
	    g: 1,
	    p: 1,
	    r: 1,
	    e: 1
	  };
	  function d3_scale_linearPrecision(value) {
	    return -Math.floor(Math.log(value) / Math.LN10 + .01);
	  }
	  function d3_scale_linearFormatPrecision(type, range) {
	    var p = d3_scale_linearPrecision(range[2]);
	    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== "e") : p - (type === "%") * 2;
	  }
	  d3.scale.log = function() {
	    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);
	  };
	  function d3_scale_log(linear, base, positive, domain) {
	    function log(x) {
	      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);
	    }
	    function pow(x) {
	      return positive ? Math.pow(base, x) : -Math.pow(base, -x);
	    }
	    function scale(x) {
	      return linear(log(x));
	    }
	    scale.invert = function(x) {
	      return pow(linear.invert(x));
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      positive = x[0] >= 0;
	      linear.domain((domain = x.map(Number)).map(log));
	      return scale;
	    };
	    scale.base = function(_) {
	      if (!arguments.length) return base;
	      base = +_;
	      linear.domain(domain.map(log));
	      return scale;
	    };
	    scale.nice = function() {
	      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);
	      linear.domain(niced);
	      domain = niced.map(pow);
	      return scale;
	    };
	    scale.ticks = function() {
	      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;
	      if (isFinite(j - i)) {
	        if (positive) {
	          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);
	          ticks.push(pow(i));
	        } else {
	          ticks.push(pow(i));
	          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);
	        }
	        for (i = 0; ticks[i] < u; i++) {}
	        for (j = ticks.length; ticks[j - 1] > v; j--) {}
	        ticks = ticks.slice(i, j);
	      }
	      return ticks;
	    };
	    scale.tickFormat = function(n, format) {
	      if (!arguments.length) return d3_scale_logFormat;
	      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== "function") format = d3.format(format);
	      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, 
	      Math.floor), e;
	      return function(d) {
	        return d / pow(f(log(d) + e)) <= k ? format(d) : "";
	      };
	    };
	    scale.copy = function() {
	      return d3_scale_log(linear.copy(), base, positive, domain);
	    };
	    return d3_scale_linearRebind(scale, linear);
	  }
	  var d3_scale_logFormat = d3.format(".0e"), d3_scale_logNiceNegative = {
	    floor: function(x) {
	      return -Math.ceil(-x);
	    },
	    ceil: function(x) {
	      return -Math.floor(-x);
	    }
	  };
	  d3.scale.pow = function() {
	    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);
	  };
	  function d3_scale_pow(linear, exponent, domain) {
	    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);
	    function scale(x) {
	      return linear(powp(x));
	    }
	    scale.invert = function(x) {
	      return powb(linear.invert(x));
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      linear.domain((domain = x.map(Number)).map(powp));
	      return scale;
	    };
	    scale.ticks = function(m) {
	      return d3_scale_linearTicks(domain, m);
	    };
	    scale.tickFormat = function(m, format) {
	      return d3_scale_linearTickFormat(domain, m, format);
	    };
	    scale.nice = function(m) {
	      return scale.domain(d3_scale_linearNice(domain, m));
	    };
	    scale.exponent = function(x) {
	      if (!arguments.length) return exponent;
	      powp = d3_scale_powPow(exponent = x);
	      powb = d3_scale_powPow(1 / exponent);
	      linear.domain(domain.map(powp));
	      return scale;
	    };
	    scale.copy = function() {
	      return d3_scale_pow(linear.copy(), exponent, domain);
	    };
	    return d3_scale_linearRebind(scale, linear);
	  }
	  function d3_scale_powPow(e) {
	    return function(x) {
	      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);
	    };
	  }
	  d3.scale.sqrt = function() {
	    return d3.scale.pow().exponent(.5);
	  };
	  d3.scale.ordinal = function() {
	    return d3_scale_ordinal([], {
	      t: "range",
	      a: [ [] ]
	    });
	  };
	  function d3_scale_ordinal(domain, ranger) {
	    var index, range, rangeBand;
	    function scale(x) {
	      return range[((index.get(x) || (ranger.t === "range" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];
	    }
	    function steps(start, step) {
	      return d3.range(domain.length).map(function(i) {
	        return start + step * i;
	      });
	    }
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      domain = [];
	      index = new d3_Map();
	      var i = -1, n = x.length, xi;
	      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));
	      return scale[ranger.t].apply(scale, ranger.a);
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      rangeBand = 0;
	      ranger = {
	        t: "range",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangePoints = function(x, padding) {
	      if (arguments.length < 2) padding = 0;
	      var start = x[0], stop = x[1], step = (stop - start) / (Math.max(1, domain.length - 1) + padding);
	      range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);
	      rangeBand = 0;
	      ranger = {
	        t: "rangePoints",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeBands = function(x, padding, outerPadding) {
	      if (arguments.length < 2) padding = 0;
	      if (arguments.length < 3) outerPadding = padding;
	      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);
	      range = steps(start + step * outerPadding, step);
	      if (reverse) range.reverse();
	      rangeBand = step * (1 - padding);
	      ranger = {
	        t: "rangeBands",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeRoundBands = function(x, padding, outerPadding) {
	      if (arguments.length < 2) padding = 0;
	      if (arguments.length < 3) outerPadding = padding;
	      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)), error = stop - start - (domain.length - padding) * step;
	      range = steps(start + Math.round(error / 2), step);
	      if (reverse) range.reverse();
	      rangeBand = Math.round(step * (1 - padding));
	      ranger = {
	        t: "rangeRoundBands",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeBand = function() {
	      return rangeBand;
	    };
	    scale.rangeExtent = function() {
	      return d3_scaleExtent(ranger.a[0]);
	    };
	    scale.copy = function() {
	      return d3_scale_ordinal(domain, ranger);
	    };
	    return scale.domain(domain);
	  }
	  d3.scale.category10 = function() {
	    return d3.scale.ordinal().range(d3_category10);
	  };
	  d3.scale.category20 = function() {
	    return d3.scale.ordinal().range(d3_category20);
	  };
	  d3.scale.category20b = function() {
	    return d3.scale.ordinal().range(d3_category20b);
	  };
	  d3.scale.category20c = function() {
	    return d3.scale.ordinal().range(d3_category20c);
	  };
	  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);
	  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);
	  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);
	  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);
	  d3.scale.quantile = function() {
	    return d3_scale_quantile([], []);
	  };
	  function d3_scale_quantile(domain, range) {
	    var thresholds;
	    function rescale() {
	      var k = 0, q = range.length;
	      thresholds = [];
	      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);
	      return scale;
	    }
	    function scale(x) {
	      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];
	    }
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);
	      return rescale();
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      return rescale();
	    };
	    scale.quantiles = function() {
	      return thresholds;
	    };
	    scale.invertExtent = function(y) {
	      y = range.indexOf(y);
	      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];
	    };
	    scale.copy = function() {
	      return d3_scale_quantile(domain, range);
	    };
	    return rescale();
	  }
	  d3.scale.quantize = function() {
	    return d3_scale_quantize(0, 1, [ 0, 1 ]);
	  };
	  function d3_scale_quantize(x0, x1, range) {
	    var kx, i;
	    function scale(x) {
	      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];
	    }
	    function rescale() {
	      kx = range.length / (x1 - x0);
	      i = range.length - 1;
	      return scale;
	    }
	    scale.domain = function(x) {
	      if (!arguments.length) return [ x0, x1 ];
	      x0 = +x[0];
	      x1 = +x[x.length - 1];
	      return rescale();
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      return rescale();
	    };
	    scale.invertExtent = function(y) {
	      y = range.indexOf(y);
	      y = y < 0 ? NaN : y / kx + x0;
	      return [ y, y + 1 / kx ];
	    };
	    scale.copy = function() {
	      return d3_scale_quantize(x0, x1, range);
	    };
	    return rescale();
	  }
	  d3.scale.threshold = function() {
	    return d3_scale_threshold([ .5 ], [ 0, 1 ]);
	  };
	  function d3_scale_threshold(domain, range) {
	    function scale(x) {
	      if (x <= x) return range[d3.bisect(domain, x)];
	    }
	    scale.domain = function(_) {
	      if (!arguments.length) return domain;
	      domain = _;
	      return scale;
	    };
	    scale.range = function(_) {
	      if (!arguments.length) return range;
	      range = _;
	      return scale;
	    };
	    scale.invertExtent = function(y) {
	      y = range.indexOf(y);
	      return [ domain[y - 1], domain[y] ];
	    };
	    scale.copy = function() {
	      return d3_scale_threshold(domain, range);
	    };
	    return scale;
	  }
	  d3.scale.identity = function() {
	    return d3_scale_identity([ 0, 1 ]);
	  };
	  function d3_scale_identity(domain) {
	    function identity(x) {
	      return +x;
	    }
	    identity.invert = identity;
	    identity.domain = identity.range = function(x) {
	      if (!arguments.length) return domain;
	      domain = x.map(identity);
	      return identity;
	    };
	    identity.ticks = function(m) {
	      return d3_scale_linearTicks(domain, m);
	    };
	    identity.tickFormat = function(m, format) {
	      return d3_scale_linearTickFormat(domain, m, format);
	    };
	    identity.copy = function() {
	      return d3_scale_identity(domain);
	    };
	    return identity;
	  }
	  d3.svg = {};
	  d3.svg.arc = function() {
	    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;
	    function arc() {
	      var r0 = innerRadius.apply(this, arguments), r1 = outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset, a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset, da = (a1 < a0 && (da = a0, 
	      a0 = a1, a1 = da), a1 - a0), df = da < π ? "0" : "1", c0 = Math.cos(a0), s0 = Math.sin(a0), c1 = Math.cos(a1), s1 = Math.sin(a1);
	      return da >= d3_svg_arcMax ? r0 ? "M0," + r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + -r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + r1 + "M0," + r0 + "A" + r0 + "," + r0 + " 0 1,0 0," + -r0 + "A" + r0 + "," + r0 + " 0 1,0 0," + r0 + "Z" : "M0," + r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + -r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + r1 + "Z" : r0 ? "M" + r1 * c0 + "," + r1 * s0 + "A" + r1 + "," + r1 + " 0 " + df + ",1 " + r1 * c1 + "," + r1 * s1 + "L" + r0 * c1 + "," + r0 * s1 + "A" + r0 + "," + r0 + " 0 " + df + ",0 " + r0 * c0 + "," + r0 * s0 + "Z" : "M" + r1 * c0 + "," + r1 * s0 + "A" + r1 + "," + r1 + " 0 " + df + ",1 " + r1 * c1 + "," + r1 * s1 + "L0,0" + "Z";
	    }
	    arc.innerRadius = function(v) {
	      if (!arguments.length) return innerRadius;
	      innerRadius = d3_functor(v);
	      return arc;
	    };
	    arc.outerRadius = function(v) {
	      if (!arguments.length) return outerRadius;
	      outerRadius = d3_functor(v);
	      return arc;
	    };
	    arc.startAngle = function(v) {
	      if (!arguments.length) return startAngle;
	      startAngle = d3_functor(v);
	      return arc;
	    };
	    arc.endAngle = function(v) {
	      if (!arguments.length) return endAngle;
	      endAngle = d3_functor(v);
	      return arc;
	    };
	    arc.centroid = function() {
	      var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2, a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;
	      return [ Math.cos(a) * r, Math.sin(a) * r ];
	    };
	    return arc;
	  };
	  var d3_svg_arcOffset = -halfπ, d3_svg_arcMax = τ - ε;
	  function d3_svg_arcInnerRadius(d) {
	    return d.innerRadius;
	  }
	  function d3_svg_arcOuterRadius(d) {
	    return d.outerRadius;
	  }
	  function d3_svg_arcStartAngle(d) {
	    return d.startAngle;
	  }
	  function d3_svg_arcEndAngle(d) {
	    return d.endAngle;
	  }
	  function d3_svg_line(projection) {
	    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;
	    function line(data) {
	      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);
	      function segment() {
	        segments.push("M", interpolate(projection(points), tension));
	      }
	      while (++i < n) {
	        if (defined.call(this, d = data[i], i)) {
	          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);
	        } else if (points.length) {
	          segment();
	          points = [];
	        }
	      }
	      if (points.length) segment();
	      return segments.length ? segments.join("") : null;
	    }
	    line.x = function(_) {
	      if (!arguments.length) return x;
	      x = _;
	      return line;
	    };
	    line.y = function(_) {
	      if (!arguments.length) return y;
	      y = _;
	      return line;
	    };
	    line.defined = function(_) {
	      if (!arguments.length) return defined;
	      defined = _;
	      return line;
	    };
	    line.interpolate = function(_) {
	      if (!arguments.length) return interpolateKey;
	      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
	      return line;
	    };
	    line.tension = function(_) {
	      if (!arguments.length) return tension;
	      tension = _;
	      return line;
	    };
	    return line;
	  }
	  d3.svg.line = function() {
	    return d3_svg_line(d3_identity);
	  };
	  var d3_svg_lineInterpolators = d3.map({
	    linear: d3_svg_lineLinear,
	    "linear-closed": d3_svg_lineLinearClosed,
	    step: d3_svg_lineStep,
	    "step-before": d3_svg_lineStepBefore,
	    "step-after": d3_svg_lineStepAfter,
	    basis: d3_svg_lineBasis,
	    "basis-open": d3_svg_lineBasisOpen,
	    "basis-closed": d3_svg_lineBasisClosed,
	    bundle: d3_svg_lineBundle,
	    cardinal: d3_svg_lineCardinal,
	    "cardinal-open": d3_svg_lineCardinalOpen,
	    "cardinal-closed": d3_svg_lineCardinalClosed,
	    monotone: d3_svg_lineMonotone
	  });
	  d3_svg_lineInterpolators.forEach(function(key, value) {
	    value.key = key;
	    value.closed = /-closed$/.test(key);
	  });
	  function d3_svg_lineLinear(points) {
	    return points.join("L");
	  }
	  function d3_svg_lineLinearClosed(points) {
	    return d3_svg_lineLinear(points) + "Z";
	  }
	  function d3_svg_lineStep(points) {
	    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
	    while (++i < n) path.push("H", (p[0] + (p = points[i])[0]) / 2, "V", p[1]);
	    if (n > 1) path.push("H", p[0]);
	    return path.join("");
	  }
	  function d3_svg_lineStepBefore(points) {
	    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
	    while (++i < n) path.push("V", (p = points[i])[1], "H", p[0]);
	    return path.join("");
	  }
	  function d3_svg_lineStepAfter(points) {
	    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
	    while (++i < n) path.push("H", (p = points[i])[0], "V", p[1]);
	    return path.join("");
	  }
	  function d3_svg_lineCardinalOpen(points, tension) {
	    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));
	  }
	  function d3_svg_lineCardinalClosed(points, tension) {
	    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), 
	    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));
	  }
	  function d3_svg_lineCardinal(points, tension) {
	    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));
	  }
	  function d3_svg_lineHermite(points, tangents) {
	    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {
	      return d3_svg_lineLinear(points);
	    }
	    var quad = points.length != tangents.length, path = "", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;
	    if (quad) {
	      path += "Q" + (p[0] - t0[0] * 2 / 3) + "," + (p[1] - t0[1] * 2 / 3) + "," + p[0] + "," + p[1];
	      p0 = points[1];
	      pi = 2;
	    }
	    if (tangents.length > 1) {
	      t = tangents[1];
	      p = points[pi];
	      pi++;
	      path += "C" + (p0[0] + t0[0]) + "," + (p0[1] + t0[1]) + "," + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
	      for (var i = 2; i < tangents.length; i++, pi++) {
	        p = points[pi];
	        t = tangents[i];
	        path += "S" + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
	      }
	    }
	    if (quad) {
	      var lp = points[pi];
	      path += "Q" + (p[0] + t[0] * 2 / 3) + "," + (p[1] + t[1] * 2 / 3) + "," + lp[0] + "," + lp[1];
	    }
	    return path;
	  }
	  function d3_svg_lineCardinalTangents(points, tension) {
	    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;
	    while (++i < n) {
	      p0 = p1;
	      p1 = p2;
	      p2 = points[i];
	      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);
	    }
	    return tangents;
	  }
	  function d3_svg_lineBasis(points) {
	    if (points.length < 3) return d3_svg_lineLinear(points);
	    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, ",", y0, "L", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
	    points.push(points[n - 1]);
	    while (++i <= n) {
	      pi = points[i];
	      px.shift();
	      px.push(pi[0]);
	      py.shift();
	      py.push(pi[1]);
	      d3_svg_lineBasisBezier(path, px, py);
	    }
	    points.pop();
	    path.push("L", pi);
	    return path.join("");
	  }
	  function d3_svg_lineBasisOpen(points) {
	    if (points.length < 4) return d3_svg_lineLinear(points);
	    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];
	    while (++i < 3) {
	      pi = points[i];
	      px.push(pi[0]);
	      py.push(pi[1]);
	    }
	    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + "," + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));
	    --i;
	    while (++i < n) {
	      pi = points[i];
	      px.shift();
	      px.push(pi[0]);
	      py.shift();
	      py.push(pi[1]);
	      d3_svg_lineBasisBezier(path, px, py);
	    }
	    return path.join("");
	  }
	  function d3_svg_lineBasisClosed(points) {
	    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];
	    while (++i < 4) {
	      pi = points[i % n];
	      px.push(pi[0]);
	      py.push(pi[1]);
	    }
	    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
	    --i;
	    while (++i < m) {
	      pi = points[i % n];
	      px.shift();
	      px.push(pi[0]);
	      py.shift();
	      py.push(pi[1]);
	      d3_svg_lineBasisBezier(path, px, py);
	    }
	    return path.join("");
	  }
	  function d3_svg_lineBundle(points, tension) {
	    var n = points.length - 1;
	    if (n) {
	      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;
	      while (++i <= n) {
	        p = points[i];
	        t = i / n;
	        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);
	        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);
	      }
	    }
	    return d3_svg_lineBasis(points);
	  }
	  function d3_svg_lineDot4(a, b) {
	    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
	  }
	  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];
	  function d3_svg_lineBasisBezier(path, x, y) {
	    path.push("C", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));
	  }
	  function d3_svg_lineSlope(p0, p1) {
	    return (p1[1] - p0[1]) / (p1[0] - p0[0]);
	  }
	  function d3_svg_lineFiniteDifferences(points) {
	    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);
	    while (++i < j) {
	      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;
	    }
	    m[i] = d;
	    return m;
	  }
	  function d3_svg_lineMonotoneTangents(points) {
	    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;
	    while (++i < j) {
	      d = d3_svg_lineSlope(points[i], points[i + 1]);
	      if (abs(d) < ε) {
	        m[i] = m[i + 1] = 0;
	      } else {
	        a = m[i] / d;
	        b = m[i + 1] / d;
	        s = a * a + b * b;
	        if (s > 9) {
	          s = d * 3 / Math.sqrt(s);
	          m[i] = s * a;
	          m[i + 1] = s * b;
	        }
	      }
	    }
	    i = -1;
	    while (++i <= j) {
	      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));
	      tangents.push([ s || 0, m[i] * s || 0 ]);
	    }
	    return tangents;
	  }
	  function d3_svg_lineMonotone(points) {
	    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));
	  }
	  d3.svg.line.radial = function() {
	    var line = d3_svg_line(d3_svg_lineRadial);
	    line.radius = line.x, delete line.x;
	    line.angle = line.y, delete line.y;
	    return line;
	  };
	  function d3_svg_lineRadial(points) {
	    var point, i = -1, n = points.length, r, a;
	    while (++i < n) {
	      point = points[i];
	      r = point[0];
	      a = point[1] + d3_svg_arcOffset;
	      point[0] = r * Math.cos(a);
	      point[1] = r * Math.sin(a);
	    }
	    return points;
	  }
	  function d3_svg_area(projection) {
	    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = "L", tension = .7;
	    function area(data) {
	      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {
	        return x;
	      } : d3_functor(x1), fy1 = y0 === y1 ? function() {
	        return y;
	      } : d3_functor(y1), x, y;
	      function segment() {
	        segments.push("M", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), "Z");
	      }
	      while (++i < n) {
	        if (defined.call(this, d = data[i], i)) {
	          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);
	          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);
	        } else if (points0.length) {
	          segment();
	          points0 = [];
	          points1 = [];
	        }
	      }
	      if (points0.length) segment();
	      return segments.length ? segments.join("") : null;
	    }
	    area.x = function(_) {
	      if (!arguments.length) return x1;
	      x0 = x1 = _;
	      return area;
	    };
	    area.x0 = function(_) {
	      if (!arguments.length) return x0;
	      x0 = _;
	      return area;
	    };
	    area.x1 = function(_) {
	      if (!arguments.length) return x1;
	      x1 = _;
	      return area;
	    };
	    area.y = function(_) {
	      if (!arguments.length) return y1;
	      y0 = y1 = _;
	      return area;
	    };
	    area.y0 = function(_) {
	      if (!arguments.length) return y0;
	      y0 = _;
	      return area;
	    };
	    area.y1 = function(_) {
	      if (!arguments.length) return y1;
	      y1 = _;
	      return area;
	    };
	    area.defined = function(_) {
	      if (!arguments.length) return defined;
	      defined = _;
	      return area;
	    };
	    area.interpolate = function(_) {
	      if (!arguments.length) return interpolateKey;
	      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
	      interpolateReverse = interpolate.reverse || interpolate;
	      L = interpolate.closed ? "M" : "L";
	      return area;
	    };
	    area.tension = function(_) {
	      if (!arguments.length) return tension;
	      tension = _;
	      return area;
	    };
	    return area;
	  }
	  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;
	  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;
	  d3.svg.area = function() {
	    return d3_svg_area(d3_identity);
	  };
	  d3.svg.area.radial = function() {
	    var area = d3_svg_area(d3_svg_lineRadial);
	    area.radius = area.x, delete area.x;
	    area.innerRadius = area.x0, delete area.x0;
	    area.outerRadius = area.x1, delete area.x1;
	    area.angle = area.y, delete area.y;
	    area.startAngle = area.y0, delete area.y0;
	    area.endAngle = area.y1, delete area.y1;
	    return area;
	  };
	  d3.svg.chord = function() {
	    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;
	    function chord(d, i) {
	      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);
	      return "M" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + "Z";
	    }
	    function subgroup(self, f, d, i) {
	      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset, a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;
	      return {
	        r: r,
	        a0: a0,
	        a1: a1,
	        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],
	        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]
	      };
	    }
	    function equals(a, b) {
	      return a.a0 == b.a0 && a.a1 == b.a1;
	    }
	    function arc(r, p, a) {
	      return "A" + r + "," + r + " 0 " + +(a > π) + ",1 " + p;
	    }
	    function curve(r0, p0, r1, p1) {
	      return "Q 0,0 " + p1;
	    }
	    chord.radius = function(v) {
	      if (!arguments.length) return radius;
	      radius = d3_functor(v);
	      return chord;
	    };
	    chord.source = function(v) {
	      if (!arguments.length) return source;
	      source = d3_functor(v);
	      return chord;
	    };
	    chord.target = function(v) {
	      if (!arguments.length) return target;
	      target = d3_functor(v);
	      return chord;
	    };
	    chord.startAngle = function(v) {
	      if (!arguments.length) return startAngle;
	      startAngle = d3_functor(v);
	      return chord;
	    };
	    chord.endAngle = function(v) {
	      if (!arguments.length) return endAngle;
	      endAngle = d3_functor(v);
	      return chord;
	    };
	    return chord;
	  };
	  function d3_svg_chordRadius(d) {
	    return d.radius;
	  }
	  d3.svg.diagonal = function() {
	    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;
	    function diagonal(d, i) {
	      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {
	        x: p0.x,
	        y: m
	      }, {
	        x: p3.x,
	        y: m
	      }, p3 ];
	      p = p.map(projection);
	      return "M" + p[0] + "C" + p[1] + " " + p[2] + " " + p[3];
	    }
	    diagonal.source = function(x) {
	      if (!arguments.length) return source;
	      source = d3_functor(x);
	      return diagonal;
	    };
	    diagonal.target = function(x) {
	      if (!arguments.length) return target;
	      target = d3_functor(x);
	      return diagonal;
	    };
	    diagonal.projection = function(x) {
	      if (!arguments.length) return projection;
	      projection = x;
	      return diagonal;
	    };
	    return diagonal;
	  };
	  function d3_svg_diagonalProjection(d) {
	    return [ d.x, d.y ];
	  }
	  d3.svg.diagonal.radial = function() {
	    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;
	    diagonal.projection = function(x) {
	      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;
	    };
	    return diagonal;
	  };
	  function d3_svg_diagonalRadialProjection(projection) {
	    return function() {
	      var d = projection.apply(this, arguments), r = d[0], a = d[1] + d3_svg_arcOffset;
	      return [ r * Math.cos(a), r * Math.sin(a) ];
	    };
	  }
	  d3.svg.symbol = function() {
	    var type = d3_svg_symbolType, size = d3_svg_symbolSize;
	    function symbol(d, i) {
	      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));
	    }
	    symbol.type = function(x) {
	      if (!arguments.length) return type;
	      type = d3_functor(x);
	      return symbol;
	    };
	    symbol.size = function(x) {
	      if (!arguments.length) return size;
	      size = d3_functor(x);
	      return symbol;
	    };
	    return symbol;
	  };
	  function d3_svg_symbolSize() {
	    return 64;
	  }
	  function d3_svg_symbolType() {
	    return "circle";
	  }
	  function d3_svg_symbolCircle(size) {
	    var r = Math.sqrt(size / π);
	    return "M0," + r + "A" + r + "," + r + " 0 1,1 0," + -r + "A" + r + "," + r + " 0 1,1 0," + r + "Z";
	  }
	  var d3_svg_symbols = d3.map({
	    circle: d3_svg_symbolCircle,
	    cross: function(size) {
	      var r = Math.sqrt(size / 5) / 2;
	      return "M" + -3 * r + "," + -r + "H" + -r + "V" + -3 * r + "H" + r + "V" + -r + "H" + 3 * r + "V" + r + "H" + r + "V" + 3 * r + "H" + -r + "V" + r + "H" + -3 * r + "Z";
	    },
	    diamond: function(size) {
	      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;
	      return "M0," + -ry + "L" + rx + ",0" + " 0," + ry + " " + -rx + ",0" + "Z";
	    },
	    square: function(size) {
	      var r = Math.sqrt(size) / 2;
	      return "M" + -r + "," + -r + "L" + r + "," + -r + " " + r + "," + r + " " + -r + "," + r + "Z";
	    },
	    "triangle-down": function(size) {
	      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
	      return "M0," + ry + "L" + rx + "," + -ry + " " + -rx + "," + -ry + "Z";
	    },
	    "triangle-up": function(size) {
	      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
	      return "M0," + -ry + "L" + rx + "," + ry + " " + -rx + "," + ry + "Z";
	    }
	  });
	  d3.svg.symbolTypes = d3_svg_symbols.keys();
	  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);
	  function d3_transition(groups, id) {
	    d3_subclass(groups, d3_transitionPrototype);
	    groups.id = id;
	    return groups;
	  }
	  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;
	  d3_transitionPrototype.call = d3_selectionPrototype.call;
	  d3_transitionPrototype.empty = d3_selectionPrototype.empty;
	  d3_transitionPrototype.node = d3_selectionPrototype.node;
	  d3_transitionPrototype.size = d3_selectionPrototype.size;
	  d3.transition = function(selection) {
	    return arguments.length ? d3_transitionInheritId ? selection.transition() : selection : d3_selectionRoot.transition();
	  };
	  d3.transition.prototype = d3_transitionPrototype;
	  d3_transitionPrototype.select = function(selector) {
	    var id = this.id, subgroups = [], subgroup, subnode, node;
	    selector = d3_selection_selector(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {
	          if ("__data__" in node) subnode.__data__ = node.__data__;
	          d3_transitionNode(subnode, i, id, node.__transition__[id]);
	          subgroup.push(subnode);
	        } else {
	          subgroup.push(null);
	        }
	      }
	    }
	    return d3_transition(subgroups, id);
	  };
	  d3_transitionPrototype.selectAll = function(selector) {
	    var id = this.id, subgroups = [], subgroup, subnodes, node, subnode, transition;
	    selector = d3_selection_selectorAll(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          transition = node.__transition__[id];
	          subnodes = selector.call(node, node.__data__, i, j);
	          subgroups.push(subgroup = []);
	          for (var k = -1, o = subnodes.length; ++k < o; ) {
	            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);
	            subgroup.push(subnode);
	          }
	        }
	      }
	    }
	    return d3_transition(subgroups, id);
	  };
	  d3_transitionPrototype.filter = function(filter) {
	    var subgroups = [], subgroup, group, node;
	    if (typeof filter !== "function") filter = d3_selection_filter(filter);
	    for (var j = 0, m = this.length; j < m; j++) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
	        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
	          subgroup.push(node);
	        }
	      }
	    }
	    return d3_transition(subgroups, this.id);
	  };
	  d3_transitionPrototype.tween = function(name, tween) {
	    var id = this.id;
	    if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);
	    return d3_selection_each(this, tween == null ? function(node) {
	      node.__transition__[id].tween.remove(name);
	    } : function(node) {
	      node.__transition__[id].tween.set(name, tween);
	    });
	  };
	  function d3_transition_tween(groups, name, value, tween) {
	    var id = groups.id;
	    return d3_selection_each(groups, typeof value === "function" ? function(node, i, j) {
	      node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j)));
	    } : (value = tween(value), function(node) {
	      node.__transition__[id].tween.set(name, value);
	    }));
	  }
	  d3_transitionPrototype.attr = function(nameNS, value) {
	    if (arguments.length < 2) {
	      for (value in nameNS) this.attr(value, nameNS[value]);
	      return this;
	    }
	    var interpolate = nameNS == "transform" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);
	    function attrNull() {
	      this.removeAttribute(name);
	    }
	    function attrNullNS() {
	      this.removeAttributeNS(name.space, name.local);
	    }
	    function attrTween(b) {
	      return b == null ? attrNull : (b += "", function() {
	        var a = this.getAttribute(name), i;
	        return a !== b && (i = interpolate(a, b), function(t) {
	          this.setAttribute(name, i(t));
	        });
	      });
	    }
	    function attrTweenNS(b) {
	      return b == null ? attrNullNS : (b += "", function() {
	        var a = this.getAttributeNS(name.space, name.local), i;
	        return a !== b && (i = interpolate(a, b), function(t) {
	          this.setAttributeNS(name.space, name.local, i(t));
	        });
	      });
	    }
	    return d3_transition_tween(this, "attr." + nameNS, value, name.local ? attrTweenNS : attrTween);
	  };
	  d3_transitionPrototype.attrTween = function(nameNS, tween) {
	    var name = d3.ns.qualify(nameNS);
	    function attrTween(d, i) {
	      var f = tween.call(this, d, i, this.getAttribute(name));
	      return f && function(t) {
	        this.setAttribute(name, f(t));
	      };
	    }
	    function attrTweenNS(d, i) {
	      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));
	      return f && function(t) {
	        this.setAttributeNS(name.space, name.local, f(t));
	      };
	    }
	    return this.tween("attr." + nameNS, name.local ? attrTweenNS : attrTween);
	  };
	  d3_transitionPrototype.style = function(name, value, priority) {
	    var n = arguments.length;
	    if (n < 3) {
	      if (typeof name !== "string") {
	        if (n < 2) value = "";
	        for (priority in name) this.style(priority, name[priority], value);
	        return this;
	      }
	      priority = "";
	    }
	    function styleNull() {
	      this.style.removeProperty(name);
	    }
	    function styleString(b) {
	      return b == null ? styleNull : (b += "", function() {
	        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;
	        return a !== b && (i = d3_interpolate(a, b), function(t) {
	          this.style.setProperty(name, i(t), priority);
	        });
	      });
	    }
	    return d3_transition_tween(this, "style." + name, value, styleString);
	  };
	  d3_transitionPrototype.styleTween = function(name, tween, priority) {
	    if (arguments.length < 3) priority = "";
	    function styleTween(d, i) {
	      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));
	      return f && function(t) {
	        this.style.setProperty(name, f(t), priority);
	      };
	    }
	    return this.tween("style." + name, styleTween);
	  };
	  d3_transitionPrototype.text = function(value) {
	    return d3_transition_tween(this, "text", value, d3_transition_text);
	  };
	  function d3_transition_text(b) {
	    if (b == null) b = "";
	    return function() {
	      this.textContent = b;
	    };
	  }
	  d3_transitionPrototype.remove = function() {
	    return this.each("end.transition", function() {
	      var p;
	      if (this.__transition__.count < 2 && (p = this.parentNode)) p.removeChild(this);
	    });
	  };
	  d3_transitionPrototype.ease = function(value) {
	    var id = this.id;
	    if (arguments.length < 1) return this.node().__transition__[id].ease;
	    if (typeof value !== "function") value = d3.ease.apply(d3, arguments);
	    return d3_selection_each(this, function(node) {
	      node.__transition__[id].ease = value;
	    });
	  };
	  d3_transitionPrototype.delay = function(value) {
	    var id = this.id;
	    if (arguments.length < 1) return this.node().__transition__[id].delay;
	    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
	      node.__transition__[id].delay = +value.call(node, node.__data__, i, j);
	    } : (value = +value, function(node) {
	      node.__transition__[id].delay = value;
	    }));
	  };
	  d3_transitionPrototype.duration = function(value) {
	    var id = this.id;
	    if (arguments.length < 1) return this.node().__transition__[id].duration;
	    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
	      node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j));
	    } : (value = Math.max(1, value), function(node) {
	      node.__transition__[id].duration = value;
	    }));
	  };
	  d3_transitionPrototype.each = function(type, listener) {
	    var id = this.id;
	    if (arguments.length < 2) {
	      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;
	      d3_transitionInheritId = id;
	      d3_selection_each(this, function(node, i, j) {
	        d3_transitionInherit = node.__transition__[id];
	        type.call(node, node.__data__, i, j);
	      });
	      d3_transitionInherit = inherit;
	      d3_transitionInheritId = inheritId;
	    } else {
	      d3_selection_each(this, function(node) {
	        var transition = node.__transition__[id];
	        (transition.event || (transition.event = d3.dispatch("start", "end"))).on(type, listener);
	      });
	    }
	    return this;
	  };
	  d3_transitionPrototype.transition = function() {
	    var id0 = this.id, id1 = ++d3_transitionId, subgroups = [], subgroup, group, node, transition;
	    for (var j = 0, m = this.length; j < m; j++) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
	        if (node = group[i]) {
	          transition = Object.create(node.__transition__[id0]);
	          transition.delay += transition.duration;
	          d3_transitionNode(node, i, id1, transition);
	        }
	        subgroup.push(node);
	      }
	    }
	    return d3_transition(subgroups, id1);
	  };
	  function d3_transitionNode(node, i, id, inherit) {
	    var lock = node.__transition__ || (node.__transition__ = {
	      active: 0,
	      count: 0
	    }), transition = lock[id];
	    if (!transition) {
	      var time = inherit.time;
	      transition = lock[id] = {
	        tween: new d3_Map(),
	        time: time,
	        ease: inherit.ease,
	        delay: inherit.delay,
	        duration: inherit.duration
	      };
	      ++lock.count;
	      d3.timer(function(elapsed) {
	        var d = node.__data__, ease = transition.ease, delay = transition.delay, duration = transition.duration, timer = d3_timer_active, tweened = [];
	        timer.t = delay + time;
	        if (delay <= elapsed) return start(elapsed - delay);
	        timer.c = start;
	        function start(elapsed) {
	          if (lock.active > id) return stop();
	          lock.active = id;
	          transition.event && transition.event.start.call(node, d, i);
	          transition.tween.forEach(function(key, value) {
	            if (value = value.call(node, d, i)) {
	              tweened.push(value);
	            }
	          });
	          d3.timer(function() {
	            timer.c = tick(elapsed || 1) ? d3_true : tick;
	            return 1;
	          }, 0, time);
	        }
	        function tick(elapsed) {
	          if (lock.active !== id) return stop();
	          var t = elapsed / duration, e = ease(t), n = tweened.length;
	          while (n > 0) {
	            tweened[--n].call(node, e);
	          }
	          if (t >= 1) {
	            transition.event && transition.event.end.call(node, d, i);
	            return stop();
	          }
	        }
	        function stop() {
	          if (--lock.count) delete lock[id]; else delete node.__transition__;
	          return 1;
	        }
	      }, 0, time);
	    }
	  }
	  d3.svg.axis = function() {
	    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;
	    function axis(g) {
	      g.each(function() {
	        var g = d3.select(this);
	        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();
	        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(".tick").data(ticks, scale1), tickEnter = tick.enter().insert("g", ".domain").attr("class", "tick").style("opacity", ε), tickExit = d3.transition(tick.exit()).style("opacity", ε).remove(), tickUpdate = d3.transition(tick.order()).style("opacity", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;
	        var range = d3_scaleRange(scale1), path = g.selectAll(".domain").data([ 0 ]), pathUpdate = (path.enter().append("path").attr("class", "domain"), 
	        d3.transition(path));
	        tickEnter.append("line");
	        tickEnter.append("text");
	        var lineEnter = tickEnter.select("line"), lineUpdate = tickUpdate.select("line"), text = tick.select("text").text(tickFormat), textEnter = tickEnter.select("text"), textUpdate = tickUpdate.select("text"), sign = orient === "top" || orient === "left" ? -1 : 1, x1, x2, y1, y2;
	        if (orient === "bottom" || orient === "top") {
	          tickTransform = d3_svg_axisX, x1 = "x", y1 = "y", x2 = "x2", y2 = "y2";
	          text.attr("dy", sign < 0 ? "0em" : ".71em").style("text-anchor", "middle");
	          pathUpdate.attr("d", "M" + range[0] + "," + sign * outerTickSize + "V0H" + range[1] + "V" + sign * outerTickSize);
	        } else {
	          tickTransform = d3_svg_axisY, x1 = "y", y1 = "x", x2 = "y2", y2 = "x2";
	          text.attr("dy", ".32em").style("text-anchor", sign < 0 ? "end" : "start");
	          pathUpdate.attr("d", "M" + sign * outerTickSize + "," + range[0] + "H0V" + range[1] + "H" + sign * outerTickSize);
	        }
	        lineEnter.attr(y2, sign * innerTickSize);
	        textEnter.attr(y1, sign * tickSpacing);
	        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);
	        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);
	        if (scale1.rangeBand) {
	          var x = scale1, dx = x.rangeBand() / 2;
	          scale0 = scale1 = function(d) {
	            return x(d) + dx;
	          };
	        } else if (scale0.rangeBand) {
	          scale0 = scale1;
	        } else {
	          tickExit.call(tickTransform, scale1, scale0);
	        }
	        tickEnter.call(tickTransform, scale0, scale1);
	        tickUpdate.call(tickTransform, scale1, scale1);
	      });
	    }
	    axis.scale = function(x) {
	      if (!arguments.length) return scale;
	      scale = x;
	      return axis;
	    };
	    axis.orient = function(x) {
	      if (!arguments.length) return orient;
	      orient = x in d3_svg_axisOrients ? x + "" : d3_svg_axisDefaultOrient;
	      return axis;
	    };
	    axis.ticks = function() {
	      if (!arguments.length) return tickArguments_;
	      tickArguments_ = arguments;
	      return axis;
	    };
	    axis.tickValues = function(x) {
	      if (!arguments.length) return tickValues;
	      tickValues = x;
	      return axis;
	    };
	    axis.tickFormat = function(x) {
	      if (!arguments.length) return tickFormat_;
	      tickFormat_ = x;
	      return axis;
	    };
	    axis.tickSize = function(x) {
	      var n = arguments.length;
	      if (!n) return innerTickSize;
	      innerTickSize = +x;
	      outerTickSize = +arguments[n - 1];
	      return axis;
	    };
	    axis.innerTickSize = function(x) {
	      if (!arguments.length) return innerTickSize;
	      innerTickSize = +x;
	      return axis;
	    };
	    axis.outerTickSize = function(x) {
	      if (!arguments.length) return outerTickSize;
	      outerTickSize = +x;
	      return axis;
	    };
	    axis.tickPadding = function(x) {
	      if (!arguments.length) return tickPadding;
	      tickPadding = +x;
	      return axis;
	    };
	    axis.tickSubdivide = function() {
	      return arguments.length && axis;
	    };
	    return axis;
	  };
	  var d3_svg_axisDefaultOrient = "bottom", d3_svg_axisOrients = {
	    top: 1,
	    right: 1,
	    bottom: 1,
	    left: 1
	  };
	  function d3_svg_axisX(selection, x0, x1) {
	    selection.attr("transform", function(d) {
	      var v0 = x0(d);
	      return "translate(" + (isFinite(v0) ? v0 : x1(d)) + ",0)";
	    });
	  }
	  function d3_svg_axisY(selection, y0, y1) {
	    selection.attr("transform", function(d) {
	      var v0 = y0(d);
	      return "translate(0," + (isFinite(v0) ? v0 : y1(d)) + ")";
	    });
	  }
	  d3.svg.brush = function() {
	    var event = d3_eventDispatch(brush, "brushstart", "brush", "brushend"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];
	    function brush(g) {
	      g.each(function() {
	        var g = d3.select(this).style("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush", brushstart).on("touchstart.brush", brushstart);
	        var background = g.selectAll(".background").data([ 0 ]);
	        background.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair");
	        g.selectAll(".extent").data([ 0 ]).enter().append("rect").attr("class", "extent").style("cursor", "move");
	        var resize = g.selectAll(".resize").data(resizes, d3_identity);
	        resize.exit().remove();
	        resize.enter().append("g").attr("class", function(d) {
	          return "resize " + d;
	        }).style("cursor", function(d) {
	          return d3_svg_brushCursor[d];
	        }).append("rect").attr("x", function(d) {
	          return /[ew]$/.test(d) ? -3 : null;
	        }).attr("y", function(d) {
	          return /^[ns]/.test(d) ? -3 : null;
	        }).attr("width", 6).attr("height", 6).style("visibility", "hidden");
	        resize.style("display", brush.empty() ? "none" : null);
	        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;
	        if (x) {
	          range = d3_scaleRange(x);
	          backgroundUpdate.attr("x", range[0]).attr("width", range[1] - range[0]);
	          redrawX(gUpdate);
	        }
	        if (y) {
	          range = d3_scaleRange(y);
	          backgroundUpdate.attr("y", range[0]).attr("height", range[1] - range[0]);
	          redrawY(gUpdate);
	        }
	        redraw(gUpdate);
	      });
	    }
	    brush.event = function(g) {
	      g.each(function() {
	        var event_ = event.of(this, arguments), extent1 = {
	          x: xExtent,
	          y: yExtent,
	          i: xExtentDomain,
	          j: yExtentDomain
	        }, extent0 = this.__chart__ || extent1;
	        this.__chart__ = extent1;
	        if (d3_transitionInheritId) {
	          d3.select(this).transition().each("start.brush", function() {
	            xExtentDomain = extent0.i;
	            yExtentDomain = extent0.j;
	            xExtent = extent0.x;
	            yExtent = extent0.y;
	            event_({
	              type: "brushstart"
	            });
	          }).tween("brush:brush", function() {
	            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);
	            xExtentDomain = yExtentDomain = null;
	            return function(t) {
	              xExtent = extent1.x = xi(t);
	              yExtent = extent1.y = yi(t);
	              event_({
	                type: "brush",
	                mode: "resize"
	              });
	            };
	          }).each("end.brush", function() {
	            xExtentDomain = extent1.i;
	            yExtentDomain = extent1.j;
	            event_({
	              type: "brush",
	              mode: "resize"
	            });
	            event_({
	              type: "brushend"
	            });
	          });
	        } else {
	          event_({
	            type: "brushstart"
	          });
	          event_({
	            type: "brush",
	            mode: "resize"
	          });
	          event_({
	            type: "brushend"
	          });
	        }
	      });
	    };
	    function redraw(g) {
	      g.selectAll(".resize").attr("transform", function(d) {
	        return "translate(" + xExtent[+/e$/.test(d)] + "," + yExtent[+/^s/.test(d)] + ")";
	      });
	    }
	    function redrawX(g) {
	      g.select(".extent").attr("x", xExtent[0]);
	      g.selectAll(".extent,.n>rect,.s>rect").attr("width", xExtent[1] - xExtent[0]);
	    }
	    function redrawY(g) {
	      g.select(".extent").attr("y", yExtent[0]);
	      g.selectAll(".extent,.e>rect,.w>rect").attr("height", yExtent[1] - yExtent[0]);
	    }
	    function brushstart() {
	      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed("extent"), dragRestore = d3_event_dragSuppress(), center, origin = d3.mouse(target), offset;
	      var w = d3.select(d3_window).on("keydown.brush", keydown).on("keyup.brush", keyup);
	      if (d3.event.changedTouches) {
	        w.on("touchmove.brush", brushmove).on("touchend.brush", brushend);
	      } else {
	        w.on("mousemove.brush", brushmove).on("mouseup.brush", brushend);
	      }
	      g.interrupt().selectAll("*").interrupt();
	      if (dragging) {
	        origin[0] = xExtent[0] - origin[0];
	        origin[1] = yExtent[0] - origin[1];
	      } else if (resizing) {
	        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);
	        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];
	        origin[0] = xExtent[ex];
	        origin[1] = yExtent[ey];
	      } else if (d3.event.altKey) center = origin.slice();
	      g.style("pointer-events", "none").selectAll(".resize").style("display", null);
	      d3.select("body").style("cursor", eventTarget.style("cursor"));
	      event_({
	        type: "brushstart"
	      });
	      brushmove();
	      function keydown() {
	        if (d3.event.keyCode == 32) {
	          if (!dragging) {
	            center = null;
	            origin[0] -= xExtent[1];
	            origin[1] -= yExtent[1];
	            dragging = 2;
	          }
	          d3_eventPreventDefault();
	        }
	      }
	      function keyup() {
	        if (d3.event.keyCode == 32 && dragging == 2) {
	          origin[0] += xExtent[1];
	          origin[1] += yExtent[1];
	          dragging = 0;
	          d3_eventPreventDefault();
	        }
	      }
	      function brushmove() {
	        var point = d3.mouse(target), moved = false;
	        if (offset) {
	          point[0] += offset[0];
	          point[1] += offset[1];
	        }
	        if (!dragging) {
	          if (d3.event.altKey) {
	            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];
	            origin[0] = xExtent[+(point[0] < center[0])];
	            origin[1] = yExtent[+(point[1] < center[1])];
	          } else center = null;
	        }
	        if (resizingX && move1(point, x, 0)) {
	          redrawX(g);
	          moved = true;
	        }
	        if (resizingY && move1(point, y, 1)) {
	          redrawY(g);
	          moved = true;
	        }
	        if (moved) {
	          redraw(g);
	          event_({
	            type: "brush",
	            mode: dragging ? "move" : "resize"
	          });
	        }
	      }
	      function move1(point, scale, i) {
	        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;
	        if (dragging) {
	          r0 -= position;
	          r1 -= size + position;
	        }
	        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];
	        if (dragging) {
	          max = (min += position) + size;
	        } else {
	          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));
	          if (position < min) {
	            max = min;
	            min = position;
	          } else {
	            max = position;
	          }
	        }
	        if (extent[0] != min || extent[1] != max) {
	          if (i) yExtentDomain = null; else xExtentDomain = null;
	          extent[0] = min;
	          extent[1] = max;
	          return true;
	        }
	      }
	      function brushend() {
	        brushmove();
	        g.style("pointer-events", "all").selectAll(".resize").style("display", brush.empty() ? "none" : null);
	        d3.select("body").style("cursor", null);
	        w.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null);
	        dragRestore();
	        event_({
	          type: "brushend"
	        });
	      }
	    }
	    brush.x = function(z) {
	      if (!arguments.length) return x;
	      x = z;
	      resizes = d3_svg_brushResizes[!x << 1 | !y];
	      return brush;
	    };
	    brush.y = function(z) {
	      if (!arguments.length) return y;
	      y = z;
	      resizes = d3_svg_brushResizes[!x << 1 | !y];
	      return brush;
	    };
	    brush.clamp = function(z) {
	      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;
	      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;
	      return brush;
	    };
	    brush.extent = function(z) {
	      var x0, x1, y0, y1, t;
	      if (!arguments.length) {
	        if (x) {
	          if (xExtentDomain) {
	            x0 = xExtentDomain[0], x1 = xExtentDomain[1];
	          } else {
	            x0 = xExtent[0], x1 = xExtent[1];
	            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);
	            if (x1 < x0) t = x0, x0 = x1, x1 = t;
	          }
	        }
	        if (y) {
	          if (yExtentDomain) {
	            y0 = yExtentDomain[0], y1 = yExtentDomain[1];
	          } else {
	            y0 = yExtent[0], y1 = yExtent[1];
	            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);
	            if (y1 < y0) t = y0, y0 = y1, y1 = t;
	          }
	        }
	        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];
	      }
	      if (x) {
	        x0 = z[0], x1 = z[1];
	        if (y) x0 = x0[0], x1 = x1[0];
	        xExtentDomain = [ x0, x1 ];
	        if (x.invert) x0 = x(x0), x1 = x(x1);
	        if (x1 < x0) t = x0, x0 = x1, x1 = t;
	        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];
	      }
	      if (y) {
	        y0 = z[0], y1 = z[1];
	        if (x) y0 = y0[1], y1 = y1[1];
	        yExtentDomain = [ y0, y1 ];
	        if (y.invert) y0 = y(y0), y1 = y(y1);
	        if (y1 < y0) t = y0, y0 = y1, y1 = t;
	        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];
	      }
	      return brush;
	    };
	    brush.clear = function() {
	      if (!brush.empty()) {
	        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];
	        xExtentDomain = yExtentDomain = null;
	      }
	      return brush;
	    };
	    brush.empty = function() {
	      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];
	    };
	    return d3.rebind(brush, event, "on");
	  };
	  var d3_svg_brushCursor = {
	    n: "ns-resize",
	    e: "ew-resize",
	    s: "ns-resize",
	    w: "ew-resize",
	    nw: "nwse-resize",
	    ne: "nesw-resize",
	    se: "nwse-resize",
	    sw: "nesw-resize"
	  };
	  var d3_svg_brushResizes = [ [ "n", "e", "s", "w", "nw", "ne", "se", "sw" ], [ "e", "w" ], [ "n", "s" ], [] ];
	  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;
	  var d3_time_formatUtc = d3_time_format.utc;
	  var d3_time_formatIso = d3_time_formatUtc("%Y-%m-%dT%H:%M:%S.%LZ");
	  d3_time_format.iso = Date.prototype.toISOString && +new Date("2000-01-01T00:00:00.000Z") ? d3_time_formatIsoNative : d3_time_formatIso;
	  function d3_time_formatIsoNative(date) {
	    return date.toISOString();
	  }
	  d3_time_formatIsoNative.parse = function(string) {
	    var date = new Date(string);
	    return isNaN(date) ? null : date;
	  };
	  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;
	  d3_time.second = d3_time_interval(function(date) {
	    return new d3_date(Math.floor(date / 1e3) * 1e3);
	  }, function(date, offset) {
	    date.setTime(date.getTime() + Math.floor(offset) * 1e3);
	  }, function(date) {
	    return date.getSeconds();
	  });
	  d3_time.seconds = d3_time.second.range;
	  d3_time.seconds.utc = d3_time.second.utc.range;
	  d3_time.minute = d3_time_interval(function(date) {
	    return new d3_date(Math.floor(date / 6e4) * 6e4);
	  }, function(date, offset) {
	    date.setTime(date.getTime() + Math.floor(offset) * 6e4);
	  }, function(date) {
	    return date.getMinutes();
	  });
	  d3_time.minutes = d3_time.minute.range;
	  d3_time.minutes.utc = d3_time.minute.utc.range;
	  d3_time.hour = d3_time_interval(function(date) {
	    var timezone = date.getTimezoneOffset() / 60;
	    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);
	  }, function(date, offset) {
	    date.setTime(date.getTime() + Math.floor(offset) * 36e5);
	  }, function(date) {
	    return date.getHours();
	  });
	  d3_time.hours = d3_time.hour.range;
	  d3_time.hours.utc = d3_time.hour.utc.range;
	  d3_time.month = d3_time_interval(function(date) {
	    date = d3_time.day(date);
	    date.setDate(1);
	    return date;
	  }, function(date, offset) {
	    date.setMonth(date.getMonth() + offset);
	  }, function(date) {
	    return date.getMonth();
	  });
	  d3_time.months = d3_time.month.range;
	  d3_time.months.utc = d3_time.month.utc.range;
	  function d3_time_scale(linear, methods, format) {
	    function scale(x) {
	      return linear(x);
	    }
	    scale.invert = function(x) {
	      return d3_time_scaleDate(linear.invert(x));
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);
	      linear.domain(x);
	      return scale;
	    };
	    function tickMethod(extent, count) {
	      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);
	      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {
	        return d / 31536e6;
	      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];
	    }
	    scale.nice = function(interval, skip) {
	      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" && tickMethod(extent, interval);
	      if (method) interval = method[0], skip = method[1];
	      function skipped(date) {
	        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;
	      }
	      return scale.domain(d3_scale_nice(domain, skip > 1 ? {
	        floor: function(date) {
	          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);
	          return date;
	        },
	        ceil: function(date) {
	          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);
	          return date;
	        }
	      } : interval));
	    };
	    scale.ticks = function(interval, skip) {
	      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" ? tickMethod(extent, interval) : !interval.range && [ {
	        range: interval
	      }, skip ];
	      if (method) interval = method[0], skip = method[1];
	      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);
	    };
	    scale.tickFormat = function() {
	      return format;
	    };
	    scale.copy = function() {
	      return d3_time_scale(linear.copy(), methods, format);
	    };
	    return d3_scale_linearRebind(scale, linear);
	  }
	  function d3_time_scaleDate(t) {
	    return new Date(t);
	  }
	  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];
	  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];
	  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ ".%L", function(d) {
	    return d.getMilliseconds();
	  } ], [ ":%S", function(d) {
	    return d.getSeconds();
	  } ], [ "%I:%M", function(d) {
	    return d.getMinutes();
	  } ], [ "%I %p", function(d) {
	    return d.getHours();
	  } ], [ "%a %d", function(d) {
	    return d.getDay() && d.getDate() != 1;
	  } ], [ "%b %d", function(d) {
	    return d.getDate() != 1;
	  } ], [ "%B", function(d) {
	    return d.getMonth();
	  } ], [ "%Y", d3_true ] ]);
	  var d3_time_scaleMilliseconds = {
	    range: function(start, stop, step) {
	      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);
	    },
	    floor: d3_identity,
	    ceil: d3_identity
	  };
	  d3_time_scaleLocalMethods.year = d3_time.year;
	  d3_time.scale = function() {
	    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);
	  };
	  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {
	    return [ m[0].utc, m[1] ];
	  });
	  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ ".%L", function(d) {
	    return d.getUTCMilliseconds();
	  } ], [ ":%S", function(d) {
	    return d.getUTCSeconds();
	  } ], [ "%I:%M", function(d) {
	    return d.getUTCMinutes();
	  } ], [ "%I %p", function(d) {
	    return d.getUTCHours();
	  } ], [ "%a %d", function(d) {
	    return d.getUTCDay() && d.getUTCDate() != 1;
	  } ], [ "%b %d", function(d) {
	    return d.getUTCDate() != 1;
	  } ], [ "%B", function(d) {
	    return d.getUTCMonth();
	  } ], [ "%Y", d3_true ] ]);
	  d3_time_scaleUtcMethods.year = d3_time.year.utc;
	  d3_time.scale.utc = function() {
	    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);
	  };
	  d3.text = d3_xhrType(function(request) {
	    return request.responseText;
	  });
	  d3.json = function(url, callback) {
	    return d3_xhr(url, "application/json", d3_json, callback);
	  };
	  function d3_json(request) {
	    return JSON.parse(request.responseText);
	  }
	  d3.html = function(url, callback) {
	    return d3_xhr(url, "text/html", d3_html, callback);
	  };
	  function d3_html(request) {
	    var range = d3_document.createRange();
	    range.selectNode(d3_document.body);
	    return range.createContextualFragment(request.responseText);
	  }
	  d3.xml = d3_xhrType(function(request) {
	    return request.responseXML;
	  });
	  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === "object" && module.exports) module.exports = d3;
	  this.d3 = d3;
	}();

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(5).crossfilter;


/***/ },
/* 5 */
/***/ function(module, exports) {

	(function(exports){
	crossfilter.version = "1.3.12";
	function crossfilter_identity(d) {
	  return d;
	}
	crossfilter.permute = permute;
	
	function permute(array, index) {
	  for (var i = 0, n = index.length, copy = new Array(n); i < n; ++i) {
	    copy[i] = array[index[i]];
	  }
	  return copy;
	}
	var bisect = crossfilter.bisect = bisect_by(crossfilter_identity);
	
	bisect.by = bisect_by;
	
	function bisect_by(f) {
	
	  // Locate the insertion point for x in a to maintain sorted order. The
	  // arguments lo and hi may be used to specify a subset of the array which
	  // should be considered; by default the entire array is used. If x is already
	  // present in a, the insertion point will be before (to the left of) any
	  // existing entries. The return value is suitable for use as the first
	  // argument to `array.splice` assuming that a is already sorted.
	  //
	  // The returned insertion point i partitions the array a into two halves so
	  // that all v < x for v in a[lo:i] for the left side and all v >= x for v in
	  // a[i:hi] for the right side.
	  function bisectLeft(a, x, lo, hi) {
	    while (lo < hi) {
	      var mid = lo + hi >>> 1;
	      if (f(a[mid]) < x) lo = mid + 1;
	      else hi = mid;
	    }
	    return lo;
	  }
	
	  // Similar to bisectLeft, but returns an insertion point which comes after (to
	  // the right of) any existing entries of x in a.
	  //
	  // The returned insertion point i partitions the array into two halves so that
	  // all v <= x for v in a[lo:i] for the left side and all v > x for v in
	  // a[i:hi] for the right side.
	  function bisectRight(a, x, lo, hi) {
	    while (lo < hi) {
	      var mid = lo + hi >>> 1;
	      if (x < f(a[mid])) hi = mid;
	      else lo = mid + 1;
	    }
	    return lo;
	  }
	
	  bisectRight.right = bisectRight;
	  bisectRight.left = bisectLeft;
	  return bisectRight;
	}
	var heap = crossfilter.heap = heap_by(crossfilter_identity);
	
	heap.by = heap_by;
	
	function heap_by(f) {
	
	  // Builds a binary heap within the specified array a[lo:hi]. The heap has the
	  // property such that the parent a[lo+i] is always less than or equal to its
	  // two children: a[lo+2*i+1] and a[lo+2*i+2].
	  function heap(a, lo, hi) {
	    var n = hi - lo,
	        i = (n >>> 1) + 1;
	    while (--i > 0) sift(a, i, n, lo);
	    return a;
	  }
	
	  // Sorts the specified array a[lo:hi] in descending order, assuming it is
	  // already a heap.
	  function sort(a, lo, hi) {
	    var n = hi - lo,
	        t;
	    while (--n > 0) t = a[lo], a[lo] = a[lo + n], a[lo + n] = t, sift(a, 1, n, lo);
	    return a;
	  }
	
	  // Sifts the element a[lo+i-1] down the heap, where the heap is the contiguous
	  // slice of array a[lo:lo+n]. This method can also be used to update the heap
	  // incrementally, without incurring the full cost of reconstructing the heap.
	  function sift(a, i, n, lo) {
	    var d = a[--lo + i],
	        x = f(d),
	        child;
	    while ((child = i << 1) <= n) {
	      if (child < n && f(a[lo + child]) > f(a[lo + child + 1])) child++;
	      if (x <= f(a[lo + child])) break;
	      a[lo + i] = a[lo + child];
	      i = child;
	    }
	    a[lo + i] = d;
	  }
	
	  heap.sort = sort;
	  return heap;
	}
	var heapselect = crossfilter.heapselect = heapselect_by(crossfilter_identity);
	
	heapselect.by = heapselect_by;
	
	function heapselect_by(f) {
	  var heap = heap_by(f);
	
	  // Returns a new array containing the top k elements in the array a[lo:hi].
	  // The returned array is not sorted, but maintains the heap property. If k is
	  // greater than hi - lo, then fewer than k elements will be returned. The
	  // order of elements in a is unchanged by this operation.
	  function heapselect(a, lo, hi, k) {
	    var queue = new Array(k = Math.min(hi - lo, k)),
	        min,
	        i,
	        x,
	        d;
	
	    for (i = 0; i < k; ++i) queue[i] = a[lo++];
	    heap(queue, 0, k);
	
	    if (lo < hi) {
	      min = f(queue[0]);
	      do {
	        if (x = f(d = a[lo]) > min) {
	          queue[0] = d;
	          min = f(heap(queue, 0, k)[0]);
	        }
	      } while (++lo < hi);
	    }
	
	    return queue;
	  }
	
	  return heapselect;
	}
	var insertionsort = crossfilter.insertionsort = insertionsort_by(crossfilter_identity);
	
	insertionsort.by = insertionsort_by;
	
	function insertionsort_by(f) {
	
	  function insertionsort(a, lo, hi) {
	    for (var i = lo + 1; i < hi; ++i) {
	      for (var j = i, t = a[i], x = f(t); j > lo && f(a[j - 1]) > x; --j) {
	        a[j] = a[j - 1];
	      }
	      a[j] = t;
	    }
	    return a;
	  }
	
	  return insertionsort;
	}
	// Algorithm designed by Vladimir Yaroslavskiy.
	// Implementation based on the Dart project; see lib/dart/LICENSE for details.
	
	var quicksort = crossfilter.quicksort = quicksort_by(crossfilter_identity);
	
	quicksort.by = quicksort_by;
	
	function quicksort_by(f) {
	  var insertionsort = insertionsort_by(f);
	
	  function sort(a, lo, hi) {
	    return (hi - lo < quicksort_sizeThreshold
	        ? insertionsort
	        : quicksort)(a, lo, hi);
	  }
	
	  function quicksort(a, lo, hi) {
	    // Compute the two pivots by looking at 5 elements.
	    var sixth = (hi - lo) / 6 | 0,
	        i1 = lo + sixth,
	        i5 = hi - 1 - sixth,
	        i3 = lo + hi - 1 >> 1,  // The midpoint.
	        i2 = i3 - sixth,
	        i4 = i3 + sixth;
	
	    var e1 = a[i1], x1 = f(e1),
	        e2 = a[i2], x2 = f(e2),
	        e3 = a[i3], x3 = f(e3),
	        e4 = a[i4], x4 = f(e4),
	        e5 = a[i5], x5 = f(e5);
	
	    var t;
	
	    // Sort the selected 5 elements using a sorting network.
	    if (x1 > x2) t = e1, e1 = e2, e2 = t, t = x1, x1 = x2, x2 = t;
	    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;
	    if (x1 > x3) t = e1, e1 = e3, e3 = t, t = x1, x1 = x3, x3 = t;
	    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;
	    if (x1 > x4) t = e1, e1 = e4, e4 = t, t = x1, x1 = x4, x4 = t;
	    if (x3 > x4) t = e3, e3 = e4, e4 = t, t = x3, x3 = x4, x4 = t;
	    if (x2 > x5) t = e2, e2 = e5, e5 = t, t = x2, x2 = x5, x5 = t;
	    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;
	    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;
	
	    var pivot1 = e2, pivotValue1 = x2,
	        pivot2 = e4, pivotValue2 = x4;
	
	    // e2 and e4 have been saved in the pivot variables. They will be written
	    // back, once the partitioning is finished.
	    a[i1] = e1;
	    a[i2] = a[lo];
	    a[i3] = e3;
	    a[i4] = a[hi - 1];
	    a[i5] = e5;
	
	    var less = lo + 1,   // First element in the middle partition.
	        great = hi - 2;  // Last element in the middle partition.
	
	    // Note that for value comparison, <, <=, >= and > coerce to a primitive via
	    // Object.prototype.valueOf; == and === do not, so in order to be consistent
	    // with natural order (such as for Date objects), we must do two compares.
	    var pivotsEqual = pivotValue1 <= pivotValue2 && pivotValue1 >= pivotValue2;
	    if (pivotsEqual) {
	
	      // Degenerated case where the partitioning becomes a dutch national flag
	      // problem.
	      //
	      // [ |  < pivot  | == pivot | unpartitioned | > pivot  | ]
	      //  ^             ^          ^             ^            ^
	      // left         less         k           great         right
	      //
	      // a[left] and a[right] are undefined and are filled after the
	      // partitioning.
	      //
	      // Invariants:
	      //   1) for x in ]left, less[ : x < pivot.
	      //   2) for x in [less, k[ : x == pivot.
	      //   3) for x in ]great, right[ : x > pivot.
	      for (var k = less; k <= great; ++k) {
	        var ek = a[k], xk = f(ek);
	        if (xk < pivotValue1) {
	          if (k !== less) {
	            a[k] = a[less];
	            a[less] = ek;
	          }
	          ++less;
	        } else if (xk > pivotValue1) {
	
	          // Find the first element <= pivot in the range [k - 1, great] and
	          // put [:ek:] there. We know that such an element must exist:
	          // When k == less, then el3 (which is equal to pivot) lies in the
	          // interval. Otherwise a[k - 1] == pivot and the search stops at k-1.
	          // Note that in the latter case invariant 2 will be violated for a
	          // short amount of time. The invariant will be restored when the
	          // pivots are put into their final positions.
	          while (true) {
	            var greatValue = f(a[great]);
	            if (greatValue > pivotValue1) {
	              great--;
	              // This is the only location in the while-loop where a new
	              // iteration is started.
	              continue;
	            } else if (greatValue < pivotValue1) {
	              // Triple exchange.
	              a[k] = a[less];
	              a[less++] = a[great];
	              a[great--] = ek;
	              break;
	            } else {
	              a[k] = a[great];
	              a[great--] = ek;
	              // Note: if great < k then we will exit the outer loop and fix
	              // invariant 2 (which we just violated).
	              break;
	            }
	          }
	        }
	      }
	    } else {
	
	      // We partition the list into three parts:
	      //  1. < pivot1
	      //  2. >= pivot1 && <= pivot2
	      //  3. > pivot2
	      //
	      // During the loop we have:
	      // [ | < pivot1 | >= pivot1 && <= pivot2 | unpartitioned  | > pivot2  | ]
	      //  ^            ^                        ^              ^             ^
	      // left         less                     k              great        right
	      //
	      // a[left] and a[right] are undefined and are filled after the
	      // partitioning.
	      //
	      // Invariants:
	      //   1. for x in ]left, less[ : x < pivot1
	      //   2. for x in [less, k[ : pivot1 <= x && x <= pivot2
	      //   3. for x in ]great, right[ : x > pivot2
	      for (var k = less; k <= great; k++) {
	        var ek = a[k], xk = f(ek);
	        if (xk < pivotValue1) {
	          if (k !== less) {
	            a[k] = a[less];
	            a[less] = ek;
	          }
	          ++less;
	        } else {
	          if (xk > pivotValue2) {
	            while (true) {
	              var greatValue = f(a[great]);
	              if (greatValue > pivotValue2) {
	                great--;
	                if (great < k) break;
	                // This is the only location inside the loop where a new
	                // iteration is started.
	                continue;
	              } else {
	                // a[great] <= pivot2.
	                if (greatValue < pivotValue1) {
	                  // Triple exchange.
	                  a[k] = a[less];
	                  a[less++] = a[great];
	                  a[great--] = ek;
	                } else {
	                  // a[great] >= pivot1.
	                  a[k] = a[great];
	                  a[great--] = ek;
	                }
	                break;
	              }
	            }
	          }
	        }
	      }
	    }
	
	    // Move pivots into their final positions.
	    // We shrunk the list from both sides (a[left] and a[right] have
	    // meaningless values in them) and now we move elements from the first
	    // and third partition into these locations so that we can store the
	    // pivots.
	    a[lo] = a[less - 1];
	    a[less - 1] = pivot1;
	    a[hi - 1] = a[great + 1];
	    a[great + 1] = pivot2;
	
	    // The list is now partitioned into three partitions:
	    // [ < pivot1   | >= pivot1 && <= pivot2   |  > pivot2   ]
	    //  ^            ^                        ^             ^
	    // left         less                     great        right
	
	    // Recursive descent. (Don't include the pivot values.)
	    sort(a, lo, less - 1);
	    sort(a, great + 2, hi);
	
	    if (pivotsEqual) {
	      // All elements in the second partition are equal to the pivot. No
	      // need to sort them.
	      return a;
	    }
	
	    // In theory it should be enough to call _doSort recursively on the second
	    // partition.
	    // The Android source however removes the pivot elements from the recursive
	    // call if the second partition is too large (more than 2/3 of the list).
	    if (less < i1 && great > i5) {
	      var lessValue, greatValue;
	      while ((lessValue = f(a[less])) <= pivotValue1 && lessValue >= pivotValue1) ++less;
	      while ((greatValue = f(a[great])) <= pivotValue2 && greatValue >= pivotValue2) --great;
	
	      // Copy paste of the previous 3-way partitioning with adaptions.
	      //
	      // We partition the list into three parts:
	      //  1. == pivot1
	      //  2. > pivot1 && < pivot2
	      //  3. == pivot2
	      //
	      // During the loop we have:
	      // [ == pivot1 | > pivot1 && < pivot2 | unpartitioned  | == pivot2 ]
	      //              ^                      ^              ^
	      //            less                     k              great
	      //
	      // Invariants:
	      //   1. for x in [ *, less[ : x == pivot1
	      //   2. for x in [less, k[ : pivot1 < x && x < pivot2
	      //   3. for x in ]great, * ] : x == pivot2
	      for (var k = less; k <= great; k++) {
	        var ek = a[k], xk = f(ek);
	        if (xk <= pivotValue1 && xk >= pivotValue1) {
	          if (k !== less) {
	            a[k] = a[less];
	            a[less] = ek;
	          }
	          less++;
	        } else {
	          if (xk <= pivotValue2 && xk >= pivotValue2) {
	            while (true) {
	              var greatValue = f(a[great]);
	              if (greatValue <= pivotValue2 && greatValue >= pivotValue2) {
	                great--;
	                if (great < k) break;
	                // This is the only location inside the loop where a new
	                // iteration is started.
	                continue;
	              } else {
	                // a[great] < pivot2.
	                if (greatValue < pivotValue1) {
	                  // Triple exchange.
	                  a[k] = a[less];
	                  a[less++] = a[great];
	                  a[great--] = ek;
	                } else {
	                  // a[great] == pivot1.
	                  a[k] = a[great];
	                  a[great--] = ek;
	                }
	                break;
	              }
	            }
	          }
	        }
	      }
	    }
	
	    // The second partition has now been cleared of pivot elements and looks
	    // as follows:
	    // [  *  |  > pivot1 && < pivot2  | * ]
	    //        ^                      ^
	    //       less                  great
	    // Sort the second partition using recursive descent.
	
	    // The second partition looks as follows:
	    // [  *  |  >= pivot1 && <= pivot2  | * ]
	    //        ^                        ^
	    //       less                    great
	    // Simply sort it by recursive descent.
	
	    return sort(a, less, great + 1);
	  }
	
	  return sort;
	}
	
	var quicksort_sizeThreshold = 32;
	var crossfilter_array8 = crossfilter_arrayUntyped,
	    crossfilter_array16 = crossfilter_arrayUntyped,
	    crossfilter_array32 = crossfilter_arrayUntyped,
	    crossfilter_arrayLengthen = crossfilter_arrayLengthenUntyped,
	    crossfilter_arrayWiden = crossfilter_arrayWidenUntyped;
	
	if (typeof Uint8Array !== "undefined") {
	  crossfilter_array8 = function(n) { return new Uint8Array(n); };
	  crossfilter_array16 = function(n) { return new Uint16Array(n); };
	  crossfilter_array32 = function(n) { return new Uint32Array(n); };
	
	  crossfilter_arrayLengthen = function(array, length) {
	    if (array.length >= length) return array;
	    var copy = new array.constructor(length);
	    copy.set(array);
	    return copy;
	  };
	
	  crossfilter_arrayWiden = function(array, width) {
	    var copy;
	    switch (width) {
	      case 16: copy = crossfilter_array16(array.length); break;
	      case 32: copy = crossfilter_array32(array.length); break;
	      default: throw new Error("invalid array width!");
	    }
	    copy.set(array);
	    return copy;
	  };
	}
	
	function crossfilter_arrayUntyped(n) {
	  var array = new Array(n), i = -1;
	  while (++i < n) array[i] = 0;
	  return array;
	}
	
	function crossfilter_arrayLengthenUntyped(array, length) {
	  var n = array.length;
	  while (n < length) array[n++] = 0;
	  return array;
	}
	
	function crossfilter_arrayWidenUntyped(array, width) {
	  if (width > 32) throw new Error("invalid array width!");
	  return array;
	}
	function crossfilter_filterExact(bisect, value) {
	  return function(values) {
	    var n = values.length;
	    return [bisect.left(values, value, 0, n), bisect.right(values, value, 0, n)];
	  };
	}
	
	function crossfilter_filterRange(bisect, range) {
	  var min = range[0],
	      max = range[1];
	  return function(values) {
	    var n = values.length;
	    return [bisect.left(values, min, 0, n), bisect.left(values, max, 0, n)];
	  };
	}
	
	function crossfilter_filterAll(values) {
	  return [0, values.length];
	}
	function crossfilter_null() {
	  return null;
	}
	function crossfilter_zero() {
	  return 0;
	}
	function crossfilter_reduceIncrement(p) {
	  return p + 1;
	}
	
	function crossfilter_reduceDecrement(p) {
	  return p - 1;
	}
	
	function crossfilter_reduceAdd(f) {
	  return function(p, v) {
	    return p + +f(v);
	  };
	}
	
	function crossfilter_reduceSubtract(f) {
	  return function(p, v) {
	    return p - f(v);
	  };
	}
	exports.crossfilter = crossfilter;
	
	function crossfilter() {
	  var crossfilter = {
	    add: add,
	    remove: removeData,
	    dimension: dimension,
	    groupAll: groupAll,
	    size: size
	  };
	
	  var data = [], // the records
	      n = 0, // the number of records; data.length
	      m = 0, // a bit mask representing which dimensions are in use
	      M = 8, // number of dimensions that can fit in `filters`
	      filters = crossfilter_array8(0), // M bits per record; 1 is filtered out
	      filterListeners = [], // when the filters change
	      dataListeners = [], // when data is added
	      removeDataListeners = []; // when data is removed
	
	  // Adds the specified new records to this crossfilter.
	  function add(newData) {
	    var n0 = n,
	        n1 = newData.length;
	
	    // If there's actually new data to add…
	    // Merge the new data into the existing data.
	    // Lengthen the filter bitset to handle the new records.
	    // Notify listeners (dimensions and groups) that new data is available.
	    if (n1) {
	      data = data.concat(newData);
	      filters = crossfilter_arrayLengthen(filters, n += n1);
	      dataListeners.forEach(function(l) { l(newData, n0, n1); });
	    }
	
	    return crossfilter;
	  }
	
	  // Removes all records that match the current filters.
	  function removeData() {
	    var newIndex = crossfilter_index(n, n),
	        removed = [];
	    for (var i = 0, j = 0; i < n; ++i) {
	      if (filters[i]) newIndex[i] = j++;
	      else removed.push(i);
	    }
	
	    // Remove all matching records from groups.
	    filterListeners.forEach(function(l) { l(0, [], removed); });
	
	    // Update indexes.
	    removeDataListeners.forEach(function(l) { l(newIndex); });
	
	    // Remove old filters and data by overwriting.
	    for (var i = 0, j = 0, k; i < n; ++i) {
	      if (k = filters[i]) {
	        if (i !== j) filters[j] = k, data[j] = data[i];
	        ++j;
	      }
	    }
	    data.length = j;
	    while (n > j) filters[--n] = 0;
	  }
	
	  // Adds a new dimension with the specified value accessor function.
	  function dimension(value) {
	    var dimension = {
	      filter: filter,
	      filterExact: filterExact,
	      filterRange: filterRange,
	      filterFunction: filterFunction,
	      filterAll: filterAll,
	      top: top,
	      bottom: bottom,
	      group: group,
	      groupAll: groupAll,
	      dispose: dispose,
	      remove: dispose // for backwards-compatibility
	    };
	
	    var one = ~m & -~m, // lowest unset bit as mask, e.g., 00001000
	        zero = ~one, // inverted one, e.g., 11110111
	        values, // sorted, cached array
	        index, // value rank ↦ object id
	        newValues, // temporary array storing newly-added values
	        newIndex, // temporary array storing newly-added index
	        sort = quicksort_by(function(i) { return newValues[i]; }),
	        refilter = crossfilter_filterAll, // for recomputing filter
	        refilterFunction, // the custom filter function in use
	        indexListeners = [], // when data is added
	        dimensionGroups = [],
	        lo0 = 0,
	        hi0 = 0;
	
	    // Updating a dimension is a two-stage process. First, we must update the
	    // associated filters for the newly-added records. Once all dimensions have
	    // updated their filters, the groups are notified to update.
	    dataListeners.unshift(preAdd);
	    dataListeners.push(postAdd);
	
	    removeDataListeners.push(removeData);
	
	    // Incorporate any existing data into this dimension, and make sure that the
	    // filter bitset is wide enough to handle the new dimension.
	    m |= one;
	    if (M >= 32 ? !one : m & -(1 << M)) {
	      filters = crossfilter_arrayWiden(filters, M <<= 1);
	    }
	    preAdd(data, 0, n);
	    postAdd(data, 0, n);
	
	    // Incorporates the specified new records into this dimension.
	    // This function is responsible for updating filters, values, and index.
	    function preAdd(newData, n0, n1) {
	
	      // Permute new values into natural order using a sorted index.
	      newValues = newData.map(value);
	      newIndex = sort(crossfilter_range(n1), 0, n1);
	      newValues = permute(newValues, newIndex);
	
	      // Bisect newValues to determine which new records are selected.
	      var bounds = refilter(newValues), lo1 = bounds[0], hi1 = bounds[1], i;
	      if (refilterFunction) {
	        for (i = 0; i < n1; ++i) {
	          if (!refilterFunction(newValues[i], i)) filters[newIndex[i] + n0] |= one;
	        }
	      } else {
	        for (i = 0; i < lo1; ++i) filters[newIndex[i] + n0] |= one;
	        for (i = hi1; i < n1; ++i) filters[newIndex[i] + n0] |= one;
	      }
	
	      // If this dimension previously had no data, then we don't need to do the
	      // more expensive merge operation; use the new values and index as-is.
	      if (!n0) {
	        values = newValues;
	        index = newIndex;
	        lo0 = lo1;
	        hi0 = hi1;
	        return;
	      }
	
	      var oldValues = values,
	          oldIndex = index,
	          i0 = 0,
	          i1 = 0;
	
	      // Otherwise, create new arrays into which to merge new and old.
	      values = new Array(n);
	      index = crossfilter_index(n, n);
	
	      // Merge the old and new sorted values, and old and new index.
	      for (i = 0; i0 < n0 && i1 < n1; ++i) {
	        if (oldValues[i0] < newValues[i1]) {
	          values[i] = oldValues[i0];
	          index[i] = oldIndex[i0++];
	        } else {
	          values[i] = newValues[i1];
	          index[i] = newIndex[i1++] + n0;
	        }
	      }
	
	      // Add any remaining old values.
	      for (; i0 < n0; ++i0, ++i) {
	        values[i] = oldValues[i0];
	        index[i] = oldIndex[i0];
	      }
	
	      // Add any remaining new values.
	      for (; i1 < n1; ++i1, ++i) {
	        values[i] = newValues[i1];
	        index[i] = newIndex[i1] + n0;
	      }
	
	      // Bisect again to recompute lo0 and hi0.
	      bounds = refilter(values), lo0 = bounds[0], hi0 = bounds[1];
	    }
	
	    // When all filters have updated, notify index listeners of the new values.
	    function postAdd(newData, n0, n1) {
	      indexListeners.forEach(function(l) { l(newValues, newIndex, n0, n1); });
	      newValues = newIndex = null;
	    }
	
	    function removeData(reIndex) {
	      for (var i = 0, j = 0, k; i < n; ++i) {
	        if (filters[k = index[i]]) {
	          if (i !== j) values[j] = values[i];
	          index[j] = reIndex[k];
	          ++j;
	        }
	      }
	      values.length = j;
	      while (j < n) index[j++] = 0;
	
	      // Bisect again to recompute lo0 and hi0.
	      var bounds = refilter(values);
	      lo0 = bounds[0], hi0 = bounds[1];
	    }
	
	    // Updates the selected values based on the specified bounds [lo, hi].
	    // This implementation is used by all the public filter methods.
	    function filterIndexBounds(bounds) {
	      var lo1 = bounds[0],
	          hi1 = bounds[1];
	
	      if (refilterFunction) {
	        refilterFunction = null;
	        filterIndexFunction(function(d, i) { return lo1 <= i && i < hi1; });
	        lo0 = lo1;
	        hi0 = hi1;
	        return dimension;
	      }
	
	      var i,
	          j,
	          k,
	          added = [],
	          removed = [];
	
	      // Fast incremental update based on previous lo index.
	      if (lo1 < lo0) {
	        for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {
	          filters[k = index[i]] ^= one;
	          added.push(k);
	        }
	      } else if (lo1 > lo0) {
	        for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {
	          filters[k = index[i]] ^= one;
	          removed.push(k);
	        }
	      }
	
	      // Fast incremental update based on previous hi index.
	      if (hi1 > hi0) {
	        for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {
	          filters[k = index[i]] ^= one;
	          added.push(k);
	        }
	      } else if (hi1 < hi0) {
	        for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {
	          filters[k = index[i]] ^= one;
	          removed.push(k);
	        }
	      }
	
	      lo0 = lo1;
	      hi0 = hi1;
	      filterListeners.forEach(function(l) { l(one, added, removed); });
	      return dimension;
	    }
	
	    // Filters this dimension using the specified range, value, or null.
	    // If the range is null, this is equivalent to filterAll.
	    // If the range is an array, this is equivalent to filterRange.
	    // Otherwise, this is equivalent to filterExact.
	    function filter(range) {
	      return range == null
	          ? filterAll() : Array.isArray(range)
	          ? filterRange(range) : typeof range === "function"
	          ? filterFunction(range)
	          : filterExact(range);
	    }
	
	    // Filters this dimension to select the exact value.
	    function filterExact(value) {
	      return filterIndexBounds((refilter = crossfilter_filterExact(bisect, value))(values));
	    }
	
	    // Filters this dimension to select the specified range [lo, hi].
	    // The lower bound is inclusive, and the upper bound is exclusive.
	    function filterRange(range) {
	      return filterIndexBounds((refilter = crossfilter_filterRange(bisect, range))(values));
	    }
	
	    // Clears any filters on this dimension.
	    function filterAll() {
	      return filterIndexBounds((refilter = crossfilter_filterAll)(values));
	    }
	
	    // Filters this dimension using an arbitrary function.
	    function filterFunction(f) {
	      refilter = crossfilter_filterAll;
	
	      filterIndexFunction(refilterFunction = f);
	
	      lo0 = 0;
	      hi0 = n;
	
	      return dimension;
	    }
	
	    function filterIndexFunction(f) {
	      var i,
	          k,
	          x,
	          added = [],
	          removed = [];
	
	      for (i = 0; i < n; ++i) {
	        if (!(filters[k = index[i]] & one) ^ !!(x = f(values[i], i))) {
	          if (x) filters[k] &= zero, added.push(k);
	          else filters[k] |= one, removed.push(k);
	        }
	      }
	      filterListeners.forEach(function(l) { l(one, added, removed); });
	    }
	
	    // Returns the top K selected records based on this dimension's order.
	    // Note: observes this dimension's filter, unlike group and groupAll.
	    function top(k) {
	      var array = [],
	          i = hi0,
	          j;
	
	      while (--i >= lo0 && k > 0) {
	        if (!filters[j = index[i]]) {
	          array.push(data[j]);
	          --k;
	        }
	      }
	
	      return array;
	    }
	
	    // Returns the bottom K selected records based on this dimension's order.
	    // Note: observes this dimension's filter, unlike group and groupAll.
	    function bottom(k) {
	      var array = [],
	          i = lo0,
	          j;
	
	      while (i < hi0 && k > 0) {
	        if (!filters[j = index[i]]) {
	          array.push(data[j]);
	          --k;
	        }
	        i++;
	      }
	
	      return array;
	    }
	
	    // Adds a new group to this dimension, using the specified key function.
	    function group(key) {
	      var group = {
	        top: top,
	        all: all,
	        reduce: reduce,
	        reduceCount: reduceCount,
	        reduceSum: reduceSum,
	        order: order,
	        orderNatural: orderNatural,
	        size: size,
	        dispose: dispose,
	        remove: dispose // for backwards-compatibility
	      };
	
	      // Ensure that this group will be removed when the dimension is removed.
	      dimensionGroups.push(group);
	
	      var groups, // array of {key, value}
	          groupIndex, // object id ↦ group id
	          groupWidth = 8,
	          groupCapacity = crossfilter_capacity(groupWidth),
	          k = 0, // cardinality
	          select,
	          heap,
	          reduceAdd,
	          reduceRemove,
	          reduceInitial,
	          update = crossfilter_null,
	          reset = crossfilter_null,
	          resetNeeded = true,
	          groupAll = key === crossfilter_null;
	
	      if (arguments.length < 1) key = crossfilter_identity;
	
	      // The group listens to the crossfilter for when any dimension changes, so
	      // that it can update the associated reduce values. It must also listen to
	      // the parent dimension for when data is added, and compute new keys.
	      filterListeners.push(update);
	      indexListeners.push(add);
	      removeDataListeners.push(removeData);
	
	      // Incorporate any existing data into the grouping.
	      add(values, index, 0, n);
	
	      // Incorporates the specified new values into this group.
	      // This function is responsible for updating groups and groupIndex.
	      function add(newValues, newIndex, n0, n1) {
	        var oldGroups = groups,
	            reIndex = crossfilter_index(k, groupCapacity),
	            add = reduceAdd,
	            initial = reduceInitial,
	            k0 = k, // old cardinality
	            i0 = 0, // index of old group
	            i1 = 0, // index of new record
	            j, // object id
	            g0, // old group
	            x0, // old key
	            x1, // new key
	            g, // group to add
	            x; // key of group to add
	
	        // If a reset is needed, we don't need to update the reduce values.
	        if (resetNeeded) add = initial = crossfilter_null;
	
	        // Reset the new groups (k is a lower bound).
	        // Also, make sure that groupIndex exists and is long enough.
	        groups = new Array(k), k = 0;
	        groupIndex = k0 > 1 ? crossfilter_arrayLengthen(groupIndex, n) : crossfilter_index(n, groupCapacity);
	
	        // Get the first old key (x0 of g0), if it exists.
	        if (k0) x0 = (g0 = oldGroups[0]).key;
	
	        // Find the first new key (x1), skipping NaN keys.
	        while (i1 < n1 && !((x1 = key(newValues[i1])) >= x1)) ++i1;
	
	        // While new keys remain…
	        while (i1 < n1) {
	
	          // Determine the lesser of the two current keys; new and old.
	          // If there are no old keys remaining, then always add the new key.
	          if (g0 && x0 <= x1) {
	            g = g0, x = x0;
	
	            // Record the new index of the old group.
	            reIndex[i0] = k;
	
	            // Retrieve the next old key.
	            if (g0 = oldGroups[++i0]) x0 = g0.key;
	          } else {
	            g = {key: x1, value: initial()}, x = x1;
	          }
	
	          // Add the lesser group.
	          groups[k] = g;
	
	          // Add any selected records belonging to the added group, while
	          // advancing the new key and populating the associated group index.
	          while (!(x1 > x)) {
	            groupIndex[j = newIndex[i1] + n0] = k;
	            if (!(filters[j] & zero)) g.value = add(g.value, data[j]);
	            if (++i1 >= n1) break;
	            x1 = key(newValues[i1]);
	          }
	
	          groupIncrement();
	        }
	
	        // Add any remaining old groups that were greater than all new keys.
	        // No incremental reduce is needed; these groups have no new records.
	        // Also record the new index of the old group.
	        while (i0 < k0) {
	          groups[reIndex[i0] = k] = oldGroups[i0++];
	          groupIncrement();
	        }
	
	        // If we added any new groups before any old groups,
	        // update the group index of all the old records.
	        if (k > i0) for (i0 = 0; i0 < n0; ++i0) {
	          groupIndex[i0] = reIndex[groupIndex[i0]];
	        }
	
	        // Modify the update and reset behavior based on the cardinality.
	        // If the cardinality is less than or equal to one, then the groupIndex
	        // is not needed. If the cardinality is zero, then there are no records
	        // and therefore no groups to update or reset. Note that we also must
	        // change the registered listener to point to the new method.
	        j = filterListeners.indexOf(update);
	        if (k > 1) {
	          update = updateMany;
	          reset = resetMany;
	        } else {
	          if (!k && groupAll) {
	            k = 1;
	            groups = [{key: null, value: initial()}];
	          }
	          if (k === 1) {
	            update = updateOne;
	            reset = resetOne;
	          } else {
	            update = crossfilter_null;
	            reset = crossfilter_null;
	          }
	          groupIndex = null;
	        }
	        filterListeners[j] = update;
	
	        // Count the number of added groups,
	        // and widen the group index as needed.
	        function groupIncrement() {
	          if (++k === groupCapacity) {
	            reIndex = crossfilter_arrayWiden(reIndex, groupWidth <<= 1);
	            groupIndex = crossfilter_arrayWiden(groupIndex, groupWidth);
	            groupCapacity = crossfilter_capacity(groupWidth);
	          }
	        }
	      }
	
	      function removeData() {
	        if (k > 1) {
	          var oldK = k,
	              oldGroups = groups,
	              seenGroups = crossfilter_index(oldK, oldK);
	
	          // Filter out non-matches by copying matching group index entries to
	          // the beginning of the array.
	          for (var i = 0, j = 0; i < n; ++i) {
	            if (filters[i]) {
	              seenGroups[groupIndex[j] = groupIndex[i]] = 1;
	              ++j;
	            }
	          }
	
	          // Reassemble groups including only those groups that were referred
	          // to by matching group index entries.  Note the new group index in
	          // seenGroups.
	          groups = [], k = 0;
	          for (i = 0; i < oldK; ++i) {
	            if (seenGroups[i]) {
	              seenGroups[i] = k++;
	              groups.push(oldGroups[i]);
	            }
	          }
	
	          if (k > 1) {
	            // Reindex the group index using seenGroups to find the new index.
	            for (var i = 0; i < j; ++i) groupIndex[i] = seenGroups[groupIndex[i]];
	          } else {
	            groupIndex = null;
	          }
	          filterListeners[filterListeners.indexOf(update)] = k > 1
	              ? (reset = resetMany, update = updateMany)
	              : k === 1 ? (reset = resetOne, update = updateOne)
	              : reset = update = crossfilter_null;
	        } else if (k === 1) {
	          if (groupAll) return;
	          for (var i = 0; i < n; ++i) if (filters[i]) return;
	          groups = [], k = 0;
	          filterListeners[filterListeners.indexOf(update)] =
	          update = reset = crossfilter_null;
	        }
	      }
	
	      // Reduces the specified selected or deselected records.
	      // This function is only used when the cardinality is greater than 1.
	      function updateMany(filterOne, added, removed) {
	        if (filterOne === one || resetNeeded) return;
	
	        var i,
	            k,
	            n,
	            g;
	
	        // Add the added values.
	        for (i = 0, n = added.length; i < n; ++i) {
	          if (!(filters[k = added[i]] & zero)) {
	            g = groups[groupIndex[k]];
	            g.value = reduceAdd(g.value, data[k]);
	          }
	        }
	
	        // Remove the removed values.
	        for (i = 0, n = removed.length; i < n; ++i) {
	          if ((filters[k = removed[i]] & zero) === filterOne) {
	            g = groups[groupIndex[k]];
	            g.value = reduceRemove(g.value, data[k]);
	          }
	        }
	      }
	
	      // Reduces the specified selected or deselected records.
	      // This function is only used when the cardinality is 1.
	      function updateOne(filterOne, added, removed) {
	        if (filterOne === one || resetNeeded) return;
	
	        var i,
	            k,
	            n,
	            g = groups[0];
	
	        // Add the added values.
	        for (i = 0, n = added.length; i < n; ++i) {
	          if (!(filters[k = added[i]] & zero)) {
	            g.value = reduceAdd(g.value, data[k]);
	          }
	        }
	
	        // Remove the removed values.
	        for (i = 0, n = removed.length; i < n; ++i) {
	          if ((filters[k = removed[i]] & zero) === filterOne) {
	            g.value = reduceRemove(g.value, data[k]);
	          }
	        }
	      }
	
	      // Recomputes the group reduce values from scratch.
	      // This function is only used when the cardinality is greater than 1.
	      function resetMany() {
	        var i,
	            g;
	
	        // Reset all group values.
	        for (i = 0; i < k; ++i) {
	          groups[i].value = reduceInitial();
	        }
	
	        // Add any selected records.
	        for (i = 0; i < n; ++i) {
	          if (!(filters[i] & zero)) {
	            g = groups[groupIndex[i]];
	            g.value = reduceAdd(g.value, data[i]);
	          }
	        }
	      }
	
	      // Recomputes the group reduce values from scratch.
	      // This function is only used when the cardinality is 1.
	      function resetOne() {
	        var i,
	            g = groups[0];
	
	        // Reset the singleton group values.
	        g.value = reduceInitial();
	
	        // Add any selected records.
	        for (i = 0; i < n; ++i) {
	          if (!(filters[i] & zero)) {
	            g.value = reduceAdd(g.value, data[i]);
	          }
	        }
	      }
	
	      // Returns the array of group values, in the dimension's natural order.
	      function all() {
	        if (resetNeeded) reset(), resetNeeded = false;
	        return groups;
	      }
	
	      // Returns a new array containing the top K group values, in reduce order.
	      function top(k) {
	        var top = select(all(), 0, groups.length, k);
	        return heap.sort(top, 0, top.length);
	      }
	
	      // Sets the reduce behavior for this group to use the specified functions.
	      // This method lazily recomputes the reduce values, waiting until needed.
	      function reduce(add, remove, initial) {
	        reduceAdd = add;
	        reduceRemove = remove;
	        reduceInitial = initial;
	        resetNeeded = true;
	        return group;
	      }
	
	      // A convenience method for reducing by count.
	      function reduceCount() {
	        return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);
	      }
	
	      // A convenience method for reducing by sum(value).
	      function reduceSum(value) {
	        return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);
	      }
	
	      // Sets the reduce order, using the specified accessor.
	      function order(value) {
	        select = heapselect_by(valueOf);
	        heap = heap_by(valueOf);
	        function valueOf(d) { return value(d.value); }
	        return group;
	      }
	
	      // A convenience method for natural ordering by reduce value.
	      function orderNatural() {
	        return order(crossfilter_identity);
	      }
	
	      // Returns the cardinality of this group, irrespective of any filters.
	      function size() {
	        return k;
	      }
	
	      // Removes this group and associated event listeners.
	      function dispose() {
	        var i = filterListeners.indexOf(update);
	        if (i >= 0) filterListeners.splice(i, 1);
	        i = indexListeners.indexOf(add);
	        if (i >= 0) indexListeners.splice(i, 1);
	        i = removeDataListeners.indexOf(removeData);
	        if (i >= 0) removeDataListeners.splice(i, 1);
	        return group;
	      }
	
	      return reduceCount().orderNatural();
	    }
	
	    // A convenience function for generating a singleton group.
	    function groupAll() {
	      var g = group(crossfilter_null), all = g.all;
	      delete g.all;
	      delete g.top;
	      delete g.order;
	      delete g.orderNatural;
	      delete g.size;
	      g.value = function() { return all()[0].value; };
	      return g;
	    }
	
	    // Removes this dimension and associated groups and event listeners.
	    function dispose() {
	      dimensionGroups.forEach(function(group) { group.dispose(); });
	      var i = dataListeners.indexOf(preAdd);
	      if (i >= 0) dataListeners.splice(i, 1);
	      i = dataListeners.indexOf(postAdd);
	      if (i >= 0) dataListeners.splice(i, 1);
	      i = removeDataListeners.indexOf(removeData);
	      if (i >= 0) removeDataListeners.splice(i, 1);
	      m &= zero;
	      return filterAll();
	    }
	
	    return dimension;
	  }
	
	  // A convenience method for groupAll on a dummy dimension.
	  // This implementation can be optimized since it always has cardinality 1.
	  function groupAll() {
	    var group = {
	      reduce: reduce,
	      reduceCount: reduceCount,
	      reduceSum: reduceSum,
	      value: value,
	      dispose: dispose,
	      remove: dispose // for backwards-compatibility
	    };
	
	    var reduceValue,
	        reduceAdd,
	        reduceRemove,
	        reduceInitial,
	        resetNeeded = true;
	
	    // The group listens to the crossfilter for when any dimension changes, so
	    // that it can update the reduce value. It must also listen to the parent
	    // dimension for when data is added.
	    filterListeners.push(update);
	    dataListeners.push(add);
	
	    // For consistency; actually a no-op since resetNeeded is true.
	    add(data, 0, n);
	
	    // Incorporates the specified new values into this group.
	    function add(newData, n0) {
	      var i;
	
	      if (resetNeeded) return;
	
	      // Add the added values.
	      for (i = n0; i < n; ++i) {
	        if (!filters[i]) {
	          reduceValue = reduceAdd(reduceValue, data[i]);
	        }
	      }
	    }
	
	    // Reduces the specified selected or deselected records.
	    function update(filterOne, added, removed) {
	      var i,
	          k,
	          n;
	
	      if (resetNeeded) return;
	
	      // Add the added values.
	      for (i = 0, n = added.length; i < n; ++i) {
	        if (!filters[k = added[i]]) {
	          reduceValue = reduceAdd(reduceValue, data[k]);
	        }
	      }
	
	      // Remove the removed values.
	      for (i = 0, n = removed.length; i < n; ++i) {
	        if (filters[k = removed[i]] === filterOne) {
	          reduceValue = reduceRemove(reduceValue, data[k]);
	        }
	      }
	    }
	
	    // Recomputes the group reduce value from scratch.
	    function reset() {
	      var i;
	
	      reduceValue = reduceInitial();
	
	      for (i = 0; i < n; ++i) {
	        if (!filters[i]) {
	          reduceValue = reduceAdd(reduceValue, data[i]);
	        }
	      }
	    }
	
	    // Sets the reduce behavior for this group to use the specified functions.
	    // This method lazily recomputes the reduce value, waiting until needed.
	    function reduce(add, remove, initial) {
	      reduceAdd = add;
	      reduceRemove = remove;
	      reduceInitial = initial;
	      resetNeeded = true;
	      return group;
	    }
	
	    // A convenience method for reducing by count.
	    function reduceCount() {
	      return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);
	    }
	
	    // A convenience method for reducing by sum(value).
	    function reduceSum(value) {
	      return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);
	    }
	
	    // Returns the computed reduce value.
	    function value() {
	      if (resetNeeded) reset(), resetNeeded = false;
	      return reduceValue;
	    }
	
	    // Removes this group and associated event listeners.
	    function dispose() {
	      var i = filterListeners.indexOf(update);
	      if (i >= 0) filterListeners.splice(i);
	      i = dataListeners.indexOf(add);
	      if (i >= 0) dataListeners.splice(i);
	      return group;
	    }
	
	    return reduceCount();
	  }
	
	  // Returns the number of records in this crossfilter, irrespective of any filters.
	  function size() {
	    return n;
	  }
	
	  return arguments.length
	      ? add(arguments[0])
	      : crossfilter;
	}
	
	// Returns an array of size n, big enough to store ids up to m.
	function crossfilter_index(n, m) {
	  return (m < 0x101
	      ? crossfilter_array8 : m < 0x10001
	      ? crossfilter_array16
	      : crossfilter_array32)(n);
	}
	
	// Constructs a new array of size n, with sequential values from 0 to n - 1.
	function crossfilter_range(n) {
	  var range = crossfilter_index(n, n);
	  for (var i = -1; ++i < n;) range[i] = i;
	  return range;
	}
	
	function crossfilter_capacity(w) {
	  return w === 8
	      ? 0x100 : w === 16
	      ? 0x10000
	      : 0x100000000;
	}
	})(typeof exports !== 'undefined' && exports || this);


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! 
	 *  dc 2.0.0-alpha.2 
	 *  http://dc-js.github.io/dc.js/
	 *  Copyright 2012 Nick Zhu and other contributors
	 *
	 *  Licensed under the Apache License, Version 2.0 (the "License");
	 *  you may not use this file except in compliance with the License.
	 *  You may obtain a copy of the License at
	 *
	 *      http://www.apache.org/licenses/LICENSE-2.0
	 *
	 *  Unless required by applicable law or agreed to in writing, software
	 *  distributed under the License is distributed on an "AS IS" BASIS,
	 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 *  See the License for the specific language governing permissions and
	 *  limitations under the License.
	 */
	
	(function() { function _dc(d3) {
	'use strict';
	
	/**
	#### Version 2.0.0-alpha.2
	
	The entire dc.js library is scoped under the **dc** name space. It does not introduce anything else
	into the global name space.
	
	#### Function Chaining
	Most dc functions are designed to allow function chaining, meaning they return the current chart
	instance whenever it is appropriate. This way chart configuration can be written in the following
	style:
	```js
	chart.width(300)
	    .height(300)
	    .filter("sunday")
	```
	The getter forms of functions do not participate in function chaining because they necessarily
	return values that are not the chart.  (Although some, such as `.svg` and `.xAxis`, return values
	that are chainable d3 objects.)
	
	**/
	var dc = {
	    version: "2.0.0-alpha.2",
	    constants: {
	        CHART_CLASS: "dc-chart",
	        DEBUG_GROUP_CLASS: "debug",
	        STACK_CLASS: "stack",
	        DESELECTED_CLASS: "deselected",
	        SELECTED_CLASS: "selected",
	        NODE_INDEX_NAME: "__index__",
	        GROUP_INDEX_NAME: "__group_index__",
	        DEFAULT_CHART_GROUP: "__default_chart_group__",
	        EVENT_DELAY: 40,
	        NEGLIGIBLE_NUMBER: 1e-10
	    },
	    _renderlet: null
	};
	
	dc.chartRegistry = function() {
	    // chartGroup:string => charts:array
	    var _chartMap = {};
	
	    function initializeChartGroup(group) {
	        if (!group)
	            group = dc.constants.DEFAULT_CHART_GROUP;
	
	        if (!_chartMap[group])
	            _chartMap[group] = [];
	
	        return group;
	    }
	
	    return {
	        has: function(chart) {
	            for (var e in _chartMap) {
	                if (_chartMap[e].indexOf(chart) >= 0)
	                    return true;
	            }
	            return false;
	        },
	
	        register: function(chart, group) {
	            group = initializeChartGroup(group);
	            _chartMap[group].push(chart);
	        },
	
	        deregister: function (chart, group) {
	            group = initializeChartGroup(group);
	            for (var i = 0; i < _chartMap[group].length; i++) {
	                if (_chartMap[group][i].anchorName() === chart.anchorName()) {
	                    _chartMap[group].splice(i, 1);
	                    break;
	                }
	            }
	        },
	
	        clear: function(group) {
	            if (group) {
	                delete _chartMap[group];
	            } else {
	                _chartMap = {};
	            }
	        },
	
	        list: function(group) {
	            group = initializeChartGroup(group);
	            return _chartMap[group];
	        }
	    };
	}();
	
	dc.registerChart = function(chart, group) {
	    dc.chartRegistry.register(chart, group);
	};
	
	dc.deregisterChart = function (chart, group) {
	    dc.chartRegistry.deregister(chart, group);
	};
	
	dc.hasChart = function(chart) {
	    return dc.chartRegistry.has(chart);
	};
	
	dc.deregisterAllCharts = function(group) {
	    dc.chartRegistry.clear(group);
	};
	
	/**
	## Utilities
	**/
	
	/**
	#### dc.filterAll([chartGroup])
	Clear all filters on all charts within the given chart group. If the chart group is not given then
	only charts that belong to the default chart group will be reset.
	**/
	dc.filterAll = function(group) {
	    var charts = dc.chartRegistry.list(group);
	    for (var i = 0; i < charts.length; ++i) {
	        charts[i].filterAll();
	    }
	};
	
	/**
	#### dc.refocusAll([chartGroup])
	Reset zoom level / focus on all charts that belong to the given chart group. If the chart group is
	not given then only charts that belong to the default chart group will be reset.
	**/
	dc.refocusAll = function(group) {
	    var charts = dc.chartRegistry.list(group);
	    for (var i = 0; i < charts.length; ++i) {
	        if (charts[i].focus) charts[i].focus();
	    }
	};
	
	/**
	#### dc.renderAll([chartGroup])
	Re-render all charts belong to the given chart group. If the chart group is not given then only
	charts that belong to the default chart group will be re-rendered.
	**/
	dc.renderAll = function(group) {
	    var charts = dc.chartRegistry.list(group);
	    for (var i = 0; i < charts.length; ++i) {
	        charts[i].render();
	    }
	
	    if(dc._renderlet !== null)
	        dc._renderlet(group);
	};
	
	/**
	#### dc.redrawAll([chartGroup])
	Redraw all charts belong to the given chart group. If the chart group is not given then only charts
	that belong to the default chart group will be re-drawn. Redraw is different from re-render since
	when redrawing dc tries to update the graphic incrementally, using transitions, instead of starting
	from scratch.
	**/
	dc.redrawAll = function(group) {
	    var charts = dc.chartRegistry.list(group);
	    for (var i = 0; i < charts.length; ++i) {
	        charts[i].redraw();
	    }
	
	    if(dc._renderlet !== null)
	        dc._renderlet(group);
	};
	
	/**
	#### dc.disableTransitions
	If this boolean is set truthy, all transitions will be disabled, and changes to the charts will happen
	immediately.  Default: false
	**/
	dc.disableTransitions = false;
	
	dc.transition = function(selections, duration, callback) {
	    if (duration <= 0 || duration === undefined || dc.disableTransitions)
	        return selections;
	
	    var s = selections
	        .transition()
	        .duration(duration);
	
	    if (typeof(callback) === 'function') {
	        callback(s);
	    }
	
	    return s;
	};
	
	dc.units = {};
	
	/**
	#### dc.units.integers
	`dc.units.integers` is the default value for `xUnits` for the [Coordinate Grid
	Chart](#coordinate-grid-chart) and should be used when the x values are a sequence of integers.
	
	It is a function that counts the number of integers in the range supplied in its start and end parameters.
	
	```js
	chart.xUnits(dc.units.integers) // already the default
	```
	
	**/
	dc.units.integers = function(s, e) {
	    return Math.abs(e - s);
	};
	
	/**
	#### dc.units.ordinal
	This argument can be passed to the `xUnits` function of the to specify ordinal units for the x
	axis. Usually this parameter is used in combination with passing `d3.scale.ordinal()` to `.x`.
	
	It just returns the domain passed to it, which for ordinal charts is an array of all values.
	
	```js
	chart.xUnits(dc.units.ordinal)
	    .x(d3.scale.ordinal())
	```
	
	**/
	dc.units.ordinal = function(s, e, domain){
	    return domain;
	};
	
	/**
	#### dc.units.fp.precision(precision)
	This function generates an argument for the [Coordinate Grid Chart's](#coordinate-grid-chart)
	`xUnits` function specifying that the x values are floating-point numbers with the given
	precision.
	
	The returned function determines how many values at the given precision will fit into the range
	supplied in its start and end parameters.
	
	```js
	// specify values (and ticks) every 0.1 units
	chart.xUnits(dc.units.fp.precision(0.1)
	// there are 500 units between 0.5 and 1 if the precision is 0.001
	var thousandths = dc.units.fp.precision(0.001);
	thousandths(0.5, 1.0) // returns 500
	```
	**/
	dc.units.fp = {};
	dc.units.fp.precision = function(precision){
	    var _f = function(s, e){
	        var d = Math.abs((e-s)/_f.resolution);
	        if(dc.utils.isNegligible(d - Math.floor(d)))
	            return Math.floor(d);
	        else
	            return Math.ceil(d);
	    };
	    _f.resolution = precision;
	    return _f;
	};
	
	dc.round = {};
	dc.round.floor = function(n) {
	    return Math.floor(n);
	};
	dc.round.ceil = function(n) {
	    return Math.ceil(n);
	};
	dc.round.round = function(n) {
	    return Math.round(n);
	};
	
	dc.override = function(obj, functionName, newFunction) {
	    var existingFunction = obj[functionName];
	    obj["_" + functionName] = existingFunction;
	    obj[functionName] = newFunction;
	};
	
	dc.renderlet = function(_){
	    if(!arguments.length) return dc._renderlet;
	    dc._renderlet = _;
	    return dc;
	};
	
	dc.instanceOfChart = function (o) {
	    return o instanceof Object && o.__dc_flag__ && true;
	};
	
	dc.errors = {};
	
	dc.errors.Exception = function(msg) {
	    var _msg = msg || "Unexpected internal error";
	
	    this.message = _msg;
	
	    this.toString = function(){
	        return _msg;
	    };
	};
	
	dc.errors.InvalidStateException = function() {
	    dc.errors.Exception.apply(this, arguments);
	};
	
	dc.dateFormat = d3.time.format("%m/%d/%Y");
	
	dc.printers = {};
	
	dc.printers.filters = function (filters) {
	    var s = "";
	
	    for (var i = 0; i < filters.length; ++i) {
	        if (i > 0) s += ", ";
	        s += dc.printers.filter(filters[i]);
	    }
	
	    return s;
	};
	
	dc.printers.filter = function (filter) {
	    var s = "";
	
	    if (filter) {
	        if (filter instanceof Array) {
	            if (filter.length >= 2)
	                s = "[" + dc.utils.printSingleValue(filter[0]) + " -> " + dc.utils.printSingleValue(filter[1]) + "]";
	            else if (filter.length >= 1)
	                s = dc.utils.printSingleValue(filter[0]);
	        } else {
	            s = dc.utils.printSingleValue(filter);
	        }
	    }
	
	    return s;
	};
	
	dc.pluck = function(n,f) {
	    if (!f) return function(d) { return d[n]; };
	    return function(d,i) { return f.call(d,d[n],i); };
	};
	
	dc.utils = {};
	
	dc.utils.printSingleValue = function (filter) {
	    var s = "" + filter;
	
	    if (filter instanceof Date)
	        s = dc.dateFormat(filter);
	    else if (typeof(filter) == "string")
	        s = filter;
	    else if (dc.utils.isFloat(filter))
	        s = dc.utils.printSingleValue.fformat(filter);
	    else if (dc.utils.isInteger(filter))
	        s = Math.round(filter);
	
	    return s;
	};
	dc.utils.printSingleValue.fformat = d3.format(".2f");
	
	// FIXME: these assume than any string r is a percentage (whether or not it
	// includes %). They also generate strange results if l is a string.
	dc.utils.add = function (l, r) {
	    if (typeof r === "string")
	        r = r.replace("%", "");
	
	    if (l instanceof Date) {
	        if (typeof r === "string") r = +r;
	        var d = new Date();
	        d.setTime(l.getTime());
	        d.setDate(l.getDate() + r);
	        return d;
	    } else if (typeof r === "string") {
	        var percentage = (+r / 100);
	        return l > 0 ? l * (1 + percentage) : l * (1 - percentage);
	    } else {
	        return l + r;
	    }
	};
	
	dc.utils.subtract = function (l, r) {
	    if (typeof r === "string")
	        r = r.replace("%", "");
	
	    if (l instanceof Date) {
	        if (typeof r === "string") r = +r;
	        var d = new Date();
	        d.setTime(l.getTime());
	        d.setDate(l.getDate() - r);
	        return d;
	    } else if (typeof r === "string") {
	        var percentage = (+r / 100);
	        return l < 0 ? l * (1 + percentage) : l * (1 - percentage);
	    } else {
	        return l - r;
	    }
	};
	
	dc.utils.isNumber = function(n) {
	    return n===+n;
	};
	
	dc.utils.isFloat = function (n) {
	    return n===+n && n!==(n|0);
	};
	
	dc.utils.isInteger = function (n) {
	    return n===+n && n===(n|0);
	};
	
	dc.utils.isNegligible = function (n) {
	    return !dc.utils.isNumber(n) || (n < dc.constants.NEGLIGIBLE_NUMBER && n > -dc.constants.NEGLIGIBLE_NUMBER);
	};
	
	dc.utils.clamp = function (val, min, max) {
	    return val < min ? min : (val > max ? max : val);
	};
	
	var _idCounter = 0;
	dc.utils.uniqueId = function () {
	    return ++_idCounter;
	};
	
	dc.utils.nameToId = function (name) {
	    return name.toLowerCase().replace(/[\s]/g, "_").replace(/[\.']/g, "");
	};
	
	dc.utils.appendOrSelect = function (parent, name) {
	    var element = parent.select(name);
	    if (element.empty()) element = parent.append(name);
	    return element;
	};
	
	dc.utils.safeNumber = function(n){return dc.utils.isNumber(+n)?+n:0;};
	
	dc.logger = {};
	
	dc.logger.enableDebugLog = false;
	
	dc.logger.warn = function (msg) {
	    if (console) {
	        if (console.warn) {
	            console.warn(msg);
	        } else if (console.log) {
	            console.log(msg);
	        }
	    }
	
	    return dc.logger;
	};
	
	dc.logger.debug = function (msg) {
	    if (dc.logger.enableDebugLog && console) {
	        if (console.debug) {
	            console.debug(msg);
	        } else if (console.log) {
	            console.log(msg);
	        }
	    }
	
	    return dc.logger;
	};
	
	dc.events = {
	    current: null
	};
	
	/**
	#### dc.events.trigger(function[, delay])
	This function triggers a throttled event function with a specified delay (in milli-seconds).  Events
	that are triggered repetitively due to user interaction such brush dragging might flood the library
	and invoke more renders than can be executed in time. Using this function to wrap your event
	function allows the library to smooth out the rendering by throttling events and only responding to
	the most recent event.
	
	```js
	    chart.renderlet(function(chart){
	        // smooth the rendering through event throttling
	        dc.events.trigger(function(){
	            // focus some other chart to the range selected by user on this chart
	            someOtherChart.focus(chart.filter());
	        });
	    })
	```
	**/
	dc.events.trigger = function(closure, delay) {
	    if (!delay){
	        closure();
	        return;
	    }
	
	    dc.events.current = closure;
	
	    setTimeout(function() {
	        if (closure == dc.events.current)
	            closure();
	    }, delay);
	};
	
	dc.filters = {};
	
	/**
	## Filters
	
	The dc.js filters are functions which are passed into crossfilter to chose which records will be
	accumulated to produce values for the charts.  In the crossfilter model, any filters applied on one
	dimension will affect all the other dimensions but not that one.  dc always applies a filter
	function to the dimension; the function combines multiple filters and if any of them accept a
	record, it is filtered in.
	
	These filter constructors are used as appropriate by the various charts to implement brushing.  We
	mention below which chart uses which filter.  In some cases, many instances of a filter will be added.
	
	**/
	
	/**
	#### dc.filters.RangedFilter(low, high)
	 RangedFilter is a filter which accepts keys between `low` and `high`.  It is used to implement X
	 axis brushing for the [coordinate grid charts](#coordinate-grid-mixin).
	**/
	dc.filters.RangedFilter = function(low, high) {
	    var range = Array(low, high);
	    range.isFiltered = function(value) {
	        return value >= this[0] && value < this[1];
	    };
	
	    return range;
	};
	
	/**
	#### dc.filters.TwoDimensionalFilter(array)
	 TwoDimensionalFilter is a filter which accepts a single two-dimensional value.  It is used by the
	 [heat map chart](#heat-map) to include particular cells as they are clicked.  (Rows and columns are
	 filtered by filtering all the cells in the row or column.)
	**/
	dc.filters.TwoDimensionalFilter = function(array) {
	    if (array === null) { return null; }
	
	    var filter = array;
	    filter.isFiltered = function(value) {
	        return value.length && value.length == filter.length &&
	               value[0] == filter[0] && value[1] == filter[1];
	    };
	
	    return filter;
	};
	
	/**
	#### dc.filters.RangedTwoDimensionalFilter(array)
	 The RangedTwoDimensionalFilter allows filtering all values which fit within a rectangular
	 region. It is used by the [scatter plot](#scatter-plot) to implement rectangular brushing.
	
	 It takes two two-dimensional points in the form `[[x1,y1],[x2,y2]]`, and normalizes them so that
	 `x1 <= x2` and `y1 <- y2`. It then returns a filter which accepts any points which are in the
	 rectangular range including the lower values but excluding the higher values.
	
	 If an array of two values are given to the RangedTwoDimensionalFilter, it interprets the values as
	 two x coordinates `x1` and `x2` and returns a filter which accepts any points for which `x1 <= x <
	 x2`.
	 **/
	dc.filters.RangedTwoDimensionalFilter = function(array){
	    if (array === null) { return null; }
	
	    var filter = array;
	    var fromBottomLeft;
	
	    if (filter[0] instanceof Array) {
	        fromBottomLeft = [[Math.min(array[0][0], array[1][0]),
	                           Math.min(array[0][1], array[1][1])],
	                          [Math.max(array[0][0], array[1][0]),
	                           Math.max(array[0][1], array[1][1])]];
	    } else {
	        fromBottomLeft = [[array[0], -Infinity],
	                          [array[1], Infinity]];
	    }
	
	    filter.isFiltered = function(value) {
	        var x, y;
	
	        if (value instanceof Array) {
	            if (value.length != 2) return false;
	            x = value[0];
	            y = value[1];
	        } else {
	            x = value;
	            y = fromBottomLeft[0][1];
	        }
	
	        return x >= fromBottomLeft[0][0] && x < fromBottomLeft[1][0] &&
	               y >= fromBottomLeft[0][1] && y < fromBottomLeft[1][1];
	    };
	
	    return filter;
	};
	
	/**
	## Base Mixin
	Base Mixin is an abstract functional object representing a basic dc chart object
	for all chart and widget implementations. Methods from the Base Mixin are inherited
	and available on all chart implementation in the DC library.
	**/
	dc.baseMixin = function (_chart) {
	    _chart.__dc_flag__ = dc.utils.uniqueId();
	
	    var _dimension;
	    var _group;
	
	    var _anchor;
	    var _root;
	    var _svg;
	
	    var _minWidth = 200;
	    var _default_width = function (element) {
	        var width = element && element.getBoundingClientRect && element.getBoundingClientRect().width;
	        return (width && width > _minWidth) ? width : _minWidth;
	    };
	    var _width = _default_width;
	
	    var _minHeight = 200;
	    var _default_height = function (element) {
	        var height = element && element.getBoundingClientRect && element.getBoundingClientRect().height;
	        return (height && height > _minHeight) ? height : _minHeight;
	    };
	    var _height = _default_height;
	
	    var _keyAccessor = dc.pluck('key');
	    var _valueAccessor = dc.pluck('value');
	    var _label = dc.pluck('key');
	
	    var _ordering = dc.pluck('key');
	    var _orderSort;
	
	    var _renderLabel = false;
	
	    var _title = function (d) {
	        return _chart.keyAccessor()(d) + ": " + _chart.valueAccessor()(d);
	    };
	    var _renderTitle = false;
	
	    var _transitionDuration = 750;
	
	    var _filterPrinter = dc.printers.filters;
	
	    var _renderlets = [];
	    var _mandatoryAttributes = ['dimension', 'group'];
	
	    var _chartGroup = dc.constants.DEFAULT_CHART_GROUP;
	
	    var NULL_LISTENER = function () {};
	
	    var _listeners = d3.dispatch(
	        "preRender",
	        "postRender",
	        "preRedraw",
	        "postRedraw",
	        "filtered",
	        "zoomed");
	
	    var _legend;
	
	    var _filters = [];
	    var _filterHandler = function (dimension, filters) {
	        dimension.filter(null);
	
	        if (filters.length === 0)
	            dimension.filter(null);
	        else
	            dimension.filterFunction(function (d) {
	                for(var i = 0; i < filters.length; i++) {
	                    var filter = filters[i];
	                    if (filter.isFiltered && filter.isFiltered(d)) {
	                        return true;
	                    } else if (filter <= d && filter >= d) {
	                        return true;
	                    }
	                }
	                return false;
	            });
	
	        return filters;
	    };
	
	    var _data = function (group) {
	        return group.all();
	    };
	
	    /**
	    #### .width([value])
	    Set or get the width attribute of a chart. See `.height` below for further description of the
	    behavior.
	
	    **/
	    _chart.width = function (w) {
	        if (!arguments.length) return _width(_root.node());
	        _width = d3.functor(w || _default_width);
	        return _chart;
	    };
	
	    /**
	    #### .height([value])
	    Set or get the height attribute of a chart. The height is applied to the SVG element generated by
	    the chart when rendered (or rerendered). If a value is given, then it will be used to calculate
	    the new height and the chart returned for method chaining.  The value can either be a numeric, a
	    function, or falsy. If no value is specified then the value of the current height attribute will
	    be returned.
	
	    By default, without an explicit height being given, the chart will select the width of its
	    anchor element. If that isn't possible it defaults to 200. Setting the value falsy will return
	    the chart to the default behavior
	
	    Examples:
	
	    ```js
	    chart.height(250); // Set the chart's height to 250px;
	    chart.height(function(anchor) { return doSomethingWith(anchor); }); // set the chart's height with a function
	    chart.height(null); // reset the height to the default auto calculation
	    ```
	
	    **/
	    _chart.height = function (h) {
	        if (!arguments.length) return _height(_root.node());
	        _height = d3.functor(h || _default_height);
	        return _chart;
	    };
	
	    /**
	    #### .minWidth([value])
	    Set or get the minimum width attribute of a chart. This only applicable if the width is
	    calculated by dc.
	
	    **/
	    _chart.minWidth = function (w) {
	        if (!arguments.length) return _minWidth;
	        _minWidth = w;
	        return _chart;
	    };
	
	    /**
	    #### .minHeight([value])
	    Set or get the minimum height attribute of a chart. This only applicable if the height is
	    calculated by dc.
	
	    **/
	    _chart.minHeight = function (w) {
	        if (!arguments.length) return _minHeight;
	        _minHeight = w;
	        return _chart;
	    };
	
	    /**
	    #### .dimension([value]) - **mandatory**
	    Set or get the dimension attribute of a chart. In dc a dimension can be any valid [crossfilter
	    dimension](https://github.com/square/crossfilter/wiki/API-Reference#wiki-dimension).
	
	    If a value is given, then it will be used as the new dimension. If no value is specified then
	    the current dimension will be returned.
	
	    **/
	    _chart.dimension = function (d) {
	        if (!arguments.length) return _dimension;
	        _dimension = d;
	        _chart.expireCache();
	        return _chart;
	    };
	
	    /**
	    #### .data([callback])
	    Set the data callback or retrieve the chart's data set. The data callback is passed the chart's
	    group and by default will return `group.all()`. This behavior may be modified to, for instance,
	    return only the top 5 groups:
	    ```
	        chart.data(function(group) {
	            return group.top(5);
	        });
	    ```
	    **/
	    _chart.data = function(d) {
	        if (!arguments.length) return _data.call(_chart,_group);
	        _data = d3.functor(d);
	        _chart.expireCache();
	        return _chart;
	    };
	
	    /**
	    #### .group([value, [name]]) - **mandatory**
	    Set or get the group attribute of a chart. In dc a group is a [crossfilter
	    group](https://github.com/square/crossfilter/wiki/API-Reference#wiki-group). Usually the group
	    should be created from the particular dimension associated with the same chart. If a value is
	    given, then it will be used as the new group.
	
	    If no value specified then the current group will be returned.
	    If `name` is specified then it will be used to generate legend label.
	
	    **/
	    _chart.group = function (g, name) {
	        if (!arguments.length) return _group;
	        _group = g;
	        _chart._groupName = name;
	        _chart.expireCache();
	        return _chart;
	    };
	
	    /**
	    #### .ordering([orderFunction])
	    Get or set an accessor to order ordinal charts
	    **/
	    _chart.ordering = function(o) {
	        if (!arguments.length) return _ordering;
	        _ordering = o;
	        _orderSort = crossfilter.quicksort.by(_ordering);
	        _chart.expireCache();
	        return _chart;
	    };
	
	    _chart._computeOrderedGroups = function(data) {
	        var dataCopy = data.slice(0);
	
	        if (dataCopy.length <= 1)
	            return dataCopy;
	
	        if (!_orderSort)
	            _orderSort = crossfilter.quicksort.by(_ordering);
	
	        return _orderSort(dataCopy, 0, dataCopy.length);
	    };
	
	    /**
	    #### .filterAll()
	    Clear all filters associated with this chart.
	
	    **/
	    _chart.filterAll = function () {
	        return _chart.filter(null);
	    };
	
	    /**
	    #### .select(selector)
	    Execute d3 single selection in the chart's scope using the given selector and return the d3
	    selection. Roughly the same as:
	    ```js
	    d3.select("#chart-id").select(selector);
	    ```
	    This function is **not chainable** since it does not return a chart instance; however the d3
	    selection result can be chained to d3 function calls.
	
	    **/
	    _chart.select = function (s) {
	        return _root.select(s);
	    };
	
	    /**
	    #### .selectAll(selector)
	    Execute in scope d3 selectAll using the given selector and return d3 selection result. Roughly
	    the same as:
	    ```js
	    d3.select("#chart-id").selectAll(selector);
	    ```
	    This function is **not chainable** since it does not return a chart instance; however the d3
	    selection result can be chained to d3 function calls.
	
	    **/
	    _chart.selectAll = function (s) {
	        return _root ? _root.selectAll(s) : null;
	    };
	
	    /**
	     #### .anchor([anchorChart|anchorSelector|anchorNode], [chartGroup])
	     Set the svg root to either be an existing chart's root; or any valid [d3 single
	     selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying a dom
	     block element such as a div; or a dom element or d3 selection. Optionally registers the chart
	     within the chartGroup. This class is called internally on chart initialization, but be called
	     again to relocate the chart. However, it will orphan any previously created SVG elements.
	    **/
	    _chart.anchor = function (a, chartGroup) {
	        if (!arguments.length) return _anchor;
	        if (dc.instanceOfChart(a)) {
	            _anchor = a.anchor();
	            _root = a.root();
	        } else {
	            _anchor = a;
	            _root = d3.select(_anchor);
	            _root.classed(dc.constants.CHART_CLASS, true);
	            dc.registerChart(_chart, chartGroup);
	        }
	        _chartGroup = chartGroup;
	        return _chart;
	    };
	
	    /**
	    #### .anchorName()
	    Returns the dom id for the chart's anchored location.
	
	    **/
	    _chart.anchorName = function () {
	        var a = _chart.anchor();
	        if (a && a.id) return a.id;
	        if (a && a.replace) return a.replace('#','');
	        return "" + _chart.chartID();
	    };
	
	    /**
	    #### .root([rootElement])
	    Returns the root element where a chart resides. Usually it will be the parent div element where
	    the svg was created. You can also pass in a new root element however this is usually handled by
	    dc internally. Resetting the root element on a chart outside of dc internals may have
	    unexpected consequences.
	
	    **/
	    _chart.root = function (r) {
	        if (!arguments.length) return _root;
	        _root = r;
	        return _chart;
	    };
	
	    /**
	    #### .svg([svgElement])
	    Returns the top svg element for this specific chart. You can also pass in a new svg element,
	    however this is usually handled by dc internally. Resetting the svg element on a chart outside
	    of dc internals may have unexpected consequences.
	
	    **/
	    _chart.svg = function (_) {
	        if (!arguments.length) return _svg;
	        _svg = _;
	        return _chart;
	    };
	
	    /**
	    #### .resetSvg()
	    Remove the chart's SVG elements from the dom and recreate the container SVG element.
	    **/
	    _chart.resetSvg = function () {
	        _chart.select("svg").remove();
	        return generateSvg();
	    };
	
	    function generateSvg() {
	        _svg = _chart.root().append("svg")
	            .attr("width", _chart.width())
	            .attr("height", _chart.height());
	        return _svg;
	    }
	
	    /**
	    #### .filterPrinter([filterPrinterFunction])
	    Set or get the filter printer function. The filter printer function is used to generate human
	    friendly text for filter value(s) associated with the chart instance. By default dc charts use a
	    default filter printer `dc.printers.filter` that provides simple printing support for both
	    single value and ranged filters.
	
	    **/
	    _chart.filterPrinter = function (_) {
	        if (!arguments.length) return _filterPrinter;
	        _filterPrinter = _;
	        return _chart;
	    };
	
	    /**
	    #### .turnOnControls() & .turnOffControls()
	    Turn on/off optional control elements within the root element. dc currently supports the
	    following html control elements.
	
	    * root.selectAll(".reset") - elements are turned on if the chart has an active filter. This type
	     of control element is usually used to store a reset link to allow user to reset filter on a
	     certain chart. This element will be turned off automatically if the filter is cleared.
	    * root.selectAll(".filter") elements are turned on if the chart has an active filter. The text
	     content of this element is then replaced with the current filter value using the filter printer
	     function. This type of element will be turned off automatically if the filter is cleared.
	
	    **/
	    _chart.turnOnControls = function () {
	        if (_root) {
	            _chart.selectAll(".reset").style("display", null);
	            _chart.selectAll(".filter").text(_filterPrinter(_chart.filters())).style("display", null);
	        }
	        return _chart;
	    };
	
	    _chart.turnOffControls = function () {
	        if (_root) {
	            _chart.selectAll(".reset").style("display", "none");
	            _chart.selectAll(".filter").style("display", "none").text(_chart.filter());
	        }
	        return _chart;
	    };
	
	    /**
	    #### .transitionDuration([duration])
	    Set or get the animation transition duration(in milliseconds) for this chart instance. Default
	    duration is 750ms.
	
	    **/
	    _chart.transitionDuration = function (d) {
	        if (!arguments.length) return _transitionDuration;
	        _transitionDuration = d;
	        return _chart;
	    };
	
	    _chart._mandatoryAttributes = function (_) {
	        if (!arguments.length) return _mandatoryAttributes;
	        _mandatoryAttributes = _;
	        return _chart;
	    };
	
	    function checkForMandatoryAttributes(a) {
	        if (!_chart[a] || !_chart[a]())
	            throw new dc.errors.InvalidStateException("Mandatory attribute chart." + a +
	                                                      " is missing on chart[#" + _chart.anchorName() + "]");
	    }
	
	    /**
	    #### .render()
	    Invoking this method will force the chart to re-render everything from scratch. Generally it
	    should only be used to render the chart for the first time on the page or if you want to make
	    sure everything is redrawn from scratch instead of relying on the default incremental redrawing
	    behaviour.
	
	    **/
	    _chart.render = function () {
	        _listeners.preRender(_chart);
	
	        if (_mandatoryAttributes)
	            _mandatoryAttributes.forEach(checkForMandatoryAttributes);
	
	        var result = _chart._doRender();
	
	        if (_legend) _legend.render();
	
	        _chart._activateRenderlets("postRender");
	
	        return result;
	    };
	
	    _chart._activateRenderlets = function (event) {
	        if (_chart.transitionDuration() > 0 && _svg) {
	            _svg.transition().duration(_chart.transitionDuration())
	                .each("end", function () {
	                    runAllRenderlets();
	                    if (event) _listeners[event](_chart);
	                });
	        } else {
	            runAllRenderlets();
	            if (event) _listeners[event](_chart);
	        }
	    };
	
	    /**
	    #### .redraw()
	    Calling redraw will cause the chart to re-render data changes incrementally. If there is no
	    change in the underlying data dimension then calling this method will have no effect on the
	    chart. Most chart interaction in dc will automatically trigger this method through internal
	    events (in particular [dc.redrawAll](#dcredrawallchartgroup)); therefore, you only need to
	    manually invoke this function if data is manipulated outside of dc's control (for example if
	    data is loaded in the background using `crossfilter.add()`).
	
	    **/
	    _chart.redraw = function () {
	        _listeners.preRedraw(_chart);
	
	        var result = _chart._doRedraw();
	
	        if (_legend) _legend.render();
	
	        _chart._activateRenderlets("postRedraw");
	
	        return result;
	    };
	
	    _chart.redrawGroup = function () {
	        dc.redrawAll(_chart.chartGroup());
	    };
	
	    _chart.renderGroup = function () {
	        dc.renderAll(_chart.chartGroup());
	    };
	
	    _chart._invokeFilteredListener = function (f) {
	        if (f !== undefined) _listeners.filtered(_chart, f);
	    };
	
	    _chart._invokeZoomedListener = function () {
	        _listeners.zoomed(_chart);
	    };
	
	    /**
	    #### .hasFilter([filter])
	    Check whether is any active filter or a specific filter is associated with particular chart instance.
	    This function is **not chainable**.
	
	    **/
	    _chart.hasFilter = function (filter) {
	        if (!arguments.length) return _filters.length > 0;
	        return _filters.some(function(f) {
	            return filter <= f && filter >= f;
	        });
	    };
	
	    function removeFilter(_) {
	        for(var i = 0; i < _filters.length; i++) {
	            if(_filters[i] <= _ && _filters[i] >= _) {
	                _filters.splice(i, 1);
	                break;
	            }
	        }
	        applyFilters();
	        _chart._invokeFilteredListener(_);
	    }
	
	    function addFilter(_) {
	        _filters.push(_);
	        applyFilters();
	        _chart._invokeFilteredListener(_);
	    }
	
	    function resetFilters() {
	        _filters = [];
	        applyFilters();
	        _chart._invokeFilteredListener(null);
	    }
	
	    function applyFilters() {
	        if (_chart.dimension() && _chart.dimension().filter) {
	            var fs = _filterHandler(_chart.dimension(), _filters);
	            _filters = fs ? fs : _filters;
	        }
	    }
	
	    _chart.replaceFilter = function (_) {
	        _filters = [];
	        _chart.filter(_);
	    };
	
	    /**
	    #### .filter([filterValue])
	    Filter the chart by the given value or return the current filter if the input parameter is missing.
	    ```js
	    // filter by a single string
	    chart.filter("Sunday");
	    // filter by a single age
	    chart.filter(18);
	    ```
	
	    **/
	    _chart.filter = function (_) {
	        if (!arguments.length) return _filters.length > 0 ? _filters[0] : null;
	        if (_ instanceof Array && _[0] instanceof Array && !_.isFiltered) {
	            _[0].forEach(function(d){
	                if (_chart.hasFilter(d)) {
	                    _filters.splice(_filters.indexOf(d), 1);
	                } else {
	                    _filters.push(d);
	                }
	            });
	            applyFilters();
	            _chart._invokeFilteredListener(_);
	        } else if (_ === null) {
	            resetFilters();
	        } else {
	            if (_chart.hasFilter(_))
	                removeFilter(_);
	            else
	                addFilter(_);
	        }
	
	        if (_root !== null && _chart.hasFilter()) {
	            _chart.turnOnControls();
	        } else {
	            _chart.turnOffControls();
	        }
	
	        return _chart;
	    };
	
	    /**
	    #### .filters()
	    Returns all current filters. This method does not perform defensive cloning of the internal
	    filter array before returning, therefore any modification of the returned array will effect the
	    chart's internal filter storage.
	
	    **/
	    _chart.filters = function () {
	        return _filters;
	    };
	
	    _chart.highlightSelected = function (e) {
	        d3.select(e).classed(dc.constants.SELECTED_CLASS, true);
	        d3.select(e).classed(dc.constants.DESELECTED_CLASS, false);
	    };
	
	    _chart.fadeDeselected = function (e) {
	        d3.select(e).classed(dc.constants.SELECTED_CLASS, false);
	        d3.select(e).classed(dc.constants.DESELECTED_CLASS, true);
	    };
	
	    _chart.resetHighlight = function (e) {
	        d3.select(e).classed(dc.constants.SELECTED_CLASS, false);
	        d3.select(e).classed(dc.constants.DESELECTED_CLASS, false);
	    };
	
	    /**
	    #### .onClick(datum)
	    This function is passed to d3 as the onClick handler for each chart. The default behavior is to
	    filter on the clicked datum (passed to the callback) and redraw the chart group.
	    **/
	    _chart.onClick = function (d) {
	        var filter = _chart.keyAccessor()(d);
	        dc.events.trigger(function () {
	            _chart.filter(filter);
	            _chart.redrawGroup();
	        });
	    };
	
	    /**
	    #### .filterHandler([function])
	    Set or get the filter handler. The filter handler is a function that performs the filter action
	    on a specific dimension. Using a custom filter handler allows you to perform additional logic
	    before or after filtering.
	
	    ```js
	    // default filter handler
	    function(dimension, filter){
	        dimension.filter(filter); // perform filtering
	        return filter; // return the actual filter value
	    }
	
	    // custom filter handler
	    chart.filterHandler(function(dimension, filter){
	        var newFilter = filter + 10;
	        dimension.filter(newFilter);
	        return newFilter; // set the actual filter value to the new value
	    });
	    ```
	
	    **/
	    _chart.filterHandler = function (_) {
	        if (!arguments.length) return _filterHandler;
	        _filterHandler = _;
	        return _chart;
	    };
	
	    // abstract function stub
	    _chart._doRender = function () {
	        // do nothing in base, should be overridden by sub-function
	        return _chart;
	    };
	
	    _chart._doRedraw = function () {
	        // do nothing in base, should be overridden by sub-function
	        return _chart;
	    };
	
	    _chart.legendables = function () {
	        // do nothing in base, should be overridden by sub-function
	        return [];
	    };
	
	    _chart.legendHighlight = function (d) {
	        // do nothing in base, should be overridden by sub-function
	    };
	
	    _chart.legendReset = function (d) {
	        // do nothing in base, should be overridden by sub-function
	    };
	
	    _chart.legendToggle = function (d) {
	        // do nothing in base, should be overriden by sub-function
	    };
	
	    _chart.isLegendableHidden = function (d) {
	        // do nothing in base, should be overridden by sub-function
	        return false;
	    };
	
	    /**
	    #### .keyAccessor([keyAccessorFunction])
	    Set or get the key accessor function. The key accessor function is used to retrieve the key
	    value from the crossfilter group. Key values are used differently in different charts, for
	    example keys correspond to slices in a pie chart and x axis positions in a grid coordinate chart.
	    ```js
	    // default key accessor
	    chart.keyAccessor(function(d) { return d.key; });
	    // custom key accessor for a multi-value crossfilter reduction
	    chart.keyAccessor(function(p) { return p.value.absGain; });
	    ```
	
	    **/
	    _chart.keyAccessor = function (_) {
	        if (!arguments.length) return _keyAccessor;
	        _keyAccessor = _;
	        return _chart;
	    };
	
	    /**
	    #### .valueAccessor([valueAccessorFunction])
	    Set or get the value accessor function. The value accessor function is used to retrieve the
	    value from the crossfilter group. Group values are used differently in different charts, for
	    example values correspond to slice sizes in a pie chart and y axis positions in a grid
	    coordinate chart.
	    ```js
	    // default value accessor
	    chart.valueAccessor(function(d) { return d.value; });
	    // custom value accessor for a multi-value crossfilter reduction
	    chart.valueAccessor(function(p) { return p.value.percentageGain; });
	    ```
	
	    **/
	    _chart.valueAccessor = function (_) {
	        if (!arguments.length) return _valueAccessor;
	        _valueAccessor = _;
	        return _chart;
	    };
	
	    /**
	    #### .label([labelFunction])
	    Set or get the label function. The chart class will use this function to render labels for each
	    child element in the chart, e.g. slices in a pie chart or bubbles in a bubble chart. Not every
	    chart supports the label function for example bar chart and line chart do not use this function
	    at all.
	    ```js
	    // default label function just return the key
	    chart.label(function(d) { return d.key; });
	    // label function has access to the standard d3 data binding and can get quite complicated
	    chart.label(function(d) { return d.data.key + "(" + Math.floor(d.data.value / all.value() * 100) + "%)"; });
	    ```
	
	    **/
	    _chart.label = function (_) {
	        if (!arguments.length) return _label;
	        _label = _;
	        _renderLabel = true;
	        return _chart;
	    };
	
	    /**
	    #### .renderLabel(boolean)
	    Turn on/off label rendering
	
	    **/
	    _chart.renderLabel = function (_) {
	        if (!arguments.length) return _renderLabel;
	        _renderLabel = _;
	        return _chart;
	    };
	
	    /**
	    #### .title([titleFunction])
	    Set or get the title function. The chart class will use this function to render the svg title
	    (usually interpreted by browser as tooltips) for each child element in the chart, e.g. a slice
	    in a pie chart or a bubble in a bubble chart. Almost every chart supports the title function;
	    however in grid coordinate charts you need to turn off the brush in order to see titles, because
	    otherwise the brush layer will block tooltip triggering.
	    ```js
	    // default title function just return the key
	    chart.title(function(d) { return d.key + ": " + d.value; });
	    // title function has access to the standard d3 data binding and can get quite complicated
	    chart.title(function(p) {
	        return p.key.getFullYear()
	            + "\n"
	            + "Index Gain: " + numberFormat(p.value.absGain) + "\n"
	            + "Index Gain in Percentage: " + numberFormat(p.value.percentageGain) + "%\n"
	            + "Fluctuation / Index Ratio: " + numberFormat(p.value.fluctuationPercentage) + "%";
	    });
	    ```
	
	    **/
	    _chart.title = function (_) {
	        if (!arguments.length) return _title;
	        _title = _;
	        _renderTitle = true;
	        return _chart;
	    };
	
	    /**
	    #### .renderTitle(boolean)
	    Turn on/off title rendering, or return the state of the render title flag if no arguments are
	    given.
	
	    **/
	    _chart.renderTitle = function (_) {
	        if (!arguments.length) return _renderTitle;
	        _renderTitle = _;
	        return _chart;
	    };
	
	    /**
	    #### .renderlet(renderletFunction)
	    A renderlet is similar to an event listener on rendering event. Multiple renderlets can be added
	    to an individual chart.  Each time a chart is rerendered or redrawn the renderlets are invoked
	    right after the chart finishes its own drawing routine, giving you a way to modify the svg
	    elements. Renderlet functions take the chart instance as the only input parameter and you can
	    use the dc API or use raw d3 to achieve pretty much any effect.
	    ```js
	    // renderlet function
	    chart.renderlet(function(chart){
	        // mix of dc API and d3 manipulation
	        chart.select("g.y").style("display", "none");
	        // its a closure so you can also access other chart variable available in the closure scope
	        moveChart.filter(chart.filter());
	    });
	    ```
	
	    **/
	    _chart.renderlet = function (_) {
	        _renderlets.push(_);
	        return _chart;
	    };
	
	    function runAllRenderlets() {
	        for (var i = 0; i < _renderlets.length; ++i) {
	            _renderlets[i](_chart);
	        }
	    }
	
	    /**
	    #### .chartGroup([group])
	    Get or set the chart group to which this chart belongs. Chart groups are rendered or redrawn
	    together since it is expected they share the same underlying crossfilter data set.
	    **/
	    _chart.chartGroup = function (_) {
	        if (!arguments.length) return _chartGroup;
	        _chartGroup = _;
	        return _chart;
	    };
	
	    /**
	    #### .expireCache()
	    Expire the internal chart cache. dc charts cache some data internally on a per chart basis to
	    speed up rendering and avoid unnecessary calculation; however it might be useful to clear the
	    cache if you have changed state which will affect rendering.  For example if you invoke the
	    `crossfilter.add` function or reset group or dimension after rendering it is a good idea to
	    clear the cache to make sure charts are rendered properly.
	
	    **/
	    _chart.expireCache = function () {
	        // do nothing in base, should be overridden by sub-function
	        return _chart;
	    };
	
	    /**
	    #### .legend([dc.legend])
	    Attach a dc.legend widget to this chart. The legend widget will automatically draw legend labels
	    based on the color setting and names associated with each group.
	
	    ```js
	    chart.legend(dc.legend().x(400).y(10).itemHeight(13).gap(5))
	    ```
	
	    **/
	    _chart.legend = function (l) {
	        if (!arguments.length) return _legend;
	        _legend = l;
	        _legend.parent(_chart);
	        return _chart;
	    };
	
	    /**
	    #### .chartID()
	    Returns the internal numeric ID of the chart.
	    **/
	    _chart.chartID = function () {
	        return _chart.__dc_flag__;
	    };
	
	    /**
	    #### .options(optionsObject)
	    Set chart options using a configuration object. Each key in the object will cause the method of
	    the same name to be called with the value to set that attribute for the chart.
	
	    Example:
	    ```
	    chart.options({dimension: myDimension, group: myGroup});
	    ```
	    **/
	    _chart.options = function(opts) {
	        for (var o in opts) {
	            if (typeof(_chart[o]) === 'function') {
	                _chart[o].call(_chart,opts[o]);
	            } else {
	                dc.logger.debug("Not a valid option setter name: " + o);
	            }
	        }
	        return _chart;
	    };
	
	    /**
	    ## Listeners
	    All dc chart instance supports the following listeners.
	
	    #### .on("preRender", function(chart){...})
	    This listener function will be invoked before chart rendering.
	
	    #### .on("postRender", function(chart){...})
	    This listener function will be invoked after chart finish rendering including all renderlets' logic.
	
	    #### .on("preRedraw", function(chart){...})
	    This listener function will be invoked before chart redrawing.
	
	    #### .on("postRedraw", function(chart){...})
	    This listener function will be invoked after chart finish redrawing including all renderlets' logic.
	
	    #### .on("filtered", function(chart, filter){...})
	    This listener function will be invoked after a filter is applied, added or removed.
	
	    #### .on("zoomed", function(chart, filter){...})
	    This listener function will be invoked after a zoom is triggered.
	
	    **/
	    _chart.on = function (event, listener) {
	        _listeners.on(event, listener);
	        return _chart;
	    };
	
	    return _chart;
	};
	
	
	/**
	## Margin Mixin
	
	Margin is a mixin that provides margin utility functions for both the Row Chart and Coordinate Grid
	Charts.
	
	**/
	dc.marginMixin = function (_chart) {
	    var _margin = {top: 10, right: 50, bottom: 30, left: 30};
	
	    /**
	    #### .margins([margins])
	    Get or set the margins for a particular coordinate grid chart instance. The margins is stored as
	    an associative Javascript array. Default margins: {top: 10, right: 50, bottom: 30, left: 30}.
	
	    The margins can be accessed directly from the getter.
	    ```js
	    var leftMargin = chart.margins().left; // 30 by default
	    chart.margins().left = 50;
	    leftMargin = chart.margins().left; // now 50
	    ```
	
	    **/
	    _chart.margins = function (m) {
	        if (!arguments.length) return _margin;
	        _margin = m;
	        return _chart;
	    };
	
	    _chart.effectiveWidth = function () {
	        return _chart.width() - _chart.margins().left - _chart.margins().right;
	    };
	
	    _chart.effectiveHeight = function () {
	        return _chart.height() - _chart.margins().top - _chart.margins().bottom;
	    };
	
	    return _chart;
	};
	
	/**
	## Color Mixin
	
	The Color Mixin is an abstract chart functional class providing universal coloring support
	as a mix-in for any concrete chart implementation.
	
	**/
	
	dc.colorMixin = function(_chart) {
	    var _colors = d3.scale.category20c();
	    var _defaultAccessor = true;
	
	    var _colorAccessor = function(d) { return _chart.keyAccessor()(d); };
	
	    /**
	    #### .colors([colorScale])
	    Retrieve current color scale or set a new color scale. This methods accepts any function that
	    operates like a d3 scale. If not set the default is
	    `d3.scale.category20c()`.
	    ```js
	    // alternate categorical scale
	    chart.colors(d3.scale.category20b());
	
	    // ordinal scale
	    chart.colors(d3.scale.ordinal().range(['red','green','blue']));
	    // convenience method, the same as above
	    chart.ordinalColors(['red','green','blue']);
	
	    // set a linear scale
	    chart.linearColors(["#4575b4", "#ffffbf", "#a50026"]);
	    ```
	    **/
	    _chart.colors = function(_) {
	        if (!arguments.length) return _colors;
	        if (_ instanceof Array) _colors = d3.scale.quantize().range(_); // deprecated legacy support, note: this fails for ordinal domains
	        else _colors = d3.functor(_);
	        return _chart;
	    };
	
	    /**
	    #### .ordinalColors(r)
	    Convenience method to set the color scale to d3.scale.ordinal with range `r`.
	
	    **/
	    _chart.ordinalColors = function(r) {
	        return _chart.colors(d3.scale.ordinal().range(r));
	    };
	
	    /**
	    #### .linearColors(r)
	    Convenience method to set the color scale to an Hcl interpolated linear scale with range `r`.
	
	    **/
	    _chart.linearColors = function(r) {
	        return _chart.colors(d3.scale.linear()
	                             .range(r)
	                             .interpolate(d3.interpolateHcl));
	    };
	
	    /**
	    #### .colorAccessor([colorAccessorFunction])
	    Set or the get color accessor function. This function will be used to map a data point in a
	    crossfilter group to a color value on the color scale. The default function uses the key
	    accessor.
	    ```js
	    // default index based color accessor
	    .colorAccessor(function(d, i){return i;})
	    // color accessor for a multi-value crossfilter reduction
	    .colorAccessor(function(d){return d.value.absGain;})
	    ```
	    **/
	    _chart.colorAccessor = function(_){
	        if(!arguments.length) return _colorAccessor;
	        _colorAccessor = _;
	        _defaultAccessor = false;
	        return _chart;
	    };
	
	    // what is this?
	    _chart.defaultColorAccessor = function() {
	        return _defaultAccessor;
	    };
	
	    /**
	    #### .colorDomain([domain])
	    Set or get the current domain for the color mapping function. The domain must be supplied as an
	    array.
	
	    Note: previously this method accepted a callback function. Instead you may use a custom scale
	    set by `.colors`.
	
	    **/
	    _chart.colorDomain = function(_){
	        if(!arguments.length) return _colors.domain();
	        _colors.domain(_);
	        return _chart;
	    };
	
	    /**
	    #### .calculateColorDomain()
	    Set the domain by determining the min and max values as retrieved by `.colorAccessor` over the
	    chart's dataset.
	
	    **/
	    _chart.calculateColorDomain = function () {
	        var newDomain = [d3.min(_chart.data(), _chart.colorAccessor()),
	                         d3.max(_chart.data(), _chart.colorAccessor())];
	        _colors.domain(newDomain);
	    };
	
	    /**
	    #### .getColor(d [, i])
	    Get the color for the datum d and counter i. This is used internally by charts to retrieve a color.
	
	    **/
	    _chart.getColor = function(d, i){
	        return _colors(_colorAccessor.call(this,d, i));
	    };
	
	    /**
	     #### .colorCalculator([value])
	     Gets or sets chart.getColor.
	     **/
	    _chart.colorCalculator = function(_){
	        if(!arguments.length) return _chart.getColor;
	        _chart.getColor = _;
	        return _chart;
	    };
	
	    return _chart;
	};
	
	/**
	## Coordinate Grid Mixin
	
	Includes: [Color Mixin](#color-mixin), [Margin Mixin](#margin-mixin), [Base Mixin](#base-mixin)
	
	Coordinate Grid is an abstract base chart designed to support a number of coordinate grid based
	concrete chart types, e.g. bar chart, line chart, and bubble chart.
	
	**/
	dc.coordinateGridMixin = function (_chart) {
	    var GRID_LINE_CLASS = "grid-line";
	    var HORIZONTAL_CLASS = "horizontal";
	    var VERTICAL_CLASS = "vertical";
	    var Y_AXIS_LABEL_CLASS = 'y-axis-label';
	    var X_AXIS_LABEL_CLASS = 'x-axis-label';
	    var DEFAULT_AXIS_LABEL_PADDING = 12;
	
	    _chart = dc.colorMixin(dc.marginMixin(dc.baseMixin(_chart)));
	
	    _chart.colors(d3.scale.category10());
	    _chart._mandatoryAttributes().push('x');
	
	    var _parent;
	    var _g;
	    var _chartBodyG;
	
	    var _x;
	    var _xOriginalDomain;
	    var _xAxis = d3.svg.axis().orient("bottom");
	    var _xUnits = dc.units.integers;
	    var _xAxisPadding = 0;
	    var _xElasticity = false;
	    var _xAxisLabel;
	    var _xAxisLabelPadding = 0;
	    var _lastXDomain;
	
	    var _y;
	    var _yAxis = d3.svg.axis().orient("left");
	    var _yAxisPadding = 0;
	    var _yElasticity = false;
	    var _yAxisLabel;
	    var _yAxisLabelPadding = 0;
	
	    var _brush = d3.svg.brush();
	    var _brushOn = true;
	    var _round;
	
	    var _renderHorizontalGridLine = false;
	    var _renderVerticalGridLine = false;
	
	    var _refocused = false;
	    var _unitCount;
	
	    var _zoomScale = [1, Infinity];
	    var _zoomOutRestrict = true;
	
	    var _zoom = d3.behavior.zoom().on("zoom", zoomHandler);
	    var _nullZoom = d3.behavior.zoom().on("zoom", null);
	    var _hasBeenMouseZoomable = false;
	
	    var _rangeChart;
	    var _focusChart;
	
	    var _mouseZoomable = false;
	    var _clipPadding = 0;
	
	    var _outerRangeBandPadding = 0.5;
	    var _rangeBandPadding = 0;
	
	    var _useRightYAxis = false;
	
	    _chart.rescale = function () {
	        _unitCount = undefined;
	    };
	
	    /**
	    #### .rangeChart([chart])
	    Get or set the range selection chart associated with this instance. Setting the range selection
	    chart using this function will automatically update its selection brush when the current chart
	    zooms in. In return the given range chart will also automatically attach this chart as its focus
	    chart hence zoom in when range brush updates. See the [Nasdaq 100
	    Index](http://dc-js.github.com/dc.js/) example for this effect in action.
	
	    **/
	    _chart.rangeChart = function (_) {
	        if (!arguments.length) return _rangeChart;
	        _rangeChart = _;
	        _rangeChart.focusChart(_chart);
	        return _chart;
	    };
	
	    /**
	    #### .zoomScale([extent])
	    Get or set the scale extent for mouse zooms.
	
	    **/
	    _chart.zoomScale = function (_) {
	        if (!arguments.length) return _zoomScale;
	        _zoomScale = _;
	        return _chart;
	    };
	
	    /**
	    #### .zoomOutRestrict([true/false])
	    Get or set the zoom restriction for the chart. If true limits the zoom to origional domain of the chart.
	    **/
	    _chart.zoomOutRestrict = function (r) {
	        if (!arguments.length) return _zoomOutRestrict;
	        _zoomScale[0] = r ? 1 : 0;
	        _zoomOutRestrict = r;
	        return _chart;
	    };
	
	    _chart._generateG = function (parent) {
	        if (parent === undefined)
	            _parent = _chart.svg();
	        else
	            _parent = parent;
	
	        _g = _parent.append("g");
	
	        _chartBodyG = _g.append("g").attr("class", "chart-body")
	            .attr("transform", "translate(" + _chart.margins().left + ", " + _chart.margins().top + ")")
	            .attr("clip-path", "url(#" + getClipPathId() + ")");
	
	        return _g;
	    };
	
	    /**
	    #### .g([gElement])
	    Get or set the root g element. This method is usually used to retrieve the g element in order to
	    overlay custom svg drawing programatically. **Caution**: The root g element is usually generated
	    by dc.js internals, and resetting it might produce unpredictable result.
	
	    **/
	    _chart.g = function (_) {
	        if (!arguments.length) return _g;
	        _g = _;
	        return _chart;
	    };
	
	    /**
	    #### .mouseZoomable([boolean])
	    Set or get mouse zoom capability flag (default: false). When turned on the chart will be
	    zoomable using the mouse wheel. If the range selector chart is attached zooming will also update
	    the range selection brush on the associated range selector chart.
	
	    **/
	    _chart.mouseZoomable = function (z) {
	        if (!arguments.length) return _mouseZoomable;
	        _mouseZoomable = z;
	        return _chart;
	    };
	
	    /**
	    #### .chartBodyG()
	    Retrieve the svg group for the chart body.
	    **/
	    _chart.chartBodyG = function (_) {
	        if (!arguments.length) return _chartBodyG;
	        _chartBodyG = _;
	        return _chart;
	    };
	
	    /**
	    #### .x([xScale]) - **mandatory**
	    Get or set the x scale. The x scale can be any d3
	    [quantitive scale](https://github.com/mbostock/d3/wiki/Quantitative-Scales) or
	    [ordinal scale](https://github.com/mbostock/d3/wiki/Ordinal-Scales).
	    ```js
	    // set x to a linear scale
	    chart.x(d3.scale.linear().domain([-2500, 2500]))
	    // set x to a time scale to generate histogram
	    chart.x(d3.time.scale().domain([new Date(1985, 0, 1), new Date(2012, 11, 31)]))
	    ```
	
	    **/
	    _chart.x = function (_) {
	        if (!arguments.length) return _x;
	        _x = _;
	        _xOriginalDomain = _x.domain();
	        return _chart;
	    };
	
	    _chart.xOriginalDomain = function () {
	        return _xOriginalDomain;
	    };
	
	    /**
	    #### .xUnits([xUnits function])
	    Set or get the xUnits function. The coordinate grid chart uses the xUnits function to calculate
	    the number of data projections on x axis such as the number of bars for a bar chart or the
	    number of dots for a line chart. This function is expected to return a Javascript array of all
	    data points on x axis, or the number of points on the axis. [d3 time range functions
	    d3.time.days, d3.time.months, and
	    d3.time.years](https://github.com/mbostock/d3/wiki/Time-Intervals#aliases) are all valid xUnits
	    function. dc.js also provides a few units function, see the [Utilities](#utilities) section for
	    a list of built-in units functions. The default xUnits function is dc.units.integers.
	    ```js
	    // set x units to count days
	    chart.xUnits(d3.time.days);
	    // set x units to count months
	    chart.xUnits(d3.time.months);
	    ```
	    A custom xUnits function can be used as long as it follows the following interface:
	    ```js
	    // units in integer
	    function(start, end, xDomain) {
	        // simply calculates how many integers in the domain
	        return Math.abs(end - start);
	    };
	
	    // fixed units
	    function(start, end, xDomain) {
	        // be aware using fixed units will disable the focus/zoom ability on the chart
	        return 1000;
	    };
	    ```
	
	    **/
	    _chart.xUnits = function (_) {
	        if (!arguments.length) return _xUnits;
	        _xUnits = _;
	        return _chart;
	    };
	
	    /**
	    #### .xAxis([xAxis])
	    Set or get the x axis used by a particular coordinate grid chart instance. This function is most
	    useful when x axis customization is required. The x axis in dc.js is an instance of a [d3
	    axis object](https://github.com/mbostock/d3/wiki/SVG-Axes#wiki-axis); therefore it supports any
	    valid d3 axis manipulation. **Caution**: The x axis is usually generated internally by dc;
	    resetting it may cause unexpected results.
	    ```js
	    // customize x axis tick format
	    chart.xAxis().tickFormat(function(v) {return v + "%";});
	    // customize x axis tick values
	    chart.xAxis().tickValues([0, 100, 200, 300]);
	    ```
	
	    **/
	    _chart.xAxis = function (_) {
	        if (!arguments.length) return _xAxis;
	        _xAxis = _;
	        return _chart;
	    };
	
	    /**
	    #### .elasticX([boolean])
	    Turn on/off elastic x axis behavior. If x axis elasticity is turned on, then the grid chart will
	    attempt to recalculate the x axis range whenever a redraw event is triggered.
	
	    **/
	    _chart.elasticX = function (_) {
	        if (!arguments.length) return _xElasticity;
	        _xElasticity = _;
	        return _chart;
	    };
	
	    /**
	    #### .xAxisPadding([padding])
	    Set or get x axis padding for the elastic x axis. The padding will be added to both end of the x
	    axis if elasticX is turned on; otherwise it is ignored.
	
	    * padding can be an integer or percentage in string (e.g. "10%"). Padding can be applied to
	    number or date x axes.  When padding a date axis, an integer represents number of days being padded
	    and a percentage string will be treated the same as an integer.
	
	    **/
	    _chart.xAxisPadding = function (_) {
	        if (!arguments.length) return _xAxisPadding;
	        _xAxisPadding = _;
	        return _chart;
	    };
	
	    /**
	    #### .xUnitCount()
	    Returns the number of units displayed on the x axis using the unit measure configured by
	    .xUnits.
	    **/
	    _chart.xUnitCount = function () {
	        if (_unitCount === undefined) {
	            var units = _chart.xUnits()(_chart.x().domain()[0], _chart.x().domain()[1], _chart.x().domain());
	
	            if (units instanceof Array)
	                _unitCount = units.length;
	            else
	                _unitCount = units;
	        }
	
	        return _unitCount;
	    };
	    /**
	     #### .useRightYAxis()
	     Gets or sets whether the chart should be drawn with a right axis instead of a left axis. When
	     used with a chart in a composite chart, allows both left and right Y axes to be shown on a
	     chart.
	     **/
	
	    _chart.useRightYAxis = function (_) {
	        if (!arguments.length) return _useRightYAxis;
	        _useRightYAxis = _;
	        return _chart;
	    };
	
	    /**
	    #### isOrdinal()
	    Returns true if the chart is using ordinal xUnits ([dc.units.ordinal](#dcunitsordinal)), or false
	    otherwise. Most charts behave differently with ordinal data and use the result of this method to
	    trigger the appropriate logic.
	    **/
	    _chart.isOrdinal = function () {
	        return _chart.xUnits() === dc.units.ordinal;
	    };
	
	    _chart._useOuterPadding = function() {
	        return true;
	    };
	
	    _chart._ordinalXDomain = function() {
	        var groups = _chart._computeOrderedGroups(_chart.data());
	        return groups.map(_chart.keyAccessor());
	    };
	
	    function prepareXAxis(g) {
	        if(!_chart.isOrdinal()) {
	            if (_chart.elasticX())
	                _x.domain([_chart.xAxisMin(), _chart.xAxisMax()]);
	        }
	        else { // _chart.isOrdinal()
	            if(_chart.elasticX() || _x.domain().length===0)
	                _x.domain(_chart._ordinalXDomain());
	        }
	
	        // has the domain changed?
	        var xdom = _x.domain();
	        if(!_lastXDomain || xdom.some(function(elem, i) { return elem != _lastXDomain[i]; }))
	            _chart.rescale();
	        _lastXDomain = xdom;
	
	        // please can't we always use rangeBands for bar charts?
	        if (_chart.isOrdinal()) {
	            _x.rangeBands([0,_chart.xAxisLength()],_rangeBandPadding,
	                          _chart._useOuterPadding()?_outerRangeBandPadding:0);
	        } else {
	            _x.range([0, _chart.xAxisLength()]);
	        }
	
	        _xAxis = _xAxis.scale(_chart.x());
	
	        renderVerticalGridLines(g);
	    }
	
	    _chart.renderXAxis = function (g) {
	        var axisXG = g.selectAll("g.x");
	
	        if (axisXG.empty())
	            axisXG = g.append("g")
	                .attr("class", "axis x")
	                .attr("transform", "translate(" + _chart.margins().left + "," + _chart._xAxisY() + ")");
	
	        var axisXLab = g.selectAll("text."+X_AXIS_LABEL_CLASS);
	        if (axisXLab.empty() && _chart.xAxisLabel())
	            axisXLab = g.append('text')
	                .attr("transform", "translate(" + (_chart.margins().left + _chart.xAxisLength() / 2) + "," + (_chart.height() - _xAxisLabelPadding) + ")")
	                .attr('class', X_AXIS_LABEL_CLASS)
	                .attr('text-anchor', 'middle')
	                .text(_chart.xAxisLabel());
	        if (_chart.xAxisLabel() && axisXLab.text() != _chart.xAxisLabel())
	            axisXLab.text(_chart.xAxisLabel());
	
	        dc.transition(axisXG, _chart.transitionDuration())
	            .call(_xAxis);
	    };
	
	    function renderVerticalGridLines(g) {
	        var gridLineG = g.selectAll("g." + VERTICAL_CLASS);
	
	        if (_renderVerticalGridLine) {
	            if (gridLineG.empty())
	                gridLineG = g.insert("g", ":first-child")
	                    .attr("class", GRID_LINE_CLASS + " " + VERTICAL_CLASS)
	                    .attr("transform", "translate(" + _chart.margins().left + "," + _chart.margins().top + ")");
	
	            var ticks = _xAxis.tickValues() ? _xAxis.tickValues() : _x.ticks(_xAxis.ticks()[0]);
	
	            var lines = gridLineG.selectAll("line")
	                .data(ticks);
	
	            // enter
	            var linesGEnter = lines.enter()
	                .append("line")
	                .attr("x1", function (d) {
	                    return _x(d);
	                })
	                .attr("y1", _chart._xAxisY() - _chart.margins().top)
	                .attr("x2", function (d) {
	                    return _x(d);
	                })
	                .attr("y2", 0)
	                .attr("opacity", 0);
	            dc.transition(linesGEnter, _chart.transitionDuration())
	                .attr("opacity", 1);
	
	            // update
	            dc.transition(lines, _chart.transitionDuration())
	                .attr("x1", function (d) {
	                    return _x(d);
	                })
	                .attr("y1", _chart._xAxisY() - _chart.margins().top)
	                .attr("x2", function (d) {
	                    return _x(d);
	                })
	                .attr("y2", 0);
	
	            // exit
	            lines.exit().remove();
	        }
	        else {
	            gridLineG.selectAll("line").remove();
	        }
	    }
	
	    _chart._xAxisY = function () {
	        return (_chart.height() - _chart.margins().bottom);
	    };
	
	    _chart.xAxisLength = function () {
	        return _chart.effectiveWidth();
	    };
	
	    /**
	    #### .xAxisLabel([labelText, [, padding]])
	    Set or get the x axis label. If setting the label, you may optionally include additional padding to
	    the margin to make room for the label. By default the padded is set to 12 to accomodate the text height.
	    **/
	    _chart.xAxisLabel = function (_, padding) {
	        if (!arguments.length) return _xAxisLabel;
	        _xAxisLabel = _;
	        _chart.margins().bottom -= _xAxisLabelPadding;
	        _xAxisLabelPadding = (padding === undefined) ? DEFAULT_AXIS_LABEL_PADDING : padding;
	        _chart.margins().bottom += _xAxisLabelPadding;
	        return _chart;
	    };
	
	    _chart._prepareYAxis = function(g) {
	        if (_y === undefined || _chart.elasticY()) {
	            _y = d3.scale.linear();
	            var min = _chart.yAxisMin() || 0,
	                max = _chart.yAxisMax() || 0;
	            _y.domain([min, max]).rangeRound([_chart.yAxisHeight(), 0]);
	        }
	
	        _y.range([_chart.yAxisHeight(), 0]);
	        _yAxis = _yAxis.scale(_y);
	
	        if (_useRightYAxis)
	            _yAxis.orient("right");
	
	        _chart._renderHorizontalGridLinesForAxis(g, _y, _yAxis);
	    };
	
	    _chart.renderYAxisLabel = function(axisClass, text, rotation, labelXPosition) {
	        labelXPosition = labelXPosition || _yAxisLabelPadding;
	
	        var axisYLab = _chart.g().selectAll("text." + Y_AXIS_LABEL_CLASS + "." + axisClass + "-label");
	        if (axisYLab.empty() && text) {
	
	            var labelYPosition = (_chart.margins().top + _chart.yAxisHeight() / 2);
	            axisYLab = _chart.g().append('text')
	                .attr("transform", "translate(" + labelXPosition + "," + labelYPosition + "),rotate(" + rotation + ")")
	                .attr('class', Y_AXIS_LABEL_CLASS + " " + axisClass + "-label")
	                .attr('text-anchor', 'middle')
	                .text(text);
	        }
	        if (text && axisYLab.text() != text) {
	            axisYLab.text(text);
	        }
	    };
	
	    _chart.renderYAxisAt = function (axisClass, axis, position){
	        var axisYG = _chart.g().selectAll("g." + axisClass);
	        if (axisYG.empty()) {
	            axisYG = _chart.g().append("g")
	                .attr("class", "axis " + axisClass)
	                .attr("transform", "translate(" + position + "," + _chart.margins().top + ")");
	        }
	
	        dc.transition(axisYG, _chart.transitionDuration()).call(axis);
	    };
	
	    _chart.renderYAxis = function () {
	        var axisPosition = _useRightYAxis ? (_chart.width() - _chart.margins().right) : _chart._yAxisX();
	        _chart.renderYAxisAt("y", _yAxis, axisPosition);
	        var labelPosition = _useRightYAxis ? (_chart.width() - _yAxisLabelPadding) : _yAxisLabelPadding;
	        var rotation = _useRightYAxis ? 90 : -90;
	        _chart.renderYAxisLabel("y", _chart.yAxisLabel(), rotation, labelPosition);
	    };
	
	    _chart._renderHorizontalGridLinesForAxis = function (g, scale, axis) {
	        var gridLineG = g.selectAll("g." + HORIZONTAL_CLASS);
	
	        if (_renderHorizontalGridLine) {
	            var ticks = axis.tickValues() ? axis.tickValues() : scale.ticks(axis.ticks()[0]);
	
	            if (gridLineG.empty()) {
	                gridLineG = g.insert("g", ":first-child")
	                    .attr("class", GRID_LINE_CLASS + " " + HORIZONTAL_CLASS)
	                    .attr("transform", "translate(" + _chart.margins().left + "," + _chart.margins().top + ")");
	            }
	
	            var lines = gridLineG.selectAll("line")
	                .data(ticks);
	
	            // enter
	            var linesGEnter = lines.enter()
	                .append("line")
	                .attr("x1", 1)
	                .attr("y1", function (d) {
	                    return scale(d);
	                })
	                .attr("x2", _chart.xAxisLength())
	                .attr("y2", function (d) {
	                    return scale(d);
	                })
	                .attr("opacity", 0);
	            dc.transition(linesGEnter, _chart.transitionDuration())
	                .attr("opacity", 1);
	
	            // update
	            dc.transition(lines, _chart.transitionDuration())
	                .attr("x1", 1)
	                .attr("y1", function (d) {
	                    return scale(d);
	                })
	                .attr("x2", _chart.xAxisLength())
	                .attr("y2", function (d) {
	                    return scale(d);
	                });
	
	            // exit
	            lines.exit().remove();
	        }
	        else {
	            gridLineG.selectAll("line").remove();
	        }
	    };
	
	    _chart._yAxisX = function () {
	        return _chart.useRightYAxis() ? _chart.width() - _chart.margins().right : _chart.margins().left;
	    };
	
	
	    /**
	    #### .yAxisLabel([labelText, [, padding]])
	    Set or get the y axis label. If setting the label, you may optionally include additional padding
	    to the margin to make room for the label. By default the padded is set to 12 to accomodate the
	    text height.
	    **/
	    _chart.yAxisLabel = function (_, padding) {
	        if (!arguments.length) return _yAxisLabel;
	        _yAxisLabel = _;
	        _chart.margins().left -= _yAxisLabelPadding;
	        _yAxisLabelPadding = (padding === undefined) ? DEFAULT_AXIS_LABEL_PADDING : padding;
	        _chart.margins().left += _yAxisLabelPadding;
	        return _chart;
	    };
	
	    /**
	    #### .y([yScale])
	    Get or set the y scale. The y scale is typically automatically determined by the chart implementation.
	
	    **/
	    _chart.y = function (_) {
	        if (!arguments.length) return _y;
	        _y = _;
	        return _chart;
	    };
	
	    /**
	    #### .yAxis([yAxis])
	    Set or get the y axis used by the coordinate grid chart instance. This function is most useful
	    when y axis customization is required. The y axis in dc.js is simply an instance of a [d3 axis
	    object](https://github.com/mbostock/d3/wiki/SVG-Axes#wiki-_axis); therefore it supports any
	    valid d3 axis manipulation. **Caution**: The y axis is usually generated internally by dc;
	    resetting it may cause unexpected results.
	    ```js
	    // customize y axis tick format
	    chart.yAxis().tickFormat(function(v) {return v + "%";});
	    // customize y axis tick values
	    chart.yAxis().tickValues([0, 100, 200, 300]);
	    ```
	
	    **/
	    _chart.yAxis = function (y) {
	        if (!arguments.length) return _yAxis;
	        _yAxis = y;
	        return _chart;
	    };
	
	    /**
	    #### .elasticY([boolean])
	    Turn on/off elastic y axis behavior. If y axis elasticity is turned on, then the grid chart will
	    attempt to recalculate the y axis range whenever a redraw event is triggered.
	
	    **/
	    _chart.elasticY = function (_) {
	        if (!arguments.length) return _yElasticity;
	        _yElasticity = _;
	        return _chart;
	    };
	
	    /**
	    #### .renderHorizontalGridLines([boolean])
	    Turn on/off horizontal grid lines.
	
	    **/
	    _chart.renderHorizontalGridLines = function (_) {
	        if (!arguments.length) return _renderHorizontalGridLine;
	        _renderHorizontalGridLine = _;
	        return _chart;
	    };
	
	    /**
	    #### .renderVerticalGridLines([boolean])
	    Turn on/off vertical grid lines.
	
	    **/
	    _chart.renderVerticalGridLines = function (_) {
	        if (!arguments.length) return _renderVerticalGridLine;
	        _renderVerticalGridLine = _;
	        return _chart;
	    };
	
	    /**
	    #### .xAxisMin()
	    Calculates the minimum x value to display in the chart. Includes xAxisPadding if set.
	    **/
	    _chart.xAxisMin = function () {
	        var min = d3.min(_chart.data(), function (e) {
	            return _chart.keyAccessor()(e);
	        });
	        return dc.utils.subtract(min, _xAxisPadding);
	    };
	
	    /**
	    #### .xAxisMax()
	    Calculates the maximum x value to display in the chart. Includes xAxisPadding if set.
	    **/
	    _chart.xAxisMax = function () {
	        var max = d3.max(_chart.data(), function (e) {
	            return _chart.keyAccessor()(e);
	        });
	        return dc.utils.add(max, _xAxisPadding);
	    };
	
	    /**
	    #### .yAxisMin()
	    Calculates the minimum y value to display in the chart. Includes yAxisPadding if set.
	    **/
	    _chart.yAxisMin = function () {
	        var min = d3.min(_chart.data(), function (e) {
	            return _chart.valueAccessor()(e);
	        });
	        return dc.utils.subtract(min, _yAxisPadding);
	    };
	
	    /**
	    #### .yAxisMax()
	    Calculates the maximum y value to display in the chart. Includes yAxisPadding if set.
	    **/
	    _chart.yAxisMax = function () {
	        var max = d3.max(_chart.data(), function (e) {
	            return _chart.valueAccessor()(e);
	        });
	        return dc.utils.add(max, _yAxisPadding);
	    };
	
	    /**
	    #### .yAxisPadding([padding])
	    Set or get y axis padding for the elastic y axis. The padding will be added to the top of the y
	    axis if elasticY is turned on; otherwise it is ignored.
	
	    * padding can be an integer or percentage in string (e.g. "10%"). Padding can be applied to
	    number or date axes. When padding a date axis, an integer represents number of days being padded
	    and a percentage string will be treated the same as an integer.
	
	    **/
	    _chart.yAxisPadding = function (_) {
	        if (!arguments.length) return _yAxisPadding;
	        _yAxisPadding = _;
	        return _chart;
	    };
	
	    _chart.yAxisHeight = function () {
	        return _chart.effectiveHeight();
	    };
	
	    /**
	    #### .round([rounding function])
	    Set or get the rounding function used to quantize the selection when brushing is enabled.
	    ```js
	    // set x unit round to by month, this will make sure range selection brush will
	    // select whole months
	    chart.round(d3.time.month.round);
	    ```
	
	    **/
	    _chart.round = function (_) {
	        if (!arguments.length) return _round;
	        _round = _;
	        return _chart;
	    };
	
	    _chart._rangeBandPadding = function (_) {
	        if (!arguments.length) return _rangeBandPadding;
	        _rangeBandPadding = _;
	        return _chart;
	    };
	
	    _chart._outerRangeBandPadding = function (_) {
	        if (!arguments.length) return _outerRangeBandPadding;
	        _outerRangeBandPadding = _;
	        return _chart;
	    };
	
	    dc.override(_chart, "filter", function (_) {
	        if (!arguments.length) return _chart._filter();
	
	        _chart._filter(_);
	
	        if (_) {
	            _chart.brush().extent(_);
	        } else {
	            _chart.brush().clear();
	        }
	
	        return _chart;
	    });
	
	    _chart.brush = function (_) {
	        if (!arguments.length) return _brush;
	        _brush = _;
	        return _chart;
	    };
	
	    function brushHeight() {
	        return _chart._xAxisY() - _chart.margins().top;
	    }
	
	    _chart.renderBrush = function (g) {
	        if (_brushOn) {
	            _brush.on("brush", _chart._brushing);
	            _brush.on("brushstart", _chart._disableMouseZoom);
	            _brush.on("brushend", configureMouseZoom);
	
	            var gBrush = g.append("g")
	                .attr("class", "brush")
	                .attr("transform", "translate(" + _chart.margins().left + "," + _chart.margins().top + ")")
	                .call(_brush.x(_chart.x()));
	            _chart.setBrushY(gBrush);
	            _chart.setHandlePaths(gBrush);
	
	            if (_chart.hasFilter()) {
	                _chart.redrawBrush(g);
	            }
	        }
	    };
	
	    _chart.setHandlePaths = function (gBrush) {
	        gBrush.selectAll(".resize").append("path").attr("d", _chart.resizeHandlePath);
	    };
	
	    _chart.setBrushY = function(gBrush){
	        gBrush.selectAll("rect").attr("height", brushHeight());
	    };
	
	    _chart.extendBrush = function () {
	        var extent = _brush.extent();
	        if (_chart.round()) {
	            extent[0] = extent.map(_chart.round())[0];
	            extent[1] = extent.map(_chart.round())[1];
	
	            _g.select(".brush")
	                .call(_brush.extent(extent));
	        }
	        return extent;
	    };
	
	    _chart.brushIsEmpty = function (extent) {
	        return _brush.empty() || !extent || extent[1] <= extent[0];
	    };
	
	    _chart._brushing = function() {
	        var extent = _chart.extendBrush();
	
	        _chart.redrawBrush(_g);
	
	        if (_chart.brushIsEmpty(extent)) {
	            dc.events.trigger(function () {
	                _chart.filter(null);
	                _chart.redrawGroup();
	            }, dc.constants.EVENT_DELAY);
	        } else {
	            var rangedFilter = dc.filters.RangedFilter(extent[0], extent[1]);
	
	            dc.events.trigger(function () {
	                _chart.replaceFilter(rangedFilter);
	                _chart.redrawGroup();
	            }, dc.constants.EVENT_DELAY);
	        }
	    };
	
	    _chart.redrawBrush = function (g) {
	        if (_brushOn) {
	            if (_chart.filter() && _chart.brush().empty())
	                _chart.brush().extent(_chart.filter());
	
	            var gBrush = g.select("g.brush");
	            gBrush.call(_chart.brush().x(_chart.x()));
	            _chart.setBrushY(gBrush);
	        }
	
	        _chart.fadeDeselectedArea();
	    };
	
	    _chart.fadeDeselectedArea = function () {
	        // do nothing, sub-chart should override this function
	    };
	
	    // borrowed from Crossfilter example
	    _chart.resizeHandlePath = function (d) {
	        var e = +(d == "e"), x = e ? 1 : -1, y = brushHeight() / 3;
	        /*jshint -W014 */
	        return "M" + (0.5 * x) + "," + y
	            + "A6,6 0 0 " + e + " " + (6.5 * x) + "," + (y + 6)
	            + "V" + (2 * y - 6)
	            + "A6,6 0 0 " + e + " " + (0.5 * x) + "," + (2 * y)
	            + "Z"
	            + "M" + (2.5 * x) + "," + (y + 8)
	            + "V" + (2 * y - 8)
	            + "M" + (4.5 * x) + "," + (y + 8)
	            + "V" + (2 * y - 8);
	        /*jshint +W014 */
	    };
	
	    function getClipPathId() {
	        return _chart.anchorName() + "-clip";
	    }
	
	    /**
	    #### .clipPadding([padding])
	    Get or set the padding in pixels for the clip path. Once set padding will be applied evenly to
	    the top, left, right, and bottom when the clip path is generated. If set to zero, the clip area
	    will be exactly the chart body area minus the margins.  Default: 5
	
	    **/
	    _chart.clipPadding = function (p) {
	        if (!arguments.length) return _clipPadding;
	        _clipPadding = p;
	        return _chart;
	    };
	
	    function generateClipPath() {
	        var defs = dc.utils.appendOrSelect(_parent, "defs");
	
	        var chartBodyClip = dc.utils.appendOrSelect(defs, "clipPath").attr("id", getClipPathId());
	
	        var padding = _clipPadding * 2;
	
	        dc.utils.appendOrSelect(chartBodyClip, "rect")
	            .attr("width", _chart.xAxisLength() + padding)
	            .attr("height", _chart.yAxisHeight() + padding);
	    }
	
	    _chart._preprocessData = function() {};
	
	    _chart._doRender = function () {
	        _chart.resetSvg();
	
	        _chart._preprocessData();
	
	        _chart._generateG();
	        generateClipPath();
	
	        drawChart(true);
	
	        configureMouseZoom();
	
	        return _chart;
	    };
	
	    _chart._doRedraw = function () {
	        _chart._preprocessData();
	
	        drawChart(false);
	
	        return _chart;
	    };
	
	    function drawChart (render) {
	        if (_chart.isOrdinal())
	            _brushOn = false;
	
	        prepareXAxis(_chart.g());
	        _chart._prepareYAxis(_chart.g());
	
	        _chart.plotData();
	
	        if (_chart.elasticX() || _refocused || render)
	            _chart.renderXAxis(_chart.g());
	
	        if (_chart.elasticY() || render)
	            _chart.renderYAxis(_chart.g());
	
	        if (render)
	            _chart.renderBrush(_chart.g());
	        else
	            _chart.redrawBrush(_chart.g());
	    }
	
	    function configureMouseZoom () {
	        if (_mouseZoomable) {
	            _chart._enableMouseZoom();
	        }
	        else if (_hasBeenMouseZoomable) {
	            _chart._disableMouseZoom();
	        }
	    }
	
	    _chart._enableMouseZoom = function () {
	        _hasBeenMouseZoomable = true;
	        _zoom.x(_chart.x())
	            .scaleExtent(_zoomScale)
	            .size([_chart.width(),_chart.height()]);
	        _chart.root().call(_zoom);
	    };
	
	    _chart._disableMouseZoom = function () {
	        _chart.root().call(_nullZoom);
	    };
	
	    function zoomHandler() {
	        _refocused = true;
	        if (_zoomOutRestrict) {
	            _chart.x().domain(constrainRange(_chart.x().domain(), _xOriginalDomain));
	            if (_rangeChart) {
	                _chart.x().domain(constrainRange(_chart.x().domain(), _rangeChart.x().domain()));
	            }
	        }
	
	        var domain = _chart.x().domain();
	        var domFilter = dc.filters.RangedFilter(domain[0], domain[1]);
	
	        _chart.replaceFilter(domFilter);
	        _chart.rescale();
	        _chart.redraw();
	
	        if (_rangeChart && !rangesEqual(_chart.filter(), _rangeChart.filter())) {
	            dc.events.trigger( function () {
	                _rangeChart.replaceFilter(domFilter);
	                _rangeChart.redraw();
	            });
	        }
	
	        _chart._invokeZoomedListener();
	
	        dc.events.trigger(function () {
	            _chart.redrawGroup();
	        }, dc.constants.EVENT_DELAY);
	
	        _refocused = !rangesEqual(domain, _xOriginalDomain);
	    }
	
	    function constrainRange(range, constraint) {
	        var constrainedRange = [];
	        constrainedRange[0] = d3.max([range[0], constraint[0]]);
	        constrainedRange[1] = d3.min([range[1], constraint[1]]);
	        return constrainedRange;
	    }
	
	    /**
	    #### .focus([range])
	    Zoom this chart to focus on the given range. The given range should be an array containing only
	    2 elements (`[start, end]`) defining a range in the x domain. If the range is not given or set
	    to null, then the zoom will be reset. _For focus to work elasticX has to be turned off;
	    otherwise focus will be ignored._
	    ```js
	    chart.renderlet(function(chart){
	        // smooth the rendering through event throttling
	        dc.events.trigger(function(){
	            // focus some other chart to the range selected by user on this chart
	            someOtherChart.focus(chart.filter());
	        });
	    })
	    ```
	
	    **/
	    _chart.focus = function (range) {
	        if (hasRangeSelected(range))
	            _chart.x().domain(range);
	        else
	            _chart.x().domain(_xOriginalDomain);
	
	        _zoom.x(_chart.x());
	        zoomHandler();
	    };
	
	    _chart.refocused = function () {
	        return _refocused;
	    };
	
	    _chart.focusChart = function (c) {
	        if (!arguments.length) return _focusChart;
	        _focusChart = c;
	        _chart.on("filtered", function (chart) {
	            if (!chart.filter()) {
	                dc.events.trigger(function() {
	                    _focusChart.x().domain(_focusChart.xOriginalDomain());
	                });
	            } else if (!rangesEqual(chart.filter(), _focusChart.filter())) {
	                dc.events.trigger(function () {
	                    _focusChart.focus(chart.filter());
	                });
	            }
	        });
	        return _chart;
	    };
	
	    function rangesEqual(range1, range2) {
	        if (!range1 && !range2) {
	            return true;
	        }
	        else if (!range1 || !range2) {
	            return false;
	        }
	        else if (range1.length === 0 && range2.length === 0) {
	            return true;
	        }
	        else if (range1[0].valueOf() === range2[0].valueOf() &&
	            range1[1].valueOf() === range2[1].valueOf()) {
	            return true;
	        }
	        else return false;
	    }
	
	    /**
	    #### .brushOn([boolean])
	    Turn on/off the brush-based range filter. When brushing is on then user can drag the mouse
	    across a chart with a quantitative scale to perform range filtering based on the extent of the
	    brush, or click on the bars of an ordinal bar chart or slices of a pie chart to filter and
	    unfilter them. However turning on the brush filter will disable other interactive elements on
	    the chart such as highlighting, tool tips, and reference lines. Zooming will still be possible
	    if enabled, but only via scrolling (panning will be disabled.) Default: true
	
	    **/
	    _chart.brushOn = function (_) {
	        if (!arguments.length) return _brushOn;
	        _brushOn = _;
	        return _chart;
	    };
	
	    function hasRangeSelected(range) {
	        return range instanceof Array && range.length > 1;
	    }
	
	    return _chart;
	};
	
	/**
	## Stack Mixin
	
	Stack Mixin is an mixin that provides cross-chart support of stackability using d3.layout.stack.
	
	**/
	dc.stackMixin = function (_chart) {
	
	    var _stackLayout = d3.layout.stack()
	        .values(prepareValues);
	
	    var _stack = [];
	    var _titles = {};
	
	    var _hidableStacks = false;
	
	    function prepareValues(layer, layerIdx) {
	        var valAccessor = layer.accessor || _chart.valueAccessor();
	        layer.name = String(layer.name || layerIdx);
	        layer.values = layer.group.all().map(function(d,i) {
	            return {x: _chart.keyAccessor()(d,i),
	                    y: layer.hidden ? null : valAccessor(d,i),
	                    data: d,
	                    layer: layer.name,
	                    hidden: layer.hidden};
	        });
	
	        layer.values = layer.values.filter(domainFilter());
	        return layer.values;
	    }
	
	    function domainFilter() {
	        if (!_chart.x()) return d3.functor(true);
	        var xDomain = _chart.x().domain();
	        if (_chart.isOrdinal()) {
	            // TODO #416
	            //var domainSet = d3.set(xDomain);
	            return function(p) {
	                return true; //domainSet.has(p.x);
	            };
	        }
	        if (_chart.elasticX()) {
	            return function() { return true; };
	        }
	        return function(p) {
	            //return true;
	            return p.x >= xDomain[0] && p.x <= xDomain[xDomain.length-1];
	        };
	    }
	
	    /**
	    #### .stack(group[, name, accessor])
	    Stack a new crossfilter group onto this chart with an optional custom value accessor. All stacks
	    in the same chart will share the same key accessor and therefore the same set of keys.
	
	    For example, in a stacked bar chart, the bars of each stack will be positioned using the same set
	    of keys on the x axis, while stacked vertically. If name is specified then it will be used to
	    generate the legend label.
	    ```js
	    // stack group using default accessor
	    chart.stack(valueSumGroup)
	    // stack group using custom accessor
	    .stack(avgByDayGroup, function(d){return d.value.avgByDay;});
	    ```
	
	    **/
	    _chart.stack = function (group, name, accessor) {
	        if (!arguments.length) return _stack;
	
	        if (arguments.length <= 2)
	            accessor = name;
	
	        var layer = {group:group};
	        if (typeof name === 'string') layer.name = name;
	        if (typeof accessor === 'function') layer.accessor = accessor;
	        _stack.push(layer);
	
	        return _chart;
	    };
	
	    dc.override(_chart,'group', function (g,n,f) {
	        if (!arguments.length) return _chart._group();
	        _stack = [];
	        _titles = {};
	        _chart.stack(g,n);
	        if (f) _chart.valueAccessor(f);
	        return _chart._group(g,n);
	    });
	
	    /**
	    #### .hidableStacks([boolean])
	    Allow named stacks to be hidden or shown by clicking on legend items.
	    This does not affect the behavior of hideStack or showStack.
	
	    **/
	    _chart.hidableStacks = function(_) {
	        if (!arguments.length) return _hidableStacks;
	        _hidableStacks = _;
	        return _chart;
	    };
	
	    function findLayerByName(n) {
	        var i = _stack.map(dc.pluck('name')).indexOf(n);
	        return _stack[i];
	    }
	
	    /**
	    #### .hideStack(name)
	    Hide all stacks on the chart with the given name.
	    The chart must be re-rendered for this change to appear.
	
	    **/
	    _chart.hideStack = function (stackName) {
	        var layer = findLayerByName(stackName);
	        if (layer) layer.hidden = true;
	        return _chart;
	    };
	
	    /**
	    #### .showStack(name)
	    Show all stacks on the chart with the given name.
	    The chart must be re-rendered for this change to appear.
	
	    **/
	    _chart.showStack = function (stackName) {
	        var layer = findLayerByName(stackName);
	        if (layer) layer.hidden = false;
	        return _chart;
	    };
	
	    _chart.getValueAccessorByIndex = function (index) {
	        return _stack[index].accessor || _chart.valueAccessor();
	    };
	
	    _chart.yAxisMin = function () {
	        var min = d3.min(flattenStack(), function (p) {
	            return (p.y + p.y0 < p.y0) ? (p.y + p.y0) : p.y0;
	        });
	
	        return dc.utils.subtract(min, _chart.yAxisPadding());
	
	    };
	
	    _chart.yAxisMax = function () {
	        var max = d3.max(flattenStack(), function (p) {
	            return p.y + p.y0;
	        });
	
	        return dc.utils.add(max, _chart.yAxisPadding());
	    };
	
	    function flattenStack() {
	        return _chart.data().reduce(function(all,layer) {
	            return all.concat(layer.values);
	        },[]);
	    }
	
	    _chart.xAxisMin = function () {
	        var min = d3.min(flattenStack(), dc.pluck('x'));
	        return dc.utils.subtract(min, _chart.xAxisPadding());
	    };
	
	    _chart.xAxisMax = function () {
	        var max = d3.max(flattenStack(), dc.pluck('x'));
	        return dc.utils.add(max, _chart.xAxisPadding());
	    };
	
	    /**
	    #### .title([stackName], [titleFunction])
	    Set or get the title function. Chart class will use this function to render svg title (usually interpreted by browser
	    as tooltips) for each child element in the chart, i.e. a slice in a pie chart or a bubble in a bubble chart. Almost
	    every chart supports title function however in grid coordinate chart you need to turn off brush in order to use title
	    otherwise the brush layer will block tooltip trigger.
	
	    If the first argument is a stack name, the title function will get or set the title for that stack. If stackName
	    is not provided, the first stack is implied.
	    ```js
	    // set a title function on "first stack"
	    chart.title("first stack", function(d) { return d.key + ": " + d.value; });
	    // get a title function from "second stack"
	    var secondTitleFunction = chart.title("second stack");
	    );
	    ```
	    **/
	    dc.override(_chart, "title", function (stackName, titleAccessor) {
	        if (!stackName) return _chart._title();
	
	        if (typeof stackName === 'function') return _chart._title(stackName);
	        if (stackName == _chart._groupName && typeof titleAccessor === 'function')
	            return _chart._title(titleAccessor);
	
	        if (typeof titleAccessor !== 'function') return _titles[stackName] || _chart._title();
	
	        _titles[stackName] = titleAccessor;
	
	        return _chart;
	    });
	
	    /**
	     #### .stackLayout([layout])
	     Gets or sets the stack layout algorithm, which computes a baseline for each stack and
	     propagates it to the next.  The default is
	     [d3.layout.stack](https://github.com/mbostock/d3/wiki/Stack-Layout#stack).
	     **/
	    _chart.stackLayout = function (stack) {
	        if (!arguments.length) return _stackLayout;
	        _stackLayout = stack;
	        return _chart;
	    };
	
	    function visability(l) {
	        return !l.hidden;
	    }
	
	    _chart.data(function() {
	        var layers = _stack.filter(visability);
	        return layers.length ? _chart.stackLayout()(layers) : [];
	    });
	
	    _chart._ordinalXDomain = function () {
	        return flattenStack().map(dc.pluck('x'));
	    };
	
	    _chart.colorAccessor(function (d) {
	        var layer = this.layer || this.name || d.name || d.layer;
	        return layer;
	    });
	
	    _chart.legendables = function () {
	        return _stack.map(function (layer, i) {
	            return {chart:_chart, name:layer.name, hidden: layer.hidden || false, color:_chart.getColor.call(layer,layer.values,i)};
	        });
	    };
	
	    _chart.isLegendableHidden = function (d) {
	        var layer = findLayerByName(d.name);
	        return layer ? layer.hidden : false;
	    };
	
	    _chart.legendToggle = function (d) {
	        if(_hidableStacks) {
	            if (_chart.isLegendableHidden(d)) _chart.showStack(d.name);
	            else _chart.hideStack(d.name);
	            //_chart.redraw();
	            _chart.renderGroup();
	        }
	    };
	
	    return _chart;
	};
	
	/**
	## Cap Mixin
	
	Cap is a mixin that groups small data elements below a _cap_ into an *others* grouping for both the
	Row and Pie Charts.
	
	The top ordered elements in the group up to the cap amount will be kept in the chart, and the rest
	will be replaced with an *others* element, with value equal to the sum of the replaced values. The
	keys of the elements below the cap limit are recorded in order to filter by those keys when the
	*others* element is clicked.
	
	**/
	dc.capMixin = function (_chart) {
	
	    var _cap = Infinity;
	
	    var _othersLabel = "Others";
	
	    var _othersGrouper = function (topRows) {
	        var topRowsSum = d3.sum(topRows, _chart.valueAccessor()),
	            allRows = _chart.group().all(),
	            allRowsSum = d3.sum(allRows, _chart.valueAccessor()),
	            topKeys = topRows.map(_chart.keyAccessor()),
	            allKeys = allRows.map(_chart.keyAccessor()),
	            topSet = d3.set(topKeys),
	            others = allKeys.filter(function(d){return !topSet.has(d);});
	        if (allRowsSum > topRowsSum)
	            return topRows.concat([{"others": others, "key": _othersLabel, "value": allRowsSum - topRowsSum}]);
	        return topRows;
	    };
	
	    _chart.cappedKeyAccessor = function(d,i) {
	        if (d.others)
	            return d.key;
	        return _chart.keyAccessor()(d,i);
	    };
	
	    _chart.cappedValueAccessor = function(d,i) {
	        if (d.others)
	            return d.value;
	        return _chart.valueAccessor()(d,i);
	    };
	
	    _chart.data(function(group) {
	        if (_cap == Infinity) {
	            return _chart._computeOrderedGroups(group.all());
	        } else {
	            var topRows = group.top(_cap); // ordered by crossfilter group order (default value)
	            topRows = _chart._computeOrderedGroups(topRows); // re-order using ordering (default key)
	            if (_othersGrouper) return _othersGrouper(topRows);
	            return topRows;
	        }
	    });
	
	    /**
	    #### .cap([count])
	    Get or set the count of elements to that will be included in the cap.
	    **/
	    _chart.cap = function (_) {
	        if (!arguments.length) return _cap;
	        _cap = _;
	        return _chart;
	    };
	
	    /**
	    #### .othersLabel([label])
	    Get or set the label for *Others* slice when slices cap is specified. Default label is **Others**.
	    **/
	    _chart.othersLabel = function (_) {
	        if (!arguments.length) return _othersLabel;
	        _othersLabel = _;
	        return _chart;
	    };
	
	    /**
	    #### .othersGrouper([grouperFunction])
	    Get or set the grouper function that will perform the insertion of data for the *Others* slice
	    if the slices cap is specified. If set to a falsy value, no others will be added. By default the
	    grouper function computes the sum of all values below the cap.
	    ```js
	    chart.othersGrouper(function (data) {
	        // compute the value for others, presumably the sum of all values below the cap
	        var othersSum  = yourComputeOthersValueLogic(data)
	
	        // the keys are needed to properly filter when the others element is clicked
	        var othersKeys = yourComputeOthersKeysArrayLogic(data);
	
	        // add the others row to the dataset
	        data.push({"key": "Others", "value": othersSum, "others": othersKeys });
	
	        return data;
	    });
	    ```
	    **/
	    _chart.othersGrouper = function (_) {
	        if (!arguments.length) return _othersGrouper;
	        _othersGrouper = _;
	        return _chart;
	    };
	
	    dc.override(_chart, "onClick", function (d) {
	        if (d.others)
	            _chart.filter([d.others]);
	        _chart._onClick(d);
	    });
	
	    return _chart;
	};
	
	/**
	## Bubble Mixin
	
	Includes: [Color Mixin](#color-mixin)
	
	This Mixin provides reusable functionalities for any chart that needs to visualize data using bubbles.
	
	**/
	dc.bubbleMixin = function (_chart) {
	    var _maxBubbleRelativeSize = 0.3;
	    var _minRadiusWithLabel = 10;
	
	    _chart.BUBBLE_NODE_CLASS = "node";
	    _chart.BUBBLE_CLASS = "bubble";
	    _chart.MIN_RADIUS = 10;
	
	    _chart = dc.colorMixin(_chart);
	
	    _chart.renderLabel(true);
	    _chart.renderTitle(false);
	
	    _chart.data(function(group) {
	        return group.top(Infinity);
	    });
	
	    var _r = d3.scale.linear().domain([0, 100]);
	
	    var _rValueAccessor = function (d) {
	        return d.r;
	    };
	
	    /**
	    #### .r([bubbleRadiusScale])
	    Get or set the bubble radius scale. By default the bubble chart uses
	    `d3.scale.linear().domain([0, 100])` as its r scale .
	
	    **/
	    _chart.r = function (_) {
	        if (!arguments.length) return _r;
	        _r = _;
	        return _chart;
	    };
	
	    /**
	    #### .radiusValueAccessor([radiusValueAccessor])
	    Get or set the radius value accessor function. If set, the radius value accessor function will
	    be used to retrieve a data value for each bubble. The data retrieved then will be mapped using
	    the r scale to the actual bubble radius. This allows you to encode a data dimension using bubble
	    size.
	
	    **/
	    _chart.radiusValueAccessor = function (_) {
	        if (!arguments.length) return _rValueAccessor;
	        _rValueAccessor = _;
	        return _chart;
	    };
	
	    _chart.rMin = function () {
	        var min = d3.min(_chart.data(), function (e) {
	            return _chart.radiusValueAccessor()(e);
	        });
	        return min;
	    };
	
	    _chart.rMax = function () {
	        var max = d3.max(_chart.data(), function (e) {
	            return _chart.radiusValueAccessor()(e);
	        });
	        return max;
	    };
	
	    _chart.bubbleR = function (d) {
	        var value = _chart.radiusValueAccessor()(d);
	        var r = _chart.r()(value);
	        if (isNaN(r) || value <= 0)
	            r = 0;
	        return r;
	    };
	
	    var labelFunction = function (d) {
	        return _chart.label()(d);
	    };
	
	    var labelOpacity = function (d) {
	        return (_chart.bubbleR(d) > _minRadiusWithLabel) ? 1 : 0;
	    };
	
	    _chart._doRenderLabel = function (bubbleGEnter) {
	        if (_chart.renderLabel()) {
	            var label = bubbleGEnter.select("text");
	
	            if (label.empty()) {
	                label = bubbleGEnter.append("text")
	                    .attr("text-anchor", "middle")
	                    .attr("dy", ".3em")
	                    .on("click", _chart.onClick);
	            }
	
	            label
	                .attr("opacity", 0)
	                .text(labelFunction);
	            dc.transition(label, _chart.transitionDuration())
	                .attr("opacity", labelOpacity);
	        }
	    };
	
	    _chart.doUpdateLabels = function (bubbleGEnter) {
	        if (_chart.renderLabel()) {
	            var labels = bubbleGEnter.selectAll("text")
	                .text(labelFunction);
	            dc.transition(labels, _chart.transitionDuration())
	                .attr("opacity", labelOpacity);
	        }
	    };
	
	    var titleFunction = function (d) {
	        return _chart.title()(d);
	    };
	
	    _chart._doRenderTitles = function (g) {
	        if (_chart.renderTitle()) {
	            var title = g.select("title");
	
	            if (title.empty())
	                g.append("title").text(titleFunction);
	        }
	    };
	
	    _chart.doUpdateTitles = function (g) {
	        if (_chart.renderTitle()) {
	            g.selectAll("title").text(titleFunction);
	        }
	    };
	
	    /**
	    #### .minRadiusWithLabel([radius])
	    Get or set the minimum radius for label rendering. If a bubble's radius is less than this value
	    then no label will be rendered.  Default: 10
	
	    **/
	    _chart.minRadiusWithLabel = function (_) {
	        if (!arguments.length) return _minRadiusWithLabel;
	        _minRadiusWithLabel = _;
	        return _chart;
	    };
	
	    /**
	    #### .maxBubbleRelativeSize([relativeSize])
	    Get or set the maximum relative size of a bubble to the length of x axis. This value is useful
	    when the difference in radius between bubbles is too great. Default: 0.3
	
	    **/
	    _chart.maxBubbleRelativeSize = function (_) {
	        if (!arguments.length) return _maxBubbleRelativeSize;
	        _maxBubbleRelativeSize = _;
	        return _chart;
	    };
	
	    _chart.fadeDeselectedArea = function () {
	        if (_chart.hasFilter()) {
	            _chart.selectAll("g." + _chart.BUBBLE_NODE_CLASS).each(function (d) {
	                if (_chart.isSelectedNode(d)) {
	                    _chart.highlightSelected(this);
	                } else {
	                    _chart.fadeDeselected(this);
	                }
	            });
	        } else {
	            _chart.selectAll("g." + _chart.BUBBLE_NODE_CLASS).each(function (d) {
	                _chart.resetHighlight(this);
	            });
	        }
	    };
	
	    _chart.isSelectedNode = function (d) {
	        return _chart.hasFilter(d.key);
	    };
	
	    _chart.onClick = function (d) {
	        var filter = d.key;
	        dc.events.trigger(function () {
	            _chart.filter(filter);
	            _chart.redrawGroup();
	        });
	    };
	
	    return _chart;
	};
	
	/**
	## Hierarchy Mixin
	
	The Hierarchy Mixin provides support for hierarchical multi dimensional filtering. This means that we can use dimensions
	in hierarchichal or tree like fashion. Example uses for this would be the Sankey and the Treemap.
	
	**/
	
	dc.hierarchyMixin = function(_chart) {
		var _levels = [], _measureColumn, _filters = {};
	
	    var _filterHandler = function (dimension, filters) {
	        dimension.filter(null);
	
	        if (filters.length === 0)
	            dimension.filter(null);
	        else
	            dimension.filterFunction(function (d) {
	                for(var i = 0; i < filters.length; i++) {
	                    var filter = filters[i];
	                    if (filter.isFiltered && filter.isFiltered(d)) {
	                        return true;
	                    } else if (filter <= d && filter >= d) {
	                        return true;
	                    }
	                }
	                return false;
	            });
	
	        return filters;
	    };
	
	    /**
	    #### .hasFilter(columnName, filterValue)
	    Specify the dimension that goes along with the filter by providing columnName as the key corresponding to a key in your levels object.
	    **/
	    _chart.hasFilter = function (columnName, filterValue) {
	        if(!arguments.length) {
	            if(Object.keys(_filters).length === 0) {
	                return false;
	            }
	            else //check that the filterValues has any filter values added for any dimensions
	            {
	                return Object.keys(_filters).some(function(columnName) {
	                    var filterValues = _filters[columnName].filterValues;
	                    return filterValues.length > 0;
	                });
	            }
	        }
	
	        if(!filterValue) {
	            return _filters[columnName] && _filters[columnName].filterValues && !!_filters[columnName].filterValues.length;
	        }
	
	        return (_filters[columnName]) ? 
	                    _filters[columnName].filterValues.some(function(f) {return f === filterValue;}) : false;
	    };
	
	    function removeFilter(columnName, filterValue) {
	        var dimension = _chart.lookupDimension(columnName);
	        _filters[columnName].filterValues.forEach(function(f, index) {
	            if(f === filterValue) {
	                var removedFilter = _filters[columnName].filterValues.splice(index, 1);
	            }
	        });
	        applyFilters();
	        _chart._invokeFilteredListener(dimension);
	    }
	
	    function addFilter(columnName, filterValue) {
	        //important that this dimension is a function so it gets returned dynamically
	        var dimension = function() {return _chart.lookupDimension(columnName);};
	        if(!_filters[columnName]){
	            _filters[columnName] = {'dimension' : dimension, 'filterValues': []};
	        }
	        
	        _filters[columnName].filterValues.push(filterValue);
	
	        applyFilters();
	        _chart._invokeFilteredListener(dimension);
	    }
	
	    function resetFilters() {
	        _filters = {};
	        applyFilters();
	        _chart._invokeFilteredListener(null);
	    }
	
	    //Important function changes for looping through dimensions
	    //and applying the filter handler
	    function applyFilters() {
	        Object.keys(_filters).forEach(function(columnName) {
	            var filterValues = _filters[columnName].filterValues;
	            var keyDimension = _filters[columnName].dimension();
	            var fs = _filterHandler(keyDimension, filterValues);
	            _filters[columnName].filterValues = fs ? fs : filterValues;
	        });
	    }
	
	    _chart.replaceFilter = function(columnName, filterValue) {
	        _filters[columnName].filterValues = [];
	        _charts.filter(columnName, filterValue);
	    };
	
	    /**
	    #### .filter(columnName, filterValues)
	    Filter the chart by specifying the column name and filter values.
	    This differs from the normal chart.filter("value") api that comes with Base mixin.
	    Returns the _filters object containing all of the specified dimensions and filters.
	    ```js
	    //filter on a dimension with a string
	    chart.filter("csvColumnforRegion", "West");
	    ```js
	    **/
	    _chart.filter = function(columnName, filterValue) {
	        if(!arguments.length) return _filters;
	        if(_chart.hasFilter(columnName, filterValue)) {
	            removeFilter(columnName, filterValue);
	        }
	        else {
	            addFilter(columnName, filterValue);
	        }
	    };
	
	    _chart.filterAll = function(columnName) {
	        if (!arguments.length){
	            Object.keys(_filters).forEach(function(columnName) {
	                _filters[columnName].filterValues = [];
	                var keyDimension = _filters[columnName].dimension();
	                applyFilters();
	                _chart._invokeFilteredListener(keyDimension);
	            }); 
	        }
	        else {
	            _chart.filterAllForLevel(columnName);
	        }
	        
	        
	    };
	
	    _chart.filterAllForLevel = function(columnName) {
	        if(_filters[columnName]) {
	            _filters[columnName].filterValues = [];
	            var keyDimension = _filters[columnName].dimension;
	            applyFilters();
	            _chart._invokeFilteredListener(keyDimension);
	        }
	        
	    };
	
	    _chart.filters = function(columnName) {
	        if (!arguments.length) return _filters;
	        return _filters[columnName].filterValues;
	    };
	
	    _chart.lookupDimension = function(d) {
	        var dimension ='';
	        _levels.forEach(function(level) {
	            if(level.columnName === d) {
	                dimension = level.dimension;
	            }
	        });
	        return dimension;
	    };
	
	    _chart._mandatoryAttributes([]);
	
	    /**
	    #### .levels([{dimension: someDimension, columnName: "column"}]) 
	    Pass in an array of objects containing a dimension and corresponding column name
	    **/
	    _chart.levels = function(_) {
	        if(!arguments.length) return _levels;
	        _levels = _;
	        return _chart;
	    };
	
	    /**
	    #### .measureColumn([String]) 
	    Set the column name that contains the measure value for the chart. 
	    **/
	    _chart.measureColumn = function(_) {
	        if(!arguments.length) return _measureColumn;
	        _measureColumn = _;
	        return _chart;
	    };
	
	    _chart.initData = function () {
	        //do nothing in hierarchy mixin, should be overridden by sub-function
	        //The hierarchical data is not a good fit for crossfilter, so this function
	        //should be used to translate tabular crossfilter data into your own hierarchical data structure. 
	        return _chart;
	    };
	
	
	
		return _chart;
	};
	/**
	## Pie Chart
	
	Includes: [Cap Mixin](#cap-mixin), [Color Mixin](#color-mixin), [Base Mixin](#base-mixin)
	
	The pie chart implementation is usually used to visualize a small categorical distribution.  The pie
	chart uses keyAccessor to determine the slices, and valueAccessor to calculate the size of each
	slice relative to the sum of all values. Slices are ordered by `.ordering` which defaults to sorting
	by key.
	
	Examples:
	
	* [Nasdaq 100 Index](http://dc-js.github.com/dc.js/)
	
	#### dc.pieChart(parent[, chartGroup])
	Create a pie chart instance and attaches it to the given parent element.
	
	Parameters:
	
	* parent : string | node | selection - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying
	 a dom block element such as a div; or a dom element or d3 selection.
	
	* chartGroup : string (optional) - name of the chart group this chart instance should be placed in.
	 Interaction with a chart will only trigger events and redraws within the chart's group.
	
	Returns:
	A newly created pie chart instance
	
	```js
	// create a pie chart under #chart-container1 element using the default global chart group
	var chart1 = dc.pieChart("#chart-container1");
	// create a pie chart under #chart-container2 element using chart group A
	var chart2 = dc.pieChart("#chart-container2", "chartGroupA");
	```
	
	**/
	dc.pieChart = function (parent, chartGroup) {
	    var DEFAULT_MIN_ANGLE_FOR_LABEL = 0.5;
	
	    var _sliceCssClass = "pie-slice";
	    var _emptyCssClass = "empty-chart";
	    var _emptyTitle = "empty";
	
	    var _radius,
	        _innerRadius = 0;
	
	    var _g;
	    
	    var _cx;
	
	    var _cy;
	
	    var _minAngleForLabel = DEFAULT_MIN_ANGLE_FOR_LABEL;
	
	    var _externalLabelRadius;
	
	    var _chart = dc.capMixin(dc.colorMixin(dc.baseMixin({})));
	
	    _chart.colorAccessor(_chart.cappedKeyAccessor);
	
	    _chart.title(function (d) {
	        return _chart.cappedKeyAccessor(d) + ": " + _chart.cappedValueAccessor(d);
	    });
	
	    /**
	    #### .slicesCap([cap])
	    Get or set the maximum number of slices the pie chart will generate. The top slices are determined by
	    value from high to low. Other slices exeeding the cap will be rolled up into one single *Others* slice.
	    The resulting data will still be sorted by .ordering (default by key).
	
	    **/
	    _chart.slicesCap = _chart.cap;
	
	    _chart.label(_chart.cappedKeyAccessor);
	    _chart.renderLabel(true);
	
	    _chart.transitionDuration(350);
	
	    _chart._doRender = function () {
	        _chart.resetSvg();
	
	        _g = _chart.svg()
	            .append("g")
	            .attr("transform", "translate(" + _chart.cx() + "," + _chart.cy() + ")");
	
	        drawChart();
	
	        return _chart;
	    };
	
	    function drawChart() {
	        // set radius on basis of chart dimension if missing
	        _radius = _radius ? _radius : d3.min([_chart.width(), _chart.height()]) /2;
	
	        var arc = buildArcs();
	
	        var pie = pieLayout();
	        var pieData;
	        // if we have data...
	        if(d3.sum(_chart.data(), _chart.valueAccessor())) {
	            pieData = pie(_chart.data());
	            _g.classed(_emptyCssClass, false);
	        } else {
	            // otherwise we'd be getting NaNs, so override
	            // note: abuse others for its ignoring the value accessor
	            pieData = pie([{key:_emptyTitle, value:1, others: [_emptyTitle]}]);
	            _g.classed(_emptyCssClass, true);
	        }
	
	        if (_g) {
	            var slices = _g.selectAll("g." + _sliceCssClass)
	                .data(pieData);
	
	            createElements(slices, arc, pieData);
	
	            updateElements(pieData, arc);
	
	            removeElements(slices);
	
	            highlightFilter();
	        }
	    }
	
	    function createElements(slices, arc, pieData) {
	        var slicesEnter = createSliceNodes(slices);
	
	        createSlicePath(slicesEnter, arc);
	
	        createTitles(slicesEnter);
	
	        createLabels(pieData, arc);
	    }
	
	    function createSliceNodes(slices) {
	        var slicesEnter = slices
	            .enter()
	            .append("g")
	            .attr("class", function (d, i) {
	                return _sliceCssClass + " _" + i;
	            });
	        return slicesEnter;
	    }
	
	    function createSlicePath(slicesEnter, arc) {
	        var slicePath = slicesEnter.append("path")
	            .attr("fill", fill)
	            .on("click", onClick)
	            .attr("d", function (d, i) {
	                return safeArc(d, i, arc);
	            });
	
	        dc.transition(slicePath, _chart.transitionDuration(), function (s) {
	            s.attrTween("d", tweenPie);
	        });
	    }
	
	    function createTitles(slicesEnter) {
	        if (_chart.renderTitle()) {
	            slicesEnter.append("title").text(function (d) {
	                return _chart.title()(d);
	            });
	        }
	    }
	
	    function positionLabels(labelsEnter, arc) {
	        dc.transition(labelsEnter, _chart.transitionDuration())
	            .attr("transform", function (d) {
	                return labelPosition(d, arc);
	            })
	            .attr("text-anchor", "middle")
	            .text(function (d) {
	                var data = d.data;
	                if (sliceHasNoData(data) || sliceTooSmall(d))
	                    return "";
	                return _chart.label()(d.data);
	            });
	    }
	
	    function createLabels(pieData, arc) {
	        if (_chart.renderLabel()) {
	            var labels = _g.selectAll("text." + _sliceCssClass)
	                .data(pieData);
	
	            labels.exit().remove();
	
	            var labelsEnter = labels
	                .enter()
	                .append("text")
	                .attr("class", function (d, i) {
	                    var classes = _sliceCssClass + " _" + i;
	                    if(_externalLabelRadius)
	                        classes += " external";
	                    return classes;
	                })
	                .on("click", onClick);
	            positionLabels(labelsEnter, arc);
	        }
	    }
	
	    function updateElements(pieData, arc) {
	        updateSlicePaths(pieData, arc);
	        updateLabels(pieData, arc);
	        updateTitles(pieData);
	    }
	
	    function updateSlicePaths(pieData, arc) {
	        var slicePaths = _g.selectAll("g." + _sliceCssClass)
	            .data(pieData)
	            .select("path")
	            .attr("d", function (d, i) {
	                return safeArc(d, i, arc);
	            });
	        dc.transition(slicePaths, _chart.transitionDuration(),
	            function (s) {
	                s.attrTween("d", tweenPie);
	            }).attr("fill", fill);
	    }
	
	    function updateLabels(pieData, arc) {
	        if (_chart.renderLabel()) {
	            var labels = _g.selectAll("text." + _sliceCssClass)
	                .data(pieData);
	            positionLabels(labels, arc);
	        }
	    }
	
	    function updateTitles(pieData) {
	        if (_chart.renderTitle()) {
	            _g.selectAll("g." + _sliceCssClass)
	                .data(pieData)
	                .select("title")
	                .text(function (d) {
	                    return _chart.title()(d.data);
	                });
	        }
	    }
	
	    function removeElements(slices) {
	        slices.exit().remove();
	    }
	
	    function highlightFilter() {
	        if (_chart.hasFilter()) {
	            _chart.selectAll("g." + _sliceCssClass).each(function (d) {
	                if (isSelectedSlice(d)) {
	                    _chart.highlightSelected(this);
	                } else {
	                    _chart.fadeDeselected(this);
	                }
	            });
	        } else {
	            _chart.selectAll("g." + _sliceCssClass).each(function (d) {
	                _chart.resetHighlight(this);
	            });
	        }
	    }
	
	    /**
	    #### .innerRadius([innerRadius])
	    Get or set the inner radius of the pie chart. If the inner radius is greater than 0px then the
	    pie chart will be rendered as a doughnut chart. Default inner radius is 0px.
	
	    **/
	    _chart.innerRadius = function (r) {
	        if (!arguments.length) return _innerRadius;
	        _innerRadius = r;
	        return _chart;
	    };
	
	    /**
	    #### .radius([radius])
	    Get or set the outer radius. Default radius is 90px.
	
	    **/
	    _chart.radius = function (r) {
	        if (!arguments.length) return _radius;
	        _radius = r;
	        return _chart;
	    };
	
	    /**
	    #### .cx([cx])
	    Get or set center x coordinate position. Default is center of svg.
	
	    **/
	    _chart.cx = function (cx) {
	        if (!arguments.length) return (_cx ||  _chart.width() / 2);
	        _cx = cx;
	        return _chart;
	    };
	
	    /**
	    #### .cy([cy])
	    Get or set center y coordinate position. Default is center of svg.
	
	    **/
	    _chart.cy = function (cy) {
	        if (!arguments.length) return (_cy ||  _chart.height() / 2);
	        _cy = cy;
	        return _chart;
	    };
	
	    function buildArcs() {
	        return d3.svg.arc().outerRadius(_radius).innerRadius(_innerRadius);
	    }
	
	    function isSelectedSlice(d) {
	        return _chart.hasFilter(_chart.cappedKeyAccessor(d.data));
	    }
	
	    _chart._doRedraw = function () {
	        drawChart();
	        return _chart;
	    };
	
	    /**
	    #### .minAngleForLabel([minAngle])
	    Get or set the minimal slice angle for label rendering. Any slice with a smaller angle will not
	    display a slice label.  Default min angle is 0.5.
	    **/
	    _chart.minAngleForLabel = function (_) {
	        if (!arguments.length) return _minAngleForLabel;
	        _minAngleForLabel = _;
	        return _chart;
	    };
	
	    function pieLayout() {
	        return d3.layout.pie().sort(null).value(_chart.cappedValueAccessor);
	    }
	
	    function sliceTooSmall(d) {
	        var angle = (d.endAngle - d.startAngle);
	        return isNaN(angle) || angle < _minAngleForLabel;
	    }
	
	    function sliceHasNoData(d) {
	        return _chart.cappedValueAccessor(d) === 0;
	    }
	
	    function tweenPie(b) {
	        b.innerRadius = _innerRadius;
	        var current = this._current;
	        if (isOffCanvas(current))
	            current = {startAngle: 0, endAngle: 0};
	        var i = d3.interpolate(current, b);
	        this._current = i(0);
	        return function (t) {
	            return safeArc(i(t), 0, buildArcs());
	        };
	    }
	
	    function isOffCanvas(current) {
	        return !current || isNaN(current.startAngle) || isNaN(current.endAngle);
	    }
	
	    function fill(d, i) {
	        return _chart.getColor(d.data, i);
	    }
	
	    function onClick(d, i) {
	        if (_g.attr("class") != _emptyCssClass)
	            _chart.onClick(d.data, i);
	    }
	
	    function safeArc(d, i, arc) {
	        var path = arc(d, i);
	        if (path.indexOf("NaN") >= 0)
	            path = "M0,0";
	        return path;
	    }
	
	    /**
	     #### .emptyTitle([title])
	     Title to use for the only slice when there is no data
	     */
	    _chart.emptyTitle = function(title) {
	        if (arguments.length === 0)
	            return _emptyTitle;
	        _emptyTitle = title;
	        return _chart;
	    };
	
	    /**
	     #### .externalLabels([radius])
	     Position slice labels offset from the outer edge of the chart
	
	     The given argument sets the radial offset.
	     */
	    _chart.externalLabels = function(radius) {
	        if (arguments.length === 0) {
	            return _externalLabelRadius;
	        } else if(radius) {
	            _externalLabelRadius = radius;
	        } else {
	            _externalLabelRadius = undefined;
	        }
	
	        return _chart;
	    };
	
	    function labelPosition(d, arc) {
	        var centroid;
	        if( _externalLabelRadius ) {
	            centroid = d3.svg.arc()
	                .outerRadius(_radius+_externalLabelRadius)
	                .innerRadius(_radius+_externalLabelRadius)
	                .centroid(d);
	        } else {
	            centroid = arc.centroid(d);
	        }
	        if (isNaN(centroid[0]) || isNaN(centroid[1])) {
	            return "translate(0,0)";
	        } else {
	            return "translate(" + centroid + ")";
	        }
	    }
	
	    _chart.legendables = function() {
	        return _chart.data().map(function (d, i) {
	            var legendable = { name: d.key, data: d.value, others: d.others, chart:_chart };
	            legendable.color = _chart.getColor(d,i);
	            return legendable;
	        });
	    };
	
	    _chart.legendHighlight = function(d) {
	        highlightSliceFromLegendable(d, true);
	    };
	
	    _chart.legendReset = function(d) {
	        highlightSliceFromLegendable(d, false);
	    };
	
	    _chart.legendToggle = function(d) {
	        _chart.onClick({ key: d.name, others: d.others });
	    };
	
	    function highlightSliceFromLegendable(legendable, highlighted) {
	        _chart.selectAll('g.pie-slice').each(function (d) {
	            if (legendable.name == d.data.key) {
	                d3.select(this).classed("highlight", highlighted);
	            }
	        });
	    }
	
	    return _chart.anchor(parent, chartGroup);
	};
	
	/**
	## Bar Chart
	
	Includes: [Stack Mixin](#stack Mixin), [Coordinate Grid Mixin](#coordinate-grid-mixin)
	
	Concrete bar chart/histogram implementation.
	
	Examples:
	
	* [Nasdaq 100 Index](http://dc-js.github.com/dc.js/)
	* [Canadian City Crime Stats](http://dc-js.github.com/dc.js/crime/index.html)
	
	#### dc.barChart(parent[, chartGroup])
	Create a bar chart instance and attach it to the given parent element.
	
	Parameters:
	* parent : string | node | selection | compositeChart - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying
	 a dom block element such as a div; or a dom element or d3 selection.
	 If the bar chart is a sub-chart in a [Composite Chart](#composite-chart) then pass in the parent composite
	 chart instance.
	* chartGroup : string (optional) - name of the chart group this chart instance should be placed in.
	 Interaction with a chart will only trigger events and redraws within the chart's group.
	
	Returns:
	A newly created bar chart instance
	
	```js
	// create a bar chart under #chart-container1 element using the default global chart group
	var chart1 = dc.barChart("#chart-container1");
	// create a bar chart under #chart-container2 element using chart group A
	var chart2 = dc.barChart("#chart-container2", "chartGroupA");
	// create a sub-chart under a composite parent chart
	var chart3 = dc.barChart(compositeChart);
	```
	
	**/
	dc.barChart = function (parent, chartGroup) {
	    var MIN_BAR_WIDTH = 1;
	    var DEFAULT_GAP_BETWEEN_BARS = 2;
	
	    var _chart = dc.stackMixin(dc.coordinateGridMixin({}));
	
	    var _gap = DEFAULT_GAP_BETWEEN_BARS;
	    var _centerBar = false;
	    var _alwaysUseRounding = false;
	
	    var _barWidth;
	
	    dc.override(_chart, 'rescale', function () {
	        _chart._rescale();
	        _barWidth = undefined;
	    });
	
	    dc.override(_chart, 'render', function () {
	        if (_chart.round() && _centerBar && !_alwaysUseRounding) {
	            dc.logger.warn("By default, brush rounding is disabled if bars are centered. " +
	                         "See dc.js bar chart API documentation for details.");
	        }
	
	        _chart._render();
	    });
	
	    _chart.plotData = function () {
	        var layers = _chart.chartBodyG().selectAll("g.stack")
	            .data(_chart.data());
	
	        calculateBarWidth();
	
	        layers
	            .enter()
	            .append("g")
	            .attr("class", function (d, i) {
	                return "stack " + "_" + i;
	            });
	
	        layers.each(function (d, i) {
	            var layer = d3.select(this);
	
	            renderBars(layer, i, d);
	        });
	    };
	
	    function barHeight(d) {
	        return dc.utils.safeNumber(Math.abs(_chart.y()(d.y + d.y0) - _chart.y()(d.y0)));
	    }
	
	    function renderBars(layer, layerIndex, d) {
	        var bars = layer.selectAll("rect.bar")
	            .data(d.values, dc.pluck('x'));
	
	        var enter = bars.enter()
	            .append("rect")
	            .attr("class", "bar")
	            .attr("fill", dc.pluck('data',_chart.getColor))
	            .attr("height", 0);
	
	        if (_chart.renderTitle())
	            enter.append("title").text(dc.pluck('data',_chart.title(d.name)));
	
	        if (_chart.isOrdinal())
	            bars.on("click", onClick);
	
	        dc.transition(bars, _chart.transitionDuration())
	            .attr("x", function (d) {
	                var x = _chart.x()(d.x);
	                if (_centerBar) x -= _barWidth / 2;
	                if (_chart.isOrdinal() && _gap!==undefined) x += _gap/2;
	                return dc.utils.safeNumber(x);
	            })
	            .attr("y", function (d) {
	                var y = _chart.y()(d.y + d.y0);
	
	                if (d.y < 0)
	                    y -= barHeight(d);
	
	                return dc.utils.safeNumber(y);
	            })
	            .attr("width", _barWidth)
	            .attr("height", function (d) {
	                return barHeight(d);
	            })
	            .attr("fill", dc.pluck('data',_chart.getColor))
	            .select("title").text(dc.pluck('data',_chart.title(d.name)));
	
	        dc.transition(bars.exit(), _chart.transitionDuration())
	            .attr("height", 0)
	            .remove();
	    }
	
	    function calculateBarWidth() {
	        if (_barWidth === undefined) {
	            var numberOfBars = _chart.xUnitCount();
	
	            // please can't we always use rangeBands for bar charts?
	            if (_chart.isOrdinal() && _gap===undefined)
	                _barWidth = Math.floor(_chart.x().rangeBand());
	            else if (_gap)
	                _barWidth = Math.floor((_chart.xAxisLength() - (numberOfBars - 1) * _gap) / numberOfBars);
	            else
	                _barWidth = Math.floor(_chart.xAxisLength() / (1 + _chart.barPadding()) / numberOfBars);
	
	            if (_barWidth == Infinity || isNaN(_barWidth) || _barWidth < MIN_BAR_WIDTH)
	                _barWidth = MIN_BAR_WIDTH;
	        }
	    }
	
	    _chart.fadeDeselectedArea = function () {
	        var bars = _chart.chartBodyG().selectAll("rect.bar");
	        var extent = _chart.brush().extent();
	
	        if (_chart.isOrdinal()) {
	            if (_chart.hasFilter()) {
	                bars.classed(dc.constants.SELECTED_CLASS, function (d) {
	                    return _chart.hasFilter(d.x);
	                });
	                bars.classed(dc.constants.DESELECTED_CLASS, function (d) {
	                    return !_chart.hasFilter(d.x);
	                });
	            } else {
	                bars.classed(dc.constants.SELECTED_CLASS, false);
	                bars.classed(dc.constants.DESELECTED_CLASS, false);
	            }
	        } else {
	            if (!_chart.brushIsEmpty(extent)) {
	                var start = extent[0];
	                var end = extent[1];
	
	                bars.classed(dc.constants.DESELECTED_CLASS, function (d) {
	                    return d.x < start || d.x >= end;
	                });
	            } else {
	                bars.classed(dc.constants.DESELECTED_CLASS, false);
	            }
	        }
	    };
	
	    /**
	    #### .centerBar(boolean)
	    Whether the bar chart will render each bar centered around the data position on x axis. Default: false
	
	    **/
	    _chart.centerBar = function (_) {
	        if (!arguments.length) return _centerBar;
	        _centerBar = _;
	        return _chart;
	    };
	
	    function onClick(d) {
	        _chart.onClick(d.data);
	    }
	
	    /**
	    #### .barPadding([padding])
	    Get or set the spacing between bars as a fraction of bar size. Valid values are between 0-1.
	    Setting this value will also remove any previously set `gap`. See the
	    [d3 docs](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal_rangeBands)
	    for a visual description of how the padding is applied.
	    **/
	    _chart.barPadding = function (_) {
	        if (!arguments.length) return _chart._rangeBandPadding();
	        _chart._rangeBandPadding(_);
	        _gap = undefined;
	        return _chart;
	    };
	
	    _chart._useOuterPadding = function() {
	        return _gap===undefined;
	    };
	
	    /**
	    #### .outerPadding([padding])
	    Get or set the outer padding on an ordinal bar chart. This setting has no effect on non-ordinal charts.
	    Will pad the width by `padding * barWidth` on each side of the chart.
	
	    Default: 0.5
	    **/
	    _chart.outerPadding = _chart._outerRangeBandPadding;
	
	    /**
	     #### .gap(gapBetweenBars)
	     Manually set fixed gap (in px) between bars instead of relying on the default auto-generated
	     gap.  By default the bar chart implementation will calculate and set the gap automatically
	     based on the number of data points and the length of the x axis.
	
	    **/
	    _chart.gap = function (_) {
	        if (!arguments.length) return _gap;
	        _gap = _;
	        return _chart;
	    };
	
	    _chart.extendBrush = function () {
	        var extent = _chart.brush().extent();
	        if (_chart.round() && (!_centerBar || _alwaysUseRounding)) {
	            extent[0] = extent.map(_chart.round())[0];
	            extent[1] = extent.map(_chart.round())[1];
	
	            _chart.chartBodyG().select(".brush")
	                .call(_chart.brush().extent(extent));
	        }
	
	        return extent;
	    };
	
	    /**
	    #### .alwaysUseRounding([boolean])
	    Set or get whether rounding is enabled when bars are centered.  Default: false.  If false, using
	    rounding with centered bars will result in a warning and rounding will be ignored.  This flag
	    has no effect if bars are not centered.
	
	    When using standard d3.js rounding methods, the brush often doesn't align correctly with
	    centered bars since the bars are offset.  The rounding function must add an offset to
	    compensate, such as in the following example.
	    ```js
	    chart.round(function(n) {return Math.floor(n)+0.5});
	    ```
	    **/
	    _chart.alwaysUseRounding = function (_) {
	        if (!arguments.length) return _alwaysUseRounding;
	        _alwaysUseRounding = _;
	        return _chart;
	    };
	
	    function colorFilter(color,inv) {
	        return function() {
	            var item = d3.select(this);
	            var match = item.attr('fill') == color;
	            return inv ? !match : match;
	        };
	    }
	
	    _chart.legendHighlight = function (d) {
	        if(!_chart.isLegendableHidden(d)) {
	            _chart.g().selectAll('rect.bar')
	                .classed('highlight', colorFilter(d.color))
	                .classed('fadeout', colorFilter(d.color,true));
	        }
	    };
	
	    _chart.legendReset = function () {
	        _chart.g().selectAll('rect.bar')
	            .classed('highlight', false)
	            .classed('fadeout', false);
	    };
	
	    dc.override(_chart, "xAxisMax", function() {
	        var max = this._xAxisMax();
	        if('resolution' in _chart.xUnits()) {
	            var res = _chart.xUnits().resolution;
	            max += res;
	        }
	        return max;
	    });
	
	    return _chart.anchor(parent, chartGroup);
	};
	
	/**
	## Line Chart
	
	Includes [Stack Mixin](#stack-mixin), [Coordinate Grid Mixin](#coordinate-grid-mixin)
	
	Concrete line/area chart implementation.
	
	Examples:
	* [Nasdaq 100 Index](http://dc-js.github.com/dc.js/)
	* [Canadian City Crime Stats](http://dc-js.github.com/dc.js/crime/index.html)
	
	#### dc.lineChart(parent[, chartGroup])
	Create a line chart instance and attach it to the given parent element.
	
	Parameters:
	
	* parent : string | node | selection | compositeChart - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying
	 a dom block element such as a div; or a dom element or d3 selection.
	 If the line chart is a sub-chart in a [Composite Chart](#composite-chart) then pass in the parent composite
	 chart instance.
	
	* chartGroup : string (optional) - name of the chart group this chart instance should be placed in.
	 Interaction with a chart will only trigger events and redraws within the chart's group.
	
	Returns:
	A newly created line chart instance
	
	```js
	// create a line chart under #chart-container1 element using the default global chart group
	var chart1 = dc.lineChart("#chart-container1");
	// create a line chart under #chart-container2 element using chart group A
	var chart2 = dc.lineChart("#chart-container2", "chartGroupA");
	// create a sub-chart under a composite parent chart
	var chart3 = dc.lineChart(compositeChart);
	```
	
	**/
	dc.lineChart = function (parent, chartGroup) {
	    var DEFAULT_DOT_RADIUS = 5;
	    var TOOLTIP_G_CLASS = "dc-tooltip";
	    var DOT_CIRCLE_CLASS = "dot";
	    var Y_AXIS_REF_LINE_CLASS = "yRef";
	    var X_AXIS_REF_LINE_CLASS = "xRef";
	    var DEFAULT_DOT_OPACITY = 1e-6;
	
	    var _chart = dc.stackMixin(dc.coordinateGridMixin({}));
	    var _renderArea = false;
	    var _dotRadius = DEFAULT_DOT_RADIUS;
	    var _dataPointRadius = null;
	    var _dataPointFillOpacity = DEFAULT_DOT_OPACITY;
	    var _dataPointStrokeOpacity = DEFAULT_DOT_OPACITY;
	    var _interpolate = 'linear';
	    var _tension = 0.7;
	    var _defined;
	    var _dashStyle;
	
	    _chart.transitionDuration(500);
	    _chart._rangeBandPadding(1);
	
	    _chart.plotData = function () {
	        var chartBody = _chart.chartBodyG();
	        var layersList = chartBody.selectAll("g.stack-list");
	
	        if (layersList.empty()) layersList = chartBody.append("g").attr("class", "stack-list");
	
	        var layers = layersList.selectAll("g.stack").data(_chart.data());
	
	        var layersEnter = layers
	            .enter()
	            .append("g")
	            .attr("class", function (d, i) {
	                return "stack " + "_" + i;
	            });
	
	        drawLine(layersEnter, layers);
	
	        drawArea(layersEnter, layers);
	
	        drawDots(chartBody, layers);
	    };
	
	    /**
	     #### .interpolate([value])
	     Gets or sets the interpolator to use for lines drawn, by string name, allowing e.g. step
	     functions, splines, and cubic interpolation.  This is passed to
	     [d3.svg.line.interpolate](https://github.com/mbostock/d3/wiki/SVG-Shapes#line_interpolate) and
	     [d3.svg.area.interpolate](https://github.com/mbostock/d3/wiki/SVG-Shapes#area_interpolate),
	     where you can find a complete list of valid arguments
	     **/
	    _chart.interpolate = function(_){
	        if (!arguments.length) return _interpolate;
	        _interpolate = _;
	        return _chart;
	    };
	
	    /**
	     #### .tension([value]) Gets or sets the tension to use for lines drawn, in the range 0 to 1.
	     This parameter further customizes the interpolation behavior.  It is passed to
	     [d3.svg.line.tension](https://github.com/mbostock/d3/wiki/SVG-Shapes#line_tension) and
	     [d3.svg.area.tension](https://github.com/mbostock/d3/wiki/SVG-Shapes#area_tension).  Default:
	     0.7
	     **/
	    _chart.tension = function(_){
	        if (!arguments.length) return _tension;
	        _tension = _;
	        return _chart;
	    };
	
	    /**
	     #### .defined([value])
	     Gets or sets a function that will determine discontinuities in the line which should be
	     skipped: the path will be broken into separate subpaths if some points are undefined.
	     This function is passed to
	     [d3.svg.line.defined](https://github.com/mbostock/d3/wiki/SVG-Shapes#line_defined)
	
	     Note: crossfilter will sometimes coerce nulls to 0, so you may need to carefully write
	     custom reduce functions to get this to work, depending on your data. See
	     https://github.com/dc-js/dc.js/issues/615#issuecomment-49089248
	     **/
	    _chart.defined = function(_){
	        if (!arguments.length) return _defined;
	        _defined = _;
	        return _chart;
	    };
	
	    /**
	    #### .dashStyle([array])
	    Set the line's d3 dashstyle. This value becomes the "stroke-dasharray" of line. Defaults to empty
	    array (solid line).
	     ```js
	     // create a Dash Dot Dot Dot
	     chart.dashStyle([3,1,1,1]);
	     ```
	    **/
	    _chart.dashStyle = function (_) {
	        if (!arguments.length) return _dashStyle;
	        _dashStyle = _;
	        return _chart;
	    };
	
	    /**
	    #### .renderArea([boolean])
	    Get or set render area flag. If the flag is set to true then the chart will render the area
	    beneath each line and the line chart effectively becomes an area chart.
	
	    **/
	    _chart.renderArea = function (_) {
	        if (!arguments.length) return _renderArea;
	        _renderArea = _;
	        return _chart;
	    };
	
	    function colors(d, i) {
	        return _chart.getColor.call(d,d.values,i);
	    }
	
	    function drawLine(layersEnter, layers) {
	        var line = d3.svg.line()
	            .x(function (d) {
	                return _chart.x()(d.x);
	            })
	            .y(function (d) {
	                return _chart.y()(d.y + d.y0);
	            })
	            .interpolate(_interpolate)
	            .tension(_tension);
	        if (_defined)
	            line.defined(_defined);
	
	        var path = layersEnter.append("path")
	            .attr("class", "line")
	            .attr("stroke", colors);
	        if (_dashStyle)
	            path.attr("stroke-dasharray", _dashStyle);
	
	        dc.transition(layers.select("path.line"), _chart.transitionDuration())
	            //.ease("linear")
	            .attr("stroke", colors)
	            .attr("d", function (d) {
	                return safeD(line(d.values));
	            });
	    }
	
	    function drawArea(layersEnter, layers) {
	        if (_renderArea) {
	            var area = d3.svg.area()
	                .x(function (d) {
	                    return _chart.x()(d.x);
	                })
	                .y(function (d) {
	                    return _chart.y()(d.y + d.y0);
	                })
	                .y0(function (d) {
	                    return _chart.y()(d.y0);
	                })
	                .interpolate(_interpolate)
	                .tension(_tension);
	            if (_defined)
	                area.defined(_defined);
	
	            layersEnter.append("path")
	                .attr("class", "area")
	                .attr("fill", colors)
	                .attr("d", function (d) {
	                    return safeD(area(d.values));
	                });
	
	            dc.transition(layers.select("path.area"), _chart.transitionDuration())
	                //.ease("linear")
	                .attr("fill", colors)
	                .attr("d", function (d) {
	                    return safeD(area(d.values));
	                });
	        }
	    }
	
	    function safeD(d){
	        return (!d || d.indexOf("NaN") >= 0) ? "M0,0" : d;
	    }
	
	    function drawDots(chartBody, layers) {
	        if (!_chart.brushOn()) {
	            var tooltipListClass = TOOLTIP_G_CLASS + "-list";
	            var tooltips = chartBody.select("g." + tooltipListClass);
	
	            if (tooltips.empty()) tooltips = chartBody.append("g").attr("class", tooltipListClass);
	
	            layers.each(function (d, layerIndex) {
	                var points = d.values;
	                if (_defined) points = points.filter(_defined);
	
	                var g = tooltips.select("g." + TOOLTIP_G_CLASS + "._" + layerIndex);
	                if (g.empty()) g = tooltips.append("g").attr("class", TOOLTIP_G_CLASS + " _" + layerIndex);
	
	                createRefLines(g);
	
	                var dots = g.selectAll("circle." + DOT_CIRCLE_CLASS)
	                    .data(points,dc.pluck('x'));
	
	                dots.enter()
	                    .append("circle")
	                    .attr("class", DOT_CIRCLE_CLASS)
	                    .attr("r", getDotRadius())
	                    .attr("fill", _chart.getColor)
	                    .style("fill-opacity", _dataPointFillOpacity)
	                    .style("stroke-opacity", _dataPointStrokeOpacity)
	                    .on("mousemove", function (d) {
	                        var dot = d3.select(this);
	                        showDot(dot);
	                        showRefLines(dot, g);
	                    })
	                    .on("mouseout", function (d) {
	                        var dot = d3.select(this);
	                        hideDot(dot);
	                        hideRefLines(g);
	                    })
	                    .append("title").text(dc.pluck('data', _chart.title(d.name)));
	
	                dots.attr("cx", function (d) {
	                        return dc.utils.safeNumber(_chart.x()(d.x));
	                    })
	                    .attr("cy", function (d) {
	                        return dc.utils.safeNumber(_chart.y()(d.y + d.y0));
	                    })
	                    .attr("fill", _chart.getColor)
	                    .select("title").text(dc.pluck('data', _chart.title(d.name)));
	
	                dots.exit().remove();
	            });
	        }
	    }
	
	    function createRefLines(g) {
	        var yRefLine = g.select("path." + Y_AXIS_REF_LINE_CLASS).empty() ? g.append("path").attr("class", Y_AXIS_REF_LINE_CLASS) : g.select("path." + Y_AXIS_REF_LINE_CLASS);
	        yRefLine.style("display", "none").attr("stroke-dasharray", "5,5");
	
	        var xRefLine = g.select("path." + X_AXIS_REF_LINE_CLASS).empty() ? g.append("path").attr("class", X_AXIS_REF_LINE_CLASS) : g.select("path." + X_AXIS_REF_LINE_CLASS);
	        xRefLine.style("display", "none").attr("stroke-dasharray", "5,5");
	    }
	
	    function showDot(dot) {
	        dot.style("fill-opacity", 0.8);
	        dot.style("stroke-opacity", 0.8);
	        dot.attr("r", _dotRadius);
	        return dot;
	    }
	
	    function showRefLines(dot, g) {
	        var x = dot.attr("cx");
	        var y = dot.attr("cy");
	        var yAxisX = (_chart._yAxisX() - _chart.margins().left);
	        var yAxisRefPathD = "M" + yAxisX + " " + y + "L" + (x) + " " + (y);
	        var xAxisRefPathD = "M" + x + " " + _chart.yAxisHeight() + "L" + x + " " + y;
	        g.select("path." + Y_AXIS_REF_LINE_CLASS).style("display", "").attr("d", yAxisRefPathD);
	        g.select("path." + X_AXIS_REF_LINE_CLASS).style("display", "").attr("d", xAxisRefPathD);
	    }
	
	    function getDotRadius() {
	        return _dataPointRadius || _dotRadius;
	    }
	
	    function hideDot(dot) {
	        dot.style("fill-opacity", _dataPointFillOpacity)
	            .style("stroke-opacity", _dataPointStrokeOpacity)
	            .attr("r", getDotRadius());
	    }
	
	    function hideRefLines(g) {
	        g.select("path." + Y_AXIS_REF_LINE_CLASS).style("display", "none");
	        g.select("path." + X_AXIS_REF_LINE_CLASS).style("display", "none");
	    }
	
	    /**
	    #### .dotRadius([dotRadius])
	    Get or set the radius (in px) for dots displayed on the data points. Default dot radius is 5.
	    **/
	    _chart.dotRadius = function (_) {
	        if (!arguments.length) return _dotRadius;
	        _dotRadius = _;
	        return _chart;
	    };
	
	    /**
	    #### .renderDataPoints([options])
	    Always show individual dots for each datapoint.
	
	    Options, if given, is an object that can contain the following:
	
	    * fillOpacity (default 0.8)
	    * strokeOpacity (default 0.8)
	    * radius (default 2)
	
	    If `options` is falsy, it disables data point rendering.
	
	    If no `options` are provided, the current `options` values are instead returned.
	
	    Example:
	    ```
	    chart.renderDataPoints({radius: 2, fillOpacity: 0.8, strokeOpacity: 0.8})
	    ```
	    **/
	    _chart.renderDataPoints = function (options) {
	        if (!arguments.length) {
	            return {
	                fillOpacity: _dataPointFillOpacity,
	                strokeOpacity: _dataPointStrokeOpacity,
	                radius: _dataPointRadius
	            };
	        } else if (!options) {
	            _dataPointFillOpacity = DEFAULT_DOT_OPACITY;
	            _dataPointStrokeOpacity = DEFAULT_DOT_OPACITY;
	            _dataPointRadius = null;
	        } else {
	            _dataPointFillOpacity = options.fillOpacity || 0.8;
	            _dataPointStrokeOpacity = options.strokeOpacity || 0.8;
	            _dataPointRadius = options.radius || 2;
	        }
	        return _chart;
	    };
	
	    function colorFilter(color, dashstyle, inv) {
	        return function() {
	            var item = d3.select(this);
	            var match = (item.attr('stroke') == color && item.attr("stroke-dasharray") == ((dashstyle instanceof Array) ? dashstyle.join(",") : null) )|| item.attr('fill') == color;
	            return inv ? !match : match;
	        };
	    }
	
	    _chart.legendHighlight = function (d) {
	        if(!_chart.isLegendableHidden(d)) {
	            _chart.g().selectAll('path.line, path.area')
	                .classed('highlight', colorFilter(d.color, d.dashstyle))
	                .classed('fadeout', colorFilter(d.color, d.dashstyle, true));
	        }
	    };
	
	    _chart.legendReset = function () {
	        _chart.g().selectAll('path.line, path.area')
	            .classed('highlight', false)
	            .classed('fadeout', false);
	    };
	
	    dc.override(_chart,'legendables', function() {
	        var legendables = _chart._legendables();
	        if (!_dashStyle) return legendables;
	        return legendables.map(function(l) {
	            l.dashstyle = _dashStyle;
	            return l;
	        });
	    });
	
	    return _chart.anchor(parent, chartGroup);
	};
	
	/**
	## Data Count Widget
	
	Includes: [Base Mixin](#base-mixin)
	
	The data count widget is a simple widget designed to display the number of records selected by the
	current filters out of the total number of records in the data set. Once created the data count widget
	will automatically update the text content of the following elements under the parent element.
	
	* ".total-count" - total number of records
	* ".filter-count" - number of records matched by the current filters
	
	Examples:
	
	* [Nasdaq 100 Index](http://dc-js.github.com/dc.js/)
	
	#### dc.dataCount(parent[, chartGroup])
	Create a data count widget and attach it to the given parent element.
	
	Parameters:
	
	* parent : string | node | selection - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying
	 a dom block element such as a div; or a dom element or d3 selection.
	* chartGroup : string (optional) - name of the chart group this widget should be placed in.
	 The data count widget will only react to filter changes in the chart group.
	
	Returns:
	A newly created data count widget instance
	
	#### .dimension(allData) - **mandatory**
	For the data count widget the only valid dimension is the entire data set.
	
	#### .group(groupAll) - **mandatory**
	For the data count widget the only valid group is the group returned by `dimension.groupAll()`.
	
	```js
	var ndx = crossfilter(data);
	var all = ndx.groupAll();
	
	dc.dataCount(".dc-data-count")
	    .dimension(ndx)
	    .group(all);
	```
	
	**/
	dc.dataCount = function(parent, chartGroup) {
	    var SPAN_CLASS = 'data-count-display';
	    var _formatNumber = d3.format(",d");
	    var _chart = dc.baseMixin({});
	    var _html = {some:"",all:""};
	
	    /**
	     #### html([object])
	     Gets or sets an optional object specifying HTML templates to use depending how many items are
	     selected. The text `%total-count` will replaced with the total number of records, and the text
	     `%filter-count` will be replaced with the number of selected records.
	     - all: HTML template to use if all items are selected
	     - some: HTML template to use if not all items are selected
	
	     ```js
	     counter.html({
	         some: "%filter-count out of %total-count records selected",
	         all: "All records selected. Click on charts to apply filters"
	     })
	     ```
	     **/
	    _chart.html = function(s) {
	        if (!arguments.length) return _html;
	        if(s.all)
	            _html.all = s.all;
	        if(s.some)
	            _html.some = s.some;
	        return _chart;
	    };
	
	    _chart._doRender = function() {
	        var tot = _chart.dimension().size(),
	            val = _chart.group().value();
	        var all = _formatNumber(tot);
	        var selected = _formatNumber(val);
	
	        if((tot===val)&&(_html.all!=="")) {
	            _chart.root().html(_html.all.replace('%total-count',all).replace('%filter-count',selected));
	        }
	        else if(_html.some!=="") {
	            _chart.root().html(_html.some.replace('%total-count',all).replace('%filter-count',selected));
	        } else {
	            _chart.selectAll(".total-count").text(all);
	            _chart.selectAll(".filter-count").text(selected);
	        }
	        return _chart;
	    };
	
	    _chart._doRedraw = function(){
	        return _chart._doRender();
	    };
	
	    return _chart.anchor(parent, chartGroup);
	};
	
	/**
	## Data Table Widget
	
	Includes: [Base Mixin](#base-mixin)
	
	The data table is a simple widget designed to list crossfilter focused data set (rows being
	filtered) in a good old tabular fashion.
	
	Examples:
	* [Nasdaq 100 Index](http://dc-js.github.com/dc.js/)
	
	#### dc.dataTable(parent[, chartGroup])
	Create a data table widget instance and attach it to the given parent element.
	
	Parameters:
	* parent : string | node | selection - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying
	 a dom block element such as a div; or a dom element or d3 selection.
	
	* chartGroup : string (optional) - name of the chart group this chart instance should be placed in.
	 Interaction with a chart will only trigger events and redraws within the chart's group.
	
	Returns:
	A newly created data table widget instance
	
	**/
	dc.dataTable = function(parent, chartGroup) {
	    var LABEL_CSS_CLASS = "dc-table-label";
	    var ROW_CSS_CLASS = "dc-table-row";
	    var COLUMN_CSS_CLASS = "dc-table-column";
	    var GROUP_CSS_CLASS = "dc-table-group";
	
	    var _chart = dc.baseMixin({});
	
	    var _size = 25;
	    var _columns = [];
	    var _sortBy = function(d) {
	        return d;
	    };
	    var _order = d3.ascending;
	
	    _chart._doRender = function() {
	        _chart.selectAll("tbody").remove();
	
	        renderRows(renderGroups());
	
	        return _chart;
	    };
	
	    function renderGroups() {
	        var groups = _chart.root().selectAll("tbody")
	            .data(nestEntries(), function(d) {
	                return _chart.keyAccessor()(d);
	            });
	
	        var rowGroup = groups
	            .enter()
	            .append("tbody");
	
	        rowGroup
	            .append("tr")
	            .attr("class", GROUP_CSS_CLASS)
	                .append("td")
	                .attr("class", LABEL_CSS_CLASS)
	                .attr("colspan", _columns.length)
	                .html(function(d) {
	                    return _chart.keyAccessor()(d);
	                });
	
	        groups.exit().remove();
	
	        return rowGroup;
	    }
	
	    function nestEntries() {
	        var entries = _chart.dimension().top(_size);
	
	        return d3.nest()
	            .key(_chart.group())
	            .sortKeys(_order)
	            .entries(entries.sort(function(a, b){
	                return _order(_sortBy(a), _sortBy(b));
	            }));
	    }
	
	    function renderRows(groups) {
	        var rows = groups.order()
	            .selectAll("tr." + ROW_CSS_CLASS)
	            .data(function(d) {
	                return d.values;
	            });
	
	        var rowEnter = rows.enter()
	            .append("tr")
	            .attr("class", ROW_CSS_CLASS);
	
	        _columns.forEach(function(f,i) {
	            rowEnter.append("td")
	                .attr("class", COLUMN_CSS_CLASS + " _" + i)
	                .html(f);
	        });
	
	        rows.exit().remove();
	
	        return rows;
	    }
	
	    _chart._doRedraw = function() {
	        return _chart._doRender();
	    };
	
	    /**
	    #### .size([size])
	    Get or set the table size which determines the number of rows displayed by the widget.
	
	    **/
	    _chart.size = function(s) {
	        if (!arguments.length) return _size;
	        _size = s;
	        return _chart;
	    };
	
	    /**
	    #### .columns([columnFunctionArray])
	    Get or set column functions. The data table widget uses an array of functions to generate dynamic
	    columns. Column functions are simple javascript functions with only one input argument d which
	    represents a row in the data set, and the return value of these functions will be used directly
	    to generate table content for the cells.
	
	    ```js
	        chart.columns([
	            function(d) {
	                return d.date;
	            },
	            function(d) {
	                return d.open;
	            },
	            function(d) {
	                return d.close;
	            },
	            function(d) {
	                return numberFormat(d.close - d.open);
	            },
	            function(d) {
	                return d.volume;
	            }
	        ]);
	    ```
	
	    **/
	    _chart.columns = function(_) {
	        if (!arguments.length) return _columns;
	        _columns = _;
	        return _chart;
	    };
	
	    /**
	    #### .sortBy([sortByFunction])
	    Get or set sort-by function. This function works as a value accessor at row level and returns a
	    particular field to be sorted by. Default value: identity function
	
	    ```js
	       chart.sortBy(function(d) {
	            return d.date;
	        });
	    ```
	
	    **/
	    _chart.sortBy = function(_) {
	        if (!arguments.length) return _sortBy;
	        _sortBy = _;
	        return _chart;
	    };
	
	    /**
	    #### .order([order])
	    Get or set sort order. Default value: ``` d3.ascending ```
	
	    ```js
	        chart.order(d3.descending);
	    ```
	
	    **/
	    _chart.order = function(_) {
	        if (!arguments.length) return _order;
	        _order = _;
	        return _chart;
	    };
	
	    return _chart.anchor(parent, chartGroup);
	};
	
	/**
	 ## Data Grid Widget
	
	 Includes: [Base Mixin](#base-mixin)
	
	 Data grid is a simple widget designed to list the filtered records, providing
	 a simple way to define how the items are displayed.
	
	 Examples:
	 * [List of members of the european parliament](http://europarl.me/dc.js/web/ep/index.html)
	
	 #### dc.dataGrid(parent[, chartGroup])
	 Create a data grid widget instance and attach it to the given parent element.
	
	Parameters:
	* parent : string | node | selection - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying
	 a dom block element such as a div; or a dom element or d3 selection.
	
	* chartGroup : string (optional) - name of the chart group this chart instance should be placed in.
	 Interaction with a chart will only trigger events and redraws within the chart's group.
	
	Returns:
	A newly created data grid widget instance
	
	 **/
	dc.dataGrid = function(parent, chartGroup) {
	    var LABEL_CSS_CLASS = "dc-grid-label";
	    var ITEM_CSS_CLASS = "dc-grid-item";
	    var GROUP_CSS_CLASS = "dc-grid-group";
	    var GRID_CSS_CLASS = "dc-grid-top";
	
	    var _chart = dc.baseMixin({});
	
	    var _size = 999; // shouldn't be needed, but you might
	    var _html = function (d) { return "you need to provide an html() handling param:  " + JSON.stringify(d); };
	    var _sortBy = function(d) {
	        return d;
	    };
	    var _order = d3.ascending;
	
	    var _htmlGroup = function (d) {
	        return "<div class='"+GROUP_CSS_CLASS+"'><h1 class='"+LABEL_CSS_CLASS+"'>"+
	            _chart.keyAccessor()(d)+"</h1></div>";
	    };
	
	    _chart._doRender = function() {
	        _chart.selectAll("div."+ GRID_CSS_CLASS).remove();
	
	        renderItems(renderGroups());
	
	        return _chart;
	    };
	
	    function renderGroups() {
	        var groups = _chart.root().selectAll("div."+ GRID_CSS_CLASS)
	                .data(nestEntries(), function(d) {
	                    return _chart.keyAccessor()(d);
	                });
	
	        var itemGroup = groups
	                .enter()
	                .append("div")
	                .attr("class", GRID_CSS_CLASS);
	
	        if (_htmlGroup) {
	            itemGroup
	                .html(function(d) {
	                    return _htmlGroup(d);
	                });
	        }
	
	        groups.exit().remove();
	        return itemGroup;
	    }
	
	    function nestEntries() {
	        var entries = _chart.dimension().top(_size);
	
	        return d3.nest()
	            .key(_chart.group())
	            .sortKeys(_order)
	            .entries(entries.sort(function(a, b){
	                return _order(_sortBy(a), _sortBy(b));
	            }));
	    }
	
	    function renderItems(groups) {
	        var items = groups.order()
	                .selectAll("div." + ITEM_CSS_CLASS)
	                .data(function(d) {
	                    return d.values;
	                });
	
	        items.enter()
	            .append("div")
	            .attr("class", ITEM_CSS_CLASS)
	            .html(function(d) {
	                return _html(d);
	            });
	
	        items.exit().remove();
	
	        return items;
	    }
	
	    _chart._doRedraw = function() {
	        return _chart._doRender();
	    };
	
	    /**
	     #### .size([size])
	     Get or set the grid size which determines the number of items displayed by the widget.
	
	     **/
	    _chart.size = function(s) {
	        if (!arguments.length) return _size;
	        _size = s;
	        return _chart;
	    };
	
	    /**
	     #### .html( function (data) { return "<html>"; })
	     Get or set the function that formats an item. The data grid widget uses a
	     function to generate dynamic html. Use your favourite templating engine or
	     generate the string directly.
	     ```js
	     chart.html(function (d) { return "<div class='item "+data.exampleCategory+"'>"+data.exampleString+"</div>";});
	     ```
	
	     **/
	    _chart.html = function(_) {
	        if (!arguments.length) return _html;
	        _html = _;
	        return _chart;
	    };
	
	
	    /**
	     #### .htmlGroup( function (data) { return "<html>"; })
	     Get or set the function that formats a group label.
	     ```js
	     chart.htmlGroup (function (d) { return "<h2>".d.key . "with " . d.values.length ." items</h2>"});
	     ```
	
	     **/
	    _chart.htmlGroup = function(_) {
	        if (!arguments.length) return _htmlGroup;
	        _htmlGroup = _;
	        return _chart;
	    };
	
	    /**
	     #### .sortBy([sortByFunction])
	     Get or set sort-by function. This function works as a value accessor at the item
	     level and returns a particular field to be sorted.
	     by. Default: identity function
	
	     ```js
	     chart.sortBy(function(d) {
	         return d.date;
	     });
	     ```
	
	     **/
	    _chart.sortBy = function(_) {
	        if (!arguments.length) return _sortBy;
	        _sortBy = _;
	        return _chart;
	    };
	
	    /**
	     #### .order([order])
	     Get or set sort order function. Default value: ``` d3.ascending ```
	
	     ```js
	     chart.order(d3.descending);
	     ```
	
	     **/
	    _chart.order = function(_) {
	        if (!arguments.length) return _order;
	        _order = _;
	        return _chart;
	    };
	
	    return _chart.anchor(parent, chartGroup);
	};
	
	/**
	## Bubble Chart
	
	Includes: [Bubble Mixin](#bubble-mixin), [Coordinate Grid Mixin](#coordinate-grid-mixin)
	
	A concrete implementation of a general purpose bubble chart that allows data visualization using the
	following dimensions:
	
	* x axis position
	* y axis position
	* bubble radius
	* color
	
	Examples:
	* [Nasdaq 100 Index](http://dc-js.github.com/dc.js/)
	* [US Venture Capital Landscape 2011](http://dc-js.github.com/dc.js/vc/index.html)
	
	#### dc.bubbleChart(parent[, chartGroup])
	Create a bubble chart instance and attach it to the given parent element.
	
	Parameters:
	* parent : string | node | selection | compositeChart - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying
	 a dom block element such as a div; or a dom element or d3 selection.
	* chartGroup : string (optional) - name of the chart group this chart instance should be placed in.
	 Interaction with a chart will only trigger events and redraws within the chart's group.
	
	Returns:
	A newly created bubble chart instance
	
	```js
	// create a bubble chart under #chart-container1 element using the default global chart group
	var bubbleChart1 = dc.bubbleChart("#chart-container1");
	// create a bubble chart under #chart-container2 element using chart group A
	var bubbleChart2 = dc.bubbleChart("#chart-container2", "chartGroupA");
	```
	
	**/
	dc.bubbleChart = function(parent, chartGroup) {
	    var _chart = dc.bubbleMixin(dc.coordinateGridMixin({}));
	
	    var _elasticRadius = false;
	
	    _chart.transitionDuration(750);
	
	    var bubbleLocator = function(d) {
	        return "translate(" + (bubbleX(d)) + "," + (bubbleY(d)) + ")";
	    };
	
	    /**
	    #### .elasticRadius([boolean])
	    Turn on or off the elastic bubble radius feature, or return the value of the flag. If this
	    feature is turned on, then bubble radii will be automatically rescaled to fit the chart better.
	
	    **/
	    _chart.elasticRadius = function(_) {
	        if (!arguments.length) return _elasticRadius;
	        _elasticRadius = _;
	        return _chart;
	    };
	
	    _chart.plotData = function() {
	        if (_elasticRadius)
	            _chart.r().domain([_chart.rMin(), _chart.rMax()]);
	
	        _chart.r().range([_chart.MIN_RADIUS, _chart.xAxisLength() * _chart.maxBubbleRelativeSize()]);
	
	        var bubbleG = _chart.chartBodyG().selectAll("g." + _chart.BUBBLE_NODE_CLASS)
	            .data(_chart.data(), function (d) { return d.key; });
	
	        renderNodes(bubbleG);
	
	        updateNodes(bubbleG);
	
	        removeNodes(bubbleG);
	
	        _chart.fadeDeselectedArea();
	    };
	
	    function renderNodes(bubbleG) {
	        var bubbleGEnter = bubbleG.enter().append("g");
	
	        bubbleGEnter
	            .attr("class", _chart.BUBBLE_NODE_CLASS)
	            .attr("transform", bubbleLocator)
	            .append("circle").attr("class", function(d, i) {
	                return _chart.BUBBLE_CLASS + " _" + i;
	            })
	            .on("click", _chart.onClick)
	            .attr("fill", _chart.getColor)
	            .attr("r", 0);
	        dc.transition(bubbleG, _chart.transitionDuration())
	            .selectAll("circle." + _chart.BUBBLE_CLASS)
	            .attr("r", function(d) {
	                return _chart.bubbleR(d);
	            })
	            .attr("opacity", function(d) {
	                return (_chart.bubbleR(d) > 0) ? 1 : 0;
	            });
	
	        _chart._doRenderLabel(bubbleGEnter);
	
	        _chart._doRenderTitles(bubbleGEnter);
	    }
	
	    function updateNodes(bubbleG) {
	        dc.transition(bubbleG, _chart.transitionDuration())
	            .attr("transform", bubbleLocator)
	            .selectAll("circle." + _chart.BUBBLE_CLASS)
	            .attr("fill", _chart.getColor)
	            .attr("r", function(d) {
	                return _chart.bubbleR(d);
	            })
	            .attr("opacity", function(d) {
	                return (_chart.bubbleR(d) > 0) ? 1 : 0;
	            });
	
	        _chart.doUpdateLabels(bubbleG);
	        _chart.doUpdateTitles(bubbleG);
	    }
	
	    function removeNodes(bubbleG) {
	        bubbleG.exit().remove();
	    }
	
	    function bubbleX(d) {
	        var x = _chart.x()(_chart.keyAccessor()(d));
	        if (isNaN(x))
	            x = 0;
	        return x;
	    }
	
	    function bubbleY(d) {
	        var y = _chart.y()(_chart.valueAccessor()(d));
	        if (isNaN(y))
	            y = 0;
	        return y;
	    }
	
	    _chart.renderBrush = function(g) {
	        // override default x axis brush from parent chart
	    };
	
	    _chart.redrawBrush = function(g) {
	        // override default x axis brush from parent chart
	        _chart.fadeDeselectedArea();
	    };
	
	    return _chart.anchor(parent, chartGroup);
	};
	
	/**
	## Composite Chart
	
	Includes: [Coordinate Grid Mixin](#coordinate-grid-mixin)
	
	Composite charts are a special kind of chart that render multiple charts on the same Coordinate
	Grid. You can overlay (compose) different bar/line/area charts in a single composite chart to
	achieve some quite flexible charting effects.
	
	#### dc.compositeChart(parent[, chartGroup])
	Create a composite chart instance and attach it to the given parent element.
	
	Parameters:
	* parent : string | node | selection - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying
	 a dom block element such as a div; or a dom element or d3 selection.
	* chartGroup : string (optional) - name of the chart group this chart instance should be placed in.
	 Interaction with a chart will only trigger events and redraws within the chart's group.
	
	Returns:
	A newly created composite chart instance
	
	```js
	// create a composite chart under #chart-container1 element using the default global chart group
	var compositeChart1 = dc.compositeChart("#chart-container1");
	// create a composite chart under #chart-container2 element using chart group A
	var compositeChart2 = dc.compositeChart("#chart-container2", "chartGroupA");
	```
	
	**/
	dc.compositeChart = function (parent, chartGroup) {
	
	    var SUB_CHART_CLASS = "sub";
	    var DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING = 12;
	
	    var _chart = dc.coordinateGridMixin({});
	    var _children = [];
	
	    var _childOptions = {};
	
	    var _shareColors = false,
	        _shareTitle = true;
	
	    var _rightYAxis = d3.svg.axis(),
	        _rightYAxisLabel = 0,
	        _rightYAxisLabelPadding = DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING,
	        _rightY,
	        _rightAxisGridLines = false;
	
	    _chart._mandatoryAttributes([]);
	    _chart.transitionDuration(500);
	
	    dc.override(_chart, "_generateG", function () {
	        var g = this.__generateG();
	
	        for (var i = 0; i < _children.length; ++i) {
	            var child = _children[i];
	
	            generateChildG(child, i);
	
	            if (!child.dimension()) child.dimension(_chart.dimension());
	            if (!child.group()) child.group(_chart.group());
	
	            child.chartGroup(_chart.chartGroup());
	            child.svg(_chart.svg());
	            child.xUnits(_chart.xUnits());
	            child.transitionDuration(_chart.transitionDuration());
	            child.brushOn(_chart.brushOn());
	        }
	
	        return g;
	    });
	
	    _chart._brushing = function () {
	        var extent = _chart.extendBrush();
	        var brushIsEmpty = _chart.brushIsEmpty(extent);
	
	        for (var i = 0; i < _children.length; ++i) {
	            _children[i].filter(null);
	            if (!brushIsEmpty) _children[i].filter(extent);
	        }
	    };
	
	    _chart._prepareYAxis = function () {
	        if (leftYAxisChildren().length !== 0) { prepareLeftYAxis(); }
	        if (rightYAxisChildren().length !== 0) { prepareRightYAxis(); }
	
	        if (leftYAxisChildren().length > 0 && !_rightAxisGridLines) {
	            _chart._renderHorizontalGridLinesForAxis(_chart.g(), _chart.y(), _chart.yAxis());
	        }
	        else if (rightYAxisChildren().length > 0) {
	            _chart._renderHorizontalGridLinesForAxis(_chart.g(), _rightY, _rightYAxis);
	        }
	    };
	
	    _chart.renderYAxis = function () {
	        if (leftYAxisChildren().length !== 0) {
	            _chart.renderYAxisAt("y", _chart.yAxis(), _chart.margins().left);
	            _chart.renderYAxisLabel("y", _chart.yAxisLabel(), -90);
	        }
	
	        if (rightYAxisChildren().length !== 0) {
	            _chart.renderYAxisAt("yr", _chart.rightYAxis(), _chart.width() - _chart.margins().right);
	            _chart.renderYAxisLabel("yr", _chart.rightYAxisLabel(), 90, _chart.width() - _rightYAxisLabelPadding);
	        }
	    };
	
	    function prepareRightYAxis() {
	        if (_chart.rightY() === undefined || _chart.elasticY()) {
	            _chart.rightY(d3.scale.linear());
	            _chart.rightY().domain([rightYAxisMin(), rightYAxisMax()]).rangeRound([_chart.yAxisHeight(), 0]);
	        }
	
	        _chart.rightY().range([_chart.yAxisHeight(), 0]);
	        _chart.rightYAxis(_chart.rightYAxis().scale(_chart.rightY()));
	
	        _chart.rightYAxis().orient("right");
	    }
	
	    function prepareLeftYAxis() {
	        if (_chart.y() === undefined || _chart.elasticY()) {
	            _chart.y(d3.scale.linear());
	            _chart.y().domain([yAxisMin(), yAxisMax()]).rangeRound([_chart.yAxisHeight(), 0]);
	        }
	
	        _chart.y().range([_chart.yAxisHeight(), 0]);
	        _chart.yAxis(_chart.yAxis().scale(_chart.y()));
	
	        _chart.yAxis().orient("left");
	    }
	
	    function generateChildG(child, i) {
	        child._generateG(_chart.g());
	        child.g().attr("class", SUB_CHART_CLASS + " _" + i);
	    }
	
	    _chart.plotData = function () {
	        for (var i = 0; i < _children.length; ++i) {
	            var child = _children[i];
	
	            if (!child.g()) {
	                generateChildG(child, i);
	            }
	
	            if (_shareColors) {
	                child.colors(_chart.colors());
	            }
	
	            child.x(_chart.x());
	
	            child.xAxis(_chart.xAxis());
	
	            if (child.useRightYAxis()) {
	                child.y(_chart.rightY());
	                child.yAxis(_chart.rightYAxis());
	            }
	            else {
	                child.y(_chart.y());
	                child.yAxis(_chart.yAxis());
	            }
	
	            child.plotData();
	
	            child._activateRenderlets();
	        }
	    };
	
	    /**
	    #### .useRightAxisGridLines(bool)
	    Get or set whether to draw gridlines from the right y axis.  Drawing from the left y axis is the
	    default behavior. This option is only respected when subcharts with both left and right y-axes
	    are present.
	    **/
	    _chart.useRightAxisGridLines = function(_) {
	        if (!arguments) return _rightAxisGridLines;
	
	        _rightAxisGridLines = _;
	        return _chart;
	    };
	
	    /**
	    #### .childOptions({object})
	    Get or set chart-specific options for all child charts. This is equivalent to calling `.options`
	    on each child chart.
	    **/
	    _chart.childOptions = function (_) {
	        if(!arguments.length) return _childOptions;
	        _childOptions = _;
	        _children.forEach(function(child){
	            child.options(_childOptions);
	        });
	        return _chart;
	    };
	
	    _chart.fadeDeselectedArea = function () {
	        for (var i = 0; i < _children.length; ++i) {
	            var child = _children[i];
	            child.brush(_chart.brush());
	            child.fadeDeselectedArea();
	        }
	    };
	
	    /**
	    #### .rightYAxisLabel([labelText])
	    Set or get the right y axis label.
	    **/
	    _chart.rightYAxisLabel = function (_, padding) {
	        if (!arguments.length) return _rightYAxisLabel;
	        _rightYAxisLabel = _;
	        _chart.margins().right -= _rightYAxisLabelPadding;
	        _rightYAxisLabelPadding = (padding === undefined) ? DEFAULT_RIGHT_Y_AXIS_LABEL_PADDING : padding;
	        _chart.margins().right += _rightYAxisLabelPadding;
	        return _chart;
	    };
	
	    /**
	    #### .compose(subChartArray)
	    Combine the given charts into one single composite coordinate grid chart.
	
	    ```js
	    // compose the given charts in the array into one single composite chart
	    moveChart.compose([
	        // when creating sub-chart you need to pass in the parent chart
	        dc.lineChart(moveChart)
	            .group(indexAvgByMonthGroup) // if group is missing then parent's group will be used
	            .valueAccessor(function(d){return d.value.avg;})
	            // most of the normal functions will continue to work in a composed chart
	            .renderArea(true)
	            .stack(monthlyMoveGroup, function(d){return d.value;})
	            .title(function(d){
	                var value = d.value.avg?d.value.avg:d.value;
	                if(isNaN(value)) value = 0;
	                return dateFormat(d.key) + "\n" + numberFormat(value);
	            }),
	        dc.barChart(moveChart)
	            .group(volumeByMonthGroup)
	            .centerBar(true)
	    ]);
	    ```
	
	    **/
	    _chart.compose = function (charts) {
	        _children = charts;
	        _children.forEach(function(child) {
	            child.height(_chart.height());
	            child.width(_chart.width());
	            child.margins(_chart.margins());
	
	            if (_shareTitle) child.title(_chart.title());
	
	            child.options(_childOptions);
	        });
	        return _chart;
	    };
	
	    /**
	     #### .children()
	     Returns the child charts which are composed into the composite chart.
	     **/
	
	    _chart.children = function () {
	        return _children;
	    };
	
	    /**
	    #### .shareColors([boolean])
	    Get or set color sharing for the chart. If set, the `.colors()` value from this chart
	    will be shared with composed children. Additionally if the child chart implements
	    Stackable and has not set a custom .colorAccessor, then it will generate a color
	    specific to its order in the composition.
	    **/
	    _chart.shareColors = function (_) {
	        if (!arguments.length) return _shareColors;
	        _shareColors = _;
	        return _chart;
	    };
	
	    /**
	    #### .shareTitle([[boolean])
	    Get or set title sharing for the chart. If set, the `.title()` value from this chart will be
	    shared with composed children. Default value is true.
	    **/
	    _chart.shareTitle = function (_) {
	        if (!arguments.length) return _shareTitle;
	        _shareTitle = _;
	        return _chart;
	    };
	
	    /**
	    #### .rightY([yScale])
	    Get or set the y scale for the right axis. The right y scale is typically automatically
	    generated by the chart implementation.
	
	    **/
	    _chart.rightY = function (_) {
	        if (!arguments.length) return _rightY;
	        _rightY = _;
	        return _chart;
	    };
	
	    function leftYAxisChildren() {
	        return _children.filter(function (child) {
	            return !child.useRightYAxis();
	        });
	    }
	
	    function rightYAxisChildren() {
	        return _children.filter(function (child) {
	            return child.useRightYAxis();
	        });
	    }
	
	    function getYAxisMin(charts) {
	        return charts.map(function(c) {
	            return c.yAxisMin();
	        });
	    }
	
	    delete _chart.yAxisMin;
	    function yAxisMin() {
	        return d3.min(getYAxisMin(leftYAxisChildren()));
	    }
	
	    function rightYAxisMin() {
	        return d3.min(getYAxisMin(rightYAxisChildren()));
	    }
	
	    function getYAxisMax(charts) {
	        return charts.map(function(c) {
	            return c.yAxisMax();
	        });
	    }
	
	    delete _chart.yAxisMax;
	    function yAxisMax() {
	        return dc.utils.add(d3.max(getYAxisMax(leftYAxisChildren())), _chart.yAxisPadding());
	    }
	
	    function rightYAxisMax() {
	        return dc.utils.add(d3.max(getYAxisMax(rightYAxisChildren())), _chart.yAxisPadding());
	    }
	
	    function getAllXAxisMinFromChildCharts() {
	        return _children.map(function(c) {
	            return c.xAxisMin();
	        });
	    }
	
	    dc.override(_chart, 'xAxisMin',function () {
	        return dc.utils.subtract(d3.min(getAllXAxisMinFromChildCharts()), _chart.xAxisPadding());
	    });
	
	    function getAllXAxisMaxFromChildCharts() {
	        return _children.map(function(c) {
	            return c.xAxisMax();
	        });
	    }
	
	    dc.override(_chart, 'xAxisMax',function () {
	        return dc.utils.add(d3.max(getAllXAxisMaxFromChildCharts()), _chart.xAxisPadding());
	    });
	
	    _chart.legendables = function () {
	        return _children.reduce(function(items,child) {
	            if (_shareColors) child.colors(_chart.colors());
	            items.push.apply(items, child.legendables());
	            return items;
	        },[]);
	    };
	
	    _chart.legendHighlight = function (d) {
	        for (var j = 0; j < _children.length; ++j) {
	            var child = _children[j];
	            child.legendHighlight(d);
	        }
	    };
	
	    _chart.legendReset = function (d) {
	        for (var j = 0; j < _children.length; ++j) {
	            var child = _children[j];
	            child.legendReset(d);
	        }
	    };
	
	    _chart.legendToggle = function (d) {
	        console.log("composite should not be getting legendToggle itself");
	    };
	
	    /**
	    #### .rightYAxis([yAxis])
	    Set or get the right y axis used by the composite chart. This function is most useful when y
	    axis customization is required. The y axis in dc.js is an instance of a [d3 axis
	    object](https://github.com/mbostock/d3/wiki/SVG-Axes#wiki-_axis) therefore it supports any valid
	    d3 axis manipulation. **Caution**: The y axis is usually generated internally by dc;
	    resetting it may cause unexpected results.
	    ```js
	    // customize y axis tick format
	    chart.rightYAxis().tickFormat(function(v) {return v + "%";});
	    // customize y axis tick values
	    chart.rightYAxis().tickValues([0, 100, 200, 300]);
	    ```
	
	    **/
	    _chart.rightYAxis = function (rightYAxis) {
	        if (!arguments.length) return _rightYAxis;
	        _rightYAxis = rightYAxis;
	        return _chart;
	    };
	
	    return _chart.anchor(parent, chartGroup);
	};
	
	/**
	 ## Series Chart
	
	 Includes: [Composite Chart](#composite chart)
	
	 A series chart is a chart that shows multiple series of data overlaid on one chart, where the
	 series is specified in the data. It is a specialization of Composite Chart and inherits all
	 composite features other than recomposing the chart.
	
	 #### dc.seriesChart(parent[, chartGroup])
	 Create a series chart instance and attach it to the given parent element.
	
	 Parameters:
	* parent : string | node | selection - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying
	 a dom block element such as a div; or a dom element or d3 selection.
	
	* chartGroup : string (optional) - name of the chart group this chart instance should be placed in.
	 Interaction with a chart will only trigger events and redraws within the chart's group.
	
	 Returns:
	 A newly created series chart instance
	
	 ```js
	 // create a series chart under #chart-container1 element using the default global chart group
	 var seriesChart1 = dc.seriesChart("#chart-container1");
	 // create a series chart under #chart-container2 element using chart group A
	 var seriesChart2 = dc.seriesChart("#chart-container2", "chartGroupA");
	 ```
	
	 **/
	dc.seriesChart = function (parent, chartGroup) {
	    var _chart = dc.compositeChart(parent, chartGroup);
	
	    var _charts = {};
	    var _chartFunction = dc.lineChart;
	    var _seriesAccessor;
	    var _seriesSort = d3.ascending;
	    var _valueSort = keySort;
	
	    _chart._mandatoryAttributes().push('seriesAccessor','chart');
	    _chart.shareColors(true);
	
	    function keySort(a,b) {
	        return d3.ascending(_chart.keyAccessor()(a), _chart.keyAccessor()(b));
	    }
	
	    _chart._preprocessData = function () {
	        var keep = [];
	        var children_changed;
	        var nester = d3.nest().key(_seriesAccessor);
	        if(_seriesSort)
	            nester.sortKeys(_seriesSort);
	        if(_valueSort)
	            nester.sortValues(_valueSort);
	        var nesting = nester.entries(_chart.data());
	        var children =
	            nesting.map(function(sub,i) {
	                var subChart = _charts[sub.key] || _chartFunction.call(_chart,_chart,chartGroup,sub.key,i);
	                if(!_charts[sub.key])
	                    children_changed = true;
	                _charts[sub.key] = subChart;
	                keep.push(sub.key);
	                return subChart
	                    .dimension(_chart.dimension())
	                    .group({all:d3.functor(sub.values)}, sub.key)
	                    .keyAccessor(_chart.keyAccessor())
	                    .valueAccessor(_chart.valueAccessor())
	                    .brushOn(_chart.brushOn());
	            });
	        // this works around the fact compositeChart doesn't really
	        // have a removal interface
	        Object.keys(_charts)
	            .filter(function(c) {return keep.indexOf(c) === -1;})
	            .forEach(function(c) {
	                clearChart(c);
	                children_changed = true;
	            });
	        _chart._compose(children);
	        if(children_changed && _chart.legend())
	            _chart.legend().render();
	    };
	
	    function clearChart(c) {
	        if(_charts[c].g())
	            _charts[c].g().remove();
	        delete _charts[c];
	    }
	
	    function resetChildren() {
	        Object.keys(_charts).map(clearChart);
	        _charts = {};
	    }
	
	    /**
	     #### .chart([function])
	     Get or set the chart function, which generates the child charts.  Default: dc.lineChart
	
	     ```
	     // put interpolation on the line charts used for the series
	     chart.chart(function(c) { return dc.lineChart(c).interpolate('basis'); })
	     // do a scatter series chart
	     chart.chart(dc.scatterPlot)
	     ```
	
	     **/
	    _chart.chart = function(_) {
	        if (!arguments.length) return _chartFunction;
	        _chartFunction = _;
	        resetChildren();
	        return _chart;
	    };
	
	    /**
	     #### .seriesAccessor([accessor])
	     Get or set accessor function for the displayed series. Given a datum, this function
	     should return the series that datum belongs to.
	     **/
	    _chart.seriesAccessor = function(_) {
	        if (!arguments.length) return _seriesAccessor;
	        _seriesAccessor = _;
	        resetChildren();
	        return _chart;
	    };
	
	    /**
	     #### .seriesSort([sortFunction])
	     Get or set a function to sort the list of series by, given series values.
	
	     Example:
	     ```
	     chart.seriesSort(d3.descending);
	     ```
	     **/
	    _chart.seriesSort = function(_) {
	        if (!arguments.length) return _seriesSort;
	        _seriesSort = _;
	        resetChildren();
	        return _chart;
	    };
	
	    /**
	     #### .valueSort([sortFunction])
	     Get or set a function to sort each series values by. By default this is the key accessor which,
	     for example, will ensure a lineChart series connects its points in increasing key/x order,
	     rather than haphazardly.
	    **/
	    _chart.valueSort = function(_) {
	        if (!arguments.length) return _valueSort;
	        _valueSort = _;
	        resetChildren();
	        return _chart;
	    };
	
	    // make compose private
	    _chart._compose = _chart.compose;
	    delete _chart.compose;
	
	    return _chart;
	};
	
	/**
	## Geo Choropleth Chart
	Includes: [Color Mixin](#color-mixin), [Base Mixin](#base-mixin)
	
	The geo choropleth chart is designed as an easy way to create a crossfilter driven choropleth map
	from GeoJson data. This chart implementation was inspired by [the great d3 choropleth
	example](http://bl.ocks.org/4060606).
	
	Examples:
	* [US Venture Capital Landscape 2011](http://dc-js.github.com/dc.js/vc/index.html)
	#### dc.geoChoroplethChart(parent[, chartGroup])
	Create a choropleth chart instance and attach it to the given parent element.
	
	Parameters:
	* parent : string | node | selection - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying
	 a dom block element such as a div; or a dom element or d3 selection.
	
	* chartGroup : string (optional) - name of the chart group this chart instance should be placed in.
	 Interaction with a chart will only trigger events and redraws within the chart's group.
	
	Returns:
	A newly created choropleth chart instance
	
	```js
	// create a choropleth chart under '#us-chart' element using the default global chart group
	var chart1 = dc.geoChoroplethChart('#us-chart');
	// create a choropleth chart under '#us-chart2' element using chart group A
	var chart2 = dc.compositeChart('#us-chart2', 'chartGroupA');
	```
	
	**/
	dc.geoChoroplethChart = function (parent, chartGroup) {
	    var _chart = dc.colorMixin(dc.baseMixin({}));
	
	    _chart.colorAccessor(function (d) {
	        return d || 0;
	    });
	
	    var _geoPath = d3.geo.path();
	    var _projectionFlag;
	
	    var _geoJsons = [];
	
	    var _zoom;
	    var _scaleExtent = [1,50];
	    var _zoomed = zoomed;
	    var _zoomButtonClass = "zoomButton";
	    var _resetZoomButtonClass = "resetZoomButton";
	    var _enableZoom = false;
	    var _afterZoom;
	    var _g;
	
	    _chart._doRender = function () { 
	        _chart.resetSvg();
	        _g = _chart.svg().append('g');
	        for (var layerIndex = 0; layerIndex < _geoJsons.length; ++layerIndex) {
	            var states = _g.append('g')
	                .attr('class', 'layer' + layerIndex);
	
	            var regionG = states.selectAll('g.' + geoJson(layerIndex).name)
	                .data(geoJson(layerIndex).data)
	                .enter()
	                .append('g')
	                .attr('class', geoJson(layerIndex).name);
	
	            regionG
	                .append('path')
	                .attr('fill', 'white')
	                .attr('d', _geoPath);
	
	            regionG.append('title');
	
	            plotData(layerIndex);
	        }
	        _projectionFlag = false;
	
	        if (_enableZoom){
	            _zoom = d3.behavior.zoom()
	                .scaleExtent(_scaleExtent)
	                .on("zoom", _zoomed);   
	            _chart.svg().call(_zoom);
	            setupZoomControls(); 
	        }
	    };
	
	    /**
	     #### .enableZoom(boolean)
	     Set or get zoom enable value. Default value is false. Set enableZoom(true) to enable built in zoom features. 
	     Includes basic d3.zoom scroll zoom, and click-drag panning, as well as button controls for 
	     "+" (zoom in), "-" (zoom out) and "Reset Zoom". 
	
	     By default, the "+/-" controls will render in to "#zoomButton", while the reset button will render in to
	     "#resetZoomButton". These value can be over-ridden in the methods below.
	
	    **/
	    _chart.enableZoom = function(_){
	        if (!arguments.length) return _enableZoom;
	        _enableZoom = _;
	        return _chart;
	    };
	
	    /**
	     #### .afterZoom([function])
	     Set or get the function that will execute after zoom. Your afterZoom function should take two parameters (mapGroupD3Node, scaleNumber)
	     These values can be used inside your function to dynamically alter styles of map features as zooming occurs. 
	
	     For example: 
	     Fading labels in/out as zoom occurs, scaling line weight with zoom level, etc.
	
	    **/
	    _chart.afterZoom = function(_){
	        if (!arguments.length) return _afterZoom;
	        _afterZoom = _;
	        return _chart;
	    };
	
	    function plotData(layerIndex) {
	        var data = generateLayeredData();
	
	        if (isDataLayer(layerIndex)) {
	            var regionG = renderRegionG(layerIndex);
	
	            renderPaths(regionG, layerIndex, data);
	
	            renderTitle(regionG, layerIndex, data);
	        }
	    }
	
	    function generateLayeredData() {
	        var data = {};
	        var groupAll = _chart.data();
	        for (var i = 0; i < groupAll.length; ++i) {
	            data[_chart.keyAccessor()(groupAll[i])] = _chart.valueAccessor()(groupAll[i]);
	        }
	        return data;
	    }
	
	    function isDataLayer(layerIndex) {
	        return geoJson(layerIndex).keyAccessor;
	    }
	
	    function renderRegionG(layerIndex) {
	        var regionG = _g
	            .selectAll(layerSelector(layerIndex))
	            .classed('selected', function (d) {
	                return isSelected(layerIndex, d);
	            })
	            .classed('deselected', function (d) {
	                return isDeselected(layerIndex, d);
	            })
	            .attr('class', function (d) {
	                var layerNameClass = geoJson(layerIndex).name;
	                var regionClass = dc.utils.nameToId(geoJson(layerIndex).keyAccessor(d));
	                var baseClasses = layerNameClass + ' ' + regionClass;
	                if (isSelected(layerIndex, d)) {
	                    baseClasses += ' selected';
	                }
	                if (isDeselected(layerIndex, d)) {
	                    baseClasses += ' deselected';
	                }
	                return baseClasses;
	            });
	        return regionG;
	    }
	
	    function layerSelector(layerIndex) {
	        return 'g.layer' + layerIndex + ' g.' + geoJson(layerIndex).name;
	    }
	
	    function isSelected(layerIndex, d) {
	        return _chart.hasFilter() && _chart.hasFilter(getKey(layerIndex, d));
	    }
	
	    function isDeselected(layerIndex, d) {
	        return _chart.hasFilter() && !_chart.hasFilter(getKey(layerIndex, d));
	    }
	
	    function getKey(layerIndex, d) {
	        return geoJson(layerIndex).keyAccessor(d);
	    }
	
	    function geoJson(index) {
	        return _geoJsons[index];
	    }
	
	    function renderPaths(regionG, layerIndex, data) {
	        var paths = regionG
	            .select('path')
	            .attr('fill', function () {
	                var currentFill = d3.select(this).attr('fill');
	                if (currentFill) {
	                    return currentFill;
	                }
	                return 'none';
	            })
	            .on('click', function (d) {
	                if(d3.event.defaultPrevented) 
	                    return;
	                else 
	                    return _chart.onClick(d, layerIndex);
	            });
	
	        dc.transition(paths, _chart.transitionDuration()).attr('fill', function (d, i) {
	            return _chart.getColor(data[geoJson(layerIndex).keyAccessor(d)], i);
	        });
	    }
	
	    _chart.onClick = function (d, layerIndex) {
	        var selectedRegion = geoJson(layerIndex).keyAccessor(d);
	        dc.events.trigger(function () {
	            _chart.filter(selectedRegion);
	            _chart.redrawGroup();
	        });
	    };
	
	    function renderTitle(regionG, layerIndex, data) {
	        if (_chart.renderTitle()) {
	            regionG.selectAll('title').text(function (d) {
	                var key = getKey(layerIndex, d);
	                var value = data[key];
	                return _chart.title()({key: key, value: value});
	            });
	        }
	    }
	
	    _chart._doRedraw = function () {
	        for (var layerIndex = 0; layerIndex < _geoJsons.length; ++layerIndex) {
	            plotData(layerIndex);
	            if (_projectionFlag) {
	                _g.selectAll('g.' + geoJson(layerIndex).name + ' path').attr('d', _geoPath);
	            }
	        }
	        _projectionFlag = false;
	    };
	
	    /**
	    #### .overlayGeoJson(json, name, keyAccessor) - **mandatory**
	    Use this function to insert a new GeoJson map layer. This function can be invoked multiple times
	    if you have multiple GeoJson data layers to render on top of each other. If you overlay multiple
	    layers with the same name the new overlay will override the existing one.
	
	    Parameters:
	    * json - GeoJson feed
	    * name - name of the layer
	    * keyAccessor - accessor function used to extract 'key' from the GeoJson data. The key extracted by
	    this function should match the keys returned by the crossfilter groups.
	
	    ```js
	    // insert a layer for rendering US states
	    chart.overlayGeoJson(statesJson.features, 'state', function(d) {
	        return d.properties.name;
	    });
	    ```
	
	    **/
	    _chart.overlayGeoJson = function (json, name, keyAccessor) {
	        for (var i = 0; i < _geoJsons.length; ++i) {
	            if (_geoJsons[i].name === name) {
	                _geoJsons[i].data = json;
	                _geoJsons[i].keyAccessor = keyAccessor;
	                return _chart;
	            }
	        }
	        _geoJsons.push({name: name, data: json, keyAccessor: keyAccessor});
	        return _chart;
	    };
	
	    /**
	    #### .projection(projection)
	    Set custom geo projection function. See the available [d3 geo projection
	    functions](https://github.com/mbostock/d3/wiki/Geo-Projections).  Default value: albersUsa.
	
	    **/
	    _chart.projection = function (projection) {
	        _geoPath.projection(projection);
	        _projectionFlag = true;
	        return _chart;
	    };
	
	    /**
	    #### .geoJsons()
	    Returns all GeoJson layers currently registered with this chart. The returned array is a
	    reference to this chart's internal data structure, so any modification to this array will also
	    modify this chart's internal registration.
	
	    Returns an array of objects containing fields {name, data, accessor}
	
	    **/
	    _chart.geoJsons = function () {
	        return _geoJsons;
	    };
	
	    /**
	    #### .geoPath()
	    Returns the [d3.geo.path](https://github.com/mbostock/d3/wiki/Geo-Paths#path) object used to
	    render the projection and features.  Can be useful for figuring out the bounding box of the
	    feature set and thus a way to calculate scale and translation for the projection.
	
	    **/
	    _chart.geoPath = function () {
	        return _geoPath;
	    };
	
	    /**
	    #### .removeGeoJson(name)
	    Remove a GeoJson layer from this chart by name
	
	    **/
	    _chart.removeGeoJson = function (name) {
	        var geoJsons = [];
	
	        for (var i = 0; i < _geoJsons.length; ++i) {
	            var layer = _geoJsons[i];
	            if (layer.name !== name) {
	                geoJsons.push(layer);
	            }
	        }
	
	        _geoJsons = geoJsons;
	
	        return _chart;
	    };
	
	    function setupZoomControls() {
	
	        _chart.select('.'+_zoomButtonClass).html('');
	        
	        var container = _chart.select('.'+_zoomButtonClass)
	            .append('div')
	            .classed("dc-zoom-button", true);
	
	        var inButton = container.append('div')
	            .classed("in", true)
	            .text('+');
	        var outButton = container.append('div')
	            .classed("out", true)
	            .text('-');
	
	        var resetButton = _chart.select('.'+_resetZoomButtonClass).html('');
	
	        resetButton = _chart.select('.'+_resetZoomButtonClass)
	            .append('div')
	            .classed("dc-zoom-reset", true)
	            .text("Reset Zoom")
	            .on("click", function(){  
	                resetZoom();
	                _afterZoom(_g, 1);
	            });
	
	        inButton.on("click", function() {
	            if(_zoom.scale()*2 > _zoom.scaleExtent()[1]){
	            }else{
	                parametricZoom(_zoom.scale()*2);
	            }
	        });
	        outButton.on("click", function() {
	            if(_zoom.scale()/2 < _zoom.scaleExtent()[0]){
	                resetZoom();
	            }else{
	                parametricZoom(_zoom.scale()/2);
	            }
	        });
	    }
	
	
	    function zoomed() {
	        var s;
	        var t;
	        var ox = _chart.width() / 2 - 50,
	            oy = _chart.width() / 2;
	
	        if(d3.event){
	            s = d3.event.scale;
	            t = d3.event.translate;
	        }else{
	            s= _zoom.scale();
	            t= _zoom.translate();
	        }
	        
	        t[0] = Math.min((_chart.width() / 2 - ox - 100) * (s - 1), Math.max((_chart.width() / 2 + ox) * (1 - s), t[0]));
	        t[1] = Math.min((_chart.height() / 2 - oy + 200) * (s - 1), Math.max((_chart.height() / 2 + oy - 175)  * (1 - s), t[1]));
	        _zoom.translate(t);
	        _g.attr("transform",
	            "translate(" + t + ")" +
	            "scale(" + s + ")"
	        );
	
	        if (_afterZoom){
	            _afterZoom(_g, s);
	        }
	        /*
	        // Zoom dependent fading of labels and lines
	        g.select(".state-boundaries").style("stroke-width", 1.75 / s + "px");
	        g.select(".district-boundaries").style("stroke-width", .75 / s + "px");
	        g.selectAll(".stateLabel").style("opacity", 1.75 - s);
	        g.selectAll(".districtLabel").attr("font-size", 1/(s+1) + "em").style("opacity", -2 + s);
	        */
	    }
	    function interpolateZoom (translate, scale) {
	        var self = this;
	        return d3.transition().duration(350).tween("zoom", function () {
	            var iTranslate = d3.interpolate(_zoom.translate(), translate),
	                iScale = d3.interpolate(_zoom.scale(), scale);
	            return function (t) {
	                _zoom
	                    .scale(iScale(t))
	                    .translate(iTranslate(t));
	                zoomed();
	            };
	        });
	    }
	    function parametricZoom(pScale) {
	        var translate = _zoom.translate(),
	            translate0 = [],
	            l = [],
	            view = {x: translate[0], y: translate[1], k: _zoom.scale()},
	            extent = _zoom.scaleExtent(),
	            center = [_chart.width() / 2, _chart.height() / 2],
	            target_zoom = pScale,
	            s = pScale,
	            ox = _chart.width() / 2 - 50,
	            oy = _chart.width() / 2;
	        d3.event.preventDefault();
	        if (target_zoom < extent[0] || target_zoom > extent[1]) { return false; }
	        translate0 = [(center[0] - view.x) / view.k, (center[1] - view.y) / view.k];
	        view.k = target_zoom;
	        l = [translate0[0] * view.k + view.x, translate0[1] * view.k + view.y];
	        view.x += center[0] - l[0];
	        view.y += center[1] - l[1];
	        interpolateZoom([view.x, view.y], view.k);
	    }
	
	    function resetZoom() {
	        _zoom.scale(1);
	        _zoom.translate([0,0]);
	        _g.transition().duration(500).attr('transform', 'translate(0,0)scale(1)');  
	    }
	
	    return _chart.anchor(parent, chartGroup);
	};
	
	/**
	## Bubble Overlay Chart
	
	Includes: [Bubble Mixin](#bubble-mixin), [Base Mixin](#base-mixin)
	
	The bubble overlay chart is quite different from the typical bubble chart. With the bubble overlay
	chart you can arbitrarily place bubbles on an existing svg or bitmap image, thus changing the
	typical x and y positioning while retaining the capability to visualize data using bubble radius
	and coloring.
	
	Examples:
	* [Canadian City Crime Stats](http://dc-js.github.com/dc.js/crime/index.html)
	
	#### dc.bubbleOverlay(parent[, chartGroup])
	Create a bubble overlay chart instance and attach it to the given parent element.
	
	Parameters:
	* parent : string | node | selection - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying
	 a dom block element such as a div; or a dom element or d3 selection.
	 off-screen. Typically this element should also be the parent of the underlying image.
	* chartGroup : string (optional) - name of the chart group this chart instance should be placed in.
	 Interaction with a chart will only trigger events and redraws within the chart's group.
	
	Returns:
	A newly created bubble overlay chart instance
	
	```js
	// create a bubble overlay chart on top of the "#chart-container1 svg" element using the default global chart group
	var bubbleChart1 = dc.bubbleOverlayChart("#chart-container1").svg(d3.select("#chart-container1 svg"));
	// create a bubble overlay chart on top of the "#chart-container2 svg" element using chart group A
	var bubbleChart2 = dc.compositeChart("#chart-container2", "chartGroupA").svg(d3.select("#chart-container2 svg"));
	```
	
	#### .svg(imageElement) - **mandatory**
	Set the underlying svg image element. Unlike other dc charts this chart will not generate a svg
	element; therefore the bubble overlay chart will not work if this function is not invoked. If the
	underlying image is a bitmap, then an empty svg will need to be created on top of the image.
	
	```js
	// set up underlying svg element
	chart.svg(d3.select("#chart svg"));
	```
	
	**/
	dc.bubbleOverlay = function(root, chartGroup) {
	    var BUBBLE_OVERLAY_CLASS = "bubble-overlay";
	    var BUBBLE_NODE_CLASS = "node";
	    var BUBBLE_CLASS = "bubble";
	
	    var _chart = dc.bubbleMixin(dc.baseMixin({}));
	    var _g;
	    var _points = [];
	
	    _chart.transitionDuration(750);
	
	    _chart.radiusValueAccessor(function(d) {
	        return d.value;
	    });
	
	    /**
	    #### .point(name, x, y) - **mandatory**
	    Set up a data point on the overlay. The name of a data point should match a specific "key" among
	    data groups generated using keyAccessor.  If a match is found (point name <-> data group key)
	    then a bubble will be generated at the position specified by the function. x and y
	    value specified here are relative to the underlying svg.
	
	    **/
	    _chart.point = function(name, x, y) {
	        _points.push({name: name, x: x, y: y});
	        return _chart;
	    };
	
	    _chart._doRender = function() {
	        _g = initOverlayG();
	
	        _chart.r().range([_chart.MIN_RADIUS, _chart.width() * _chart.maxBubbleRelativeSize()]);
	
	        initializeBubbles();
	
	        _chart.fadeDeselectedArea();
	
	        return _chart;
	    };
	
	    function initOverlayG() {
	        _g = _chart.select("g." + BUBBLE_OVERLAY_CLASS);
	        if (_g.empty())
	            _g = _chart.svg().append("g").attr("class", BUBBLE_OVERLAY_CLASS);
	        return _g;
	    }
	
	    function initializeBubbles() {
	        var data = mapData();
	
	        _points.forEach(function(point) {
	            var nodeG = getNodeG(point, data);
	
	            var circle = nodeG.select("circle." + BUBBLE_CLASS);
	
	            if (circle.empty())
	                circle = nodeG.append("circle")
	                    .attr("class", BUBBLE_CLASS)
	                    .attr("r", 0)
	                    .attr("fill", _chart.getColor)
	                    .on("click", _chart.onClick);
	
	            dc.transition(circle, _chart.transitionDuration())
	                .attr("r", function(d) {
	                    return _chart.bubbleR(d);
	                });
	
	            _chart._doRenderLabel(nodeG);
	
	            _chart._doRenderTitles(nodeG);
	        });
	    }
	
	    function mapData() {
	        var data = {};
	        _chart.data().forEach(function(datum) {
	            data[_chart.keyAccessor()(datum)] = datum;
	        });
	        return data;
	    }
	
	    function getNodeG(point, data) {
	        var bubbleNodeClass = BUBBLE_NODE_CLASS + " " + dc.utils.nameToId(point.name);
	
	        var nodeG = _g.select("g." + dc.utils.nameToId(point.name));
	
	        if (nodeG.empty()) {
	            nodeG = _g.append("g")
	                .attr("class", bubbleNodeClass)
	                .attr("transform", "translate(" + point.x + "," + point.y + ")");
	        }
	
	        nodeG.datum(data[point.name]);
	
	        return nodeG;
	    }
	
	    _chart._doRedraw = function() {
	        updateBubbles();
	
	        _chart.fadeDeselectedArea();
	
	        return _chart;
	    };
	
	    function updateBubbles() {
	        var data = mapData();
	
	        _points.forEach(function(point) {
	            var nodeG = getNodeG(point, data);
	
	            var circle = nodeG.select("circle." + BUBBLE_CLASS);
	
	            dc.transition(circle, _chart.transitionDuration())
	                .attr("r", function(d) {
	                    return _chart.bubbleR(d);
	                })
	                .attr("fill", _chart.getColor);
	
	            _chart.doUpdateLabels(nodeG);
	
	            _chart.doUpdateTitles(nodeG);
	        });
	    }
	
	    _chart.debug = function(flag) {
	        if(flag){
	            var debugG = _chart.select("g." + dc.constants.DEBUG_GROUP_CLASS);
	
	            if(debugG.empty())
	                debugG = _chart.svg()
	                    .append("g")
	                    .attr("class", dc.constants.DEBUG_GROUP_CLASS);
	
	            var debugText = debugG.append("text")
	                .attr("x", 10)
	                .attr("y", 20);
	
	            debugG
	                .append("rect")
	                .attr("width", _chart.width())
	                .attr("height", _chart.height())
	                .on("mousemove", function() {
	                    var position = d3.mouse(debugG.node());
	                    var msg = position[0] + ", " + position[1];
	                    debugText.text(msg);
	                });
	        }else{
	            _chart.selectAll(".debug").remove();
	        }
	
	        return _chart;
	    };
	
	    _chart.anchor(root, chartGroup);
	
	    return _chart;
	};
	
	/**
	## Row Chart
	
	Includes: [Cap Mixin](#cap-mixin), [Margin Mixin](#margin-mixin), [Color Mixin](#color-mixin), [Base Mixin](#base-mixin)
	
	Concrete row chart implementation.
	
	#### dc.rowChart(parent[, chartGroup])
	Create a row chart instance and attach it to the given parent element.
	
	Parameters:
	
	* parent : string | node | selection - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying
	 a dom block element such as a div; or a dom element or d3 selection.
	
	* chartGroup : string (optional) - name of the chart group this chart instance should be placed in.
	 Interaction with a chart will only trigger events and redraws within the chart's group.
	
	Returns:
	A newly created row chart instance
	
	```js
	// create a row chart under #chart-container1 element using the default global chart group
	var chart1 = dc.rowChart("#chart-container1");
	// create a row chart under #chart-container2 element using chart group A
	var chart2 = dc.rowChart("#chart-container2", "chartGroupA");
	```
	
	**/
	dc.rowChart = function (parent, chartGroup) {
	
	    var _g;
	
	    var _labelOffsetX = 10;
	    var _labelOffsetY = 15;
	    var _titleLabelOffsetX = 2;
	
	    var _gap = 5;
	
	    var _fixedBarHeight = false;
	    var _rowCssClass = "row";
	    var _titleRowCssClass = "titlerow";
	    var _renderTitleLabel = false;
	
	    var _chart = dc.capMixin(dc.marginMixin(dc.colorMixin(dc.baseMixin({}))));
	
	    var _x;
	
	    var _elasticX;
	
	    var _xAxis = d3.svg.axis().orient("bottom");
	
	    var _rowData;
	
	    _chart.rowsCap = _chart.cap;
	
	    function calculateAxisScale() {
	        if (!_x || _elasticX) {
	            var extent = d3.extent(_rowData, _chart.cappedValueAccessor);
	            if (extent[0] > 0) extent[0] = 0;
	            _x = d3.scale.linear().domain(extent)
	                .range([0, _chart.effectiveWidth()]);
	        }
	        _xAxis.scale(_x);
	    }
	
	    function drawAxis() {
	        var axisG = _g.select("g.axis");
	
	        calculateAxisScale();
	
	        if (axisG.empty())
	            axisG = _g.append("g").attr("class", "axis")
	                .attr("transform", "translate(0, " + _chart.effectiveHeight() + ")");
	
	        dc.transition(axisG, _chart.transitionDuration())
	            .call(_xAxis);
	    }
	
	    _chart._doRender = function () {
	        _chart.resetSvg();
	
	        _g = _chart.svg()
	            .append("g")
	            .attr("transform", "translate(" + _chart.margins().left + "," + _chart.margins().top + ")");
	
	        drawChart();
	
	        return _chart;
	    };
	
	    _chart.title(function (d) {
	        return _chart.cappedKeyAccessor(d) + ": " + _chart.cappedValueAccessor(d);
	    });
	
	    _chart.label(_chart.cappedKeyAccessor);
	
	    /**
	     #### .x([scale])
	     Gets or sets the x scale. The x scale can be any d3
	     [quantitive scale](https://github.com/mbostock/d3/wiki/Quantitative-Scales)
	     **/
	    _chart.x = function(x){
	        if(!arguments.length) return _x;
	        _x = x;
	        return _chart;
	    };
	
	    function drawGridLines() {
	        _g.selectAll("g.tick")
	            .select("line.grid-line")
	            .remove();
	
	        _g.selectAll("g.tick")
	            .append("line")
	            .attr("class", "grid-line")
	            .attr("x1", 0)
	            .attr("y1", 0)
	            .attr("x2", 0)
	            .attr("y2", function () {
	                return -_chart.effectiveHeight();
	            });
	    }
	
	    function drawChart() {
	        _rowData = _chart.data();
	
	        drawAxis();
	        drawGridLines();
	
	        var rows = _g.selectAll("g." + _rowCssClass)
	            .data(_rowData);
	
	        createElements(rows);
	        removeElements(rows);
	        updateElements(rows);
	    }
	
	    function createElements(rows) {
	        var rowEnter = rows.enter()
	            .append("g")
	            .attr("class", function (d, i) {
	                return _rowCssClass + " _" + i;
	            });
	
	        rowEnter.append("rect").attr("width", 0);
	
	        createLabels(rowEnter);
	        updateLabels(rows);
	    }
	
	    function removeElements(rows) {
	        rows.exit().remove();
	    }
	
	    function rootValue() {
	        var root = _x(0);
	        return root === -Infinity ? _x(1) : root;
	    }
	
	    function updateElements(rows) {
	        var n = _rowData.length;
	
	        var height;
	        if (!_fixedBarHeight) height = (_chart.effectiveHeight() - (n + 1) * _gap) / n;
	            else height = _fixedBarHeight;
	
	        var rect = rows.attr("transform",function (d, i) {
	                return "translate(0," + ((i + 1) * _gap + i * height) + ")";
	            }).select("rect")
	            .attr("height", height)
	            .attr("fill", _chart.getColor)
	            .on("click", onClick)
	            .classed("deselected", function (d) {
	                return (_chart.hasFilter()) ? !isSelectedRow(d) : false;
	            })
	            .classed("selected", function (d) {
	                return (_chart.hasFilter()) ? isSelectedRow(d) : false;
	            });
	
	        dc.transition(rect, _chart.transitionDuration())
	            .attr("width", function (d) {
	                return Math.abs(rootValue() - _x(_chart.valueAccessor()(d)));
	            })
	            .attr("transform", translateX);
	
	        createTitles(rows);
	        updateLabels(rows);
	    }
	
	    function createTitles(rows) {
	        if (_chart.renderTitle()) {
	            rows.selectAll("title").remove();
	            rows.append("title").text(_chart.title());
	        }
	    }
	
	    function createLabels(rowEnter) {
	        if (_chart.renderLabel()) {
	            rowEnter.append("text")
	                .on("click", onClick);
	        }
	        if (_chart.renderTitleLabel()) {
	            rowEnter.append("text")
	                .attr("class", _titleRowCssClass)
	                .on("click", onClick);
	        }
	    }
	
	    function updateLabels(rows) {
	        if (_chart.renderLabel()) {
	            var lab = rows.select("text")
	                .attr("x", _labelOffsetX)
	                .attr("y", _labelOffsetY)
	                .on("click", onClick)
	                .attr("class", function (d, i) {
	                    return _rowCssClass + " _" + i;
	                })
	                .text(function (d) {
	                    return _chart.label()(d);
	                });
	            dc.transition(lab, _chart.transitionDuration())
	                .attr("transform", translateX);
	        }
	        if (_chart.renderTitleLabel()) {
	            var titlelab = rows.select("." + _titleRowCssClass)
	                    .attr("x", _chart.effectiveWidth() - _titleLabelOffsetX)
	                    .attr("y", _labelOffsetY)
	                    .attr("text-anchor", "end")
	                    .on("click", onClick)
	                    .attr("class", function (d, i) {
	                        return _titleRowCssClass + " _" + i ;
	                    })
	                    .text(function (d) {
	                        return _chart.title()(d);
	                    });
	            dc.transition(titlelab, _chart.transitionDuration())
	                .attr("transform", translateX);
	        }
	    }
	
	    /**
	    #### .renderTitleLabel(boolean)
	    Turn on/off Title label rendering (values) using SVG style of text-anchor 'end'
	
	    **/
	    _chart.renderTitleLabel = function (_) {
	        if (!arguments.length) return _renderTitleLabel;
	        _renderTitleLabel = _;
	        return _chart;
	    };
	
	    function onClick(d) {
	        _chart.onClick(d);
	    }
	
	    function translateX(d) {
	        var x = _x(_chart.cappedValueAccessor(d)),
	            x0 = rootValue(),
	            s = x > x0 ? x0 : x;
	        return "translate("+s+",0)";
	    }
	
	    _chart._doRedraw = function () {
	        drawChart();
	        return _chart;
	    };
	
	    /**
	    #### .xAxis()
	    Get the x axis for the row chart instance.  Note: not settable for row charts.
	    See the [d3 axis object](https://github.com/mbostock/d3/wiki/SVG-Axes#wiki-axis) documention for more information.
	    ```js
	    // customize x axis tick format
	    chart.xAxis().tickFormat(function(v) {return v + "%";});
	    // customize x axis tick values
	    chart.xAxis().tickValues([0, 100, 200, 300]);
	    ```
	
	    **/
	    _chart.xAxis = function () {
	        return _xAxis;
	    };
	
	    /**
	    #### .fixedBarHeight([height])
	    Get or set the fixed bar height. Default is [false] which will auto-scale bars.
	    For example, if you want to fix the height for a specific number of bars (useful in TopN charts)
	    you could fix height as follows (where count = total number of bars in your TopN and gap is your vertical gap space).
	    ```js
	     chart.fixedBarHeight( chartheight - (count + 1) * gap / count);
	    ```
	    **/
	    _chart.fixedBarHeight = function (g) {
	        if (!arguments.length) return _fixedBarHeight;
	        _fixedBarHeight = g;
	        return _chart;
	    };
	
	    /**
	    #### .gap([gap])
	    Get or set the vertical gap space between rows on a particular row chart instance. Default gap is 5px;
	
	    **/
	    _chart.gap = function (g) {
	        if (!arguments.length) return _gap;
	        _gap = g;
	        return _chart;
	    };
	
	    /**
	    #### .elasticX([boolean])
	    Get or set the elasticity on x axis. If this attribute is set to true, then the x axis will rescle to auto-fit the data
	    range when filtered.
	
	    **/
	    _chart.elasticX = function (_) {
	        if (!arguments.length) return _elasticX;
	        _elasticX = _;
	        return _chart;
	    };
	
	    /**
	    #### .labelOffsetX([x])
	    Get or set the x offset (horizontal space to the top left corner of a row) for labels on a particular row chart. Default x offset is 10px;
	
	    **/
	    _chart.labelOffsetX = function (o) {
	        if (!arguments.length) return _labelOffsetX;
	        _labelOffsetX = o;
	        return _chart;
	    };
	
	    /**
	    #### .labelOffsetY([y])
	    Get or set the y offset (vertical space to the top left corner of a row) for labels on a particular row chart. Default y offset is 15px;
	
	    **/
	    _chart.labelOffsetY = function (o) {
	        if (!arguments.length) return _labelOffsetY;
	        _labelOffsetY = o;
	        return _chart;
	    };
	
	    /**
	    #### .titleLabelOffsetx([x])
	    Get of set the x offset (horizontal space between right edge of row and right edge or text.   Default x offset is 2px;
	
	    **/
	    _chart.titleLabelOffsetX = function (o) {
	        if (!arguments.length) return _titleLabelOffsetX;
	        _titleLabelOffsetX = o;
	        return _chart;
	    };
	
	    function isSelectedRow (d) {
	        return _chart.hasFilter(_chart.cappedKeyAccessor(d));
	    }
	
	    return _chart.anchor(parent, chartGroup);
	};
	
	/**
	## Legend
	Legend is a attachable widget that can be added to other dc charts to render horizontal legend
	labels.
	
	```js
	chart.legend(dc.legend().x(400).y(10).itemHeight(13).gap(5))
	```
	
	Examples:
	* [Nasdaq 100 Index](http://dc-js.github.com/dc.js/)
	* [Canadian City Crime Stats](http://dc-js.github.com/dc.js/crime/index.html)
	
	**/
	dc.legend = function () {
	    var LABEL_GAP = 2;
	
	    var _legend = {},
	        _parent,
	        _x = 0,
	        _y = 0,
	        _itemHeight = 12,
	        _gap = 5,
	        _horizontal = false,
	        _legendWidth = 560,
	        _itemWidth = 70;
	
	    var _g;
	
	    _legend.parent = function (p) {
	        if (!arguments.length) return _parent;
	        _parent = p;
	        return _legend;
	    };
	
	    _legend.render = function () {
	        _parent.svg().select("g.dc-legend").remove();
	        _g = _parent.svg().append("g")
	            .attr("class", "dc-legend")
	            .attr("transform", "translate(" + _x + "," + _y + ")");
	        var legendables = _parent.legendables();
	
	        var itemEnter = _g.selectAll('g.dc-legend-item')
	            .data(legendables)
	            .enter()
	            .append("g")
	            .attr("class", "dc-legend-item")
	            .on("mouseover", function(d) {
	                _parent.legendHighlight(d);
	            })
	            .on("mouseout", function (d) {
	                _parent.legendReset(d);
	            })
	            .on("click", function (d) {
	                d.chart.legendToggle(d);
	            });
	
	        _g.selectAll('g.dc-legend-item')
	            .classed("fadeout", function(d) {
	                return d.chart.isLegendableHidden(d);
	            });
	
	        if (legendables.some(dc.pluck('dashstyle'))) {
	            itemEnter
	                .append("line")
	                .attr("x1", 0)
	                .attr("y1", _itemHeight / 2)
	                .attr("x2", _itemHeight)
	                .attr("y2", _itemHeight / 2)
	                .attr("stroke-width", 2)
	                .attr("stroke-dasharray", dc.pluck('dashstyle'))
	                .attr("stroke", dc.pluck('color'));
	        } else {
	            itemEnter
	                .append("rect")
	                .attr("width", _itemHeight)
	                .attr("height", _itemHeight)
	                .attr("fill", function(d){return d?d.color:"blue";});
	        }
	
	        itemEnter.append("text")
	                .text(dc.pluck('name'))
	                .attr("x", _itemHeight + LABEL_GAP)
	                .attr("y", function(){return _itemHeight / 2 + (this.clientHeight?this.clientHeight:13) / 2 - 2;});
	
	        var _cumulativeLegendTextWidth = 0;
	        var row = 0;
	        itemEnter.attr("transform", function(d, i) {
	            if(_horizontal) {
	                var translateBy = "translate(" + _cumulativeLegendTextWidth + "," + row * legendItemHeight() + ")";
	                if ((_cumulativeLegendTextWidth + _itemWidth) >= _legendWidth) {
	                    ++row ;
	                    _cumulativeLegendTextWidth = 0 ;
	                } else {
	                    _cumulativeLegendTextWidth += _itemWidth;
	                }
	                return translateBy;
	            }
	            else {
	                return "translate(0," + i * legendItemHeight() + ")";
	            }
	        });
	    };
	
	    function legendItemHeight() {
	        return _gap + _itemHeight;
	    }
	
	    /**
	    #### .x([value])
	    Set or get x coordinate for legend widget. Default: 0.
	    **/
	    _legend.x = function (x) {
	        if (!arguments.length) return _x;
	        _x = x;
	        return _legend;
	    };
	
	    /**
	    #### .y([value])
	    Set or get y coordinate for legend widget. Default: 0.
	    **/
	    _legend.y = function (y) {
	        if (!arguments.length) return _y;
	        _y = y;
	        return _legend;
	    };
	
	    /**
	    #### .gap([value])
	    Set or get gap between legend items. Default: 5.
	    **/
	    _legend.gap = function (gap) {
	        if (!arguments.length) return _gap;
	        _gap = gap;
	        return _legend;
	    };
	
	    /**
	    #### .itemHeight([value])
	    Set or get legend item height. Default: 12.
	    **/
	    _legend.itemHeight = function (h) {
	        if (!arguments.length) return _itemHeight;
	        _itemHeight = h;
	        return _legend;
	    };
	
	    /**
	    #### .horizontal([boolean])
	    Position legend horizontally instead of vertically
	    **/
	    _legend.horizontal = function(_) {
	        if (!arguments.length) return _horizontal;
	        _horizontal = _;
	        return _legend;
	    };
	
	    /**
	    #### .legendWidth([value])
	    Maximum width for horizontal legend. Default: 560.
	    **/
	    _legend.legendWidth = function(_) {
	        if (!arguments.length) return _legendWidth;
	        _legendWidth = _;
	        return _legend;
	    };
	
	    /**
	    #### .itemWidth([value])
	    legendItem width for horizontal legend. Default: 70.
	    **/
	    _legend.itemWidth = function(_) {
	        if (!arguments.length) return _itemWidth;
	        _itemWidth = _;
	        return _legend;
	    };
	
	    return _legend;
	};
	
	/**
	## Scatter Plot
	
	Includes: [Coordinate Grid Mixin](#coordinate-grid-mixin)
	
	A scatter plot chart
	
	#### dc.scatterPlot(parent[, chartGroup])
	Create a scatter plot instance and attach it to the given parent element.
	
	Parameters:
	
	* parent : string | node | selection | compositeChart - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying
	 a dom block element such as a div; or a dom element or d3 selection.
	 If the scatter plot is a sub-chart in a [Composite Chart](#composite-chart) then pass in the parent composite
	 chart instance.
	
	* chartGroup : string (optional) - name of the chart group this chart instance should be placed in.
	 Interaction with a chart will only trigger events and redraws within the chart's group.
	
	Returns:
	A newly created scatter plot instance
	
	```js
	// create a scatter plot under #chart-container1 element using the default global chart group
	var chart1 = dc.scatterPlot("#chart-container1");
	// create a scatter plot under #chart-container2 element using chart group A
	var chart2 = dc.scatterPlot("#chart-container2", "chartGroupA");
	// create a sub-chart under a composite parent chart
	var chart3 = dc.scatterPlot(compositeChart);
	```
	
	 **/
	dc.scatterPlot = function (parent, chartGroup) {
	    var _chart = dc.coordinateGridMixin({});
	    var _symbol = d3.svg.symbol();
	
	    var originalKeyAccessor = _chart.keyAccessor();
	    _chart.keyAccessor(function (d) { return originalKeyAccessor(d)[0]; });
	    _chart.valueAccessor(function (d) { return originalKeyAccessor(d)[1]; });
	    _chart.colorAccessor(function (d) { return _chart._groupName; });
	
	    var _locator = function (d) {
	        return "translate(" + _chart.x()(_chart.keyAccessor()(d)) + "," +
	                              _chart.y()(_chart.valueAccessor()(d)) + ")";
	    };
	
	    var _symbolSize = 3;
	    var _highlightedSize = 5;
	    var _hiddenSize = 0;
	
	    _symbol.size(function(d) {
	        if(d.value === 0)
	            return _hiddenSize;
	        else if(this.filtered)
	            return Math.pow(_highlightedSize, 2);
	        else
	            return Math.pow(_symbolSize, 2);
	    });
	
	    dc.override(_chart, "_filter", function(filter) {
	        if (!arguments.length) return _chart.__filter();
	
	        return _chart.__filter(dc.filters.RangedTwoDimensionalFilter(filter));
	    });
	
	    _chart.plotData = function () {
	        var symbols = _chart.chartBodyG().selectAll("path.symbol")
	            .data(_chart.data());
	
	        symbols
	            .enter()
	        .append("path")
	            .attr("class", "symbol")
	            .attr("opacity", 0)
	            .attr("fill", _chart.getColor)
	            .attr("transform", _locator);
	
	        dc.transition(symbols, _chart.transitionDuration())
	            .attr("opacity", function(d) { return d.value ? 1 : 0; })
	            .attr("fill", _chart.getColor)
	            .attr("transform", _locator)
	            .attr("d", _symbol);
	
	        dc.transition(symbols.exit(), _chart.transitionDuration())
	            .attr("opacity", 0).remove();
	    };
	
	    /**
	    #### .symbol([type])
	    Get or set the symbol type used for each point. By default the symbol is a circle. See the D3
	    [docs](https://github.com/mbostock/d3/wiki/SVG-Shapes#wiki-symbol_type) for acceptable types.
	    Type can be a constant or an accessor.
	
	    **/
	    _chart.symbol = function(type) {
	        if(!arguments.length) return _symbol.type();
	        _symbol.type(type);
	        return _chart;
	    };
	
	    /**
	    #### .symbolSize([radius])
	    Set or get radius for symbols. Default: 3.
	
	    **/
	    _chart.symbolSize = function(s){
	        if(!arguments.length) return _symbolSize;
	        _symbolSize = s;
	        return _chart;
	    };
	
	    /**
	    #### .highlightedSize([radius])
	    Set or get radius for highlighted symbols. Default: 4.
	
	    **/
	    _chart.highlightedSize = function(s){
	        if(!arguments.length) return _highlightedSize;
	        _highlightedSize = s;
	        return _chart;
	    };
	
	    /**
	    #### .hiddenSize([radius])
	    Set or get radius for symbols when the group is empty. Default: 0.
	
	    **/
	    _chart.hiddenSize = function(s){
	        if(!arguments.length) return _hiddenSize;
	        _hiddenSize = s;
	        return _chart;
	    };
	
	    _chart.legendables = function () {
	        return [{chart: _chart, name: _chart._groupName, color: _chart.getColor()}];
	    };
	
	    _chart.legendHighlight = function (d) {
	        resizeSymbolsWhere(function (symbol) {
	            return symbol.attr('fill') == d.color;
	        }, _highlightedSize);
	        _chart.selectAll('.chart-body path.symbol').filter(function () {
	            return d3.select(this).attr('fill') != d.color;
	        }).classed('fadeout', true);
	    };
	
	    _chart.legendReset = function (d) {
	        resizeSymbolsWhere(function (symbol) {
	            return symbol.attr('fill') == d.color;
	        }, _symbolSize);
	        _chart.selectAll('.chart-body path.symbol').filter(function () {
	            return d3.select(this).attr('fill') != d.color;
	        }).classed('fadeout', false);
	    };
	
	    function resizeSymbolsWhere(condition, size) {
	        var symbols = _chart.selectAll('.chart-body path.symbol').filter(function (d) {
	            return condition(d3.select(this));
	        });
	        var oldSize = _symbol.size();
	        _symbol.size(Math.pow(size, 2));
	        dc.transition(symbols, _chart.transitionDuration()).attr("d", _symbol);
	        _symbol.size(oldSize);
	    }
	
	    _chart.setHandlePaths = function () {
	        // no handle paths for poly-brushes
	    };
	
	    _chart.extendBrush = function () {
	        var extent = _chart.brush().extent();
	        if (_chart.round()) {
	            extent[0] = extent[0].map(_chart.round());
	            extent[1] = extent[1].map(_chart.round());
	
	            _chart.g().select(".brush")
	                .call(_chart.brush().extent(extent));
	        }
	        return extent;
	    };
	
	    _chart.brushIsEmpty = function (extent) {
	        return _chart.brush().empty() || !extent || extent[0][0] >= extent[1][0] || extent[0][1] >= extent[1][1];
	    };
	
	    function resizeFiltered(filter) {
	        var symbols = _chart.selectAll('.chart-body path.symbol').each(function (d) {
	            this.filtered = filter && filter.isFiltered(d.key);
	        });
	
	        dc.transition(symbols, _chart.transitionDuration()).attr("d", _symbol);
	    }
	
	    _chart._brushing = function () {
	        var extent = _chart.extendBrush();
	
	        _chart.redrawBrush(_chart.g());
	
	        if (_chart.brushIsEmpty(extent)) {
	            dc.events.trigger(function () {
	                _chart.filter(null);
	                _chart.redrawGroup();
	            });
	
	            resizeFiltered(false);
	
	        } else {
	            var ranged2DFilter = dc.filters.RangedTwoDimensionalFilter(extent);
	            dc.events.trigger(function () {
	                _chart.filter(null);
	                _chart.filter(ranged2DFilter);
	                _chart.redrawGroup();
	            }, dc.constants.EVENT_DELAY);
	
	            resizeFiltered(ranged2DFilter);
	        }
	    };
	
	    _chart.setBrushY = function (gBrush) {
	        gBrush.call(_chart.brush().y(_chart.y()));
	    };
	
	    return _chart.anchor(parent, chartGroup);
	};
	
	/**
	## Number Display Widget
	
	Includes: [Base Mixin](#base-mixin)
	
	A display of a single numeric value.
	
	Examples:
	
	* [Test Example](http://dc-js.github.io/dc.js/examples/number.html)
	
	#### dc.numberDisplay(parent[, chartGroup])
	Create a Number Display instance and attach it to the given parent element.
	
	Unlike other charts, you do not need to set a dimension. Instead a group object must be provided and
	a valueAccessor that returns a single value.
	
	Parameters:
	
	* parent : string | node | selection - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying
	 a dom block element such as a div; or a dom element or d3 selection.
	* chartGroup : string (optional) - name of the chart group this chart instance should be placed in.
	 The number display widget will only react to filter changes in the chart group.
	
	Returns:
	A newly created number display instance
	
	```js
	// create a number display under #chart-container1 element using the default global chart group
	var display1 = dc.numberDisplay("#chart-container1");
	```
	
	**/
	dc.numberDisplay = function (parent, chartGroup) {
	    var SPAN_CLASS = 'number-display';
	    var _formatNumber = d3.format(".2s");
	    var _chart = dc.baseMixin({});
	    var _html = {one:"",some:"",none:""};
	
	    // dimension not required
	    _chart._mandatoryAttributes(['group']);
	
	    /**
	    #### .html([object])
	     Gets or sets an optional object specifying HTML templates to use depending on the number
	     displayed.  The text `%number` will be replaced with the current value.
	     - one: HTML template to use if the number is 1
	     - zero: HTML template to use if the number is 0
	     - some: HTML template to use otherwise
	
	     ```js
	     numberWidget.html({
	         one:"%number record",
	         some:"%number records",
	         none:"no records"})
	     ```
	    **/
	
	    _chart.html = function(s) {
	        if (!arguments.length) return _html;
	        if(s.none)
	            _html.none = s.none;//if none available
	        else if(s.one)
	            _html.none = s.one;//if none not available use one
	        else if(s.some)
	            _html.none = s.some;//if none and one not available use some
	        if(s.one)
	            _html.one = s.one;//if one available
	        else if(s.some)
	            _html.one = s.some;//if one not available use some
	        if(s.some)
	            _html.some = s.some;//if some available
	        else if(s.one)
	            _html.some = s.one;//if some not available use one
	        return _chart;
	    };
	
	    /**
	    #### .value()
	    Calculate and return the underlying value of the display
	    **/
	
	    _chart.value = function () {
	        return _chart.data();
	    };
	
	    _chart.data(function (group) {
	        var valObj = group.value ? group.value() : group.top(1)[0];
	        return _chart.valueAccessor()(valObj);
	    });
	
	    _chart.transitionDuration(250); // good default
	
	    _chart._doRender = function () {
	        var newValue = _chart.value(),
	            span     = _chart.selectAll("."+SPAN_CLASS);
	
	        if(span.empty())
	            span = span.data([0])
	                .enter()
	                .append("span")
	                .attr("class", SPAN_CLASS);
	
	        span.transition()
	            .duration(_chart.transitionDuration())
	            .ease('quad-out-in')
	            .tween("text", function () {
	                var interp = d3.interpolateNumber(this.lastValue || 0, newValue);
	                this.lastValue = newValue;
	                return function (t) {
	                    var html = null, num = _chart.formatNumber()(interp(t));
	                    if(newValue===0 && (_html.none!==""))
	                        html = _html.none;
	                    else if(newValue===1 &&(_html.one!==""))
	                        html = _html.one;
	                    else if(_html.some!=="")
	                        html = _html.some;
	                    this.innerHTML = html ? html.replace("%number", num) : num;
	                };
	            });
	    };
	
	    _chart._doRedraw = function(){
	        return _chart._doRender();
	    };
	
	    /**
	    #### .formatNumber([formatter])
	    Get or set a function to format the value for the display. By default `d3.format(".2s");` is used.
	
	    **/
	    _chart.formatNumber = function (_) {
	        if (!arguments.length) return _formatNumber;
	        _formatNumber = _;
	        return _chart;
	    };
	
	    return _chart.anchor(parent, chartGroup);
	};
	
	/**
	 ## Heat Map
	
	 Includes: [Color Mixin](#color-mixin), [Margin Mixin](#margin-mixin), [Base Mixin](#base-mixin)
	
	 A heat map is matrix that represents the values of two dimensions of data using colors.
	
	 #### dc.heatMap(parent[, chartGroup])
	 Create a heat map instance and attach it to the given parent element.
	
	 Parameters:
	* parent : string | node | selection - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying
	 a dom block element such as a div; or a dom element or d3 selection.
	
	* chartGroup : string (optional) - name of the chart group this chart instance should be placed in.
	 Interaction with a chart will only trigger events and redraws within the chart's group.
	
	 Returns:
	 A newly created heat map instance
	
	 ```js
	 // create a heat map under #chart-container1 element using the default global chart group
	 var heatMap1 = dc.heatMap("#chart-container1");
	 // create a heat map under #chart-container2 element using chart group A
	 var heatMap2 = dc.heatMap("#chart-container2", "chartGroupA");
	 ```
	
	 **/
	dc.heatMap = function (parent, chartGroup) {
	
	    var DEFAULT_BORDER_RADIUS = 6.75;
	
	    var _chartBody;
	
	    var _cols;
	    var _rows;
	    var _xBorderRadius = DEFAULT_BORDER_RADIUS;
	    var _yBorderRadius = DEFAULT_BORDER_RADIUS;
	
	    var _chart = dc.colorMixin(dc.marginMixin(dc.baseMixin({})));
	    _chart._mandatoryAttributes(['group']);
	    _chart.title(_chart.colorAccessor());
	
	    var _xAxisOnClick = function (d) { filterAxis(0, d); };
	    var _yAxisOnClick = function (d) { filterAxis(1, d); };
	    var _boxOnClick = function (d) {
	        var filter = d.key;
	        dc.events.trigger(function() {
	            _chart.filter(filter);
	            _chart.redrawGroup();
	        });
	    };
	
	    function filterAxis(axis, value) {
	        var cellsOnAxis = _chart.selectAll(".box-group").filter( function (d) {
	            return d.key[axis] == value;
	        });
	        var unfilteredCellsOnAxis = cellsOnAxis.filter( function (d) {
	            return !_chart.hasFilter(d.key);
	        });
	        dc.events.trigger(function() {
	            if(unfilteredCellsOnAxis.empty()) {
	                cellsOnAxis.each( function (d) {
	                    _chart.filter(d.key);
	                });
	            } else {
	                unfilteredCellsOnAxis.each( function (d) {
	                    _chart.filter(d.key);
	                });
	            }
	            _chart.redrawGroup();
	        });
	    }
	
	    dc.override(_chart, "filter", function(filter) {
	        if (!arguments.length) return _chart._filter();
	
	        return _chart._filter(dc.filters.TwoDimensionalFilter(filter));
	    });
	
	    function uniq(d,i,a) {
	        return !i || a[i-1] != d;
	    }
	
	    /**
	     #### .rows([values])
	     Gets or sets the values used to create the rows of the heatmap, as an array. By default, all
	     the values will be fetched from the data using the value accessor, and they will be sorted in
	     ascending order.
	     **/
	
	    _chart.rows = function (_) {
	        if (arguments.length) {
	            _rows = _;
	            return _chart;
	        }
	        if (_rows) return _rows;
	        var rowValues = _chart.data().map(_chart.valueAccessor());
	        rowValues.sort(d3.ascending);
	        return d3.scale.ordinal().domain(rowValues.filter(uniq));
	    };
	
	    /**
	     #### .cols([keys])
	     Gets or sets the keys used to create the columns of the heatmap, as an array. By default, all
	     the values will be fetched from the data using the key accessor, and they will be sorted in
	     ascending order.
	     **/
	    _chart.cols = function (_) {
	        if (arguments.length) {
	            _cols = _;
	            return _chart;
	        }
	        if (_cols) return _cols;
	        var colValues = _chart.data().map(_chart.keyAccessor());
	        colValues.sort(d3.ascending);
	        return d3.scale.ordinal().domain(colValues.filter(uniq));
	    };
	
	    _chart._doRender = function () {
	        _chart.resetSvg();
	
	        _chartBody = _chart.svg()
	          .append("g")
	          .attr("class", "heatmap")
	          .attr("transform", "translate(" + _chart.margins().left + "," + _chart.margins().top + ")");
	
	        return _chart._doRedraw();
	    };
	
	    _chart._doRedraw = function () {
	        var rows = _chart.rows(),
	            cols = _chart.cols(),
	            rowCount = rows.domain().length,
	            colCount = cols.domain().length,
	            boxWidth = Math.floor(_chart.effectiveWidth() / colCount),
	            boxHeight = Math.floor(_chart.effectiveHeight() / rowCount);
	
	        cols.rangeRoundBands([0, _chart.effectiveWidth()]);
	        rows.rangeRoundBands([_chart.effectiveHeight(), 0]);
	
	        var boxes = _chartBody.selectAll("g.box-group").data(_chart.data(), function(d,i) {
	            return _chart.keyAccessor()(d,i) + '\0' + _chart.valueAccessor()(d,i);
	        });
	        var gEnter = boxes.enter().append("g")
	            .attr("class", "box-group");
	
	        gEnter.append("rect")
	            .attr("class","heat-box")
	            .attr("fill", "white")
	            .on("click", _chart.boxOnClick());
	
	        gEnter.append("title")
	            .text(_chart.title());
	
	        dc.transition(boxes.selectAll("rect"), _chart.transitionDuration())
	            .attr("x", function(d,i) { return cols(_chart.keyAccessor()(d,i)); })
	            .attr("y", function(d,i) { return rows(_chart.valueAccessor()(d,i)); })
	            .attr("rx", _xBorderRadius)
	            .attr("ry", _yBorderRadius)
	            .attr("fill", _chart.getColor)
	            .attr("width", boxWidth)
	            .attr("height", boxHeight);
	
	        boxes.exit().remove();
	
	        var gCols = _chartBody.selectAll("g.cols");
	        if (gCols.empty())
	            gCols = _chartBody.append("g").attr("class", "cols axis");
	        var gColsText = gCols.selectAll('text').data(cols.domain());
	        gColsText.enter().append("text")
	              .attr("x", function(d) { return cols(d) + boxWidth/2; })
	              .style("text-anchor", "middle")
	              .attr("y", _chart.effectiveHeight())
	              .attr("dy", 12)
	              .on("click", _chart.xAxisOnClick())
	              .text(function(d) { return d; });
	        dc.transition(gColsText, _chart.transitionDuration())
	               .text(function(d) { return d; })
	               .attr("x", function(d) { return cols(d) + boxWidth/2; });
	        gColsText.exit().remove();
	        var gRows = _chartBody.selectAll("g.rows");
	        if (gRows.empty())
	            gRows = _chartBody.append("g").attr("class", "rows axis");
	        var gRowsText = gRows.selectAll('text').data(rows.domain());
	        gRowsText.enter().append("text")
	              .attr("dy", 6)
	              .style("text-anchor", "end")
	              .attr("x", 0)
	              .attr("dx", -2)
	              .on("click", _chart.yAxisOnClick())
	              .text(function(d) { return d; });
	        dc.transition(gRowsText, _chart.transitionDuration())
	              .text(function(d) { return d; })
	              .attr("y", function(d) { return rows(d) + boxHeight/2; });
	        gRowsText.exit().remove();
	
	        if (_chart.hasFilter()) {
	            _chart.selectAll("g.box-group").each(function (d) {
	                if (_chart.isSelectedNode(d)) {
	                    _chart.highlightSelected(this);
	                } else {
	                    _chart.fadeDeselected(this);
	                }
	            });
	        } else {
	            _chart.selectAll("g.box-group").each(function () {
	                _chart.resetHighlight(this);
	            });
	        }
	        return _chart;
	    };
	    /**
	     #### .boxOnClick([handler])
	     Gets or sets the handler that fires when an individual cell is clicked in the heatmap.
	     By default, filtering of the cell will be toggled.
	     **/
	    _chart.boxOnClick = function (f) {
	        if (!arguments.length) return _boxOnClick;
	        _boxOnClick = f;
	        return _chart;
	    };
	
	    /**
	     #### .xAxisOnClick([handler])
	     Gets or sets the handler that fires when a column tick is clicked in the x axis.
	     By default, if any cells in the column are unselected, the whole column will be selected,
	     otherwise the whole column will be unselected.
	     **/
	    _chart.xAxisOnClick = function (f) {
	        if (!arguments.length) return _xAxisOnClick;
	        _xAxisOnClick = f;
	        return _chart;
	    };
	
	    /**
	     #### .yAxisOnClick([handler])
	     Gets or sets the handler that fires when a row tick is clicked in the y axis.
	     By default, if any cells in the row are unselected, the whole row will be selected,
	     otherwise the whole row will be unselected.
	     **/
	    _chart.yAxisOnClick = function (f) {
	        if (!arguments.length) return _yAxisOnClick;
	        _yAxisOnClick = f;
	        return _chart;
	    };
	
	    /**
	     #### .xBorderRadius([value])
	     Gets or sets the X border radius.  Set to 0 to get full rectangles.  Default: 6.75
	     */
	    _chart.xBorderRadius = function (d) {
	        if (!arguments.length) return _xBorderRadius;
	        _xBorderRadius = d;
	        return _chart;
	    };
	
	    /**
	     #### .xBorderRadius([value])
	     Gets or sets the Y border radius.  Set to 0 to get full rectangles.  Default: 6.75
	     */
	    _chart.yBorderRadius = function (d) {
	        if (!arguments.length) return _yBorderRadius;
	        _yBorderRadius = d;
	        return _chart;
	    };
	
	    _chart.isSelectedNode = function (d) {
	        return _chart.hasFilter(d.key);
	    };
	
	    return _chart.anchor(parent, chartGroup);
	};
	
	// https://github.com/d3/d3-plugins/blob/master/box/box.js
	(function() {
	
	// Inspired by http://informationandvisualization.de/blog/box-plot
	d3.box = function() {
	  var width = 1,
	      height = 1,
	      duration = 0,
	      domain = null,
	      value = Number,
	      whiskers = boxWhiskers,
	      quartiles = boxQuartiles,
	      tickFormat = null;
	
	  // For each small multiple…
	  function box(g) {
	    g.each(function(d, i) {
	      d = d.map(value).sort(d3.ascending);
	      var g = d3.select(this),
	          n = d.length,
	          min = d[0],
	          max = d[n - 1];
	
	      // Compute quartiles. Must return exactly 3 elements.
	      var quartileData = d.quartiles = quartiles(d);
	
	      // Compute whiskers. Must return exactly 2 elements, or null.
	      var whiskerIndices = whiskers && whiskers.call(this, d, i),
	          whiskerData = whiskerIndices && whiskerIndices.map(function(i) { return d[i]; });
	
	      // Compute outliers. If no whiskers are specified, all data are "outliers".
	      // We compute the outliers as indices, so that we can join across transitions!
	      var outlierIndices = whiskerIndices
	          ? d3.range(0, whiskerIndices[0]).concat(d3.range(whiskerIndices[1] + 1, n))
	          : d3.range(n);
	
	      // Compute the new x-scale.
	      var x1 = d3.scale.linear()
	          .domain(domain && domain.call(this, d, i) || [min, max])
	          .range([height, 0]);
	
	      // Retrieve the old x-scale, if this is an update.
	      var x0 = this.__chart__ || d3.scale.linear()
	          .domain([0, Infinity])
	          .range(x1.range());
	
	      // Stash the new scale.
	      this.__chart__ = x1;
	
	      // Note: the box, median, and box tick elements are fixed in number,
	      // so we only have to handle enter and update. In contrast, the outliers
	      // and other elements are variable, so we need to exit them! Variable
	      // elements also fade in and out.
	
	      // Update center line: the vertical line spanning the whiskers.
	      var center = g.selectAll("line.center")
	          .data(whiskerData ? [whiskerData] : []);
	
	      center.enter().insert("line", "rect")
	          .attr("class", "center")
	          .attr("x1", width / 2)
	          .attr("y1", function(d) { return x0(d[0]); })
	          .attr("x2", width / 2)
	          .attr("y2", function(d) { return x0(d[1]); })
	          .style("opacity", 1e-6)
	        .transition()
	          .duration(duration)
	          .style("opacity", 1)
	          .attr("y1", function(d) { return x1(d[0]); })
	          .attr("y2", function(d) { return x1(d[1]); });
	
	      center.transition()
	          .duration(duration)
	          .style("opacity", 1)
	          .attr("y1", function(d) { return x1(d[0]); })
	          .attr("y2", function(d) { return x1(d[1]); });
	
	      center.exit().transition()
	          .duration(duration)
	          .style("opacity", 1e-6)
	          .attr("y1", function(d) { return x1(d[0]); })
	          .attr("y2", function(d) { return x1(d[1]); })
	          .remove();
	
	      // Update innerquartile box.
	      var box = g.selectAll("rect.box")
	          .data([quartileData]);
	
	      box.enter().append("rect")
	          .attr("class", "box")
	          .attr("x", 0)
	          .attr("y", function(d) { return x0(d[2]); })
	          .attr("width", width)
	          .attr("height", function(d) { return x0(d[0]) - x0(d[2]); })
	        .transition()
	          .duration(duration)
	          .attr("y", function(d) { return x1(d[2]); })
	          .attr("height", function(d) { return x1(d[0]) - x1(d[2]); });
	
	      box.transition()
	          .duration(duration)
	          .attr("y", function(d) { return x1(d[2]); })
	          .attr("height", function(d) { return x1(d[0]) - x1(d[2]); });
	
	      // Update median line.
	      var medianLine = g.selectAll("line.median")
	          .data([quartileData[1]]);
	
	      medianLine.enter().append("line")
	          .attr("class", "median")
	          .attr("x1", 0)
	          .attr("y1", x0)
	          .attr("x2", width)
	          .attr("y2", x0)
	        .transition()
	          .duration(duration)
	          .attr("y1", x1)
	          .attr("y2", x1);
	
	      medianLine.transition()
	          .duration(duration)
	          .attr("y1", x1)
	          .attr("y2", x1);
	
	      // Update whiskers.
	      var whisker = g.selectAll("line.whisker")
	          .data(whiskerData || []);
	
	      whisker.enter().insert("line", "circle, text")
	          .attr("class", "whisker")
	          .attr("x1", 0)
	          .attr("y1", x0)
	          .attr("x2", width)
	          .attr("y2", x0)
	          .style("opacity", 1e-6)
	        .transition()
	          .duration(duration)
	          .attr("y1", x1)
	          .attr("y2", x1)
	          .style("opacity", 1);
	
	      whisker.transition()
	          .duration(duration)
	          .attr("y1", x1)
	          .attr("y2", x1)
	          .style("opacity", 1);
	
	      whisker.exit().transition()
	          .duration(duration)
	          .attr("y1", x1)
	          .attr("y2", x1)
	          .style("opacity", 1e-6)
	          .remove();
	
	      // Update outliers.
	      var outlier = g.selectAll("circle.outlier")
	          .data(outlierIndices, Number);
	
	      outlier.enter().insert("circle", "text")
	          .attr("class", "outlier")
	          .attr("r", 5)
	          .attr("cx", width / 2)
	          .attr("cy", function(i) { return x0(d[i]); })
	          .style("opacity", 1e-6)
	        .transition()
	          .duration(duration)
	          .attr("cy", function(i) { return x1(d[i]); })
	          .style("opacity", 1);
	
	      outlier.transition()
	          .duration(duration)
	          .attr("cy", function(i) { return x1(d[i]); })
	          .style("opacity", 1);
	
	      outlier.exit().transition()
	          .duration(duration)
	          .attr("cy", function(i) { return x1(d[i]); })
	          .style("opacity", 1e-6)
	          .remove();
	
	      // Compute the tick format.
	      var format = tickFormat || x1.tickFormat(8);
	
	      // Update box ticks.
	      var boxTick = g.selectAll("text.box")
	          .data(quartileData);
	
	      boxTick.enter().append("text")
	          .attr("class", "box")
	          .attr("dy", ".3em")
	          .attr("dx", function(d, i) { return i & 1 ? 6 : -6; })
	          .attr("x", function(d, i) { return i & 1 ? width : 0; })
	          .attr("y", x0)
	          .attr("text-anchor", function(d, i) { return i & 1 ? "start" : "end"; })
	          .text(format)
	        .transition()
	          .duration(duration)
	          .attr("y", x1);
	
	      boxTick.transition()
	          .duration(duration)
	          .text(format)
	          .attr("y", x1);
	
	      // Update whisker ticks. These are handled separately from the box
	      // ticks because they may or may not exist, and we want don't want
	      // to join box ticks pre-transition with whisker ticks post-.
	      var whiskerTick = g.selectAll("text.whisker")
	          .data(whiskerData || []);
	
	      whiskerTick.enter().append("text")
	          .attr("class", "whisker")
	          .attr("dy", ".3em")
	          .attr("dx", 6)
	          .attr("x", width)
	          .attr("y", x0)
	          .text(format)
	          .style("opacity", 1e-6)
	        .transition()
	          .duration(duration)
	          .attr("y", x1)
	          .style("opacity", 1);
	
	      whiskerTick.transition()
	          .duration(duration)
	          .text(format)
	          .attr("y", x1)
	          .style("opacity", 1);
	
	      whiskerTick.exit().transition()
	          .duration(duration)
	          .attr("y", x1)
	          .style("opacity", 1e-6)
	          .remove();
	    });
	    d3.timer.flush();
	  }
	
	  box.width = function(x) {
	    if (!arguments.length) return width;
	    width = x;
	    return box;
	  };
	
	  box.height = function(x) {
	    if (!arguments.length) return height;
	    height = x;
	    return box;
	  };
	
	  box.tickFormat = function(x) {
	    if (!arguments.length) return tickFormat;
	    tickFormat = x;
	    return box;
	  };
	
	  box.duration = function(x) {
	    if (!arguments.length) return duration;
	    duration = x;
	    return box;
	  };
	
	  box.domain = function(x) {
	    if (!arguments.length) return domain;
	    domain = x == null ? x : d3.functor(x);
	    return box;
	  };
	
	  box.value = function(x) {
	    if (!arguments.length) return value;
	    value = x;
	    return box;
	  };
	
	  box.whiskers = function(x) {
	    if (!arguments.length) return whiskers;
	    whiskers = x;
	    return box;
	  };
	
	  box.quartiles = function(x) {
	    if (!arguments.length) return quartiles;
	    quartiles = x;
	    return box;
	  };
	
	  return box;
	};
	
	function boxWhiskers(d) {
	  return [0, d.length - 1];
	}
	
	function boxQuartiles(d) {
	  return [
	    d3.quantile(d, .25),
	    d3.quantile(d, .5),
	    d3.quantile(d, .75)
	  ];
	}
	
	})();
	
	/**
	 ## Box Plot
	
	 Includes: [Coordinate Grid Mixin](#coordinate-grid-mixin)
	
	 A box plot is a chart that depicts numerical data via their quartile ranges.
	
	 #### dc.boxPlot(parent[, chartGroup])
	 Create a box plot instance and attach it to the given parent element.
	
	 Parameters:
	 * parent : string | node | selection - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) representing
	 a dom block element such as a div; or a dom element or d3 selection.
	* chartGroup : string (optional) - name of the chart group this chart instance should be placed in.
	 Interaction with a chart will only trigger events and redraws within the chart's group.
	
	 Returns:
	 A newly created box plot instance
	
	 ```js
	 // create a box plot under #chart-container1 element using the default global chart group
	 var boxPlot1 = dc.boxPlot("#chart-container1");
	 // create a box plot under #chart-container2 element using chart group A
	 var boxPlot2 = dc.boxPlot("#chart-container2", "chartGroupA");
	 ```
	
	 **/
	dc.boxPlot = function (parent, chartGroup) {
	    var _chart = dc.coordinateGridMixin({});
	
	    var _whisker_iqr_factor = 1.5;
	    var _whiskers_iqr = default_whiskers_iqr;
	    var _whiskers = _whiskers_iqr(_whisker_iqr_factor);
	
	    var _box = d3.box();
	    var _tickFormat = null;
	
	    var _boxWidth = function (innerChartWidth, xUnits) {
	        if (_chart.isOrdinal())
	            return _chart.x().rangeBand();
	        else
	            return innerChartWidth / (1 + _chart.boxPadding()) / xUnits;
	    };
	
	    // default padding to handle min/max whisker text
	    _chart.yAxisPadding(12);
	
	    // default to ordinal
	    _chart.x(d3.scale.ordinal());
	    _chart.xUnits(dc.units.ordinal);
	
	    // valueAccessor should return an array of values that can be coerced into numbers
	    // or if data is overloaded for a static array of arrays, it should be `Number`.
	    // Empty arrays are not included.
	    _chart.data(function(group) {
	        return group.all().map(function (d) {
	            d.map = function(accessor) { return accessor.call(d,d); };
	            return d;
	        }).filter(function (d) {
	            var values = _chart.valueAccessor()(d);
	            return values.length !== 0;
	        });
	    });
	
	    /**
	    #### .boxPadding([padding])
	    Get or set the spacing between boxes as a fraction of box size. Valid values are within 0-1.
	    See the [d3 docs](https://github.com/mbostock/d3/wiki/Ordinal-Scales#wiki-ordinal_rangeBands)
	    for a visual description of how the padding is applied.
	
	    Default: 0.8
	    **/
	    _chart.boxPadding = _chart._rangeBandPadding;
	    _chart.boxPadding(0.8);
	
	    /**
	    #### .outerPadding([padding])
	    Get or set the outer padding on an ordinal box chart. This setting has no effect on non-ordinal charts
	    or on charts with a custom `.boxWidth`. Will pad the width by `padding * barWidth` on each side of the chart.
	
	    Default: 0.5
	    **/
	    _chart.outerPadding = _chart._outerRangeBandPadding;
	    _chart.outerPadding(0.5);
	
	    /**
	     #### .boxWidth(width || function(innerChartWidth, xUnits) { ... })
	     Get or set the numerical width of the boxplot box. The width may also be a function taking as
	     parameters the chart width excluding the right and left margins, as well as the number of x
	     units.
	     **/
	    _chart.boxWidth = function(_) {
	        if (!arguments.length) return _boxWidth;
	        _boxWidth = d3.functor(_);
	        return _chart;
	    };
	
	    var boxTransform = function (d, i) {
	        var xOffset = _chart.x()(_chart.keyAccessor()(d,i));
	        return "translate(" + xOffset + ",0)";
	    };
	
	    _chart._preprocessData = function () {
	        if (_chart.elasticX()) {
	            _chart.x().domain([]);
	        }
	    };
	
	    _chart.plotData = function () {
	        var _calculatedBoxWidth = _boxWidth(_chart.effectiveWidth(), _chart.xUnitCount());
	
	        _box.whiskers(_whiskers)
	            .width(_calculatedBoxWidth)
	            .height(_chart.effectiveHeight())
	            .value(_chart.valueAccessor())
	            .domain(_chart.y().domain())
	            .duration(_chart.transitionDuration())
	            .tickFormat(_tickFormat);
	
	        var boxesG = _chart.chartBodyG().selectAll('g.box').data(_chart.data(), function (d) { return d.key; });
	
	        renderBoxes(boxesG);
	        updateBoxes(boxesG);
	        removeBoxes(boxesG);
	
	        _chart.fadeDeselectedArea();
	    };
	
	    function renderBoxes(boxesG) {
	        var boxesGEnter = boxesG.enter().append("g");
	
	        boxesGEnter
	            .attr("class", "box")
	            .attr("transform", boxTransform)
	            .call(_box)
	            .on("click", function(d) {
	                _chart.filter(d.key);
	                _chart.redrawGroup();
	            });
	    }
	
	    function updateBoxes(boxesG) {
	        dc.transition(boxesG, _chart.transitionDuration())
	            .attr("transform", boxTransform)
	            .call(_box)
	            .each(function() {
	                d3.select(this).select('rect.box').attr("fill", _chart.getColor);
	            });
	    }
	
	    function removeBoxes(boxesG) {
	        boxesG.exit().remove().call(_box);
	    }
	
	    _chart.fadeDeselectedArea = function () {
	        if (_chart.hasFilter()) {
	            _chart.g().selectAll("g.box").each(function (d) {
	                if (_chart.isSelectedNode(d)) {
	                    _chart.highlightSelected(this);
	                } else {
	                    _chart.fadeDeselected(this);
	                }
	            });
	        } else {
	            _chart.g().selectAll("g.box").each(function () {
	                _chart.resetHighlight(this);
	            });
	        }
	    };
	
	    _chart.isSelectedNode = function (d) {
	        return _chart.hasFilter(d.key);
	    };
	
	    _chart.yAxisMin = function () {
	        var min = d3.min(_chart.data(), function (e) {
	            return d3.min(_chart.valueAccessor()(e));
	        });
	        return dc.utils.subtract(min, _chart.yAxisPadding());
	    };
	
	    _chart.yAxisMax = function () {
	        var max = d3.max(_chart.data(), function (e) {
	            return d3.max(_chart.valueAccessor()(e));
	        });
	        return dc.utils.add(max, _chart.yAxisPadding());
	    };
	
	    /**
	     #### .tickFormat()
	     Set the numerical format of the boxplot median, whiskers and quartile labels. Defaults to
	     integer formatting.
	     ```js
	     // format ticks to 2 decimal places
	     chart.tickFormat(d3.format(".2f"));
	     ```
	     **/
	    _chart.tickFormat = function(x) {
	        if (!arguments.length) return _tickFormat;
	        _tickFormat = x;
	        return _chart;
	    };
	
	    // Returns a function to compute the interquartile range.
	    function default_whiskers_iqr(k) {
	        return function (d) {
	            var q1 = d.quartiles[0],
	                q3 = d.quartiles[2],
	                iqr = (q3 - q1) * k,
	                i = -1,
	                j = d.length;
	            while (d[++i] < q1 - iqr);
	            while (d[--j] > q3 + iqr);
	            return [i, j];
	        };
	    }
	
	    return _chart.anchor(parent, chartGroup);
	};
	
	/**
	## Bar Gauge
	
	Includes: [Base Mixin](#base-mixin)
	
	The Bar Gauge is a way to see data displacement based on a total capacity. An example would be showing how each country's population compares to the largest country's population in the world.
	
	#### dc.barGauge(parent[, chartGroup])
	Parameters:
	* parent : string | node | selection - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying
	 a dom block element such as a div; or a dom element or d3 selection.
	
	* chartGroup : string (optional) - name of the chart group this chart instance should be placed in.
	 Interaction with a chart will only trigger events and redraws within the chart's group.
	
	 Returns:
	A newly created choropleth chart instance
	
	```js
	totalFundingBar = dc.barGauge("#total-funding-gauge")
	                                .height(150)
	                                .width(300)
	                                .margins({top: 5, right: 5, bottom: 5, left: 5}) //margins are good for positioning
	                                .group(totalFundingGroup)
	                                .dimension(countryDimension)
	                                .valueAccessor(function(d){return d;})
	                                .totalCapacity(maxCountryValue)
	                                .orientation('horizontal') //vertical still needs work
	                                .gap(5)
	                                .drawScale(true); //draw the scale around the gauge
	```
	**/
	dc.barGauge = function (parent, chartGroup) {
	
	    var _chart = dc.marginMixin(dc.baseMixin({}));
	    var _filledValue,
	        _oldValue,
	        _totalCapacity,
	        _orientation = 'horizontal', _usePercentageForLengthCalc = false,
	        _gap = 0,
	        _height = null, _width = null,
	        _xAxis = d3.svg.axis().orient("bottom"), _x, _g,
	        _drawScale = false, _markers,
	        _markerPadding = {top:5,right:5,bottom:5,left:5},
	        _markerFormat = d3.format(".0f"), _tickFormat = d3.format(",.0f"),
	        _markerTitle = function(marker) {
	            var title = "";
	            if(marker.member) {
	                title = title + marker.member + ": ";
	            }
	            return title + _markerFormat(marker.value);
	        },
	        _defaultMarkerHeight = 40, _defaultMarkerWidth = 20, _defaultToolTips = true;
	
	    //dimension is not required because this comp onent only has one dimension
	    _chart._mandatoryAttributes (['group']);
	
	    _chart.transitionDuration(700); // good default
	
	    //Calculate the scale for the axis. Only for x axis as of now.
	    function calculateAxisScale() {
	        var extent = [0, _chart.totalCapacity()];
	        //_x lets us use d3 to scale the real input value to the output value
	        _x = d3.scale.linear().domain(extent)
	            .range([0, _chart.effectiveWidth()]);
	        _xAxis.scale(_x);
	        _xAxis.tickFormat(_tickFormat);
	    }
	
	    //draw the axis based on the scale
	    function drawAxis() {
	        var axisG = _g.select("g.axis");
	
	        calculateAxisScale();
	
	        axisG = _g.append("g").attr("class", "axis")
	            .attr("transform", "translate(0, " + _chart.effectiveHeight()+ ")");
	        dc.transition(axisG, _chart.transitionDuration())
	            .call(_xAxis);
	    }
	
	    //draw the tick markers on the scale.
	    function drawGridLines() {
	        _g.selectAll("g.tick")
	            .select("line.grid-line")
	            .remove();
	
	        _g.selectAll("g.tick")
	            .append("line")
	            .attr("class", "grid-line")
	            .attr("x1", 0)
	            .attr("y1", 0)
	            .attr("x2", 0)
	            .attr("y2", function() {
	                return -_chart.effectiveHeight();
	            });
	    }
	
	    _chart.value = function() {
	        return _chart.data();
	    };
	
	    _chart.data(function(group) {
	        var valObj = group.value ? group.value() : group.top(1)[0];
	        return _chart.valueAccessor()(valObj);
	
	    });
	
	    /**
	        #### .orientation(string)
	        Set the orientation of the bar 'horizontal' or 'vertical'. Only horizontal is fully working at this time. 
	    **/
	    _chart.orientation = function(_) {
	        if(!arguments.length) return _orientation;
	        _orientation = _;
	        return _chart;
	    };
	
	
	    /**
	        #### .usePercentageLength(Boolean)
	        Set the calculation for the length, and filled length to use percentages, not exact values. The
	        svg will be set so its long side is 100% of the parent container. 
	        This can be useful for when we want the length of the bar to fill up its parent element, 
	        but do not know the size of the parent element. Defaults to false.
	    **/
	    _chart.usePercentageLength = function(_) {
	        if(!arguments.length) return _usePercentageForLengthCalc;
	        _usePercentageForLengthCalc = _;
	        return _chart;
	    };
	    /**
	        #### .gap(number)
	        Get or set the gap between the bar and the scale. Default gap is 5px.
	    **/
	    _chart.gap = function (_) {
	        if (!arguments.length) return _gap;
	        _gap = _;
	        return _chart;
	    };
	
	    /**
	        #### .markerPadding(Object)
	        Pad the space around marker text. Defaults to 5px.
	    **/
	    _chart.markerPadding = function (_) {
	        if (!arguments.length) return _markerPadding;
	        _markerPadding = _;
	        return _chart;
	    };
	
	    /**
	        #### .markerWidth(Number)
	        Explicitly set marker width. The marker dimensions are set based on the marker text offset dimensions.
	        Setting this explicitly is useful for when a resize/redraw occurs and the text is momentarily 0x0.
	    **/
	    _chart.defaultMarkerWidth = function (_) {
	        if (!arguments.length) return _defaultMarkerWidth;
	        _defaultMarkerWidth = _;
	        return _chart;
	    };
	
	    /**
	        #### .markerHeight(Number)
	        Explicitly set marker height. The marker dimensions are set based on the marker text offset dimensions.
	        Setting this explicitly is useful for when a resize/redraw occurs and the text is momentarily 0x0.
	    **/
	    _chart.defaultMarkerHeight = function (_) {
	        if (!arguments.length) return _defaultMarkerHeight;
	        _defaultMarkerHeight = _;
	        return _chart;
	    };
	
	    /** 
	        #### .defaultToolTips(boolean)
	        Set whether or not to show the default tool tips. Defaults to true.
	    **/
	    _chart.defaultToolTips = function (_) {
	        if (!arguments.length) return _defaultToolTips;
	        _defaultToolTips = _;
	        return _chart;
	    };
	
	    /**
	        #### .totalCapacity(number)
	        Explicitly set total capacity of the chart.
	    **/
	    _chart.totalCapacity = function(_) {
	        if (!arguments.length) return _totalCapacity.call(_chart);
	        _totalCapacity = d3.functor(_);
	        _chart.expireCache();
	        return _chart;
	    };
	
	    /**
	        #### .filledValue(number)
	        Explicitly set filled value.
	    **/
	    _chart.filledValue = function(_) {
	        if(!arguments.length) return _filledValue;
	        _filledValue = _;
	        return _chart;
	    };
	
	    /**
	        #### .drawScale(boolean)
	        Explicitly set whether or not to draw the scale. Defaults to false.
	    **/
	    _chart.drawScale = function(_) {
	        if(!arguments.length) return _drawScale;
	        _drawScale = _;
	        return _chart;
	    };
	
	    /**
	        #### .drawScale(markerObjArray)
	        Set markers with an array of marker objects. The structure should look similar the following:
	        ```js
	        markerObjArray = [{value: someValue, statName: "Median"}, 
	            {value: otherValue, statName: ""Mean"},
	            {value: maxValue, member: maxName, statName: "Max"}];
	        ```
	        If the member is specified, the tooltip will show "member: value"
	    **/
	    _chart.setMarkers = function(_) {
	        if (!arguments.length) return _markers.call(_chart);
	        _markers = d3.functor(_);
	        _chart.expireCache();
	        return _chart;
	    };
	
	    /**
	        #### .markerTitle(function)
	        Set the function to display what goes in the SVG title/tooltip.
	    **/
	    _chart.markerTitle = function(_) {
	        if (!arguments.length) return _markerTitle; 
	        _markerTitle = _;
	        return _chart;
	    };
	
	    function placeMarkers(markers) {
	        if(!arguments.length) {
	            _markers().forEach(function(marker) {
	                var markerGroup = _g.select("g.marker-labels-top")
	                  .append("g")
	                    .classed("marker-tick", true)
	                    .attr("transform","translate(" + _x(marker.value) + ", 0)");
	
	                markerGroup.data([{markerName: marker.statName, memberValue: marker.value, memberName: marker.member}])
	                  .enter();
	                if(_defaultToolTips)
	                    markerGroup.append("title")
	                        .text(_markerTitle(marker));
	
	                markerGroup.append("text")
	                    .text(marker.statName)
	                    .attr("style", "text-anchor: middle")
	                    .attr("transform", "translate(0," + -_markerPadding.bottom + ")");
	
	                var textWidth = markerGroup.select("text").property("offsetWidth");
	                var textHeight = markerGroup.select("text").property("offsetHeight");
	
	                //need default height/width incase parent text elements are hidden in dom resulting in height/width of zero
	                var appliedTextWidth = (textWidth > 0) ? textWidth : _defaultMarkerWidth; 
	                var appliedTextHeight = (textHeight > 0) ? textHeight : _defaultMarkerHeight;
	                markerGroup.insert("rect", "text")
	                    .classed("marker-rect", true)
	                    .attr("x", -appliedTextWidth/2 - _markerPadding.left)
	                    .attr("y", -appliedTextHeight - _markerPadding.top - _markerPadding.bottom)
	                    .attr("width", appliedTextWidth + _markerPadding.left + _markerPadding.right)
	                    .attr("height", appliedTextHeight + _markerPadding.top + _markerPadding.bottom);
	
	                markerGroup.append("line")
	                    .classed("marker-line", true)
	                    .attr("x1", 0)
	                    .attr("y1", 0)
	                    .attr("x2", 0)
	                    .attr("y2", 5);
	                    
	                    // .attr("x", (_markerFormat) ? _markerFormat(_x(marker.value)) : _x(marker.value));
	                    
	                
	            });
	            return;
	        }
	
	        markers.forEach(function(marker) {
	            var markerGroup = _g.select("g.marker-labels-top")
	                    .append("g")
	                    .classed("marker-tick", true)
	                    .attr("transform","translate(" + _x(marker.value) + ", 0)");
	
	            markerGroup.data([{markerName: marker.statName, memberValue: marker.value, memberName: marker.member}])
	                .enter();
	
	            if(_defaultToolTips)
	                markerGroup.append("title")
	                    .text(_markerTitle(marker));
	
	            markerGroup.append("text")
	                .text(marker.statName)
	                .attr("style", "text-anchor: middle")
	                .attr("transform", "translate(0," + -_markerPadding.bottom + ")");
	
	            var textWidth = markerGroup.select("text").property("offsetWidth");
	            var textHeight = markerGroup.select("text").property("offsetHeight");
	
	            markerGroup.insert("rect", "text")
	                .classed("marker-rect", true)
	                .attr("x", -textWidth/2 - _markerPadding.left)
	                .attr("y", -textHeight - _markerPadding.top - _markerPadding.bottom)
	                .attr("width", textWidth + _markerPadding.left + _markerPadding.right)
	                .attr("height", textHeight + _markerPadding.top + _markerPadding.bottom);
	
	            markerGroup.append("line")
	                .classed("marker-line", true)
	                .attr("x1", 0)
	                .attr("y1", 0)
	                .attr("x2", 0)
	                .attr("y2", 5);
	        });
	
	    }
	
	    /**
	        #### .markerFormat(function)
	        Pass a formatter function like d3.format() to format marker values. 
	    **/
	    _chart.markerFormat = function(_) {
	        if(!arguments.length) return _markerFormat;
	        _markerFormat = _;
	        return _chart;
	        
	    };
	
	    /**
	        #### .tickFormat(function)
	        Pass a formatter function like d3.format() to format tick values. 
	    **/
	    _chart.tickFormat = function(_) {
	        if(!arguments.length) return _tickFormat;
	        _tickFormat = _;
	        return _chart;
	    };
	
	    /**
	        #### .initializeRectangles(ParentSelector, number, number, string)
	        Add the background and foreground rectangles. Set the foreground
	        rectangle to the calculated fill percentage.
	    **/
	    var initializeRectangles = function(orientation) {
	        //the percentage value will be how much the bar is actually filled up
	        var _percentFilled = (_filledValue/_totalCapacity() * 100 <= 100) ? _filledValue/_totalCapacity() * 100 : 100;
	        var _oldpercentFilled = (_oldValue/_totalCapacity() * 100 <= 100) ? _oldValue/_totalCapacity() * 100 : 100;
	        var filledX, filledY,
	            newFilledX, newFilledY,
	            offsetX, offsetY,
	            containingX, containingY,
	            actualThickness, myRectangle, rect_g;
	
	        if(orientation == 'vertical') {
	            //NEED TO FIX
	            actualThickness = _chart.width() - _chart.margins().left - _chart.margins().right - 2*_gap;
	            filledX = actualThickness;
	            filledY = _chart.effectiveHeight() * (_oldpercentFilled/100);
	            newFilledX = filledX;
	            newFilledY = _chart.effectiveHeight() * (_percentFilled/100);
	            containingX = actualThickness;
	            containingY = _chart.effectiveHeight();
	            offsetX = _gap;
	            offsetY = 100 - _percentFilled + "%";
	            _chart.root().select('svg')
	                .attr("width", _chart.width())
	                .attr("height", _chart.height());
	
	            rect_g = _g.append("g").classed("rectangle-container", true);
	            rect_g.append('rect')
	                .classed("dc-bar-gauge-background", true)
	                .attr('width', function(){ return containingX;})
	                .attr('height', function(){return containingY;})
	                .attr('x', 0)
	                .attr('y', 0);
	            if(_defaultToolTips)
	                rect_g.append("title")
	                    .text(_markerFormat(_filledValue));
	
	            rect_g.append('rect')
	                .classed("dc-bar-gauge-foreground", true)
	                .attr('width', function(){return filledX;})
	                .attr('height', function(){return filledY;})
	                .attr('x', offsetX)
	                .attr('y', offsetY);
	            if(_defaultToolTips)
	                rect_g.append("title")
	                    .text(_markerFormat(_filledValue));
	            myRectangle = _chart.selectAll('.dc-bar-gauge-foreground');
	
	            dc.transition(myRectangle, _chart.transitionDuration())
	                .attr('width', function(){return newFilledX;})
	                .attr('height', function(){return newFilledY;});
	            
	        }
	        else { //horizontal
	            actualThickness = _chart.height() - _chart.margins().top - _chart.margins().bottom - 2*_gap;
	            filledX = (_usePercentageForLengthCalc) ? _oldpercentFilled + "%" : _chart.effectiveWidth() * (_oldpercentFilled/100);
	            filledY = actualThickness;
	            newFilledX = (_usePercentageForLengthCalc) ? _percentFilled + "%" : _chart.effectiveWidth() * (_percentFilled/100) ;
	            newFilledY = filledY;
	            containingX = (_usePercentageForLengthCalc) ? "100%" : _chart.effectiveWidth();
	            containingY = actualThickness;
	            offsetX = 0;
	            offsetY = _gap;
	            _chart.root().select('svg')
	                .attr("height", _chart.height());
	                
	
	            rect_g = _g.append("g").classed("rectangle-container", true);
	            rect_g.append('rect')
	                .classed("dc-bar-gauge-background", true)
	                .attr('width', function(){ return containingX;})
	                .attr('height', function(){return containingY;})
	                .attr('x', 0)
	                .attr('y', offsetY);
	            if(_defaultToolTips)
	                rect_g.append("title")
	                    .text(_markerFormat(_filledValue));
	            rect_g.append('rect')
	                .classed("dc-bar-gauge-foreground", true)
	                .attr('width', function(){return filledX;})
	                .attr('height', function(){return filledY;})
	                .attr('x', offsetX)
	                .attr('y', offsetY);
	            if(_defaultToolTips)
	                rect_g.append("title")
	                    .text(_markerFormat(_filledValue));
	            myRectangle = _chart.selectAll('.dc-bar-gauge-foreground');
	
	            dc.transition(myRectangle, _chart.transitionDuration())
	                .attr('width', function(){return newFilledX;})
	                .attr('height', function(){return newFilledY;});
	        }
	    };
	
	    _chart._doRender = function () {
	        _oldValue = (_filledValue === undefined) ? 0 : _filledValue;
	        _filledValue = (_chart.value() >= 0) ? _chart.value() : 0;
	        _chart.root().classed('dc-bar-gauge', true);
	        _chart.root().classed('dc-chart', false);
	        _chart.root().html('');
	        _chart.resetSvg();
	
	        //Add data to the svg node
	        _chart.svg().data([{totalCapacity: _chart.totalCapacity(), filledValue: _chart.value()}])
	          .enter();
	
	        _g = _chart.svg()
	            .append('g')
	            .attr("transform", "translate(" + _chart.margins().left + "," + _chart.margins().top + ")");
	
	        if(_drawScale === true) {
	            drawAxis();
	            drawGridLines();
	            _g.append("g").classed("marker-labels-top", true);
	            placeMarkers();
	        }
	
	        initializeRectangles(_orientation);
	
	
	    };
	
	
	    _chart._doRedraw = function(){
	        return _chart._doRender();
	    };
	
	    return _chart.anchor(parent, chartGroup);
	};
	
	/**
	## Geo Bubble Overlay Chart
	
	Includes: [Base Mixin](#base-mixin)
	
	The Geo Bubble Overlay chart is a mix of the Geo Choropleth chart and the Bubble Graph chart.
	This chart puts bubbles over the centroid of each defined area. 
	
	#### dc.geoBubbleOverlayChart(parent[, chartGroup])
	Parameters:
	* parent : string | node | selection - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying
	 a dom block element such as a div; or a dom element or d3 selection.
	
	* chartGroup : string (optional) - name of the chart group this chart instance should be placed in.
	 Interaction with a chart will only trigger events and redraws within the chart's group.
	 
	 Returns:
	A newly created choropleth chart instance
	
	```js
	map = dc.geoBubbleOverlayChart('#map')
	      .width(width)
	      .height(height)
	      .dimension(countryDimension)
	      .group(countryGroup)
	      .projection(projection)
	      .setGeoJson(countriesJson.features, 'country', function (d) {
	        return d.id;
	      })
	      .radiusValueAccessor(function(d){
	        var r = Math.sqrt(d.value/1000000);
	        if (r < 0) return 0;
	        return Math.abs(r);
	      });
	```
	**/
	dc.geoBubbleOverlayChart = function (parent, chartGroup) {
	    var _chart = dc.bubbleMixin(dc.baseMixin({}));
	
	    var _elasticRadius = false;
	
	    _chart.transitionDuration(750); //default transition
	
	    var _geoPath = d3.geo.path();
	    var _projectionFlag;
	    _chart.GEO_LAYER_CLASS = 'geoLayer';
	    var _geoFill = '#ccc';
	
	    var _bubbleLabel;
	
	    var _geoJson;
	
	    var _bubbleG;
	
	    _chart.geoPath = function(){
	        return _geoPath;
	    };
	
	    /**
	        #### bubbleLocator(number)
	        Finds the centroid(like a 2d Center of Mass) or the geometric region. 
	    **/
	    var _bubbleLocator = function(d) {
	        var centroid;
	        if (d.key === "" || d.key === undefined || d.key === null || d.key === 0 || d.key === '0'){
	            centroid = [-500,-500];            
	        }else{
	            var selector = "g."+ _chart.GEO_LAYER_CLASS +" g."+ dc.utils.nameToId(d.key);
	            var region = _chart.svg().select(selector); 
	            try {
	                centroid = _geoPath.centroid(region.datum());
	            }catch(err){
	                centroid = [-500,-500]; 
	            }
	        }
	        return "translate(" + (centroid[0]) + "," + (centroid[1]) + ")";
	    };
	
	    _chart.bubbleLabel = function(_) {
	        if (!arguments.length) return _bubbleLabel;
	        _bubbleLabel = _;
	        return _chart;    
	    };
	
	    function bubbleLabelFunction(d) {
	        if(_chart.bubbleLabel() === undefined){
	            return _chart.label()(d);
	        }
	        return _chart.bubbleLabel()(d);
	    }
	
	    var labelOpacity = function (d) {
	        return (_chart.bubbleR(d) > _chart.minRadiusWithLabel()) ? 1 : 0;
	    };
	
	    _chart._doRenderLabel = function (bubbleGEnter) {
	        if (_chart.renderLabel()) {
	            var label = bubbleGEnter.select("text");
	
	            if (label.empty()) {
	                label = bubbleGEnter.append("text")
	                    .attr("text-anchor", "middle")
	                    .attr("dy", ".3em")
	                    .on("click", _chart.onClick);
	            }
	
	            label
	                .attr("opacity", 0)
	                .text(bubbleLabelFunction);
	            dc.transition(label, _chart.transitionDuration())
	                .attr("opacity", labelOpacity);
	        }
	    };
	
	    _chart.doUpdateLabels = function (bubbleGEnter) {
	        if (_chart.renderLabel()) {
	            var labels = bubbleGEnter.selectAll("text")
	                .text(bubbleLabelFunction);
	            dc.transition(labels, _chart.transitionDuration())
	                .attr("opacity", labelOpacity);
	        }
	    };
	
	    _chart.bubbleLocator = function(_) {
	        if (!arguments.length) return _bubbleLocator;
	        _bubbleLocator = _;
	        return _chart;
	    };
	
	    _chart.elasticRadius = function(_) {
	        if (!arguments.length) return _elasticRadius;
	        _elasticRadius = _;
	        return _chart;
	    };
	
	    _chart._doRender = function () {
	        plotGeo();
	        
	        _projectionFlag = false;
	        plotData();
	    };
	
	    _chart._doRedraw = function () {
	        _bubbleG = _chart.svg().selectAll("g." + _chart.BUBBLE_NODE_CLASS)
	            .data(_chart.data(), function (d) { return d.key; });
	        updateNodes(_bubbleG);
	        if(_projectionFlag) {
	            _chart.svg().selectAll("g." + geoJson().name + " path").attr("d", _geoPath);
	        }
	        _projectionFlag = false;
	        _chart.fadeDeselectedArea();
	    };
	
	    //_chart.on("postRender", plotData);
	
	    function plotData() {
	        if (_elasticRadius)
	            _chart.r().domain([_chart.rMin(), _chart.rMax()]);
	
	        _chart.r().range([_chart.MIN_RADIUS/2, (_chart.width()/10) *  _chart.maxBubbleRelativeSize()]);
	
	        _bubbleG = _chart.svg().selectAll("g." + _chart.BUBBLE_NODE_CLASS)
	            .data(_chart.data(), function (d) { return d.key; });
	
	        renderNodes(_bubbleG);
	
	        updateNodes(_bubbleG);
	
	        removeNodes(_bubbleG);
	
	        _chart.fadeDeselectedArea();
	    }
	
	    function renderNodes(bubbleG) {
	        var bubbleGEnter = bubbleG.enter().append("g");
	
	        bubbleGEnter
	            .attr("class", function(d) {
	                return _chart.BUBBLE_NODE_CLASS + ' ' + dc.utils.nameToId(d.key);
	            }) 
	            .attr("transform", _bubbleLocator)
	            .append("circle").attr("class", function(d, i) {
	                return _chart.BUBBLE_CLASS + " _" + i;
	            })
	            .on("click", _chart.onClick)
	            .attr("fill", _chart.getColor)
	            .attr("r", 0);
	        dc.transition(bubbleG, _chart.transitionDuration())
	            .selectAll("circle." + _chart.BUBBLE_CLASS)
	            .attr("r", function(d) {
	                return _chart.bubbleR(d);
	            })
	            .attr("opacity", function(d) {
	                return (_chart.bubbleR(d) > 0) ? 1 : 0;
	            });
	
	        _chart._doRenderLabel(bubbleGEnter);
	
	        _chart._doRenderTitles(bubbleGEnter);
	    }
	
	    function updateNodes(bubbleG) {
	        dc.transition(bubbleG, _chart.transitionDuration())
	            .attr("transform", _bubbleLocator)
	            .selectAll("circle." + _chart.BUBBLE_CLASS)
	            .attr("fill", _chart.getColor)
	            .attr("r", function(d) {
	                return _chart.bubbleR(d);
	            })
	            .attr("opacity", function(d) {
	                return (_chart.bubbleR(d) > 0) ? 1 : 0;
	            });
	
	        _chart.doUpdateLabels(bubbleG);
	        _chart.doUpdateTitles(bubbleG);
	    }
	
	    function removeNodes(bubbleG) {
	        bubbleG.exit().remove();
	    }
	
	    function bubbleX(d) {
	        var x = _chart.x()(_chart.keyAccessor()(d));
	        if (isNaN(x))
	            x = 0;
	        return x;
	    }
	
	    function bubbleY(d) {
	        var y = _chart.y()(_chart.valueAccessor()(d));
	        if (isNaN(y))
	            y = 0;
	        return y;
	    }
	
	    _chart.renderBrush = function(g) {
	        // override default x axis brush from parent chart
	    };
	
	    _chart.redrawBrush = function(g) {
	        // override default x axis brush from parent chart
	        _chart.fadeDeselectedArea();
	    };
	
	    function plotGeo() {
	        _chart.resetSvg();
	
	        var states = _chart.svg().append("g")
	            .attr("class", _chart.GEO_LAYER_CLASS);
	
	        var regionG = states.selectAll("g." + geoJson().name)
	            .data(geoJson().data)
	            .enter()
	            .append("g")
	            .attr("class", geoJson().name);
	
	        regionG
	            .append("path")
	            .attr("fill", _geoFill)
	            .attr("d", _geoPath);
	
	        renderRegionG();
	
	    }
	
	    function renderRegionG() {
	        _chart.svg()
	            .selectAll("g." + _chart.GEO_LAYER_CLASS + " g." + geoJson().name)
	            .attr("class", function (d) {
	                var layerNameClass = geoJson().name;
	                var regionClass = dc.utils.nameToId(geoJson().keyAccessor(d));
	                var baseClasses = layerNameClass + " " + regionClass;
	                return baseClasses;
	            });
	    }
	
	
	    function getKey(d) {
	        return geoJson().keyAccessor(d);
	    }
	
	    function geoJson() {
	        return _geoJson;
	    }
	
	    _chart.onClick = function (d) {
	        var filter = d.key;
	        dc.events.trigger(function () {
	            _chart.filter(filter);
	            dc.redrawAll(_chart.chartGroup());
	        });
	    };
	
	
	    /**
	        #### .setGeoJson(json, string, key)
	        Set the geometric map features from the Geo Json data. 
	    **/
	    _chart.setGeoJson = function (json, name, keyAccessor) {
	        _geoJson = {name: name, data: json, keyAccessor: keyAccessor};
	        return _chart;
	    };
	
	    /**
	        #### .projection(MapProjection)
	        Use a different map projection with this bubble chart. 
	    **/
	    _chart.projection = function (projection) {
	        _geoPath.projection(projection);
	        _projectionFlag = true;
	        return _chart;
	    };
	
	    _chart.geoJson = function () {
	        return _geoJson;
	    };
	
	    return _chart.anchor(parent, chartGroup);
	};
	
	 /**
	## Arc Gauge
	
	Includes: [Base Mixin](#base-mixin)
	 
	The Arc Gauge is a way to see data displacement similar to the Bar Gauge
	 but in curved speedometer-like fashion.
	
	#### dc.arcGauge(parent[, chartGroup])
	Parameters:
	* parent : string | node | selection - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying
	 a dom block element such as a div; or a dom element or d3 selection.
	
	* chartGroup : string (optional) - name of the chart group this chart instance should be placed in.
	 Interaction with a chart will only trigger events and redraws within the chart's group.
	
	 Returns:
	A newly created arc gauge chart instance
	
	```js
	arc = dc.arcGauge("#total-funding-arc")
	                                .group(totalFundingGroup)
	                                .valueAccessor(function(d){return d;})
	                                .totalCapacity(function(){
	                                  return crossfilterdata.groupAll().reduceSum(function(d){return d.columnname;}).value();
	                                });
	```
	**/
	dc.arcGauge = function (parent, chartGroup) {
	
	    var _chart = dc.baseMixin({});
	    var _filledValue,
	        _oldValue,
	        _totalCapacity,
	        _startAngle,
	        _endAngle,
	        _arc,
	        _innerRadius, _outerRadius,
	        _height, _width,
	        _innerRadiusRatio = 2/3;
	
	    //dimension is not required because this component only has one dimension
	    _chart._mandatoryAttributes (['group']);
	
	    _chart.transitionDuration(450); // good default
	
	    _chart.value = function() {
	        return _chart.data();
	    };
	
	    _chart.data(function(group) {
	        var valObj = group.value ? group.value() : group.top(1)[0];
	        return _chart.valueAccessor()(valObj);
	
	    });
	
	    /**
	        ####.width(Number)
	        Explicitly set the width of the svg container. Outer radius get computed based on half
	        of either the width or height, depending on which is smaller. 
	    **/
	    _chart.width = function(_) {
	        if(!arguments.length) return _width;
	        _width = _;
	        return _chart;
	    };
	
	    /**
	        ####.height(Number)
	        Explicitly set the height of the svg container. Outer radius get computed based on half
	        of either the width or height, depending on which is smaller. 
	    **/
	    _chart.height = function(_) {
	        if(!arguments.length) return _height;
	        _height = _;
	        return _chart;
	    };
	
	    /**
	        ####.innerRadius(Number)
	        Explicitly set the inner radius of the arc. This is not needed if height or width of the 
	        chart is set(Recommend just setting height and width). Inner radius will get computed
	        based on the _innerRadiusRatio * _outerRadius.
	    **/
	    _chart.innerRadius = function(_) {
	        if(!arguments.length) return _innerRadius;
	        _innerRadius = _;
	        return _chart;
	    };
	
	    /**
	        ####.outerRadius(Number)
	        Explicitly set the outer radius of the donut. This is not needed if height or width of the 
	        chart is set(Recommend just setting height and width). 
	    **/
	    _chart.outerRadius = function(_) {
	        if(!arguments.length) return _outerRadius;
	        _outerRadius = _;
	        return _chart;
	    };
	
	    /**
	        ####.innerRadiusRatio(Number)
	        Explicitly set the ratio of the inner radius compared to the outer radius. This allows for
	        custom thickness of the arc. Default is 2/3.
	    **/
	    _chart.innerRadiusRatio = function(_) {
	        if(!arguments.length) return _innerRadiusRatio;
	        _innerRadiusRatio = _;
	        return _chart;
	    };
	
	    /**
	        ####.startAngle(numberofdegrees)
	        Start angle of the component arc in degrees. Remember 0 and 360 are at 12 o'clock. 
	    **/
	    _chart.startAngle = function(_) {
	        if(!arguments.length) return _startAngle;
	        _startAngle = _;
	        return _chart;
	    };
	
	    /**
	        ####.endAngle(numberofdegrees)
	        End angle of the component arc in degrees. Remember 0 and 360 are at 12 o'clock. 
	    **/
	    _chart.endAngle = function(_) {
	        if(!arguments.length) return _endAngle;
	        _endAngle = _;
	        return _chart;
	    };
	
	    _chart.arc = function(_) {
	        if(!arguments.length) return _arc;
	        _arc = _;
	        return _chart;
	    };
	
	    /**
	        #### .totalCapacity(number)
	        Explicitly set total capacity. 
	    **/
	    _chart.totalCapacity = function(_) {
	        if (!arguments.length) return _totalCapacity.call(_chart);
	        _totalCapacity = d3.functor(_);
	        _chart.expireCache();
	        return _chart;
	    };
	
	    /**
	        #### .filledValue(number)
	        Explicitly set filled value. 
	        The filled value will be used to get the percentage the bar is filled which will be translated 
	        to the correct amount of degrees to fill in the arc. 
	    **/
	    _chart.filledValue = function(_) {
	        if(!arguments.length) return _filledValue;
	        _filledValue = _;
	        return _chart;
	    };
	
	    var degreesToRadians = function(deg) {
	        return deg * (Math.PI/180);
	    };
	
	    //This function is needed to do the angle transition in the arc. 
	    var arcTween = function(transition, newAngle) {
	        transition.attrTween("d", function(d) {
	            var interpolate = d3.interpolate(d.endAngle, newAngle);
	
	            return function(t) {
	                d.endAngle = interpolate(t);
	                return _arc(d);
	            };
	        });
	    };
	
	    /**
	        #### .initializeArc(ParentSelector)
	        Add the background and foreground arcs. Also do the animation of the arc filling/emptying. 
	    **/
	    var initializeArc = function(selector) {
	        //use percentages to fill the gauge
	        var _oldpercentFilled = _oldValue/_totalCapacity();
	        var _percentFilled = _filledValue/_totalCapacity();
	        var totalCapacityDegrees = Math.abs(_startAngle) + Math.abs(_endAngle);
	        var oldFillAngle = _oldpercentFilled * totalCapacityDegrees - Math.abs(_startAngle);
	        var newFillAngle = _percentFilled * totalCapacityDegrees - Math.abs(_startAngle);
	
	        selector.append("path").classed("dc-arc-gauge-background", true);
	        var background = _chart.selectAll(".dc-arc-gauge-background");
	        background.datum({endAngle: degreesToRadians(_endAngle)})
	            .attr("d", _arc);
	
	
	        selector.append("path").classed("dc-arc-gauge-foreground", true);
	        var foreground = _chart.selectAll(".dc-arc-gauge-foreground");
	        foreground.datum({endAngle: degreesToRadians(oldFillAngle)})
	            .attr("d", _arc);
	        
	
	        foreground.transition()
	            .duration(_chart.transitionDuration())
	            .call(arcTween, degreesToRadians(newFillAngle));
	
	    };
	
	    _chart._doRender = function () {
	        //set some defaults for start/end angle, and values
	        _startAngle = (_startAngle === undefined) ? -115 : _chart.startAngle();
	        _endAngle = (_endAngle === undefined) ? 115 : _chart.endAngle();
	        _outerRadius = _outerRadius || d3.min([_chart.width(), _chart.height()]) / 2;
	        _innerRadius = _innerRadius || _innerRadiusRatio * _outerRadius;
	        
	
	        _arc = d3.svg.arc()
	            .innerRadius(_innerRadius)
	            .outerRadius(_outerRadius)
	            .startAngle(degreesToRadians(_startAngle));
	        _oldValue = (_filledValue === undefined) ? 0 : _filledValue;
	        _filledValue = _chart.value();
	
	        _chart.root().classed('dc-arc-gauge', true);
	        _chart.root().classed('dc-chart', false);
	        _chart.root().html('');
	
	        var svgArc = _chart.root().append('svg')
	            .attr("width", _width)
	            .attr("height", _height)
	             .append("g");
	
	        initializeArc(svgArc);
	        _chart.select("g").attr("transform", "translate(" + _chart.outerRadius() + "," +  _chart.outerRadius() + ")");
	
	    };
	
	    _chart._doRedraw = function(){
	        return _chart._doRender();
	    };
	
	    return _chart.anchor(parent, chartGroup);
	};
	
	/**
	## Tree Map 
	
	Includes: [Base Mixin](#base-mixin), [Hierarchy Mixin](#hierarchy-mixin)
	
	
	#### dc.treeMap(parent[, chartGroup])
	Create a Tree Map chart that uses multiple dimensions in a hierarchical fashion. 
	
	Parameters:
	
	* parent : string | node | selection - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying
	 a dom block element such as a div; or a dom element or d3 selection.
	
	* chartGroup : string (optional) - name of the chart group this chart instance should be placed in.
	 Interaction with a chart will only trigger events and redraws within the chart's group.
	
	Returns:
	A newly created tree map instance
	
	```js
	//setup the dimension/column name array in the order of root -> children
	//data structure
	var dimensionColumnnamePairs = [{'dimension' : someRootDimension, 'columnName' : 'columnNamefromCSV'},
	                                {'dimension' : aChildDimension, 'columnName' : 'anotherColumnName'}];
	//which column name from the CSV contains the value for measuring the data
	var measureColumn = 'value';
	// create a row chart under #sankey element using the default global chart group
	var chart = dc.rowChart("#treeMap")
					.topBarHeight(45)
					.height(400)
	                .levels(dimensionColumnnamePairs)
	                .measureColumn(measureColumn);
	
	//unlike other charts you must filter manually by passing in the column name, and filter value like this
	chart.filter('columnNamefromCSV', 'singlefiltervalue');
	```
	
	**/
	dc.treeMap = function (parent, chartGroup) {
		var _chart = dc.colorMixin(dc.hierarchyMixin(dc.baseMixin({})));
		var _treeMapd3, _treeMapDataObject, _currentRoot, _currentXscale, _currentYscale,
			_rootName = "root",
			_zoomLevel = 0, _colors = d3.scale.category20c(),
			_totalNegativeValue, _showNegativeTotal = false,
			_totalNegFormatter = function(d){return d;},
	        _noDataMessage = "<span class=\"error\">No data for the selected filters</span>",
	        _negativeDataMessage = "<span class=\"error\">All data found was negative values.</span>";
	
		var _margin = {top: 0, right: 0, bottom: 0, left: 0},
			_width = 960, _height = 500 - _margin.top - _margin.bottom,
	        _crumbTrailX = 6, _crumbTrailY = 6, _crumbTrailHeight = ".75em",
			_transitioning=false;
	    var _labelFuncsArray = [function(d) {return d.name;}];
	    var _titleBarFunc = function(d) {return d.parent ? _titleBarFunc(d.parent) + "." + d.name : d.name;};
		var _toolTipFunc = function(d) {return d.name;};
		var _onLevelChangeFunc = function() {};
	
	    _chart.transitionDuration(500); // good default
	
	    dc.override(_chart, "filterAll", function() {
	    	_chart._filterAll();
	    	_zoomLevel = 0;
	    	_currentRoot = _treeMapDataObject;
	
	    });
	
	    /**
	    #### .crumbTrailX(Number)
	    Set the X position of the crumb trail text within the top bar.
	    **/
	    _chart.crumbTrailX = function(_) {
	        if(!arguments.length) return _crumbTrailX;
	        _crumbTrailX = _;
	        return _chart;
	    };
	
	    /**
	    #### .crumbTrailY(Number)
	    Set the Y position of the crumb trail text within the top bar.
	    **/
	    _chart.crumbTrailY = function(_) {
	        if(!arguments.length) return _crumbTrailY;
	        _crumbTrailY = _;
	        return _chart;
	    };
	
	    /**
	    #### .crumbTrailHeight(String)
	    Set the font height of the crumb trail text within the top bar.
	    Example: .crumbTrailHeight(".75em")
	    **/
	    _chart.crumbTrailHeight = function(_) {
	        if(!arguments.length) return _crumbTrailHeight;
	        _crumbTrailHeight = _;
	        return _chart;
	    };
	
	    /**
		#### .topBarHeight(Number)
		Set the height of the bar at the top of the treemap.
	    **/
	    _chart.topBarHeight = function(_) {
	        if(!arguments.length) return _margin.top;
	        _margin.top = _;
	        return _chart;
	    };
	
	    /**
		#### .width(Number)
		Set the width explicitly as it will be used for calculating the node rectangle sizes. 
	    **/
	    _chart.width = function(_) {
	        if(!arguments.length) return _width;
	        _width = _;
	        return _chart;
	    };
	
		/**
		#### .height(Number)
		Set the height explicitly as it will be used for calculating the node rectangle sizes. 
	    **/
	    _chart.height = function(_) {
	        if(!arguments.length) return _height;
	        _height = _;
	        return _chart;
	    };
	
	    _chart.currentRoot = function(_) {
	        if(!arguments.length) return _currentRoot;
	        _currentRoot = _;
	        return _chart;
	    };
	
	    _chart.currentXscale = function(_) {
	        if(!arguments.length) return _currentXscale;
	        _currentXscale = _;
	        return _chart;
	    };
	
	    _chart.currentYscale = function(_) {
	        if(!arguments.length) return _currentYscale;
	        _currentYscale = _;
	        return _chart;  
	    };
	
	    /**
	    #### .colors(array)
	    Set the classnames of rectangles for use with css colors.
	    **/
	    _chart.colors = function(_) {
	    	if(!arguments.length) return _colors;
	        _colors = _;
	        return _chart;
	    };
	
	    /**
		#### .rootName(String)
		The root name is the displayed as the root parent text in the bar at the top of the treemap.
	    **/
	    _chart.rootName = function(_) {
			if(!arguments.length) return _rootName;
	        _rootName = _;
	        return _chart;
	    };
	
	    /**
		#### .noDataMessage(function)
		Message to display if no data is found.  
	    **/
	    _chart.noDataMessage = function(_) {
	    	if(!arguments.length) return _noDataMessage;
	    	_noDataMessage = _;
	    	return _chart;
	    };
	
	    /**
		#### .negativeDataMessage(function)
		Message to display if all data values were negative.
	    **/
	    _chart.negativeDataMessage = function(_) {
	    	if(!arguments.length) return _negativeDataMessage;
	    	_negativeDataMessage = _;
	    	return _chart;
	    };
	
	    /**
		#### .showNegativeTotal(boolean)
		Pass a boolean flag for whether or not to show the negative data number. Defaults to false.
	    **/
	    _chart.showNegativeTotal = function(_) {
	    	if(!arguments.length) return _showNegativeTotal;
	    	_showNegativeTotal = _;
	    	return _chart;
	    };
	
	        /**
		#### .totalNegFormatter(function)
		Pass a function to format the total negative value. 
	    **/
	    _chart.totalNegFormatter = function(_) {
	    	if(!arguments.length) return _totalNegFormatter;
	    	_totalNegFormatter = _;
	    	return _chart;
	    };
	
	    /**
	    #### .label(function)
	    Pass in a custom label function. These labels are what appear as text in the rectangles.
	    **/
	    _chart.labelFunctions = function(_) {
			if(!arguments.length) return _labelFuncsArray;
			_labelFuncsArray = _;
	        return _chart;
	    };
	
	    /**
		#### .toolTip(function)
		Pass in a custom tool tip function. These tool tips show text for the rectangles on hover.
	    **/
	    _chart.toolTip = function(_) {
	        if(!arguments.length) return _toolTipFunc;
			_toolTipFunc = _;
	        return _chart;
	    };
	
	    /**
		#### .titleBarCaption(function)
		Pass in custom title bar caption function. The title bar text is shown in the bar at the top.
	    **/
	    _chart.titleBarCaption = function(_) {
	        if(!arguments.length) return _titleBarFunc;
			_titleBarFunc = _;
	        return _chart;
	    };
	
	    /**
		#### .onLevelChange(function)
		Pass in callback to hook into the level change event. Level change happens when the user clicks on a rectangle to dive one level deeper, or the top bar to dive one level up. 
	    **/
	    _chart.onLevelChange = function(_) {
	    	if(!arguments.length) return _onLevelChangeFunc;
	    	_onLevelChangeFunc = _;
	    	return _chart;
	    };
	
	    _chart.initData = function () {
	        if(_chart.levels() && _chart.measureColumn()) {
	            _treeMapDataObject = crossfilterToTreeMapData(_chart.levels(), _chart.measureColumn());
	            if(_treeMapDataObject === null) {
	            	return null;
	            }
	            if(_treeMapDataObject === -1)
	            	return -1;
	        }
	        else throw "Must provide dimension column array and measureColumn";
	        return _chart;
	    };
	
	    _chart.data(function() {
	    	return [_treeMapDataObject];
	    });
	
	    function onClick(d, drillDown) {
	        //if click event is blocked, then the element is being dragged so don't filter
	        /*if(d3.event.defaultPrevented) 
	            return;
	        else 
	        */
	        _chart.onClick(d, drillDown);
	    }
	
	    _chart.onClick = function (d, drillDown) {
	
			    var filter = d.name;
		        var dimensionTofilter = _chart.lookupDimension(d.columnName);
	
	        	//this will add filter for drill down, and remove filter for going up
	            _chart.filter(d.columnName, filter);
	
	            //if going up a level remove filters from lower level
	            if(!drillDown) {
	                _chart.filterAllForLevel(d._children[0].columnName);
	            }
	
	            //Manually redraw all other charts so the tree map can have the hierarchical behavior
	            //with the multi dimensions
	            var charts = dc.chartRegistry.list(_chart.chartGroup());
	            for (var i = 0; i < charts.length; ++i) {
					if(charts[i] !== _chart) {
						charts[i].redraw();
					}
				}
				if(dc._renderlet !== null)
					dc._renderlet(group);
	    };
	
	    function isSelectedNode(d) {
			return _chart.hasFilter(d.columnName, d.name);
	    }
	
	    _chart.zoomLevel = function(d) {
			if(!arguments.length) return _zoomLevel;
	        _zoomLevel = _;
	        return _chart;
	    };
	
	    _chart._doRender = function() {
			var checkForData = _chart.initData();
			
			_chart.root().classed('dc-tree-map', true);
			_chart.root().classed('dc-chart', false);
			_chart.root().select('.treemap-no-data').html('');
	        _chart.root().select('.treemap-negative-data').html('');
			_chart.select('svg').remove();
			_chart.root().attr("style", "");
	
	        if(checkForData === null) {
	            _chart.root().select(".treemap-no-data")
	                .html(_noDataMessage);
	
	            return checkForData;
	        }
	        else if(checkForData == -1) {
	            _chart.root().select(".treemap-negative-data")
	                .html(_negativeDataMessage);
	
	            return checkForData;
	        }
	        
	        _chart.root().select(".treemap-negative-totalValue")
	            	.html(_totalNegFormatter(_totalNegativeValue));
	        var negValueElement = _chart.root().select(".treemap-negative-totalValue-message").remove();
	
			_chart.root()
				.style("width", _width + "px")
				.style("height", _height + _margin.top + _margin.bottom +  "px");
	
			var x = d3.scale.linear()
			.domain([0, _width])
			.range([0, _width]);
	
			var y = d3.scale.linear()
				.domain([0, _height])
				.range([0, _height]);
	
			_currentXscale = x;
			_currentYscale = y;
	
			_treeMapd3 = d3.layout.treemap()
				.children(function(d, depth) { return depth ? null : d._children; })
				.sort(function(a, b) { return a.value - b.value; })
				.ratio(_height / _width * 0.5 * (1 + Math.sqrt(5)))
				.round(false);
	
			var svg = d3.select(parent).append("svg")
				.attr("width", _width + _margin.left + _margin.right)
				.attr("height", _height + _margin.bottom + _margin.top)
				.style("margin-left", -_margin.left + "px")
				.style("margin.right", -_margin.right + "px")
	          .append("g")
				.attr("transform", "translate(" + _margin.left + "," + _margin.top + ")")
				.style("shape-rendering", "crispEdges");
	
			if(_showNegativeTotal && _totalNegativeValue < 0) {
				negValueElement.attr("style", "");
				d3.select(parent).append(function() {return negValueElement.node();});
			}
			else if(_showNegativeTotal) {
				negValueElement.style("display", "none");
				d3.select(parent).append(function() {return negValueElement.node();});
			}
	
			var crumbTrail = svg.append("g")
				.attr("class", "crumbTrail");
	
			crumbTrail.append("rect")
				.attr("y", -_margin.top)
				.attr("width", _width)
				.attr("height", _margin.top);
	
			crumbTrail.append("text")
				.attr("x", _crumbTrailX)
				.attr("y", _crumbTrailY - _margin.top)
				.attr("dy", _crumbTrailHeight);
	
	        _currentRoot = _treeMapDataObject.zoomLevelDrill(_zoomLevel);
	
	        
			initialize(_treeMapDataObject);
			accumulate(_treeMapDataObject);
			layout(_treeMapDataObject);
	
			// var checkForZero = (_chart.currentRoot().value <= 0);
	  //       if(checkForZero) {
			// 	_treeMapDataObject = {name : _negativeDataMessage, columnName : "root", value: "Negative Data",
			// 	children : [], _children: []};
			// 	_currentRoot = _treeMapDataObject;
	
			// 	_negativeDataMessage(_chart);
			// 	return checkForZero;
			// }
	
			display(_currentRoot);
	
			function initialize(root) {
				root.x = root.y = 0;
				root.dx = _width;
				root.dy = _height;
				root.depth = 0;
			}
	
			// Aggregate the values for internal nodes. This is normally done by the
			// treemap layout, but not here because of our custom implementation.
			// We also take a snapshot of the original children (_children) to avoid
			// the children being overwritten when when layout is computed.
			function accumulate(d) {
				return (d._children = d.children) ?
				d.value = d.children.reduce(function(p, v) { return p + accumulate(v); }, 0)
				: d.value;
			}
	
			// Compute the treemap layout recursively such that each group of siblings
			// uses the same size (1×1) rather than the dimensions of the parent cell.
			// This optimizes the layout for the current zoom state. Note that a wrapper
			// object is created for the parent node for each group of siblings so that
			// the parent’s dimensions are not discarded as we recurse. Since each group
			// of sibling was laid out in 1×1, we must rescale to fit using absolute
			// coordinates. This lets us use a viewport to zoom.
			function layout(d) {
				if (d._children) {
					_treeMapd3.nodes({_children: d._children});
	
					d._children.forEach(function(c) {
						c.x = d.x + c.x * d.dx;
						c.y = d.y + c.y * d.dy;
						c.dx *= d.dx;
						c.dy *= d.dy;
						c.parent = d;
						layout(c);
					});
				}
			}
	
			function display(currentRoot) {
				_currentRoot = currentRoot;
	
				crumbTrail
					.datum(currentRoot.parent)
	              .on("click", function(d) {
		              	if (!_transitioning){
			              	
		              		if(_zoomLevel > 0){
	
			              		 _zoomLevel --;
								
								if (d) {
			                        // "un-filter" as we drill-up
									onClick(currentRoot, false); 
								}
			                    transition(d);
	
			                    //second redraw to protect against the following case:
			                    //1.) user does a redraw while there are filters on the chart
		              			//2.) the redraw cause creation of treemap data with the filtered data
		              			//3.) adding this second redraw lets us create the treemap data again 
		              			//4.) but at the point where the data is all there(unfiltered)  again. 
			                    _chart.redraw();
			                }
		              	}
					})
					.select("text")
					.text(_titleBarFunc(currentRoot));
	
				var depthContainer = svg.insert("g", ".crumbTrail")
					.datum(currentRoot)
					.attr("class", "depth");
	
				//container for each main parent box
				//this box will then contain children outlines
				//need clip path to hide excess text on smaller boxes
				var depthContainerChildren = depthContainer.selectAll("g")
					.data(currentRoot._children)
	              .enter().append("g")
	                .attr("clip-path", function(d) {return "url(#" + dc.utils.nameToId(d.name) + "-clip-path)";});
	
				depthContainerChildren.filter(function(d) { return d._children || d; })
					.classed("children", true)
					.classed("deselected", function(d) {
						if(!d._children) {
							return (_chart.hasFilter()) ? !isSelectedNode(d) : false;
						}
					})
					.classed("selected", function(d) {
						if(!d._children) {
							return (_chart.hasFilter()) ? isSelectedNode(d) : false;
						}
					})
					.on("click",function(d) {
						var that = this;
							if (!_transitioning){
								if(d._children) {
									_zoomLevel ++;
									transition(d); 
									onClick(d, true);
								}
								else {
									
									onClick(d, true);
									if(_chart.hasFilter() && isSelectedNode(d)) {
										//note: could not seem to get 'this' value in test spec
										d3.select(that).classed("selected", true);
										d3.select(that).classed("deselected", false);
									}
									else if(!_chart.hasFilter() || !isSelectedNode(d)) {
										d3.select(that).classed("deselected", true);
										d3.select(that).classed("selected", false);
									}
								}
							}
					});
	
				depthContainerChildren.selectAll(".child")
					.data(function(d) { return d._children || [d]; })
	              .enter().append("rect")
					.attr("class", "child")
					.classed("deselected", function(d) {
						if(!d._children) {
							return (_chart.hasFilter()) ? !isSelectedNode(d) : false;
						}
						else return false;
					})
					.classed("selected", function(d) {
						var isOnlyChild = (_zoomLevel === (_chart.levels().length -1));
	
						if(!d._children && !isOnlyChild) {
							return (_chart.hasFilter()) ? isSelectedNode(d) : false;
						}
						else return false; 
					})
					.call(rect);
	
				depthContainerChildren.append("defs").append("clipPath")
					.attr("id", function(d) {return dc.utils.nameToId(d.name) + "-clip-path";})
					.append("rect")
					.attr("class", "clip-path-parent")
					.call(rect);
					
				depthContainerChildren.append("rect")
					.attr("class", function(d) {return "parent color_" + _colors(d.name.replace(/ .*/, ""));})
					.call(rect)
	              .append("title")
					.text(_toolTipFunc);
	
	            _labelFuncsArray.forEach(function(func, index){
	                depthContainerChildren[0].forEach(function(textElement) {
	                    func(d3.select(textElement).append("text").classed("label_" + index + " parent-label", true), {x: _currentXscale, y: _currentYscale});
	                });
	            });
				
	            // transition(currentRoot);
	
				//Do the zoom animation, and set each parent block 
				//to take up as much space as it can proportionately
				function transition(currentRoot) {
					if (_transitioning || !currentRoot) return;
					_transitioning = true;
	
	
					//call display again to transition to the next level
					var depthContainerChildren = display(currentRoot),
						parentTransition = depthContainer.transition().duration(_chart.transitionDuration()),
						childTransition = depthContainerChildren.transition().duration(_chart.transitionDuration());
	
					// Update the domain only after entering new elements.
					x.domain([currentRoot.x, currentRoot.x + currentRoot.dx]);
					y.domain([currentRoot.y, currentRoot.y + currentRoot.dy]);
					_currentXscale = x;
					_currentYscale = y;
	
					// Enable anti-aliasing during the transition.
					svg.style("shape-rendering", null);
	
					// Draw child nodes on top of parent nodes.
					svg.selectAll(".depth").sort(function(a, b) {
						return a.depth - b.depth; 
					});
					
					// Start children opacity at 0, then fade in.
					depthContainerChildren.selectAll("text").style("fill-opacity", 0);
	
					// Transition to the new view.
					//parent elements are dissappearing(0 opacity), while child elements are appearing(1 opacity)
	                _labelFuncsArray.forEach(function(func, index) {
	                    func(parentTransition.selectAll("text.label_" + index), {x: _currentXscale, y: _currentYscale}, 0);
	                    func(childTransition.selectAll("text.label_" + index), {x: _currentXscale, y: _currentYscale}, 1);
	                });
	
	                parentTransition.selectAll("rect").call(rect);
					childTransition.selectAll("rect").call(rect);
	
					// Remove the old node when the transition is finished.
					parentTransition.remove().each("end", function() {
						svg.style("shape-rendering", "crispEdges");
						_transitioning = false;
					});
	
					//Hook for custom functionality on level change
	            	_onLevelChangeFunc();
				}
	
				return depthContainerChildren;
			}
	
			function text(textLabel) {
				textLabel.attr("x", function(d) { return x(d.x) + 6; })
					.attr("y", function(d) { return y(d.y) + 6; });
			}
	
			function rect(nodeRect) {
				var clipPathMargin = 10;
	
				nodeRect
					.attr("x", function(d) { 
						return x(d.x); 
					})
					.attr("y", function(d) { return y(d.y); })
					.attr("width", function(d) { 
						var width = x(d.x + d.dx) - x(d.x);
						if(width < 10) width = 10;
						return width;
					})
					.attr("height", function(d) {
						var height = y(d.y + d.dy) - y(d.y);
						if(height < 12) height = 12;
						return height;
					});
	
	
				//Need to add clip path margin so text doesnt go all the way to the edge. 
				// nodeRect.selectAll("clip-path-parent")
				// 	.attr("x", function(d) { return x(d.x + clipPathMargin); })
				// 	.attr("y", function(d) { return y(d.y + clipPathMargin); })
				// 	.attr("width", function(d) { return x(d.x + d.dx) - x(d.x) - x(clipPathMargin*2); })
				// 	.attr("height", function(d) { return y(d.y + d.dy) - y(d.y) - y(clipPathMargin*2); });
	
			}
		};
	
		_chart._doRedraw = function() {
			return _chart._doRender();
		};
	
		return _chart.anchor(parent, chartGroup);
	
		//#### .crossfilterToTreeMapData([{dimension : someDim, columnName : "colName"}...], String)
		// Return the tree data object
		//Translate crossfilter multi dimensional tabular data into hierarchical tree data
		function crossfilterToTreeMapData(levelsData, measureColumn) {
			var _tree = {name : _rootName, columnName : "root",
						children : [], _children: []};
			_totalNegativeValue = 0;
	
			//loop over the rows, and then by column to populate the tree data
			var rows = levelsData[0].dimension.top(Infinity);
	
			var noData = false, allNegativeData = true;
			if(!rows.length) {
			    _tree = {name : "No Data", columnName : "root", value: "No Data",
				children : []};
				noData = true;
			}
			else {
				rows.forEach(function(row) {
					levelsData.forEach(function(level, columnIndex) {
						var columnName = level.columnName;
						if(row[measureColumn] > 0) {
							allNegativeData = false;
							insertNode(row, columnName, columnIndex);
						}
						else {
							_totalNegativeValue += Number(row[measureColumn]);
						}
					});
				});
			}
			
	
			function insertNode(row, columnName, columnIndex) {
				if(!nodesContains(row, columnName, columnIndex)) {
					pushChild(row, columnName, columnIndex);
				}
				else if(columnIndex === (levelsData.length - 1)) {
					//node already existed and this is a leaf so it has a value
					addLeafValue(row, columnName, columnIndex);
				}
			}
	
			function nodesContains(row, columnName, columnIndex) {
				//traverse through index level of children to get the children we want
				var nodeChildren = findNodeChildrenDrill(row, columnName, columnIndex).children;
	
				return nodeChildren.some(function(childObj) {
					return childObj.name === row[columnName];
				});
			}
	
			//Note: negative values get set to zero.
			function pushChild(row, columnName, columnIndex) {
				var nodeChildren = findNodeChildrenDrill(row, columnName, columnIndex).children;
				var newNode = {};
				newNode.name = row[columnName];
				newNode.columnName = columnName;
				if(columnIndex === (levelsData.length - 1)) {
					var startValue = Number(row[measureColumn]);
					newNode.value = startValue;
				}
				else newNode.children = [];
				nodeChildren.push(newNode);
			}
	
			function addLeafValue(row, columnName, columnIndex) {
				var nodeChildren = findNodeChildrenDrill(row, columnName, columnIndex).children;
				var existingNode; 
				nodeChildren.forEach(function(childObj) {
					if(childObj.name === row[columnName]) {
						existingNode = childObj;
					}
				});
				existingNode.value = Number(existingNode.value) + Number(row[measureColumn]);
			}
	
			/*
			.findNodeChildrenDrill(Object, String, Number)
			Drill down until at the correct child object, this function is used internally
			*/
			function findNodeChildrenDrill(row, columnName, columnIndex) {
				var childNode = _tree; //array of child objects
				for (var i = 0; i < columnIndex; i++) {
					childNode.children.some(function(childObj) {
						var fieldValue = row[levelsData[i].columnName];
						if(childObj.name === fieldValue) {
							childNode = childObj;
						}
					});
				}
	
				return childNode;
			}
	
			/*
			.zoomLevelDrill(Number)
			Drill down to the child node by zoom level, this function is used externally
			*/
			_tree.zoomLevelDrill = function(zoomLevel) {
				var childNode = _tree;
	
				for(var i = 0; i < (zoomLevel); i++) {
					//children accessor changed to '_children' because 'children' gets overwritten 
					//by the treemap layout when reinitializing from the zoomed state
					childNode.children.some(function(childObj) { 
						var value = getFilterValue(i);
						if(childObj.name === value) {
							childNode = childObj;
						}
					});	
				}
	
				return childNode;
			};
	
			function getFilterValue(zoomLevel) {
				var dimension = levelsData[zoomLevel].dimension;
				var columnName = levelsData[zoomLevel].columnName;
				return dimension.top(Infinity)[0][columnName]; //assuming that each level of the tree map only has one value in the filter
			}
	
			if(noData === true)
				return null;
			if(allNegativeData === true)
				return -1;
			return _tree;
		}
	
	};
	d3.sankey = function() {
	  var sankey = {},
	      nodeWidth = 24,
	      nodePadding = 8,
	      size = [1, 1],
	      nodes = [],
	      links = [];
	
	  sankey.nodeWidth = function(_) {
	    if (!arguments.length) return nodeWidth;
	    nodeWidth = +_;
	    return sankey;
	  };
	
	  sankey.nodePadding = function(_) {
	    if (!arguments.length) return nodePadding;
	    nodePadding = +_;
	    return sankey;
	  };
	
	  sankey.nodes = function(_) {
	    if (!arguments.length) return nodes;
	    nodes = _;
	    return sankey;
	  };
	
	  sankey.links = function(_) {
	    if (!arguments.length) return links;
	    links = _;
	    return sankey;
	  };
	
	  sankey.size = function(_) {
	    if (!arguments.length) return size;
	    size = _;
	    return sankey;
	  };
	
	  sankey.layout = function(iterations) {
	    computeNodeLinks();
	    computeNodeValues();
	    computeNodeBreadths();
	    computeNodeDepths(iterations);
	    computeLinkDepths();
	    return sankey;
	  };
	
	  sankey.relayout = function() {
	    computeLinkDepths();
	    return sankey;
	  };
	
	  sankey.link = function() {
	    var curvature = .5;
	
	    function link(d) {
	      var x0 = d.source.x + d.source.dx,
	          x1 = d.target.x,
	          xi = d3.interpolateNumber(x0, x1),
	          x2 = xi(curvature),
	          x3 = xi(1 - curvature),
	          y0 = d.source.y + d.sy + d.dy / 2,
	          y1 = d.target.y + d.ty + d.dy / 2;
	      return "M" + x0 + "," + y0
	           + "C" + x2 + "," + y0
	           + " " + x3 + "," + y1
	           + " " + x1 + "," + y1;
	    }
	
	    link.curvature = function(_) {
	      if (!arguments.length) return curvature;
	      curvature = +_;
	      return link;
	    };
	
	    return link;
	  };
	
	  // Populate the sourceLinks and targetLinks for each node.
	  // Also, if the source and target are not objects, assume they are indices.
	  function computeNodeLinks() {
	    nodes.forEach(function(node) {
	      node.sourceLinks = [];
	      node.targetLinks = [];
	    });
	    links.forEach(function(link) {
	      var source = link.source,
	          target = link.target;
	      if (typeof source === "number") source = link.source = nodes[link.source];
	      if (typeof target === "number") target = link.target = nodes[link.target];
	      source.sourceLinks.push(link);
	      target.targetLinks.push(link);
	    });
	  }
	
	  // Compute the value (size) of each node by summing the associated links.
	  function computeNodeValues() {
	    nodes.forEach(function(node) {
	      node.value = Math.max(
	        d3.sum(node.sourceLinks, value),
	        d3.sum(node.targetLinks, value)
	      );
	    });
	  }
	
	  // Iteratively assign the breadth (x-position) for each node.
	  // Nodes are assigned the maximum breadth of incoming neighbors plus one;
	  // nodes with no incoming links are assigned breadth zero, while
	  // nodes with no outgoing links are assigned the maximum breadth.
	  function computeNodeBreadths() {
	    var remainingNodes = nodes,
	        nextNodes,
	        x = 0;
	
	    while (remainingNodes.length) {
	      nextNodes = [];
	      remainingNodes.forEach(function(node) {
	        node.x = x;
	        node.dx = nodeWidth;
	        node.sourceLinks.forEach(function(link) {
	          if (nextNodes.indexOf(link.target) < 0) {
	            nextNodes.push(link.target);
	          }
	        });
	      });
	      remainingNodes = nextNodes;
	      ++x;
	    }
	
	    //
	    moveSinksRight(x);
	    scaleNodeBreadths((size[0] - nodeWidth) / (x - 1));
	  }
	
	  function moveSourcesRight() {
	    nodes.forEach(function(node) {
	      if (!node.targetLinks.length) {
	        node.x = d3.min(node.sourceLinks, function(d) { return d.target.x; }) - 1;
	      }
	    });
	  }
	
	  function moveSinksRight(x) {
	    nodes.forEach(function(node) {
	      if (!node.sourceLinks.length) {
	        node.x = x - 1;
	      }
	    });
	  }
	
	  function scaleNodeBreadths(kx) {
	    nodes.forEach(function(node) {
	      node.x *= kx;
	    });
	  }
	
	  function computeNodeDepths(iterations) {
	    var nodesByBreadth = d3.nest()
	        .key(function(d) { return d.x; })
	        .sortKeys(d3.ascending)
	        .entries(nodes)
	        .map(function(d) { return d.values; });
	
	    //
	    initializeNodeDepth();
	    resolveCollisions();
	    for (var alpha = 1; iterations > 0; --iterations) {
	      relaxRightToLeft(alpha *= .99);
	      resolveCollisions();
	      relaxLeftToRight(alpha);
	      resolveCollisions();
	    }
	
	    function initializeNodeDepth() {
	      var ky = d3.min(nodesByBreadth, function(nodes) {
	        return (size[1] - (nodes.length - 1) * nodePadding) / d3.sum(nodes, value);
	      });
	
	      nodesByBreadth.forEach(function(nodes) {
	        nodes.forEach(function(node, i) {
	          node.y = i;
	          node.dy = node.value * ky;
	        });
	      });
	
	      links.forEach(function(link) {
	        link.dy = link.value * ky;
	      });
	    }
	
	    function relaxLeftToRight(alpha) {
	      nodesByBreadth.forEach(function(nodes, breadth) {
	        nodes.forEach(function(node) {
	          if (node.targetLinks.length) {
	            var y = d3.sum(node.targetLinks, weightedSource) / d3.sum(node.targetLinks, value);
	            node.y += (y - center(node)) * alpha;
	          }
	        });
	      });
	
	      function weightedSource(link) {
	        return center(link.source) * link.value;
	      }
	    }
	
	    function relaxRightToLeft(alpha) {
	      nodesByBreadth.slice().reverse().forEach(function(nodes) {
	        nodes.forEach(function(node) {
	          if (node.sourceLinks.length) {
	            var y = d3.sum(node.sourceLinks, weightedTarget) / d3.sum(node.sourceLinks, value);
	            node.y += (y - center(node)) * alpha;
	          }
	        });
	      });
	
	      function weightedTarget(link) {
	        return center(link.target) * link.value;
	      }
	    }
	
	    function resolveCollisions() {
	      nodesByBreadth.forEach(function(nodes) {
	        var node,
	            dy,
	            y0 = 0,
	            n = nodes.length,
	            i;
	
	        // Push any overlapping nodes down.
	        nodes.sort(ascendingDepth);
	        for (i = 0; i < n; ++i) {
	          node = nodes[i];
	          dy = y0 - node.y;
	          if (dy > 0) node.y += dy;
	          y0 = node.y + node.dy + nodePadding;
	        }
	
	        // If the bottommost node goes outside the bounds, push it back up.
	        dy = y0 - nodePadding - size[1];
	        if (dy > 0) {
	          y0 = node.y -= dy;
	
	          // Push any overlapping nodes back up.
	          for (i = n - 2; i >= 0; --i) {
	            node = nodes[i];
	            dy = node.y + node.dy + nodePadding - y0;
	            if (dy > 0) node.y -= dy;
	            y0 = node.y;
	          }
	        }
	      });
	    }
	
	    function ascendingDepth(a, b) {
	      return a.y - b.y;
	    }
	  }
	
	  function computeLinkDepths() {
	    nodes.forEach(function(node) {
	      node.sourceLinks.sort(ascendingTargetDepth);
	      node.targetLinks.sort(ascendingSourceDepth);
	    });
	    nodes.forEach(function(node) {
	      var sy = 0, ty = 0;
	      node.sourceLinks.forEach(function(link) {
	        link.sy = sy;
	        sy += link.dy;
	      });
	      node.targetLinks.forEach(function(link) {
	        link.ty = ty;
	        ty += link.dy;
	      });
	    });
	
	    function ascendingSourceDepth(a, b) {
	      return a.source.y - b.source.y;
	    }
	
	    function ascendingTargetDepth(a, b) {
	      return a.target.y - b.target.y;
	    }
	  }
	
	  function center(node) {
	    return node.y + node.dy / 2;
	  }
	
	  function value(link) {
	    return link.value;
	  }
	
	  return sankey;
	};
	
	/**
	## Sankey
	
	Includes: [Base Mixin](#base-mixin) [Hierarchy Mixin](#hierarchy-mixin)
	
	
	#### dc.sankey(parent[, chartGroup])
	Create a Sankey chart that shows how dimensions flow into other dimensions in a hierarchichal fashion.
	
	Parameters:
	
	* parent : string | node | selection - any valid
	 [d3 single selector](https://github.com/mbostock/d3/wiki/Selections#selecting-elements) specifying
	 a dom block element such as a div; or a dom element or d3 selection.
	
	* chartGroup : string (optional) - name of the chart group this chart instance should be placed in.
	 Interaction with a chart will only trigger events and redraws within the chart's group.
	
	Returns:
	A newly created sankey instance
	
	```js
	//setup the dimension hierarchy we call 'levels'
	//the levels data structure specifies dimension, and its corresponding columnName from the csv data
	var levels = [{'dimension' : someDimension, 'columnName' : 'columnNamefromCSV'},
	                                {'dimension' : anotherDimension, 'columnName' : 'anotherColumnName'}];
	//set the column used as your measure
	var measureColumn = 'value';
	
	// create a sankey
	var chart = dc.sankey("#sankey")
	                .width(600)
	                .height(400)
	                .levels(levels)
	                .measureColumn(measureColumn);
	
	//filter manually by passing in the column name, and filter value like this
	chart.filter('columnNamefromCSV', 'singlefiltervalue');
	```
	
	#### Add Column Labels
	Add labels that go on top of each sankey column. These column labels will also show the filter of that column, and can remove that filter by clicking that filter label.
	You must use your own styles to position these labels, but the onclick handler that controls the filters will be automatically applied to the label text.
	```html
	<!-- Add span elements with the classname that corresponds with the column name in the following format: column_YOURCOLUMNNAME If your dimensions were based off of "country", "state", and "region" columns, they would look like the following -->
	<div id="sankey">
	    <span class="column_country"></span>
	    <span class="column_state"></span>
	    <span class="column_region"></span>
	
	</div>
	```
	
	**/
	dc.sankey = function(parent, chartGroup) {
	    var _chart = dc.hierarchyMixin(dc.baseMixin({}));
	    var _sankey, _sankeyDataObject, _nodeWidth = 15;
	    var _margin = {top: 1, right: 1, bottom: 6, left: 1}, //margins needed so sankey edges aren't cut off
	        _width = 960 - _margin.left - _margin.right,
	        _height = 500 - _margin.top - _margin.bottom,
	        _totalNegativeValue, _showNegativeTotal = false,
	        _totalNegFormatter = function(d){return d;},
	        _noDataMessage = "<span class=\"error\">No data for the selected filters</span>",
	        _negativeDataMessage = "<span class=\"error\">All data found was negative values.</span>";
	
	    var _formatNumber = d3.format(",.0f"),
	        _format = function(d) { return _formatNumber(d); },
	        _colors = d3.scale.category20();
	    var _linkToolTipFunc = function(d) { return d.source.name + " → " + d.target.name + "\n" + _format(d.value); };
	    var _nodeToolTipFunc = function(d) { return d.name + "\n" + _format(d.value); };    
	    var _labelFunc = function(d) { return d.name; };
	
	    /**
	    #### .label(function)
	    Specify the callback to display text that goes next to nodes(rectangles). 
	    **/
	    _chart.label = function(_) {
	        if(!arguments.length) return _labelFunc;
	        _labelFunc = _;
	        return _chart;
	    };
	
	    /**
	    #### .noDataMessage(function)
	    Specify the callback to display the message when no data is found.
	    **/
	    _chart.noDataMessage = function(_) {
	        if(!arguments.length) return _noDataMessage;
	        _noDataMessage = _;
	        return _chart;
	    };
	
	    /**
	    #### .negativeDataMessage(function)
	    Specify the callback to display the message when all the data values in the chart are negative numbers. 
	    **/
	    _chart.negativeDataMessage = function(_) {
	        if(!arguments.length) return _negativeDataMessage;
	        _negativeDataMessage = _;
	        return _chart;
	    };
	
	    /**
	    #### .showNegativeTotal(boolean)
	    Pass a boolean flag for whether or not to show the negative data number. Defaults to false.
	    **/
	    _chart.showNegativeTotal = function(_) {
	        if(!arguments.length) return _showNegativeTotal;
	        _showNegativeTotal = _;
	        return _chart;
	    };
	
	    /**
	    #### .totalNegFormatter(function)
	    Pass a function to format the total negative value. 
	    **/
	    _chart.totalNegFormatter = function(_) {
	        if(!arguments.length) return _totalNegFormatter;
	        _totalNegFormatter = _;
	        return _chart;
	    };
	
	    /**
	    #### .setColorRange(["#color", "#morecolors"])
	    Specify the range of colors that can be used in the ordinal color scale.
	    **/
	    _chart.colorRange = function(_) {
	        if(!arguments.length) return _colors.range();
	        _colors.range(_);
	        return _chart;
	    };
	
	    /**
	    #### .nodeToolTip(function)
	    Specify the callback to display text in the tooltip when hovering over nodes. 
	    **/
	    _chart.nodeToolTip = function(_) {
	        if(!arguments.length) return _nodeToolTipFunc;
	        _nodeToolTipFunc = _;
	        return _chart;
	    };
	
	    /**
	    #### .nodeWidth(Number)
	    Specify the width of the sankey nodes. 
	    **/
	    _chart.nodeWidth = function(_) {
	        if(!arguments.length) return _nodeWidth;
	        _nodeWidth = _;
	        return _chart;
	    };
	
	    /**
	    #### .linkToolTip(function)
	    Specify the callback to display text in the tooltip when hovering over links between nodes. 
	    **/
	    _chart.linkToolTip = function(_) {
	        if(!arguments.length) return _linkToolTipFunc;
	        _linkToolTipFunc = _;
	        return _chart;
	    };
	
	    _chart.transitionDuration(450); //not doing anything at this point
	
	    /**
	    #### .width(Number)
	    Specify the width of the SVG. Default is 960
	    **/
	    _chart.width = function(_) {
	        if(!arguments.length) return _width;
	        _width = _;
	        return _chart;
	    };
	
	    /**
	    #### .height(Number)
	    Specify the height of the SVG. Default is 500
	    **/
	    _chart.height = function(_) {
	        if(!arguments.length) return _height;
	        _height = _;
	        return _chart;
	    };
	
	    _chart.data(function(){ 
	        return [_sankeyDataObject];
	    });
	    
	    _chart.initData = function () {
	        if(_chart.levels() && _chart.measureColumn()) {
	            _sankeyDataObject = crossfilterToSankeyData(_chart.levels(), _chart.measureColumn());
	            if(_sankeyDataObject === null)
	                return null;
	            else if(_sankeyDataObject === -1)
	                return -1;
	        }
	        else throw "Must provide dimension column array levels and the measureColumn";
	        return _chart;
	    };
	
	    function getColumnName(index) {
	        return levels[index].columnName;
	    }
	
	    _chart._doRender = function() {
	        var checkForData = _chart.initData();
	
	        _chart.root().classed('dc-sankey', true);
	        _chart.root().classed('dc-chart', false);
	        _chart.root().select('.sankey-no-data').html('');
	        _chart.root().select('.sankey-negative-data').html('');
	        _chart.resetSvg();
	
	        if(checkForData === null) {
	            _chart.root().select(".sankey-no-data")
	                .html(_noDataMessage);
	            _chart.root().select("svg").attr("width", "0").attr("height", "0");
	
	            return checkForData;
	        }
	        else if(checkForData == -1) {
	            _chart.root().select(".sankey-negative-data")
	                .html(_negativeDataMessage);
	            _chart.root().select("svg").attr("width", "0").attr("height", "0");
	            return checkForData;
	        }
	
	        _chart.root().select(".sankey-negative-totalValue")
	                .html(_totalNegFormatter(_totalNegativeValue));
	        var negValueElement = _chart.root().select(".sankey-negative-totalValue-message").remove();
	        
	
	        var svg = _chart.svg()
	            .attr("width", _width + _margin.left + _margin.right)
	            .attr("height", _height + _margin.top + _margin.bottom)
	          .append("g")
	            .attr("transform", "translate(" + _margin.left + "," + _margin.top + ")");
	
	        if(_showNegativeTotal && _totalNegativeValue < 0) {
	            negValueElement.attr("style", "");
	            d3.select(parent).append(function() {return negValueElement.node();});
	        }
	        else if(_showNegativeTotal) {
	            negValueElement.style("display", "none");
	            d3.select(parent).append(function() {return negValueElement.node();});
	        }
	
	        _sankey = d3.sankey()
	            .nodeWidth(_nodeWidth)
	            .nodePadding(10)
	            .size([_width, _height]);
	
	        var path = _sankey.link();
	        _sankey
	            .nodes(_sankeyDataObject.nodes)
	            .links(_sankeyDataObject.links)
	            .layout(32);
	
	        var link = svg.append("g").selectAll(".link")
	                      .data(_sankeyDataObject.links)
	                    .enter().append("path")
	                      .attr("class", "link")
	                      .attr("d", path)
	                      .style("stroke-width", function(d) { return Math.max(1, d.dy); })
	                      .sort(function(a, b) { return b.dy - a.dy; });
	
	        link.append("title")
	            .text(_linkToolTipFunc);
	
	        var node = svg.append("g").selectAll(".node")
	            .data(_sankeyDataObject.nodes)
	        .enter().append("g")
	            .attr("class", function(d) {return "node " + dc.utils.nameToId(d.name);})
	            .attr("transform", function(d) { 
	                return "translate(" + d.x + "," + d.y + ")"; 
	            })
	            .on("click", onClick)
	        .call(d3.behavior.drag()
	            .origin(function(d) { return d; })
	            .on("dragstart", dragstarted)
	            .on("drag", dragmove)
	            .on("dragend", dragended))
	            .classed("deselected", function (d) {
	                return (_chart.hasFilter()) ? !isSelectedNode(d) : false;
	            })
	            .classed("selected", function (d) {
	                return (_chart.hasFilter()) ? isSelectedNode(d) : false;
	            });
	        node.append("rect")
	            .attr("height", function(d) { return d.dy; })
	            .attr("width", _sankey.nodeWidth())
	            .attr("class", function(d) {return "node-" + d.columnName;})
	            .attr("fill", function(d) {return _colors(d.name);})
	          .append("title")
	            .text(_nodeToolTipFunc);
	
	        node.append("text")
	            .attr("x", -6)
	            .attr("y", function(d) { return d.dy / 2; })
	            .attr("dy", ".35em")
	            .attr("text-anchor", "end")
	            .attr("transform", null)
	            .text(_labelFunc)
	          .filter(function(d) { return d.x < _width / 2; })
	            .attr("x", 6 + _sankey.nodeWidth())
	            .attr("text-anchor", "start");
	
	        //add span for filter control
	        _chart.levels().forEach(function(l){
	            d3.select(".filter.column_" + l.columnName).html("");
	            if(_chart.hasFilter(l.columnName)) {
	                _chart.select(".filter.column_" + l.columnName)
	                    .append("span")
	                    .classed("reset", true)
	                    .text(_chart.filters(l.columnName)[0])
	                    .on("click", function(e) {
	                        _chart.filterAll(l.columnName);
	                        _chart.redrawGroup();
	                    });
	            }  
	        });
	        
	
	        function dragstarted(d) {
	            //this makes elements come to top, but interferes with listeners 
	            //this.parentNode.appendChild(this); 
	        }
	
	        function dragmove(d) {
	            d3.select(this).attr("transform", "translate(" + d.x + "," + (d.y = Math.max(0, Math.min(_height - d.dy, d3.event.y))) + ")");
	            _sankey.relayout();
	            link.attr("d", path);
	        }
	
	        function dragended(d) {
	
	        }
	    };
	
	    function isSelectedNode (d) {
	        return _chart.hasFilter(d.columnName, d.name);
	    }
	
	    function onClick(d) {
	        //if click event is blocked(if a drag event is occuring the defaultPrevented will be true),
	        //then the element is being dragged so don't filter
	        if(d3.event.defaultPrevented) 
	            return;
	        else 
	            _chart.onClick(d);
	        
	    }
	
	    _chart.onClick = function (d) {
	        var filterValue = d.name;
	        dc.events.trigger(function () {
	            _chart.filter(d.columnName, filterValue);
	            _chart.redrawGroup();            
	        });
	    };
	
	    _chart._doRedraw = function() {
	        return _chart._doRender();
	    };
	
	    return _chart.anchor(parent, chartGroup);
	
	    //**Translate the crossfilter dimensions to a sankey data structure
	    function crossfilterToSankeyData(levels, measureColumn) {
	
	        _totalNegativeValue = 0;
	        //Dimensions provided are the source for creating the Sankey Node/Link 
	        //data structure
	        var t = {nodes: [], links: []};
	
	        //flag for no data
	        var noData = false; 
	
	        //Create nodes for each row field value 
	        levels.forEach(function(level) {
	            var columnName = level.columnName;
	            var s = level.dimension.top(Infinity);
	            if(!s.length) {
	                noData = true;
	                return; 
	            }
	            s.forEach(function(row){
	                if(row[measureColumn] > 0)
	                    insertNodes(row, columnName);
	                
	                
	            });
	        });
	
	        //if the chart receives no data return a null sankey data object
	        if(noData) {
	            return null;
	        }
	
	        var allNegativeData = true;
	        //Important to do the linking only after all of the nodes have been created
	        levels.forEach(function(level, index) {
	            var columnName = level.columnName;
	            var s = level.dimension.top(Infinity);
	
	            s.forEach(function(row){
	                if(row[measureColumn] > 0) {
	                    allNegativeData = false;
	                    insertOrUpdateLinks(row, columnName, index);
	                }
	                else
	                    _totalNegativeValue += Number(row[measureColumn]);
	            });
	        });
	
	        //if all the nodes are negative values then return -1 
	        //we will later display a message to the user instead of showing a blank chart
	        if(allNegativeData === true) {
	            return -1;
	        }
	
	        function insertNodes(row, columnName) {
	            var column = columnName;
	            if (!nodesContains(row, column)){
	                t.nodes.push({name: row[column], columnName: column});
	            }   
	        }
	        
	        function insertOrUpdateLinks(row, columnName, index) {
	            var column = columnName;
	            if (index < (levels.length-1)) {
	                var nextNodeColumn = levels[index+1].columnName;
	                insertOrUpdateLink({name: row[column], column: column}, {name: row[nextNodeColumn], column: nextNodeColumn}, row[measureColumn]);
	            }
	        }
	        
	        function insertOrUpdateLink(source, target, value){
	            var foundLink = findLink(source,target);
	            var linkValue = Number(value);
	
	            if(foundLink) {
	                foundLink.value = foundLink.value + linkValue;
	            }
	            else {
	
	                t.links.push(newLink(source, target, linkValue));
	            }
	        }
	        
	        function findLink(source, target){
	            var sourceIndex = indexForNode(source);
	            var targetIndex = indexForNode(target);
	            var len = t.links.length;
	            for(var i=0;i<len;i++){
	                var currentLink = t.links[i];
	                if(currentLink.source === sourceIndex && currentLink.target === targetIndex){
	                    return currentLink;
	                }
	            }
	            return false;
	        }
	        
	        function newLink(source, target, value){
	            return {source: indexForNode(source), target: indexForNode(target), value: value};
	        }
	
	        function indexForNode(node){
	            var len = t.nodes.length;
	            for(var i=0;i<len;i++){
	                var currentNode = t.nodes[i];
	                if (currentNode.name === node.name && currentNode.columnName === node.column) return i;
	            }
	
	            return -1; //hopefully never happens
	        }
	
	        function nodesContains(row, column){
	            return t.nodes.some(function(node){ return node.name === row[column] && node.columnName === column;});
	        }
	
	        function linksContains(source, target){
	       
	        }
	        
	        return t;
	    }
	};
	// Renamed functions
	
	dc.abstractBubbleChart = dc.bubbleMixin;
	dc.baseChart = dc.baseMixin;
	dc.capped = dc.capMixin;
	dc.colorChart = dc.colorMixin;
	dc.coordinateGridChart = dc.coordinateGridMixin;
	dc.marginable = dc.marginMixin;
	dc.stackableChart = dc.stackMixin;
	
	return dc;}
	if(true) {
	  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3)], __WEBPACK_AMD_DEFINE_FACTORY__ = (_dc), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if(typeof module === "object" && module.exports) {
	  module.exports = _dc(d3);
	} else {
	  this.dc = _dc(d3);
	}
	}
	)();


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * jQuery JavaScript Library v2.1.4
	 * http://jquery.com/
	 *
	 * Includes Sizzle.js
	 * http://sizzlejs.com/
	 *
	 * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors
	 * Released under the MIT license
	 * http://jquery.org/license
	 *
	 * Date: 2015-04-28T16:01Z
	 */
	
	(function( global, factory ) {
	
		if ( typeof module === "object" && typeof module.exports === "object" ) {
			// For CommonJS and CommonJS-like environments where a proper `window`
			// is present, execute the factory and get jQuery.
			// For environments that do not have a `window` with a `document`
			// (such as Node.js), expose a factory as module.exports.
			// This accentuates the need for the creation of a real `window`.
			// e.g. var jQuery = require("jquery")(window);
			// See ticket #14549 for more info.
			module.exports = global.document ?
				factory( global, true ) :
				function( w ) {
					if ( !w.document ) {
						throw new Error( "jQuery requires a window with a document" );
					}
					return factory( w );
				};
		} else {
			factory( global );
		}
	
	// Pass this if window is not defined yet
	}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {
	
	// Support: Firefox 18+
	// Can't be in strict mode, several libs including ASP.NET trace
	// the stack via arguments.caller.callee and Firefox dies if
	// you try to trace through "use strict" call chains. (#13335)
	//
	
	var arr = [];
	
	var slice = arr.slice;
	
	var concat = arr.concat;
	
	var push = arr.push;
	
	var indexOf = arr.indexOf;
	
	var class2type = {};
	
	var toString = class2type.toString;
	
	var hasOwn = class2type.hasOwnProperty;
	
	var support = {};
	
	
	
	var
		// Use the correct document accordingly with window argument (sandbox)
		document = window.document,
	
		version = "2.1.4",
	
		// Define a local copy of jQuery
		jQuery = function( selector, context ) {
			// The jQuery object is actually just the init constructor 'enhanced'
			// Need init if jQuery is called (just allow error to be thrown if not included)
			return new jQuery.fn.init( selector, context );
		},
	
		// Support: Android<4.1
		// Make sure we trim BOM and NBSP
		rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
	
		// Matches dashed string for camelizing
		rmsPrefix = /^-ms-/,
		rdashAlpha = /-([\da-z])/gi,
	
		// Used by jQuery.camelCase as callback to replace()
		fcamelCase = function( all, letter ) {
			return letter.toUpperCase();
		};
	
	jQuery.fn = jQuery.prototype = {
		// The current version of jQuery being used
		jquery: version,
	
		constructor: jQuery,
	
		// Start with an empty selector
		selector: "",
	
		// The default length of a jQuery object is 0
		length: 0,
	
		toArray: function() {
			return slice.call( this );
		},
	
		// Get the Nth element in the matched element set OR
		// Get the whole matched element set as a clean array
		get: function( num ) {
			return num != null ?
	
				// Return just the one element from the set
				( num < 0 ? this[ num + this.length ] : this[ num ] ) :
	
				// Return all the elements in a clean array
				slice.call( this );
		},
	
		// Take an array of elements and push it onto the stack
		// (returning the new matched element set)
		pushStack: function( elems ) {
	
			// Build a new jQuery matched element set
			var ret = jQuery.merge( this.constructor(), elems );
	
			// Add the old object onto the stack (as a reference)
			ret.prevObject = this;
			ret.context = this.context;
	
			// Return the newly-formed element set
			return ret;
		},
	
		// Execute a callback for every element in the matched set.
		// (You can seed the arguments with an array of args, but this is
		// only used internally.)
		each: function( callback, args ) {
			return jQuery.each( this, callback, args );
		},
	
		map: function( callback ) {
			return this.pushStack( jQuery.map(this, function( elem, i ) {
				return callback.call( elem, i, elem );
			}));
		},
	
		slice: function() {
			return this.pushStack( slice.apply( this, arguments ) );
		},
	
		first: function() {
			return this.eq( 0 );
		},
	
		last: function() {
			return this.eq( -1 );
		},
	
		eq: function( i ) {
			var len = this.length,
				j = +i + ( i < 0 ? len : 0 );
			return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
		},
	
		end: function() {
			return this.prevObject || this.constructor(null);
		},
	
		// For internal use only.
		// Behaves like an Array's method, not like a jQuery method.
		push: push,
		sort: arr.sort,
		splice: arr.splice
	};
	
	jQuery.extend = jQuery.fn.extend = function() {
		var options, name, src, copy, copyIsArray, clone,
			target = arguments[0] || {},
			i = 1,
			length = arguments.length,
			deep = false;
	
		// Handle a deep copy situation
		if ( typeof target === "boolean" ) {
			deep = target;
	
			// Skip the boolean and the target
			target = arguments[ i ] || {};
			i++;
		}
	
		// Handle case when target is a string or something (possible in deep copy)
		if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
			target = {};
		}
	
		// Extend jQuery itself if only one argument is passed
		if ( i === length ) {
			target = this;
			i--;
		}
	
		for ( ; i < length; i++ ) {
			// Only deal with non-null/undefined values
			if ( (options = arguments[ i ]) != null ) {
				// Extend the base object
				for ( name in options ) {
					src = target[ name ];
					copy = options[ name ];
	
					// Prevent never-ending loop
					if ( target === copy ) {
						continue;
					}
	
					// Recurse if we're merging plain objects or arrays
					if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
						if ( copyIsArray ) {
							copyIsArray = false;
							clone = src && jQuery.isArray(src) ? src : [];
	
						} else {
							clone = src && jQuery.isPlainObject(src) ? src : {};
						}
	
						// Never move original objects, clone them
						target[ name ] = jQuery.extend( deep, clone, copy );
	
					// Don't bring in undefined values
					} else if ( copy !== undefined ) {
						target[ name ] = copy;
					}
				}
			}
		}
	
		// Return the modified object
		return target;
	};
	
	jQuery.extend({
		// Unique for each copy of jQuery on the page
		expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),
	
		// Assume jQuery is ready without the ready module
		isReady: true,
	
		error: function( msg ) {
			throw new Error( msg );
		},
	
		noop: function() {},
	
		isFunction: function( obj ) {
			return jQuery.type(obj) === "function";
		},
	
		isArray: Array.isArray,
	
		isWindow: function( obj ) {
			return obj != null && obj === obj.window;
		},
	
		isNumeric: function( obj ) {
			// parseFloat NaNs numeric-cast false positives (null|true|false|"")
			// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
			// subtraction forces infinities to NaN
			// adding 1 corrects loss of precision from parseFloat (#15100)
			return !jQuery.isArray( obj ) && (obj - parseFloat( obj ) + 1) >= 0;
		},
	
		isPlainObject: function( obj ) {
			// Not plain objects:
			// - Any object or value whose internal [[Class]] property is not "[object Object]"
			// - DOM nodes
			// - window
			if ( jQuery.type( obj ) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
				return false;
			}
	
			if ( obj.constructor &&
					!hasOwn.call( obj.constructor.prototype, "isPrototypeOf" ) ) {
				return false;
			}
	
			// If the function hasn't returned already, we're confident that
			// |obj| is a plain object, created by {} or constructed with new Object
			return true;
		},
	
		isEmptyObject: function( obj ) {
			var name;
			for ( name in obj ) {
				return false;
			}
			return true;
		},
	
		type: function( obj ) {
			if ( obj == null ) {
				return obj + "";
			}
			// Support: Android<4.0, iOS<6 (functionish RegExp)
			return typeof obj === "object" || typeof obj === "function" ?
				class2type[ toString.call(obj) ] || "object" :
				typeof obj;
		},
	
		// Evaluates a script in a global context
		globalEval: function( code ) {
			var script,
				indirect = eval;
	
			code = jQuery.trim( code );
	
			if ( code ) {
				// If the code includes a valid, prologue position
				// strict mode pragma, execute code by injecting a
				// script tag into the document.
				if ( code.indexOf("use strict") === 1 ) {
					script = document.createElement("script");
					script.text = code;
					document.head.appendChild( script ).parentNode.removeChild( script );
				} else {
				// Otherwise, avoid the DOM node creation, insertion
				// and removal by using an indirect global eval
					indirect( code );
				}
			}
		},
	
		// Convert dashed to camelCase; used by the css and data modules
		// Support: IE9-11+
		// Microsoft forgot to hump their vendor prefix (#9572)
		camelCase: function( string ) {
			return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
		},
	
		nodeName: function( elem, name ) {
			return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
		},
	
		// args is for internal usage only
		each: function( obj, callback, args ) {
			var value,
				i = 0,
				length = obj.length,
				isArray = isArraylike( obj );
	
			if ( args ) {
				if ( isArray ) {
					for ( ; i < length; i++ ) {
						value = callback.apply( obj[ i ], args );
	
						if ( value === false ) {
							break;
						}
					}
				} else {
					for ( i in obj ) {
						value = callback.apply( obj[ i ], args );
	
						if ( value === false ) {
							break;
						}
					}
				}
	
			// A special, fast, case for the most common use of each
			} else {
				if ( isArray ) {
					for ( ; i < length; i++ ) {
						value = callback.call( obj[ i ], i, obj[ i ] );
	
						if ( value === false ) {
							break;
						}
					}
				} else {
					for ( i in obj ) {
						value = callback.call( obj[ i ], i, obj[ i ] );
	
						if ( value === false ) {
							break;
						}
					}
				}
			}
	
			return obj;
		},
	
		// Support: Android<4.1
		trim: function( text ) {
			return text == null ?
				"" :
				( text + "" ).replace( rtrim, "" );
		},
	
		// results is for internal usage only
		makeArray: function( arr, results ) {
			var ret = results || [];
	
			if ( arr != null ) {
				if ( isArraylike( Object(arr) ) ) {
					jQuery.merge( ret,
						typeof arr === "string" ?
						[ arr ] : arr
					);
				} else {
					push.call( ret, arr );
				}
			}
	
			return ret;
		},
	
		inArray: function( elem, arr, i ) {
			return arr == null ? -1 : indexOf.call( arr, elem, i );
		},
	
		merge: function( first, second ) {
			var len = +second.length,
				j = 0,
				i = first.length;
	
			for ( ; j < len; j++ ) {
				first[ i++ ] = second[ j ];
			}
	
			first.length = i;
	
			return first;
		},
	
		grep: function( elems, callback, invert ) {
			var callbackInverse,
				matches = [],
				i = 0,
				length = elems.length,
				callbackExpect = !invert;
	
			// Go through the array, only saving the items
			// that pass the validator function
			for ( ; i < length; i++ ) {
				callbackInverse = !callback( elems[ i ], i );
				if ( callbackInverse !== callbackExpect ) {
					matches.push( elems[ i ] );
				}
			}
	
			return matches;
		},
	
		// arg is for internal usage only
		map: function( elems, callback, arg ) {
			var value,
				i = 0,
				length = elems.length,
				isArray = isArraylike( elems ),
				ret = [];
	
			// Go through the array, translating each of the items to their new values
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback( elems[ i ], i, arg );
	
					if ( value != null ) {
						ret.push( value );
					}
				}
	
			// Go through every key on the object,
			} else {
				for ( i in elems ) {
					value = callback( elems[ i ], i, arg );
	
					if ( value != null ) {
						ret.push( value );
					}
				}
			}
	
			// Flatten any nested arrays
			return concat.apply( [], ret );
		},
	
		// A global GUID counter for objects
		guid: 1,
	
		// Bind a function to a context, optionally partially applying any
		// arguments.
		proxy: function( fn, context ) {
			var tmp, args, proxy;
	
			if ( typeof context === "string" ) {
				tmp = fn[ context ];
				context = fn;
				fn = tmp;
			}
	
			// Quick check to determine if target is callable, in the spec
			// this throws a TypeError, but we will just return undefined.
			if ( !jQuery.isFunction( fn ) ) {
				return undefined;
			}
	
			// Simulated bind
			args = slice.call( arguments, 2 );
			proxy = function() {
				return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
			};
	
			// Set the guid of unique handler to the same of original handler, so it can be removed
			proxy.guid = fn.guid = fn.guid || jQuery.guid++;
	
			return proxy;
		},
	
		now: Date.now,
	
		// jQuery.support is not used in Core but other projects attach their
		// properties to it so it needs to exist.
		support: support
	});
	
	// Populate the class2type map
	jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
		class2type[ "[object " + name + "]" ] = name.toLowerCase();
	});
	
	function isArraylike( obj ) {
	
		// Support: iOS 8.2 (not reproducible in simulator)
		// `in` check used to prevent JIT error (gh-2145)
		// hasOwn isn't used here due to false negatives
		// regarding Nodelist length in IE
		var length = "length" in obj && obj.length,
			type = jQuery.type( obj );
	
		if ( type === "function" || jQuery.isWindow( obj ) ) {
			return false;
		}
	
		if ( obj.nodeType === 1 && length ) {
			return true;
		}
	
		return type === "array" || length === 0 ||
			typeof length === "number" && length > 0 && ( length - 1 ) in obj;
	}
	var Sizzle =
	/*!
	 * Sizzle CSS Selector Engine v2.2.0-pre
	 * http://sizzlejs.com/
	 *
	 * Copyright 2008, 2014 jQuery Foundation, Inc. and other contributors
	 * Released under the MIT license
	 * http://jquery.org/license
	 *
	 * Date: 2014-12-16
	 */
	(function( window ) {
	
	var i,
		support,
		Expr,
		getText,
		isXML,
		tokenize,
		compile,
		select,
		outermostContext,
		sortInput,
		hasDuplicate,
	
		// Local document vars
		setDocument,
		document,
		docElem,
		documentIsHTML,
		rbuggyQSA,
		rbuggyMatches,
		matches,
		contains,
	
		// Instance-specific data
		expando = "sizzle" + 1 * new Date(),
		preferredDoc = window.document,
		dirruns = 0,
		done = 0,
		classCache = createCache(),
		tokenCache = createCache(),
		compilerCache = createCache(),
		sortOrder = function( a, b ) {
			if ( a === b ) {
				hasDuplicate = true;
			}
			return 0;
		},
	
		// General-purpose constants
		MAX_NEGATIVE = 1 << 31,
	
		// Instance methods
		hasOwn = ({}).hasOwnProperty,
		arr = [],
		pop = arr.pop,
		push_native = arr.push,
		push = arr.push,
		slice = arr.slice,
		// Use a stripped-down indexOf as it's faster than native
		// http://jsperf.com/thor-indexof-vs-for/5
		indexOf = function( list, elem ) {
			var i = 0,
				len = list.length;
			for ( ; i < len; i++ ) {
				if ( list[i] === elem ) {
					return i;
				}
			}
			return -1;
		},
	
		booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
	
		// Regular expressions
	
		// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
		whitespace = "[\\x20\\t\\r\\n\\f]",
		// http://www.w3.org/TR/css3-syntax/#characters
		characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
	
		// Loosely modeled on CSS identifier characters
		// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors
		// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
		identifier = characterEncoding.replace( "w", "w#" ),
	
		// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
		attributes = "\\[" + whitespace + "*(" + characterEncoding + ")(?:" + whitespace +
			// Operator (capture 2)
			"*([*^$|!~]?=)" + whitespace +
			// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
			"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
			"*\\]",
	
		pseudos = ":(" + characterEncoding + ")(?:\\((" +
			// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
			// 1. quoted (capture 3; capture 4 or capture 5)
			"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
			// 2. simple (capture 6)
			"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
			// 3. anything else (capture 2)
			".*" +
			")\\)|)",
	
		// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
		rwhitespace = new RegExp( whitespace + "+", "g" ),
		rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),
	
		rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
		rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),
	
		rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),
	
		rpseudo = new RegExp( pseudos ),
		ridentifier = new RegExp( "^" + identifier + "$" ),
	
		matchExpr = {
			"ID": new RegExp( "^#(" + characterEncoding + ")" ),
			"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),
			"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),
			"ATTR": new RegExp( "^" + attributes ),
			"PSEUDO": new RegExp( "^" + pseudos ),
			"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
				"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
				"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
			"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
			// For use in libraries implementing .is()
			// We use this for POS matching in `select`
			"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
				whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
		},
	
		rinputs = /^(?:input|select|textarea|button)$/i,
		rheader = /^h\d$/i,
	
		rnative = /^[^{]+\{\s*\[native \w/,
	
		// Easily-parseable/retrievable ID or TAG or CLASS selectors
		rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
	
		rsibling = /[+~]/,
		rescape = /'|\\/g,
	
		// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
		runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
		funescape = function( _, escaped, escapedWhitespace ) {
			var high = "0x" + escaped - 0x10000;
			// NaN means non-codepoint
			// Support: Firefox<24
			// Workaround erroneous numeric interpretation of +"0x"
			return high !== high || escapedWhitespace ?
				escaped :
				high < 0 ?
					// BMP codepoint
					String.fromCharCode( high + 0x10000 ) :
					// Supplemental Plane codepoint (surrogate pair)
					String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
		},
	
		// Used for iframes
		// See setDocument()
		// Removing the function wrapper causes a "Permission Denied"
		// error in IE
		unloadHandler = function() {
			setDocument();
		};
	
	// Optimize for push.apply( _, NodeList )
	try {
		push.apply(
			(arr = slice.call( preferredDoc.childNodes )),
			preferredDoc.childNodes
		);
		// Support: Android<4.0
		// Detect silently failing push.apply
		arr[ preferredDoc.childNodes.length ].nodeType;
	} catch ( e ) {
		push = { apply: arr.length ?
	
			// Leverage slice if possible
			function( target, els ) {
				push_native.apply( target, slice.call(els) );
			} :
	
			// Support: IE<9
			// Otherwise append directly
			function( target, els ) {
				var j = target.length,
					i = 0;
				// Can't trust NodeList.length
				while ( (target[j++] = els[i++]) ) {}
				target.length = j - 1;
			}
		};
	}
	
	function Sizzle( selector, context, results, seed ) {
		var match, elem, m, nodeType,
			// QSA vars
			i, groups, old, nid, newContext, newSelector;
	
		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
	
		context = context || document;
		results = results || [];
		nodeType = context.nodeType;
	
		if ( typeof selector !== "string" || !selector ||
			nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {
	
			return results;
		}
	
		if ( !seed && documentIsHTML ) {
	
			// Try to shortcut find operations when possible (e.g., not under DocumentFragment)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {
				// Speed-up: Sizzle("#ID")
				if ( (m = match[1]) ) {
					if ( nodeType === 9 ) {
						elem = context.getElementById( m );
						// Check parentNode to catch when Blackberry 4.6 returns
						// nodes that are no longer in the document (jQuery #6963)
						if ( elem && elem.parentNode ) {
							// Handle the case where IE, Opera, and Webkit return items
							// by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}
					} else {
						// Context is not a document
						if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&
							contains( context, elem ) && elem.id === m ) {
							results.push( elem );
							return results;
						}
					}
	
				// Speed-up: Sizzle("TAG")
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;
	
				// Speed-up: Sizzle(".CLASS")
				} else if ( (m = match[3]) && support.getElementsByClassName ) {
					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}
	
			// QSA path
			if ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
				nid = old = expando;
				newContext = context;
				newSelector = nodeType !== 1 && selector;
	
				// qSA works strangely on Element-rooted queries
				// We can work around this by specifying an extra ID on the root
				// and working up from there (Thanks to Andrew Dupont for the technique)
				// IE 8 doesn't work on object elements
				if ( nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
					groups = tokenize( selector );
	
					if ( (old = context.getAttribute("id")) ) {
						nid = old.replace( rescape, "\\$&" );
					} else {
						context.setAttribute( "id", nid );
					}
					nid = "[id='" + nid + "'] ";
	
					i = groups.length;
					while ( i-- ) {
						groups[i] = nid + toSelector( groups[i] );
					}
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) || context;
					newSelector = groups.join(",");
				}
	
				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch(qsaError) {
					} finally {
						if ( !old ) {
							context.removeAttribute("id");
						}
					}
				}
			}
		}
	
		// All others
		return select( selector.replace( rtrim, "$1" ), context, results, seed );
	}
	
	/**
	 * Create key-value caches of limited size
	 * @returns {Function(string, Object)} Returns the Object data after storing it on itself with
	 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
	 *	deleting the oldest entry
	 */
	function createCache() {
		var keys = [];
	
		function cache( key, value ) {
			// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
			if ( keys.push( key + " " ) > Expr.cacheLength ) {
				// Only keep the most recent entries
				delete cache[ keys.shift() ];
			}
			return (cache[ key + " " ] = value);
		}
		return cache;
	}
	
	/**
	 * Mark a function for special use by Sizzle
	 * @param {Function} fn The function to mark
	 */
	function markFunction( fn ) {
		fn[ expando ] = true;
		return fn;
	}
	
	/**
	 * Support testing using an element
	 * @param {Function} fn Passed the created div and expects a boolean result
	 */
	function assert( fn ) {
		var div = document.createElement("div");
	
		try {
			return !!fn( div );
		} catch (e) {
			return false;
		} finally {
			// Remove from its parent by default
			if ( div.parentNode ) {
				div.parentNode.removeChild( div );
			}
			// release memory in IE
			div = null;
		}
	}
	
	/**
	 * Adds the same handler for all of the specified attrs
	 * @param {String} attrs Pipe-separated list of attributes
	 * @param {Function} handler The method that will be applied
	 */
	function addHandle( attrs, handler ) {
		var arr = attrs.split("|"),
			i = attrs.length;
	
		while ( i-- ) {
			Expr.attrHandle[ arr[i] ] = handler;
		}
	}
	
	/**
	 * Checks document order of two siblings
	 * @param {Element} a
	 * @param {Element} b
	 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
	 */
	function siblingCheck( a, b ) {
		var cur = b && a,
			diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
				( ~b.sourceIndex || MAX_NEGATIVE ) -
				( ~a.sourceIndex || MAX_NEGATIVE );
	
		// Use IE sourceIndex if available on both nodes
		if ( diff ) {
			return diff;
		}
	
		// Check if b follows a
		if ( cur ) {
			while ( (cur = cur.nextSibling) ) {
				if ( cur === b ) {
					return -1;
				}
			}
		}
	
		return a ? 1 : -1;
	}
	
	/**
	 * Returns a function to use in pseudos for input types
	 * @param {String} type
	 */
	function createInputPseudo( type ) {
		return function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === type;
		};
	}
	
	/**
	 * Returns a function to use in pseudos for buttons
	 * @param {String} type
	 */
	function createButtonPseudo( type ) {
		return function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return (name === "input" || name === "button") && elem.type === type;
		};
	}
	
	/**
	 * Returns a function to use in pseudos for positionals
	 * @param {Function} fn
	 */
	function createPositionalPseudo( fn ) {
		return markFunction(function( argument ) {
			argument = +argument;
			return markFunction(function( seed, matches ) {
				var j,
					matchIndexes = fn( [], seed.length, argument ),
					i = matchIndexes.length;
	
				// Match elements found at the specified indexes
				while ( i-- ) {
					if ( seed[ (j = matchIndexes[i]) ] ) {
						seed[j] = !(matches[j] = seed[j]);
					}
				}
			});
		});
	}
	
	/**
	 * Checks a node for validity as a Sizzle context
	 * @param {Element|Object=} context
	 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
	 */
	function testContext( context ) {
		return context && typeof context.getElementsByTagName !== "undefined" && context;
	}
	
	// Expose support vars for convenience
	support = Sizzle.support = {};
	
	/**
	 * Detects XML nodes
	 * @param {Element|Object} elem An element or a document
	 * @returns {Boolean} True iff elem is a non-HTML XML node
	 */
	isXML = Sizzle.isXML = function( elem ) {
		// documentElement is verified for cases where it doesn't yet exist
		// (such as loading iframes in IE - #4833)
		var documentElement = elem && (elem.ownerDocument || elem).documentElement;
		return documentElement ? documentElement.nodeName !== "HTML" : false;
	};
	
	/**
	 * Sets document-related variables once based on the current document
	 * @param {Element|Object} [doc] An element or document object to use to set the document
	 * @returns {Object} Returns the current document
	 */
	setDocument = Sizzle.setDocument = function( node ) {
		var hasCompare, parent,
			doc = node ? node.ownerDocument || node : preferredDoc;
	
		// If no document and documentElement is available, return
		if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
			return document;
		}
	
		// Set our document
		document = doc;
		docElem = doc.documentElement;
		parent = doc.defaultView;
	
		// Support: IE>8
		// If iframe document is assigned to "document" variable and if iframe has been reloaded,
		// IE will throw "permission denied" error when accessing "document" variable, see jQuery #13936
		// IE6-8 do not support the defaultView property so parent will be undefined
		if ( parent && parent !== parent.top ) {
			// IE11 does not have attachEvent, so all must suffer
			if ( parent.addEventListener ) {
				parent.addEventListener( "unload", unloadHandler, false );
			} else if ( parent.attachEvent ) {
				parent.attachEvent( "onunload", unloadHandler );
			}
		}
	
		/* Support tests
		---------------------------------------------------------------------- */
		documentIsHTML = !isXML( doc );
	
		/* Attributes
		---------------------------------------------------------------------- */
	
		// Support: IE<8
		// Verify that getAttribute really returns attributes and not properties
		// (excepting IE8 booleans)
		support.attributes = assert(function( div ) {
			div.className = "i";
			return !div.getAttribute("className");
		});
	
		/* getElement(s)By*
		---------------------------------------------------------------------- */
	
		// Check if getElementsByTagName("*") returns only elements
		support.getElementsByTagName = assert(function( div ) {
			div.appendChild( doc.createComment("") );
			return !div.getElementsByTagName("*").length;
		});
	
		// Support: IE<9
		support.getElementsByClassName = rnative.test( doc.getElementsByClassName );
	
		// Support: IE<10
		// Check if getElementById returns elements by name
		// The broken getElementById methods don't pick up programatically-set names,
		// so use a roundabout getElementsByName test
		support.getById = assert(function( div ) {
			docElem.appendChild( div ).id = expando;
			return !doc.getElementsByName || !doc.getElementsByName( expando ).length;
		});
	
		// ID find and filter
		if ( support.getById ) {
			Expr.find["ID"] = function( id, context ) {
				if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
					var m = context.getElementById( id );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					return m && m.parentNode ? [ m ] : [];
				}
			};
			Expr.filter["ID"] = function( id ) {
				var attrId = id.replace( runescape, funescape );
				return function( elem ) {
					return elem.getAttribute("id") === attrId;
				};
			};
		} else {
			// Support: IE6/7
			// getElementById is not reliable as a find shortcut
			delete Expr.find["ID"];
	
			Expr.filter["ID"] =  function( id ) {
				var attrId = id.replace( runescape, funescape );
				return function( elem ) {
					var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
					return node && node.value === attrId;
				};
			};
		}
	
		// Tag
		Expr.find["TAG"] = support.getElementsByTagName ?
			function( tag, context ) {
				if ( typeof context.getElementsByTagName !== "undefined" ) {
					return context.getElementsByTagName( tag );
	
				// DocumentFragment nodes don't have gEBTN
				} else if ( support.qsa ) {
					return context.querySelectorAll( tag );
				}
			} :
	
			function( tag, context ) {
				var elem,
					tmp = [],
					i = 0,
					// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
					results = context.getElementsByTagName( tag );
	
				// Filter out possible comments
				if ( tag === "*" ) {
					while ( (elem = results[i++]) ) {
						if ( elem.nodeType === 1 ) {
							tmp.push( elem );
						}
					}
	
					return tmp;
				}
				return results;
			};
	
		// Class
		Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
			if ( documentIsHTML ) {
				return context.getElementsByClassName( className );
			}
		};
	
		/* QSA/matchesSelector
		---------------------------------------------------------------------- */
	
		// QSA and matchesSelector support
	
		// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
		rbuggyMatches = [];
	
		// qSa(:focus) reports false when true (Chrome 21)
		// We allow this because of a bug in IE8/9 that throws an error
		// whenever `document.activeElement` is accessed on an iframe
		// So, we allow :focus to pass through QSA all the time to avoid the IE error
		// See http://bugs.jquery.com/ticket/13378
		rbuggyQSA = [];
	
		if ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {
			// Build QSA regex
			// Regex strategy adopted from Diego Perini
			assert(function( div ) {
				// Select is set to empty string on purpose
				// This is to test IE's treatment of not explicitly
				// setting a boolean content attribute,
				// since its presence should be enough
				// http://bugs.jquery.com/ticket/12359
				docElem.appendChild( div ).innerHTML = "<a id='" + expando + "'></a>" +
					"<select id='" + expando + "-\f]' msallowcapture=''>" +
					"<option selected=''></option></select>";
	
				// Support: IE8, Opera 11-12.16
				// Nothing should be selected when empty strings follow ^= or $= or *=
				// The test attribute must be unknown in Opera but "safe" for WinRT
				// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
				if ( div.querySelectorAll("[msallowcapture^='']").length ) {
					rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
				}
	
				// Support: IE8
				// Boolean attributes and "value" are not treated correctly
				if ( !div.querySelectorAll("[selected]").length ) {
					rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
				}
	
				// Support: Chrome<29, Android<4.2+, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.7+
				if ( !div.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
					rbuggyQSA.push("~=");
				}
	
				// Webkit/Opera - :checked should return selected option elements
				// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
				// IE8 throws error here and will not see later tests
				if ( !div.querySelectorAll(":checked").length ) {
					rbuggyQSA.push(":checked");
				}
	
				// Support: Safari 8+, iOS 8+
				// https://bugs.webkit.org/show_bug.cgi?id=136851
				// In-page `selector#id sibing-combinator selector` fails
				if ( !div.querySelectorAll( "a#" + expando + "+*" ).length ) {
					rbuggyQSA.push(".#.+[+~]");
				}
			});
	
			assert(function( div ) {
				// Support: Windows 8 Native Apps
				// The type and name attributes are restricted during .innerHTML assignment
				var input = doc.createElement("input");
				input.setAttribute( "type", "hidden" );
				div.appendChild( input ).setAttribute( "name", "D" );
	
				// Support: IE8
				// Enforce case-sensitivity of name attribute
				if ( div.querySelectorAll("[name=d]").length ) {
					rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
				}
	
				// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
				// IE8 throws error here and will not see later tests
				if ( !div.querySelectorAll(":enabled").length ) {
					rbuggyQSA.push( ":enabled", ":disabled" );
				}
	
				// Opera 10-11 does not throw on post-comma invalid pseudos
				div.querySelectorAll("*,:x");
				rbuggyQSA.push(",.*:");
			});
		}
	
		if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
			docElem.webkitMatchesSelector ||
			docElem.mozMatchesSelector ||
			docElem.oMatchesSelector ||
			docElem.msMatchesSelector) )) ) {
	
			assert(function( div ) {
				// Check to see if it's possible to do matchesSelector
				// on a disconnected node (IE 9)
				support.disconnectedMatch = matches.call( div, "div" );
	
				// This should fail with an exception
				// Gecko does not error, returns false instead
				matches.call( div, "[s!='']:x" );
				rbuggyMatches.push( "!=", pseudos );
			});
		}
	
		rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
		rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );
	
		/* Contains
		---------------------------------------------------------------------- */
		hasCompare = rnative.test( docElem.compareDocumentPosition );
	
		// Element contains another
		// Purposefully does not implement inclusive descendent
		// As in, an element does not contain itself
		contains = hasCompare || rnative.test( docElem.contains ) ?
			function( a, b ) {
				var adown = a.nodeType === 9 ? a.documentElement : a,
					bup = b && b.parentNode;
				return a === bup || !!( bup && bup.nodeType === 1 && (
					adown.contains ?
						adown.contains( bup ) :
						a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
				));
			} :
			function( a, b ) {
				if ( b ) {
					while ( (b = b.parentNode) ) {
						if ( b === a ) {
							return true;
						}
					}
				}
				return false;
			};
	
		/* Sorting
		---------------------------------------------------------------------- */
	
		// Document order sorting
		sortOrder = hasCompare ?
		function( a, b ) {
	
			// Flag for duplicate removal
			if ( a === b ) {
				hasDuplicate = true;
				return 0;
			}
	
			// Sort on method existence if only one input has compareDocumentPosition
			var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
			if ( compare ) {
				return compare;
			}
	
			// Calculate position if both inputs belong to the same document
			compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
				a.compareDocumentPosition( b ) :
	
				// Otherwise we know they are disconnected
				1;
	
			// Disconnected nodes
			if ( compare & 1 ||
				(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {
	
				// Choose the first element that is related to our preferred document
				if ( a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
					return -1;
				}
				if ( b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
					return 1;
				}
	
				// Maintain original order
				return sortInput ?
					( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
					0;
			}
	
			return compare & 4 ? -1 : 1;
		} :
		function( a, b ) {
			// Exit early if the nodes are identical
			if ( a === b ) {
				hasDuplicate = true;
				return 0;
			}
	
			var cur,
				i = 0,
				aup = a.parentNode,
				bup = b.parentNode,
				ap = [ a ],
				bp = [ b ];
	
			// Parentless nodes are either documents or disconnected
			if ( !aup || !bup ) {
				return a === doc ? -1 :
					b === doc ? 1 :
					aup ? -1 :
					bup ? 1 :
					sortInput ?
					( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
					0;
	
			// If the nodes are siblings, we can do a quick check
			} else if ( aup === bup ) {
				return siblingCheck( a, b );
			}
	
			// Otherwise we need full lists of their ancestors for comparison
			cur = a;
			while ( (cur = cur.parentNode) ) {
				ap.unshift( cur );
			}
			cur = b;
			while ( (cur = cur.parentNode) ) {
				bp.unshift( cur );
			}
	
			// Walk down the tree looking for a discrepancy
			while ( ap[i] === bp[i] ) {
				i++;
			}
	
			return i ?
				// Do a sibling check if the nodes have a common ancestor
				siblingCheck( ap[i], bp[i] ) :
	
				// Otherwise nodes in our document sort first
				ap[i] === preferredDoc ? -1 :
				bp[i] === preferredDoc ? 1 :
				0;
		};
	
		return doc;
	};
	
	Sizzle.matches = function( expr, elements ) {
		return Sizzle( expr, null, null, elements );
	};
	
	Sizzle.matchesSelector = function( elem, expr ) {
		// Set document vars if needed
		if ( ( elem.ownerDocument || elem ) !== document ) {
			setDocument( elem );
		}
	
		// Make sure that attribute selectors are quoted
		expr = expr.replace( rattributeQuotes, "='$1']" );
	
		if ( support.matchesSelector && documentIsHTML &&
			( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
			( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {
	
			try {
				var ret = matches.call( elem, expr );
	
				// IE 9's matchesSelector returns false on disconnected nodes
				if ( ret || support.disconnectedMatch ||
						// As well, disconnected nodes are said to be in a document
						// fragment in IE 9
						elem.document && elem.document.nodeType !== 11 ) {
					return ret;
				}
			} catch (e) {}
		}
	
		return Sizzle( expr, document, null, [ elem ] ).length > 0;
	};
	
	Sizzle.contains = function( context, elem ) {
		// Set document vars if needed
		if ( ( context.ownerDocument || context ) !== document ) {
			setDocument( context );
		}
		return contains( context, elem );
	};
	
	Sizzle.attr = function( elem, name ) {
		// Set document vars if needed
		if ( ( elem.ownerDocument || elem ) !== document ) {
			setDocument( elem );
		}
	
		var fn = Expr.attrHandle[ name.toLowerCase() ],
			// Don't get fooled by Object.prototype properties (jQuery #13807)
			val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
				fn( elem, name, !documentIsHTML ) :
				undefined;
	
		return val !== undefined ?
			val :
			support.attributes || !documentIsHTML ?
				elem.getAttribute( name ) :
				(val = elem.getAttributeNode(name)) && val.specified ?
					val.value :
					null;
	};
	
	Sizzle.error = function( msg ) {
		throw new Error( "Syntax error, unrecognized expression: " + msg );
	};
	
	/**
	 * Document sorting and removing duplicates
	 * @param {ArrayLike} results
	 */
	Sizzle.uniqueSort = function( results ) {
		var elem,
			duplicates = [],
			j = 0,
			i = 0;
	
		// Unless we *know* we can detect duplicates, assume their presence
		hasDuplicate = !support.detectDuplicates;
		sortInput = !support.sortStable && results.slice( 0 );
		results.sort( sortOrder );
	
		if ( hasDuplicate ) {
			while ( (elem = results[i++]) ) {
				if ( elem === results[ i ] ) {
					j = duplicates.push( i );
				}
			}
			while ( j-- ) {
				results.splice( duplicates[ j ], 1 );
			}
		}
	
		// Clear input after sorting to release objects
		// See https://github.com/jquery/sizzle/pull/225
		sortInput = null;
	
		return results;
	};
	
	/**
	 * Utility function for retrieving the text value of an array of DOM nodes
	 * @param {Array|Element} elem
	 */
	getText = Sizzle.getText = function( elem ) {
		var node,
			ret = "",
			i = 0,
			nodeType = elem.nodeType;
	
		if ( !nodeType ) {
			// If no nodeType, this is expected to be an array
			while ( (node = elem[i++]) ) {
				// Do not traverse comment nodes
				ret += getText( node );
			}
		} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
			// Use textContent for elements
			// innerText usage removed for consistency of new lines (jQuery #11153)
			if ( typeof elem.textContent === "string" ) {
				return elem.textContent;
			} else {
				// Traverse its children
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
					ret += getText( elem );
				}
			}
		} else if ( nodeType === 3 || nodeType === 4 ) {
			return elem.nodeValue;
		}
		// Do not include comment or processing instruction nodes
	
		return ret;
	};
	
	Expr = Sizzle.selectors = {
	
		// Can be adjusted by the user
		cacheLength: 50,
	
		createPseudo: markFunction,
	
		match: matchExpr,
	
		attrHandle: {},
	
		find: {},
	
		relative: {
			">": { dir: "parentNode", first: true },
			" ": { dir: "parentNode" },
			"+": { dir: "previousSibling", first: true },
			"~": { dir: "previousSibling" }
		},
	
		preFilter: {
			"ATTR": function( match ) {
				match[1] = match[1].replace( runescape, funescape );
	
				// Move the given value to match[3] whether quoted or unquoted
				match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );
	
				if ( match[2] === "~=" ) {
					match[3] = " " + match[3] + " ";
				}
	
				return match.slice( 0, 4 );
			},
	
			"CHILD": function( match ) {
				/* matches from matchExpr["CHILD"]
					1 type (only|nth|...)
					2 what (child|of-type)
					3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
					4 xn-component of xn+y argument ([+-]?\d*n|)
					5 sign of xn-component
					6 x of xn-component
					7 sign of y-component
					8 y of y-component
				*/
				match[1] = match[1].toLowerCase();
	
				if ( match[1].slice( 0, 3 ) === "nth" ) {
					// nth-* requires argument
					if ( !match[3] ) {
						Sizzle.error( match[0] );
					}
	
					// numeric x and y parameters for Expr.filter.CHILD
					// remember that false/true cast respectively to 0/1
					match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
					match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );
	
				// other types prohibit arguments
				} else if ( match[3] ) {
					Sizzle.error( match[0] );
				}
	
				return match;
			},
	
			"PSEUDO": function( match ) {
				var excess,
					unquoted = !match[6] && match[2];
	
				if ( matchExpr["CHILD"].test( match[0] ) ) {
					return null;
				}
	
				// Accept quoted arguments as-is
				if ( match[3] ) {
					match[2] = match[4] || match[5] || "";
	
				// Strip excess characters from unquoted arguments
				} else if ( unquoted && rpseudo.test( unquoted ) &&
					// Get excess from tokenize (recursively)
					(excess = tokenize( unquoted, true )) &&
					// advance to the next closing parenthesis
					(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {
	
					// excess is a negative index
					match[0] = match[0].slice( 0, excess );
					match[2] = unquoted.slice( 0, excess );
				}
	
				// Return only captures needed by the pseudo filter method (type and argument)
				return match.slice( 0, 3 );
			}
		},
	
		filter: {
	
			"TAG": function( nodeNameSelector ) {
				var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
				return nodeNameSelector === "*" ?
					function() { return true; } :
					function( elem ) {
						return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
					};
			},
	
			"CLASS": function( className ) {
				var pattern = classCache[ className + " " ];
	
				return pattern ||
					(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
					classCache( className, function( elem ) {
						return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
					});
			},
	
			"ATTR": function( name, operator, check ) {
				return function( elem ) {
					var result = Sizzle.attr( elem, name );
	
					if ( result == null ) {
						return operator === "!=";
					}
					if ( !operator ) {
						return true;
					}
	
					result += "";
	
					return operator === "=" ? result === check :
						operator === "!=" ? result !== check :
						operator === "^=" ? check && result.indexOf( check ) === 0 :
						operator === "*=" ? check && result.indexOf( check ) > -1 :
						operator === "$=" ? check && result.slice( -check.length ) === check :
						operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
						operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
						false;
				};
			},
	
			"CHILD": function( type, what, argument, first, last ) {
				var simple = type.slice( 0, 3 ) !== "nth",
					forward = type.slice( -4 ) !== "last",
					ofType = what === "of-type";
	
				return first === 1 && last === 0 ?
	
					// Shortcut for :nth-*(n)
					function( elem ) {
						return !!elem.parentNode;
					} :
	
					function( elem, context, xml ) {
						var cache, outerCache, node, diff, nodeIndex, start,
							dir = simple !== forward ? "nextSibling" : "previousSibling",
							parent = elem.parentNode,
							name = ofType && elem.nodeName.toLowerCase(),
							useCache = !xml && !ofType;
	
						if ( parent ) {
	
							// :(first|last|only)-(child|of-type)
							if ( simple ) {
								while ( dir ) {
									node = elem;
									while ( (node = node[ dir ]) ) {
										if ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {
											return false;
										}
									}
									// Reverse direction for :only-* (if we haven't yet done so)
									start = dir = type === "only" && !start && "nextSibling";
								}
								return true;
							}
	
							start = [ forward ? parent.firstChild : parent.lastChild ];
	
							// non-xml :nth-child(...) stores cache data on `parent`
							if ( forward && useCache ) {
								// Seek `elem` from a previously-cached index
								outerCache = parent[ expando ] || (parent[ expando ] = {});
								cache = outerCache[ type ] || [];
								nodeIndex = cache[0] === dirruns && cache[1];
								diff = cache[0] === dirruns && cache[2];
								node = nodeIndex && parent.childNodes[ nodeIndex ];
	
								while ( (node = ++nodeIndex && node && node[ dir ] ||
	
									// Fallback to seeking `elem` from the start
									(diff = nodeIndex = 0) || start.pop()) ) {
	
									// When found, cache indexes on `parent` and break
									if ( node.nodeType === 1 && ++diff && node === elem ) {
										outerCache[ type ] = [ dirruns, nodeIndex, diff ];
										break;
									}
								}
	
							// Use previously-cached element index if available
							} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {
								diff = cache[1];
	
							// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)
							} else {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {
	
									if ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {
										// Cache the index of each encountered element
										if ( useCache ) {
											(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];
										}
	
										if ( node === elem ) {
											break;
										}
									}
								}
							}
	
							// Incorporate the offset, then check against cycle size
							diff -= last;
							return diff === first || ( diff % first === 0 && diff / first >= 0 );
						}
					};
			},
	
			"PSEUDO": function( pseudo, argument ) {
				// pseudo-class names are case-insensitive
				// http://www.w3.org/TR/selectors/#pseudo-classes
				// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
				// Remember that setFilters inherits from pseudos
				var args,
					fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
						Sizzle.error( "unsupported pseudo: " + pseudo );
	
				// The user may use createPseudo to indicate that
				// arguments are needed to create the filter function
				// just as Sizzle does
				if ( fn[ expando ] ) {
					return fn( argument );
				}
	
				// But maintain support for old signatures
				if ( fn.length > 1 ) {
					args = [ pseudo, pseudo, "", argument ];
					return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
						markFunction(function( seed, matches ) {
							var idx,
								matched = fn( seed, argument ),
								i = matched.length;
							while ( i-- ) {
								idx = indexOf( seed, matched[i] );
								seed[ idx ] = !( matches[ idx ] = matched[i] );
							}
						}) :
						function( elem ) {
							return fn( elem, 0, args );
						};
				}
	
				return fn;
			}
		},
	
		pseudos: {
			// Potentially complex pseudos
			"not": markFunction(function( selector ) {
				// Trim the selector passed to compile
				// to avoid treating leading and trailing
				// spaces as combinators
				var input = [],
					results = [],
					matcher = compile( selector.replace( rtrim, "$1" ) );
	
				return matcher[ expando ] ?
					markFunction(function( seed, matches, context, xml ) {
						var elem,
							unmatched = matcher( seed, null, xml, [] ),
							i = seed.length;
	
						// Match elements unmatched by `matcher`
						while ( i-- ) {
							if ( (elem = unmatched[i]) ) {
								seed[i] = !(matches[i] = elem);
							}
						}
					}) :
					function( elem, context, xml ) {
						input[0] = elem;
						matcher( input, null, xml, results );
						// Don't keep the element (issue #299)
						input[0] = null;
						return !results.pop();
					};
			}),
	
			"has": markFunction(function( selector ) {
				return function( elem ) {
					return Sizzle( selector, elem ).length > 0;
				};
			}),
	
			"contains": markFunction(function( text ) {
				text = text.replace( runescape, funescape );
				return function( elem ) {
					return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
				};
			}),
	
			// "Whether an element is represented by a :lang() selector
			// is based solely on the element's language value
			// being equal to the identifier C,
			// or beginning with the identifier C immediately followed by "-".
			// The matching of C against the element's language value is performed case-insensitively.
			// The identifier C does not have to be a valid language name."
			// http://www.w3.org/TR/selectors/#lang-pseudo
			"lang": markFunction( function( lang ) {
				// lang value must be a valid identifier
				if ( !ridentifier.test(lang || "") ) {
					Sizzle.error( "unsupported lang: " + lang );
				}
				lang = lang.replace( runescape, funescape ).toLowerCase();
				return function( elem ) {
					var elemLang;
					do {
						if ( (elemLang = documentIsHTML ?
							elem.lang :
							elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {
	
							elemLang = elemLang.toLowerCase();
							return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
						}
					} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
					return false;
				};
			}),
	
			// Miscellaneous
			"target": function( elem ) {
				var hash = window.location && window.location.hash;
				return hash && hash.slice( 1 ) === elem.id;
			},
	
			"root": function( elem ) {
				return elem === docElem;
			},
	
			"focus": function( elem ) {
				return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
			},
	
			// Boolean properties
			"enabled": function( elem ) {
				return elem.disabled === false;
			},
	
			"disabled": function( elem ) {
				return elem.disabled === true;
			},
	
			"checked": function( elem ) {
				// In CSS3, :checked should return both checked and selected elements
				// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
				var nodeName = elem.nodeName.toLowerCase();
				return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
			},
	
			"selected": function( elem ) {
				// Accessing this property makes selected-by-default
				// options in Safari work properly
				if ( elem.parentNode ) {
					elem.parentNode.selectedIndex;
				}
	
				return elem.selected === true;
			},
	
			// Contents
			"empty": function( elem ) {
				// http://www.w3.org/TR/selectors/#empty-pseudo
				// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
				//   but not by others (comment: 8; processing instruction: 7; etc.)
				// nodeType < 6 works because attributes (2) do not appear as children
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
					if ( elem.nodeType < 6 ) {
						return false;
					}
				}
				return true;
			},
	
			"parent": function( elem ) {
				return !Expr.pseudos["empty"]( elem );
			},
	
			// Element/input types
			"header": function( elem ) {
				return rheader.test( elem.nodeName );
			},
	
			"input": function( elem ) {
				return rinputs.test( elem.nodeName );
			},
	
			"button": function( elem ) {
				var name = elem.nodeName.toLowerCase();
				return name === "input" && elem.type === "button" || name === "button";
			},
	
			"text": function( elem ) {
				var attr;
				return elem.nodeName.toLowerCase() === "input" &&
					elem.type === "text" &&
	
					// Support: IE<8
					// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
					( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
			},
	
			// Position-in-collection
			"first": createPositionalPseudo(function() {
				return [ 0 ];
			}),
	
			"last": createPositionalPseudo(function( matchIndexes, length ) {
				return [ length - 1 ];
			}),
	
			"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
				return [ argument < 0 ? argument + length : argument ];
			}),
	
			"even": createPositionalPseudo(function( matchIndexes, length ) {
				var i = 0;
				for ( ; i < length; i += 2 ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),
	
			"odd": createPositionalPseudo(function( matchIndexes, length ) {
				var i = 1;
				for ( ; i < length; i += 2 ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),
	
			"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
				var i = argument < 0 ? argument + length : argument;
				for ( ; --i >= 0; ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),
	
			"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
				var i = argument < 0 ? argument + length : argument;
				for ( ; ++i < length; ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			})
		}
	};
	
	Expr.pseudos["nth"] = Expr.pseudos["eq"];
	
	// Add button/input type pseudos
	for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
		Expr.pseudos[ i ] = createInputPseudo( i );
	}
	for ( i in { submit: true, reset: true } ) {
		Expr.pseudos[ i ] = createButtonPseudo( i );
	}
	
	// Easy API for creating new setFilters
	function setFilters() {}
	setFilters.prototype = Expr.filters = Expr.pseudos;
	Expr.setFilters = new setFilters();
	
	tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
		var matched, match, tokens, type,
			soFar, groups, preFilters,
			cached = tokenCache[ selector + " " ];
	
		if ( cached ) {
			return parseOnly ? 0 : cached.slice( 0 );
		}
	
		soFar = selector;
		groups = [];
		preFilters = Expr.preFilter;
	
		while ( soFar ) {
	
			// Comma and first run
			if ( !matched || (match = rcomma.exec( soFar )) ) {
				if ( match ) {
					// Don't consume trailing commas as valid
					soFar = soFar.slice( match[0].length ) || soFar;
				}
				groups.push( (tokens = []) );
			}
	
			matched = false;
	
			// Combinators
			if ( (match = rcombinators.exec( soFar )) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					// Cast descendant combinators to space
					type: match[0].replace( rtrim, " " )
				});
				soFar = soFar.slice( matched.length );
			}
	
			// Filters
			for ( type in Expr.filter ) {
				if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
					(match = preFilters[ type ]( match ))) ) {
					matched = match.shift();
					tokens.push({
						value: matched,
						type: type,
						matches: match
					});
					soFar = soFar.slice( matched.length );
				}
			}
	
			if ( !matched ) {
				break;
			}
		}
	
		// Return the length of the invalid excess
		// if we're just parsing
		// Otherwise, throw an error or return tokens
		return parseOnly ?
			soFar.length :
			soFar ?
				Sizzle.error( selector ) :
				// Cache the tokens
				tokenCache( selector, groups ).slice( 0 );
	};
	
	function toSelector( tokens ) {
		var i = 0,
			len = tokens.length,
			selector = "";
		for ( ; i < len; i++ ) {
			selector += tokens[i].value;
		}
		return selector;
	}
	
	function addCombinator( matcher, combinator, base ) {
		var dir = combinator.dir,
			checkNonElements = base && dir === "parentNode",
			doneName = done++;
	
		return combinator.first ?
			// Check against closest ancestor/preceding element
			function( elem, context, xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						return matcher( elem, context, xml );
					}
				}
			} :
	
			// Check against all ancestor/preceding elements
			function( elem, context, xml ) {
				var oldCache, outerCache,
					newCache = [ dirruns, doneName ];
	
				// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching
				if ( xml ) {
					while ( (elem = elem[ dir ]) ) {
						if ( elem.nodeType === 1 || checkNonElements ) {
							if ( matcher( elem, context, xml ) ) {
								return true;
							}
						}
					}
				} else {
					while ( (elem = elem[ dir ]) ) {
						if ( elem.nodeType === 1 || checkNonElements ) {
							outerCache = elem[ expando ] || (elem[ expando ] = {});
							if ( (oldCache = outerCache[ dir ]) &&
								oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {
	
								// Assign to newCache so results back-propagate to previous elements
								return (newCache[ 2 ] = oldCache[ 2 ]);
							} else {
								// Reuse newcache so results back-propagate to previous elements
								outerCache[ dir ] = newCache;
	
								// A match means we're done; a fail means we have to keep checking
								if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
									return true;
								}
							}
						}
					}
				}
			};
	}
	
	function elementMatcher( matchers ) {
		return matchers.length > 1 ?
			function( elem, context, xml ) {
				var i = matchers.length;
				while ( i-- ) {
					if ( !matchers[i]( elem, context, xml ) ) {
						return false;
					}
				}
				return true;
			} :
			matchers[0];
	}
	
	function multipleContexts( selector, contexts, results ) {
		var i = 0,
			len = contexts.length;
		for ( ; i < len; i++ ) {
			Sizzle( selector, contexts[i], results );
		}
		return results;
	}
	
	function condense( unmatched, map, filter, context, xml ) {
		var elem,
			newUnmatched = [],
			i = 0,
			len = unmatched.length,
			mapped = map != null;
	
		for ( ; i < len; i++ ) {
			if ( (elem = unmatched[i]) ) {
				if ( !filter || filter( elem, context, xml ) ) {
					newUnmatched.push( elem );
					if ( mapped ) {
						map.push( i );
					}
				}
			}
		}
	
		return newUnmatched;
	}
	
	function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
		if ( postFilter && !postFilter[ expando ] ) {
			postFilter = setMatcher( postFilter );
		}
		if ( postFinder && !postFinder[ expando ] ) {
			postFinder = setMatcher( postFinder, postSelector );
		}
		return markFunction(function( seed, results, context, xml ) {
			var temp, i, elem,
				preMap = [],
				postMap = [],
				preexisting = results.length,
	
				// Get initial elements from seed or context
				elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),
	
				// Prefilter to get matcher input, preserving a map for seed-results synchronization
				matcherIn = preFilter && ( seed || !selector ) ?
					condense( elems, preMap, preFilter, context, xml ) :
					elems,
	
				matcherOut = matcher ?
					// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
					postFinder || ( seed ? preFilter : preexisting || postFilter ) ?
	
						// ...intermediate processing is necessary
						[] :
	
						// ...otherwise use results directly
						results :
					matcherIn;
	
			// Find primary matches
			if ( matcher ) {
				matcher( matcherIn, matcherOut, context, xml );
			}
	
			// Apply postFilter
			if ( postFilter ) {
				temp = condense( matcherOut, postMap );
				postFilter( temp, [], context, xml );
	
				// Un-match failing elements by moving them back to matcherIn
				i = temp.length;
				while ( i-- ) {
					if ( (elem = temp[i]) ) {
						matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
					}
				}
			}
	
			if ( seed ) {
				if ( postFinder || preFilter ) {
					if ( postFinder ) {
						// Get the final matcherOut by condensing this intermediate into postFinder contexts
						temp = [];
						i = matcherOut.length;
						while ( i-- ) {
							if ( (elem = matcherOut[i]) ) {
								// Restore matcherIn since elem is not yet a final match
								temp.push( (matcherIn[i] = elem) );
							}
						}
						postFinder( null, (matcherOut = []), temp, xml );
					}
	
					// Move matched elements from seed to results to keep them synchronized
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) &&
							(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {
	
							seed[temp] = !(results[temp] = elem);
						}
					}
				}
	
			// Add elements to results, through postFinder if defined
			} else {
				matcherOut = condense(
					matcherOut === results ?
						matcherOut.splice( preexisting, matcherOut.length ) :
						matcherOut
				);
				if ( postFinder ) {
					postFinder( null, results, matcherOut, xml );
				} else {
					push.apply( results, matcherOut );
				}
			}
		});
	}
	
	function matcherFromTokens( tokens ) {
		var checkContext, matcher, j,
			len = tokens.length,
			leadingRelative = Expr.relative[ tokens[0].type ],
			implicitRelative = leadingRelative || Expr.relative[" "],
			i = leadingRelative ? 1 : 0,
	
			// The foundational matcher ensures that elements are reachable from top-level context(s)
			matchContext = addCombinator( function( elem ) {
				return elem === checkContext;
			}, implicitRelative, true ),
			matchAnyContext = addCombinator( function( elem ) {
				return indexOf( checkContext, elem ) > -1;
			}, implicitRelative, true ),
			matchers = [ function( elem, context, xml ) {
				var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
					(checkContext = context).nodeType ?
						matchContext( elem, context, xml ) :
						matchAnyContext( elem, context, xml ) );
				// Avoid hanging onto element (issue #299)
				checkContext = null;
				return ret;
			} ];
	
		for ( ; i < len; i++ ) {
			if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
				matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
			} else {
				matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );
	
				// Return special upon seeing a positional matcher
				if ( matcher[ expando ] ) {
					// Find the next relative operator (if any) for proper handling
					j = ++i;
					for ( ; j < len; j++ ) {
						if ( Expr.relative[ tokens[j].type ] ) {
							break;
						}
					}
					return setMatcher(
						i > 1 && elementMatcher( matchers ),
						i > 1 && toSelector(
							// If the preceding token was a descendant combinator, insert an implicit any-element `*`
							tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
						).replace( rtrim, "$1" ),
						matcher,
						i < j && matcherFromTokens( tokens.slice( i, j ) ),
						j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
						j < len && toSelector( tokens )
					);
				}
				matchers.push( matcher );
			}
		}
	
		return elementMatcher( matchers );
	}
	
	function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
		var bySet = setMatchers.length > 0,
			byElement = elementMatchers.length > 0,
			superMatcher = function( seed, context, xml, results, outermost ) {
				var elem, j, matcher,
					matchedCount = 0,
					i = "0",
					unmatched = seed && [],
					setMatched = [],
					contextBackup = outermostContext,
					// We must always have either seed elements or outermost context
					elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
					// Use integer dirruns iff this is the outermost matcher
					dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
					len = elems.length;
	
				if ( outermost ) {
					outermostContext = context !== document && context;
				}
	
				// Add elements passing elementMatchers directly to results
				// Keep `i` a string if there are no elements so `matchedCount` will be "00" below
				// Support: IE<9, Safari
				// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
				for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
					if ( byElement && elem ) {
						j = 0;
						while ( (matcher = elementMatchers[j++]) ) {
							if ( matcher( elem, context, xml ) ) {
								results.push( elem );
								break;
							}
						}
						if ( outermost ) {
							dirruns = dirrunsUnique;
						}
					}
	
					// Track unmatched elements for set filters
					if ( bySet ) {
						// They will have gone through all possible matchers
						if ( (elem = !matcher && elem) ) {
							matchedCount--;
						}
	
						// Lengthen the array for every element, matched or not
						if ( seed ) {
							unmatched.push( elem );
						}
					}
				}
	
				// Apply set filters to unmatched elements
				matchedCount += i;
				if ( bySet && i !== matchedCount ) {
					j = 0;
					while ( (matcher = setMatchers[j++]) ) {
						matcher( unmatched, setMatched, context, xml );
					}
	
					if ( seed ) {
						// Reintegrate element matches to eliminate the need for sorting
						if ( matchedCount > 0 ) {
							while ( i-- ) {
								if ( !(unmatched[i] || setMatched[i]) ) {
									setMatched[i] = pop.call( results );
								}
							}
						}
	
						// Discard index placeholder values to get only actual matches
						setMatched = condense( setMatched );
					}
	
					// Add matches to results
					push.apply( results, setMatched );
	
					// Seedless set matches succeeding multiple successful matchers stipulate sorting
					if ( outermost && !seed && setMatched.length > 0 &&
						( matchedCount + setMatchers.length ) > 1 ) {
	
						Sizzle.uniqueSort( results );
					}
				}
	
				// Override manipulation of globals by nested matchers
				if ( outermost ) {
					dirruns = dirrunsUnique;
					outermostContext = contextBackup;
				}
	
				return unmatched;
			};
	
		return bySet ?
			markFunction( superMatcher ) :
			superMatcher;
	}
	
	compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
		var i,
			setMatchers = [],
			elementMatchers = [],
			cached = compilerCache[ selector + " " ];
	
		if ( !cached ) {
			// Generate a function of recursive functions that can be used to check each element
			if ( !match ) {
				match = tokenize( selector );
			}
			i = match.length;
			while ( i-- ) {
				cached = matcherFromTokens( match[i] );
				if ( cached[ expando ] ) {
					setMatchers.push( cached );
				} else {
					elementMatchers.push( cached );
				}
			}
	
			// Cache the compiled function
			cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );
	
			// Save selector and tokenization
			cached.selector = selector;
		}
		return cached;
	};
	
	/**
	 * A low-level selection function that works with Sizzle's compiled
	 *  selector functions
	 * @param {String|Function} selector A selector or a pre-compiled
	 *  selector function built with Sizzle.compile
	 * @param {Element} context
	 * @param {Array} [results]
	 * @param {Array} [seed] A set of elements to match against
	 */
	select = Sizzle.select = function( selector, context, results, seed ) {
		var i, tokens, token, type, find,
			compiled = typeof selector === "function" && selector,
			match = !seed && tokenize( (selector = compiled.selector || selector) );
	
		results = results || [];
	
		// Try to minimize operations if there is no seed and only one group
		if ( match.length === 1 ) {
	
			// Take a shortcut and set the context if the root selector is an ID
			tokens = match[0] = match[0].slice( 0 );
			if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
					support.getById && context.nodeType === 9 && documentIsHTML &&
					Expr.relative[ tokens[1].type ] ) {
	
				context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
				if ( !context ) {
					return results;
	
				// Precompiled matchers will still verify ancestry, so step up a level
				} else if ( compiled ) {
					context = context.parentNode;
				}
	
				selector = selector.slice( tokens.shift().value.length );
			}
	
			// Fetch a seed set for right-to-left matching
			i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
			while ( i-- ) {
				token = tokens[i];
	
				// Abort if we hit a combinator
				if ( Expr.relative[ (type = token.type) ] ) {
					break;
				}
				if ( (find = Expr.find[ type ]) ) {
					// Search, expanding context for leading sibling combinators
					if ( (seed = find(
						token.matches[0].replace( runescape, funescape ),
						rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
					)) ) {
	
						// If seed is empty or no tokens remain, we can return early
						tokens.splice( i, 1 );
						selector = seed.length && toSelector( tokens );
						if ( !selector ) {
							push.apply( results, seed );
							return results;
						}
	
						break;
					}
				}
			}
		}
	
		// Compile and execute a filtering function if one is not provided
		// Provide `match` to avoid retokenization if we modified the selector above
		( compiled || compile( selector, match ) )(
			seed,
			context,
			!documentIsHTML,
			results,
			rsibling.test( selector ) && testContext( context.parentNode ) || context
		);
		return results;
	};
	
	// One-time assignments
	
	// Sort stability
	support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;
	
	// Support: Chrome 14-35+
	// Always assume duplicates if they aren't passed to the comparison function
	support.detectDuplicates = !!hasDuplicate;
	
	// Initialize against the default document
	setDocument();
	
	// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
	// Detached nodes confoundingly follow *each other*
	support.sortDetached = assert(function( div1 ) {
		// Should return 1, but returns 4 (following)
		return div1.compareDocumentPosition( document.createElement("div") ) & 1;
	});
	
	// Support: IE<8
	// Prevent attribute/property "interpolation"
	// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
	if ( !assert(function( div ) {
		div.innerHTML = "<a href='#'></a>";
		return div.firstChild.getAttribute("href") === "#" ;
	}) ) {
		addHandle( "type|href|height|width", function( elem, name, isXML ) {
			if ( !isXML ) {
				return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
			}
		});
	}
	
	// Support: IE<9
	// Use defaultValue in place of getAttribute("value")
	if ( !support.attributes || !assert(function( div ) {
		div.innerHTML = "<input/>";
		div.firstChild.setAttribute( "value", "" );
		return div.firstChild.getAttribute( "value" ) === "";
	}) ) {
		addHandle( "value", function( elem, name, isXML ) {
			if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
				return elem.defaultValue;
			}
		});
	}
	
	// Support: IE<9
	// Use getAttributeNode to fetch booleans when getAttribute lies
	if ( !assert(function( div ) {
		return div.getAttribute("disabled") == null;
	}) ) {
		addHandle( booleans, function( elem, name, isXML ) {
			var val;
			if ( !isXML ) {
				return elem[ name ] === true ? name.toLowerCase() :
						(val = elem.getAttributeNode( name )) && val.specified ?
						val.value :
					null;
			}
		});
	}
	
	return Sizzle;
	
	})( window );
	
	
	
	jQuery.find = Sizzle;
	jQuery.expr = Sizzle.selectors;
	jQuery.expr[":"] = jQuery.expr.pseudos;
	jQuery.unique = Sizzle.uniqueSort;
	jQuery.text = Sizzle.getText;
	jQuery.isXMLDoc = Sizzle.isXML;
	jQuery.contains = Sizzle.contains;
	
	
	
	var rneedsContext = jQuery.expr.match.needsContext;
	
	var rsingleTag = (/^<(\w+)\s*\/?>(?:<\/\1>|)$/);
	
	
	
	var risSimple = /^.[^:#\[\.,]*$/;
	
	// Implement the identical functionality for filter and not
	function winnow( elements, qualifier, not ) {
		if ( jQuery.isFunction( qualifier ) ) {
			return jQuery.grep( elements, function( elem, i ) {
				/* jshint -W018 */
				return !!qualifier.call( elem, i, elem ) !== not;
			});
	
		}
	
		if ( qualifier.nodeType ) {
			return jQuery.grep( elements, function( elem ) {
				return ( elem === qualifier ) !== not;
			});
	
		}
	
		if ( typeof qualifier === "string" ) {
			if ( risSimple.test( qualifier ) ) {
				return jQuery.filter( qualifier, elements, not );
			}
	
			qualifier = jQuery.filter( qualifier, elements );
		}
	
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) >= 0 ) !== not;
		});
	}
	
	jQuery.filter = function( expr, elems, not ) {
		var elem = elems[ 0 ];
	
		if ( not ) {
			expr = ":not(" + expr + ")";
		}
	
		return elems.length === 1 && elem.nodeType === 1 ?
			jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
			jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
				return elem.nodeType === 1;
			}));
	};
	
	jQuery.fn.extend({
		find: function( selector ) {
			var i,
				len = this.length,
				ret = [],
				self = this;
	
			if ( typeof selector !== "string" ) {
				return this.pushStack( jQuery( selector ).filter(function() {
					for ( i = 0; i < len; i++ ) {
						if ( jQuery.contains( self[ i ], this ) ) {
							return true;
						}
					}
				}) );
			}
	
			for ( i = 0; i < len; i++ ) {
				jQuery.find( selector, self[ i ], ret );
			}
	
			// Needed because $( selector, context ) becomes $( context ).find( selector )
			ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
			ret.selector = this.selector ? this.selector + " " + selector : selector;
			return ret;
		},
		filter: function( selector ) {
			return this.pushStack( winnow(this, selector || [], false) );
		},
		not: function( selector ) {
			return this.pushStack( winnow(this, selector || [], true) );
		},
		is: function( selector ) {
			return !!winnow(
				this,
	
				// If this is a positional/relative selector, check membership in the returned set
				// so $("p:first").is("p:last") won't return true for a doc with two "p".
				typeof selector === "string" && rneedsContext.test( selector ) ?
					jQuery( selector ) :
					selector || [],
				false
			).length;
		}
	});
	
	
	// Initialize a jQuery object
	
	
	// A central reference to the root jQuery(document)
	var rootjQuery,
	
		// A simple way to check for HTML strings
		// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
		// Strict HTML recognition (#11290: must start with <)
		rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
	
		init = jQuery.fn.init = function( selector, context ) {
			var match, elem;
	
			// HANDLE: $(""), $(null), $(undefined), $(false)
			if ( !selector ) {
				return this;
			}
	
			// Handle HTML strings
			if ( typeof selector === "string" ) {
				if ( selector[0] === "<" && selector[ selector.length - 1 ] === ">" && selector.length >= 3 ) {
					// Assume that strings that start and end with <> are HTML and skip the regex check
					match = [ null, selector, null ];
	
				} else {
					match = rquickExpr.exec( selector );
				}
	
				// Match html or make sure no context is specified for #id
				if ( match && (match[1] || !context) ) {
	
					// HANDLE: $(html) -> $(array)
					if ( match[1] ) {
						context = context instanceof jQuery ? context[0] : context;
	
						// Option to run scripts is true for back-compat
						// Intentionally let the error be thrown if parseHTML is not present
						jQuery.merge( this, jQuery.parseHTML(
							match[1],
							context && context.nodeType ? context.ownerDocument || context : document,
							true
						) );
	
						// HANDLE: $(html, props)
						if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
							for ( match in context ) {
								// Properties of context are called as methods if possible
								if ( jQuery.isFunction( this[ match ] ) ) {
									this[ match ]( context[ match ] );
	
								// ...and otherwise set as attributes
								} else {
									this.attr( match, context[ match ] );
								}
							}
						}
	
						return this;
	
					// HANDLE: $(#id)
					} else {
						elem = document.getElementById( match[2] );
	
						// Support: Blackberry 4.6
						// gEBID returns nodes no longer in the document (#6963)
						if ( elem && elem.parentNode ) {
							// Inject the element directly into the jQuery object
							this.length = 1;
							this[0] = elem;
						}
	
						this.context = document;
						this.selector = selector;
						return this;
					}
	
				// HANDLE: $(expr, $(...))
				} else if ( !context || context.jquery ) {
					return ( context || rootjQuery ).find( selector );
	
				// HANDLE: $(expr, context)
				// (which is just equivalent to: $(context).find(expr)
				} else {
					return this.constructor( context ).find( selector );
				}
	
			// HANDLE: $(DOMElement)
			} else if ( selector.nodeType ) {
				this.context = this[0] = selector;
				this.length = 1;
				return this;
	
			// HANDLE: $(function)
			// Shortcut for document ready
			} else if ( jQuery.isFunction( selector ) ) {
				return typeof rootjQuery.ready !== "undefined" ?
					rootjQuery.ready( selector ) :
					// Execute immediately if ready is not present
					selector( jQuery );
			}
	
			if ( selector.selector !== undefined ) {
				this.selector = selector.selector;
				this.context = selector.context;
			}
	
			return jQuery.makeArray( selector, this );
		};
	
	// Give the init function the jQuery prototype for later instantiation
	init.prototype = jQuery.fn;
	
	// Initialize central reference
	rootjQuery = jQuery( document );
	
	
	var rparentsprev = /^(?:parents|prev(?:Until|All))/,
		// Methods guaranteed to produce a unique set when starting from a unique set
		guaranteedUnique = {
			children: true,
			contents: true,
			next: true,
			prev: true
		};
	
	jQuery.extend({
		dir: function( elem, dir, until ) {
			var matched = [],
				truncate = until !== undefined;
	
			while ( (elem = elem[ dir ]) && elem.nodeType !== 9 ) {
				if ( elem.nodeType === 1 ) {
					if ( truncate && jQuery( elem ).is( until ) ) {
						break;
					}
					matched.push( elem );
				}
			}
			return matched;
		},
	
		sibling: function( n, elem ) {
			var matched = [];
	
			for ( ; n; n = n.nextSibling ) {
				if ( n.nodeType === 1 && n !== elem ) {
					matched.push( n );
				}
			}
	
			return matched;
		}
	});
	
	jQuery.fn.extend({
		has: function( target ) {
			var targets = jQuery( target, this ),
				l = targets.length;
	
			return this.filter(function() {
				var i = 0;
				for ( ; i < l; i++ ) {
					if ( jQuery.contains( this, targets[i] ) ) {
						return true;
					}
				}
			});
		},
	
		closest: function( selectors, context ) {
			var cur,
				i = 0,
				l = this.length,
				matched = [],
				pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
					jQuery( selectors, context || this.context ) :
					0;
	
			for ( ; i < l; i++ ) {
				for ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {
					// Always skip document fragments
					if ( cur.nodeType < 11 && (pos ?
						pos.index(cur) > -1 :
	
						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector(cur, selectors)) ) {
	
						matched.push( cur );
						break;
					}
				}
			}
	
			return this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );
		},
	
		// Determine the position of an element within the set
		index: function( elem ) {
	
			// No argument, return index in parent
			if ( !elem ) {
				return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
			}
	
			// Index in selector
			if ( typeof elem === "string" ) {
				return indexOf.call( jQuery( elem ), this[ 0 ] );
			}
	
			// Locate the position of the desired element
			return indexOf.call( this,
	
				// If it receives a jQuery object, the first element is used
				elem.jquery ? elem[ 0 ] : elem
			);
		},
	
		add: function( selector, context ) {
			return this.pushStack(
				jQuery.unique(
					jQuery.merge( this.get(), jQuery( selector, context ) )
				)
			);
		},
	
		addBack: function( selector ) {
			return this.add( selector == null ?
				this.prevObject : this.prevObject.filter(selector)
			);
		}
	});
	
	function sibling( cur, dir ) {
		while ( (cur = cur[dir]) && cur.nodeType !== 1 ) {}
		return cur;
	}
	
	jQuery.each({
		parent: function( elem ) {
			var parent = elem.parentNode;
			return parent && parent.nodeType !== 11 ? parent : null;
		},
		parents: function( elem ) {
			return jQuery.dir( elem, "parentNode" );
		},
		parentsUntil: function( elem, i, until ) {
			return jQuery.dir( elem, "parentNode", until );
		},
		next: function( elem ) {
			return sibling( elem, "nextSibling" );
		},
		prev: function( elem ) {
			return sibling( elem, "previousSibling" );
		},
		nextAll: function( elem ) {
			return jQuery.dir( elem, "nextSibling" );
		},
		prevAll: function( elem ) {
			return jQuery.dir( elem, "previousSibling" );
		},
		nextUntil: function( elem, i, until ) {
			return jQuery.dir( elem, "nextSibling", until );
		},
		prevUntil: function( elem, i, until ) {
			return jQuery.dir( elem, "previousSibling", until );
		},
		siblings: function( elem ) {
			return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
		},
		children: function( elem ) {
			return jQuery.sibling( elem.firstChild );
		},
		contents: function( elem ) {
			return elem.contentDocument || jQuery.merge( [], elem.childNodes );
		}
	}, function( name, fn ) {
		jQuery.fn[ name ] = function( until, selector ) {
			var matched = jQuery.map( this, fn, until );
	
			if ( name.slice( -5 ) !== "Until" ) {
				selector = until;
			}
	
			if ( selector && typeof selector === "string" ) {
				matched = jQuery.filter( selector, matched );
			}
	
			if ( this.length > 1 ) {
				// Remove duplicates
				if ( !guaranteedUnique[ name ] ) {
					jQuery.unique( matched );
				}
	
				// Reverse order for parents* and prev-derivatives
				if ( rparentsprev.test( name ) ) {
					matched.reverse();
				}
			}
	
			return this.pushStack( matched );
		};
	});
	var rnotwhite = (/\S+/g);
	
	
	
	// String to Object options format cache
	var optionsCache = {};
	
	// Convert String-formatted options into Object-formatted ones and store in cache
	function createOptions( options ) {
		var object = optionsCache[ options ] = {};
		jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
			object[ flag ] = true;
		});
		return object;
	}
	
	/*
	 * Create a callback list using the following parameters:
	 *
	 *	options: an optional list of space-separated options that will change how
	 *			the callback list behaves or a more traditional option object
	 *
	 * By default a callback list will act like an event callback list and can be
	 * "fired" multiple times.
	 *
	 * Possible options:
	 *
	 *	once:			will ensure the callback list can only be fired once (like a Deferred)
	 *
	 *	memory:			will keep track of previous values and will call any callback added
	 *					after the list has been fired right away with the latest "memorized"
	 *					values (like a Deferred)
	 *
	 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
	 *
	 *	stopOnFalse:	interrupt callings when a callback returns false
	 *
	 */
	jQuery.Callbacks = function( options ) {
	
		// Convert options from String-formatted to Object-formatted if needed
		// (we check in cache first)
		options = typeof options === "string" ?
			( optionsCache[ options ] || createOptions( options ) ) :
			jQuery.extend( {}, options );
	
		var // Last fire value (for non-forgettable lists)
			memory,
			// Flag to know if list was already fired
			fired,
			// Flag to know if list is currently firing
			firing,
			// First callback to fire (used internally by add and fireWith)
			firingStart,
			// End of the loop when firing
			firingLength,
			// Index of currently firing callback (modified by remove if needed)
			firingIndex,
			// Actual callback list
			list = [],
			// Stack of fire calls for repeatable lists
			stack = !options.once && [],
			// Fire callbacks
			fire = function( data ) {
				memory = options.memory && data;
				fired = true;
				firingIndex = firingStart || 0;
				firingStart = 0;
				firingLength = list.length;
				firing = true;
				for ( ; list && firingIndex < firingLength; firingIndex++ ) {
					if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
						memory = false; // To prevent further calls using add
						break;
					}
				}
				firing = false;
				if ( list ) {
					if ( stack ) {
						if ( stack.length ) {
							fire( stack.shift() );
						}
					} else if ( memory ) {
						list = [];
					} else {
						self.disable();
					}
				}
			},
			// Actual Callbacks object
			self = {
				// Add a callback or a collection of callbacks to the list
				add: function() {
					if ( list ) {
						// First, we save the current length
						var start = list.length;
						(function add( args ) {
							jQuery.each( args, function( _, arg ) {
								var type = jQuery.type( arg );
								if ( type === "function" ) {
									if ( !options.unique || !self.has( arg ) ) {
										list.push( arg );
									}
								} else if ( arg && arg.length && type !== "string" ) {
									// Inspect recursively
									add( arg );
								}
							});
						})( arguments );
						// Do we need to add the callbacks to the
						// current firing batch?
						if ( firing ) {
							firingLength = list.length;
						// With memory, if we're not firing then
						// we should call right away
						} else if ( memory ) {
							firingStart = start;
							fire( memory );
						}
					}
					return this;
				},
				// Remove a callback from the list
				remove: function() {
					if ( list ) {
						jQuery.each( arguments, function( _, arg ) {
							var index;
							while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
								list.splice( index, 1 );
								// Handle firing indexes
								if ( firing ) {
									if ( index <= firingLength ) {
										firingLength--;
									}
									if ( index <= firingIndex ) {
										firingIndex--;
									}
								}
							}
						});
					}
					return this;
				},
				// Check if a given callback is in the list.
				// If no argument is given, return whether or not list has callbacks attached.
				has: function( fn ) {
					return fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );
				},
				// Remove all callbacks from the list
				empty: function() {
					list = [];
					firingLength = 0;
					return this;
				},
				// Have the list do nothing anymore
				disable: function() {
					list = stack = memory = undefined;
					return this;
				},
				// Is it disabled?
				disabled: function() {
					return !list;
				},
				// Lock the list in its current state
				lock: function() {
					stack = undefined;
					if ( !memory ) {
						self.disable();
					}
					return this;
				},
				// Is it locked?
				locked: function() {
					return !stack;
				},
				// Call all callbacks with the given context and arguments
				fireWith: function( context, args ) {
					if ( list && ( !fired || stack ) ) {
						args = args || [];
						args = [ context, args.slice ? args.slice() : args ];
						if ( firing ) {
							stack.push( args );
						} else {
							fire( args );
						}
					}
					return this;
				},
				// Call all the callbacks with the given arguments
				fire: function() {
					self.fireWith( this, arguments );
					return this;
				},
				// To know if the callbacks have already been called at least once
				fired: function() {
					return !!fired;
				}
			};
	
		return self;
	};
	
	
	jQuery.extend({
	
		Deferred: function( func ) {
			var tuples = [
					// action, add listener, listener list, final state
					[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],
					[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],
					[ "notify", "progress", jQuery.Callbacks("memory") ]
				],
				state = "pending",
				promise = {
					state: function() {
						return state;
					},
					always: function() {
						deferred.done( arguments ).fail( arguments );
						return this;
					},
					then: function( /* fnDone, fnFail, fnProgress */ ) {
						var fns = arguments;
						return jQuery.Deferred(function( newDefer ) {
							jQuery.each( tuples, function( i, tuple ) {
								var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];
								// deferred[ done | fail | progress ] for forwarding actions to newDefer
								deferred[ tuple[1] ](function() {
									var returned = fn && fn.apply( this, arguments );
									if ( returned && jQuery.isFunction( returned.promise ) ) {
										returned.promise()
											.done( newDefer.resolve )
											.fail( newDefer.reject )
											.progress( newDefer.notify );
									} else {
										newDefer[ tuple[ 0 ] + "With" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );
									}
								});
							});
							fns = null;
						}).promise();
					},
					// Get a promise for this deferred
					// If obj is provided, the promise aspect is added to the object
					promise: function( obj ) {
						return obj != null ? jQuery.extend( obj, promise ) : promise;
					}
				},
				deferred = {};
	
			// Keep pipe for back-compat
			promise.pipe = promise.then;
	
			// Add list-specific methods
			jQuery.each( tuples, function( i, tuple ) {
				var list = tuple[ 2 ],
					stateString = tuple[ 3 ];
	
				// promise[ done | fail | progress ] = list.add
				promise[ tuple[1] ] = list.add;
	
				// Handle state
				if ( stateString ) {
					list.add(function() {
						// state = [ resolved | rejected ]
						state = stateString;
	
					// [ reject_list | resolve_list ].disable; progress_list.lock
					}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
				}
	
				// deferred[ resolve | reject | notify ]
				deferred[ tuple[0] ] = function() {
					deferred[ tuple[0] + "With" ]( this === deferred ? promise : this, arguments );
					return this;
				};
				deferred[ tuple[0] + "With" ] = list.fireWith;
			});
	
			// Make the deferred a promise
			promise.promise( deferred );
	
			// Call given func if any
			if ( func ) {
				func.call( deferred, deferred );
			}
	
			// All done!
			return deferred;
		},
	
		// Deferred helper
		when: function( subordinate /* , ..., subordinateN */ ) {
			var i = 0,
				resolveValues = slice.call( arguments ),
				length = resolveValues.length,
	
				// the count of uncompleted subordinates
				remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,
	
				// the master Deferred. If resolveValues consist of only a single Deferred, just use that.
				deferred = remaining === 1 ? subordinate : jQuery.Deferred(),
	
				// Update function for both resolve and progress values
				updateFunc = function( i, contexts, values ) {
					return function( value ) {
						contexts[ i ] = this;
						values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
						if ( values === progressValues ) {
							deferred.notifyWith( contexts, values );
						} else if ( !( --remaining ) ) {
							deferred.resolveWith( contexts, values );
						}
					};
				},
	
				progressValues, progressContexts, resolveContexts;
	
			// Add listeners to Deferred subordinates; treat others as resolved
			if ( length > 1 ) {
				progressValues = new Array( length );
				progressContexts = new Array( length );
				resolveContexts = new Array( length );
				for ( ; i < length; i++ ) {
					if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
						resolveValues[ i ].promise()
							.done( updateFunc( i, resolveContexts, resolveValues ) )
							.fail( deferred.reject )
							.progress( updateFunc( i, progressContexts, progressValues ) );
					} else {
						--remaining;
					}
				}
			}
	
			// If we're not waiting on anything, resolve the master
			if ( !remaining ) {
				deferred.resolveWith( resolveContexts, resolveValues );
			}
	
			return deferred.promise();
		}
	});
	
	
	// The deferred used on DOM ready
	var readyList;
	
	jQuery.fn.ready = function( fn ) {
		// Add the callback
		jQuery.ready.promise().done( fn );
	
		return this;
	};
	
	jQuery.extend({
		// Is the DOM ready to be used? Set to true once it occurs.
		isReady: false,
	
		// A counter to track how many items to wait for before
		// the ready event fires. See #6781
		readyWait: 1,
	
		// Hold (or release) the ready event
		holdReady: function( hold ) {
			if ( hold ) {
				jQuery.readyWait++;
			} else {
				jQuery.ready( true );
			}
		},
	
		// Handle when the DOM is ready
		ready: function( wait ) {
	
			// Abort if there are pending holds or we're already ready
			if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
				return;
			}
	
			// Remember that the DOM is ready
			jQuery.isReady = true;
	
			// If a normal DOM Ready event fired, decrement, and wait if need be
			if ( wait !== true && --jQuery.readyWait > 0 ) {
				return;
			}
	
			// If there are functions bound, to execute
			readyList.resolveWith( document, [ jQuery ] );
	
			// Trigger any bound ready events
			if ( jQuery.fn.triggerHandler ) {
				jQuery( document ).triggerHandler( "ready" );
				jQuery( document ).off( "ready" );
			}
		}
	});
	
	/**
	 * The ready event handler and self cleanup method
	 */
	function completed() {
		document.removeEventListener( "DOMContentLoaded", completed, false );
		window.removeEventListener( "load", completed, false );
		jQuery.ready();
	}
	
	jQuery.ready.promise = function( obj ) {
		if ( !readyList ) {
	
			readyList = jQuery.Deferred();
	
			// Catch cases where $(document).ready() is called after the browser event has already occurred.
			// We once tried to use readyState "interactive" here, but it caused issues like the one
			// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
			if ( document.readyState === "complete" ) {
				// Handle it asynchronously to allow scripts the opportunity to delay ready
				setTimeout( jQuery.ready );
	
			} else {
	
				// Use the handy event callback
				document.addEventListener( "DOMContentLoaded", completed, false );
	
				// A fallback to window.onload, that will always work
				window.addEventListener( "load", completed, false );
			}
		}
		return readyList.promise( obj );
	};
	
	// Kick off the DOM ready check even if the user does not
	jQuery.ready.promise();
	
	
	
	
	// Multifunctional method to get and set values of a collection
	// The value/s can optionally be executed if it's a function
	var access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
		var i = 0,
			len = elems.length,
			bulk = key == null;
	
		// Sets many values
		if ( jQuery.type( key ) === "object" ) {
			chainable = true;
			for ( i in key ) {
				jQuery.access( elems, fn, i, key[i], true, emptyGet, raw );
			}
	
		// Sets one value
		} else if ( value !== undefined ) {
			chainable = true;
	
			if ( !jQuery.isFunction( value ) ) {
				raw = true;
			}
	
			if ( bulk ) {
				// Bulk operations run against the entire set
				if ( raw ) {
					fn.call( elems, value );
					fn = null;
	
				// ...except when executing function values
				} else {
					bulk = fn;
					fn = function( elem, key, value ) {
						return bulk.call( jQuery( elem ), value );
					};
				}
			}
	
			if ( fn ) {
				for ( ; i < len; i++ ) {
					fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );
				}
			}
		}
	
		return chainable ?
			elems :
	
			// Gets
			bulk ?
				fn.call( elems ) :
				len ? fn( elems[0], key ) : emptyGet;
	};
	
	
	/**
	 * Determines whether an object can have data
	 */
	jQuery.acceptData = function( owner ) {
		// Accepts only:
		//  - Node
		//    - Node.ELEMENT_NODE
		//    - Node.DOCUMENT_NODE
		//  - Object
		//    - Any
		/* jshint -W018 */
		return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
	};
	
	
	function Data() {
		// Support: Android<4,
		// Old WebKit does not have Object.preventExtensions/freeze method,
		// return new empty object instead with no [[set]] accessor
		Object.defineProperty( this.cache = {}, 0, {
			get: function() {
				return {};
			}
		});
	
		this.expando = jQuery.expando + Data.uid++;
	}
	
	Data.uid = 1;
	Data.accepts = jQuery.acceptData;
	
	Data.prototype = {
		key: function( owner ) {
			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return the key for a frozen object.
			if ( !Data.accepts( owner ) ) {
				return 0;
			}
	
			var descriptor = {},
				// Check if the owner object already has a cache key
				unlock = owner[ this.expando ];
	
			// If not, create one
			if ( !unlock ) {
				unlock = Data.uid++;
	
				// Secure it in a non-enumerable, non-writable property
				try {
					descriptor[ this.expando ] = { value: unlock };
					Object.defineProperties( owner, descriptor );
	
				// Support: Android<4
				// Fallback to a less secure definition
				} catch ( e ) {
					descriptor[ this.expando ] = unlock;
					jQuery.extend( owner, descriptor );
				}
			}
	
			// Ensure the cache object
			if ( !this.cache[ unlock ] ) {
				this.cache[ unlock ] = {};
			}
	
			return unlock;
		},
		set: function( owner, data, value ) {
			var prop,
				// There may be an unlock assigned to this node,
				// if there is no entry for this "owner", create one inline
				// and set the unlock as though an owner entry had always existed
				unlock = this.key( owner ),
				cache = this.cache[ unlock ];
	
			// Handle: [ owner, key, value ] args
			if ( typeof data === "string" ) {
				cache[ data ] = value;
	
			// Handle: [ owner, { properties } ] args
			} else {
				// Fresh assignments by object are shallow copied
				if ( jQuery.isEmptyObject( cache ) ) {
					jQuery.extend( this.cache[ unlock ], data );
				// Otherwise, copy the properties one-by-one to the cache object
				} else {
					for ( prop in data ) {
						cache[ prop ] = data[ prop ];
					}
				}
			}
			return cache;
		},
		get: function( owner, key ) {
			// Either a valid cache is found, or will be created.
			// New caches will be created and the unlock returned,
			// allowing direct access to the newly created
			// empty data object. A valid owner object must be provided.
			var cache = this.cache[ this.key( owner ) ];
	
			return key === undefined ?
				cache : cache[ key ];
		},
		access: function( owner, key, value ) {
			var stored;
			// In cases where either:
			//
			//   1. No key was specified
			//   2. A string key was specified, but no value provided
			//
			// Take the "read" path and allow the get method to determine
			// which value to return, respectively either:
			//
			//   1. The entire cache object
			//   2. The data stored at the key
			//
			if ( key === undefined ||
					((key && typeof key === "string") && value === undefined) ) {
	
				stored = this.get( owner, key );
	
				return stored !== undefined ?
					stored : this.get( owner, jQuery.camelCase(key) );
			}
	
			// [*]When the key is not a string, or both a key and value
			// are specified, set or extend (existing objects) with either:
			//
			//   1. An object of properties
			//   2. A key and value
			//
			this.set( owner, key, value );
	
			// Since the "set" path can have two possible entry points
			// return the expected data based on which path was taken[*]
			return value !== undefined ? value : key;
		},
		remove: function( owner, key ) {
			var i, name, camel,
				unlock = this.key( owner ),
				cache = this.cache[ unlock ];
	
			if ( key === undefined ) {
				this.cache[ unlock ] = {};
	
			} else {
				// Support array or space separated string of keys
				if ( jQuery.isArray( key ) ) {
					// If "name" is an array of keys...
					// When data is initially created, via ("key", "val") signature,
					// keys will be converted to camelCase.
					// Since there is no way to tell _how_ a key was added, remove
					// both plain key and camelCase key. #12786
					// This will only penalize the array argument path.
					name = key.concat( key.map( jQuery.camelCase ) );
				} else {
					camel = jQuery.camelCase( key );
					// Try the string as a key before any manipulation
					if ( key in cache ) {
						name = [ key, camel ];
					} else {
						// If a key with the spaces exists, use it.
						// Otherwise, create an array by matching non-whitespace
						name = camel;
						name = name in cache ?
							[ name ] : ( name.match( rnotwhite ) || [] );
					}
				}
	
				i = name.length;
				while ( i-- ) {
					delete cache[ name[ i ] ];
				}
			}
		},
		hasData: function( owner ) {
			return !jQuery.isEmptyObject(
				this.cache[ owner[ this.expando ] ] || {}
			);
		},
		discard: function( owner ) {
			if ( owner[ this.expando ] ) {
				delete this.cache[ owner[ this.expando ] ];
			}
		}
	};
	var data_priv = new Data();
	
	var data_user = new Data();
	
	
	
	//	Implementation Summary
	//
	//	1. Enforce API surface and semantic compatibility with 1.9.x branch
	//	2. Improve the module's maintainability by reducing the storage
	//		paths to a single mechanism.
	//	3. Use the same single mechanism to support "private" and "user" data.
	//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
	//	5. Avoid exposing implementation details on user objects (eg. expando properties)
	//	6. Provide a clear path for implementation upgrade to WeakMap in 2014
	
	var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
		rmultiDash = /([A-Z])/g;
	
	function dataAttr( elem, key, data ) {
		var name;
	
		// If nothing was found internally, try to fetch any
		// data from the HTML5 data-* attribute
		if ( data === undefined && elem.nodeType === 1 ) {
			name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();
			data = elem.getAttribute( name );
	
			if ( typeof data === "string" ) {
				try {
					data = data === "true" ? true :
						data === "false" ? false :
						data === "null" ? null :
						// Only convert to a number if it doesn't change the string
						+data + "" === data ? +data :
						rbrace.test( data ) ? jQuery.parseJSON( data ) :
						data;
				} catch( e ) {}
	
				// Make sure we set the data so it isn't changed later
				data_user.set( elem, key, data );
			} else {
				data = undefined;
			}
		}
		return data;
	}
	
	jQuery.extend({
		hasData: function( elem ) {
			return data_user.hasData( elem ) || data_priv.hasData( elem );
		},
	
		data: function( elem, name, data ) {
			return data_user.access( elem, name, data );
		},
	
		removeData: function( elem, name ) {
			data_user.remove( elem, name );
		},
	
		// TODO: Now that all calls to _data and _removeData have been replaced
		// with direct calls to data_priv methods, these can be deprecated.
		_data: function( elem, name, data ) {
			return data_priv.access( elem, name, data );
		},
	
		_removeData: function( elem, name ) {
			data_priv.remove( elem, name );
		}
	});
	
	jQuery.fn.extend({
		data: function( key, value ) {
			var i, name, data,
				elem = this[ 0 ],
				attrs = elem && elem.attributes;
	
			// Gets all values
			if ( key === undefined ) {
				if ( this.length ) {
					data = data_user.get( elem );
	
					if ( elem.nodeType === 1 && !data_priv.get( elem, "hasDataAttrs" ) ) {
						i = attrs.length;
						while ( i-- ) {
	
							// Support: IE11+
							// The attrs elements can be null (#14894)
							if ( attrs[ i ] ) {
								name = attrs[ i ].name;
								if ( name.indexOf( "data-" ) === 0 ) {
									name = jQuery.camelCase( name.slice(5) );
									dataAttr( elem, name, data[ name ] );
								}
							}
						}
						data_priv.set( elem, "hasDataAttrs", true );
					}
				}
	
				return data;
			}
	
			// Sets multiple values
			if ( typeof key === "object" ) {
				return this.each(function() {
					data_user.set( this, key );
				});
			}
	
			return access( this, function( value ) {
				var data,
					camelKey = jQuery.camelCase( key );
	
				// The calling jQuery object (element matches) is not empty
				// (and therefore has an element appears at this[ 0 ]) and the
				// `value` parameter was not undefined. An empty jQuery object
				// will result in `undefined` for elem = this[ 0 ] which will
				// throw an exception if an attempt to read a data cache is made.
				if ( elem && value === undefined ) {
					// Attempt to get data from the cache
					// with the key as-is
					data = data_user.get( elem, key );
					if ( data !== undefined ) {
						return data;
					}
	
					// Attempt to get data from the cache
					// with the key camelized
					data = data_user.get( elem, camelKey );
					if ( data !== undefined ) {
						return data;
					}
	
					// Attempt to "discover" the data in
					// HTML5 custom data-* attrs
					data = dataAttr( elem, camelKey, undefined );
					if ( data !== undefined ) {
						return data;
					}
	
					// We tried really hard, but the data doesn't exist.
					return;
				}
	
				// Set the data...
				this.each(function() {
					// First, attempt to store a copy or reference of any
					// data that might've been store with a camelCased key.
					var data = data_user.get( this, camelKey );
	
					// For HTML5 data-* attribute interop, we have to
					// store property names with dashes in a camelCase form.
					// This might not apply to all properties...*
					data_user.set( this, camelKey, value );
	
					// *... In the case of properties that might _actually_
					// have dashes, we need to also store a copy of that
					// unchanged property.
					if ( key.indexOf("-") !== -1 && data !== undefined ) {
						data_user.set( this, key, value );
					}
				});
			}, null, value, arguments.length > 1, null, true );
		},
	
		removeData: function( key ) {
			return this.each(function() {
				data_user.remove( this, key );
			});
		}
	});
	
	
	jQuery.extend({
		queue: function( elem, type, data ) {
			var queue;
	
			if ( elem ) {
				type = ( type || "fx" ) + "queue";
				queue = data_priv.get( elem, type );
	
				// Speed up dequeue by getting out quickly if this is just a lookup
				if ( data ) {
					if ( !queue || jQuery.isArray( data ) ) {
						queue = data_priv.access( elem, type, jQuery.makeArray(data) );
					} else {
						queue.push( data );
					}
				}
				return queue || [];
			}
		},
	
		dequeue: function( elem, type ) {
			type = type || "fx";
	
			var queue = jQuery.queue( elem, type ),
				startLength = queue.length,
				fn = queue.shift(),
				hooks = jQuery._queueHooks( elem, type ),
				next = function() {
					jQuery.dequeue( elem, type );
				};
	
			// If the fx queue is dequeued, always remove the progress sentinel
			if ( fn === "inprogress" ) {
				fn = queue.shift();
				startLength--;
			}
	
			if ( fn ) {
	
				// Add a progress sentinel to prevent the fx queue from being
				// automatically dequeued
				if ( type === "fx" ) {
					queue.unshift( "inprogress" );
				}
	
				// Clear up the last queue stop function
				delete hooks.stop;
				fn.call( elem, next, hooks );
			}
	
			if ( !startLength && hooks ) {
				hooks.empty.fire();
			}
		},
	
		// Not public - generate a queueHooks object, or return the current one
		_queueHooks: function( elem, type ) {
			var key = type + "queueHooks";
			return data_priv.get( elem, key ) || data_priv.access( elem, key, {
				empty: jQuery.Callbacks("once memory").add(function() {
					data_priv.remove( elem, [ type + "queue", key ] );
				})
			});
		}
	});
	
	jQuery.fn.extend({
		queue: function( type, data ) {
			var setter = 2;
	
			if ( typeof type !== "string" ) {
				data = type;
				type = "fx";
				setter--;
			}
	
			if ( arguments.length < setter ) {
				return jQuery.queue( this[0], type );
			}
	
			return data === undefined ?
				this :
				this.each(function() {
					var queue = jQuery.queue( this, type, data );
	
					// Ensure a hooks for this queue
					jQuery._queueHooks( this, type );
	
					if ( type === "fx" && queue[0] !== "inprogress" ) {
						jQuery.dequeue( this, type );
					}
				});
		},
		dequeue: function( type ) {
			return this.each(function() {
				jQuery.dequeue( this, type );
			});
		},
		clearQueue: function( type ) {
			return this.queue( type || "fx", [] );
		},
		// Get a promise resolved when queues of a certain type
		// are emptied (fx is the type by default)
		promise: function( type, obj ) {
			var tmp,
				count = 1,
				defer = jQuery.Deferred(),
				elements = this,
				i = this.length,
				resolve = function() {
					if ( !( --count ) ) {
						defer.resolveWith( elements, [ elements ] );
					}
				};
	
			if ( typeof type !== "string" ) {
				obj = type;
				type = undefined;
			}
			type = type || "fx";
	
			while ( i-- ) {
				tmp = data_priv.get( elements[ i ], type + "queueHooks" );
				if ( tmp && tmp.empty ) {
					count++;
					tmp.empty.add( resolve );
				}
			}
			resolve();
			return defer.promise( obj );
		}
	});
	var pnum = (/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;
	
	var cssExpand = [ "Top", "Right", "Bottom", "Left" ];
	
	var isHidden = function( elem, el ) {
			// isHidden might be called from jQuery#filter function;
			// in that case, element will be second argument
			elem = el || elem;
			return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );
		};
	
	var rcheckableType = (/^(?:checkbox|radio)$/i);
	
	
	
	(function() {
		var fragment = document.createDocumentFragment(),
			div = fragment.appendChild( document.createElement( "div" ) ),
			input = document.createElement( "input" );
	
		// Support: Safari<=5.1
		// Check state lost if the name is set (#11217)
		// Support: Windows Web Apps (WWA)
		// `name` and `type` must use .setAttribute for WWA (#14901)
		input.setAttribute( "type", "radio" );
		input.setAttribute( "checked", "checked" );
		input.setAttribute( "name", "t" );
	
		div.appendChild( input );
	
		// Support: Safari<=5.1, Android<4.2
		// Older WebKit doesn't clone checked state correctly in fragments
		support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;
	
		// Support: IE<=11+
		// Make sure textarea (and checkbox) defaultValue is properly cloned
		div.innerHTML = "<textarea>x</textarea>";
		support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
	})();
	var strundefined = typeof undefined;
	
	
	
	support.focusinBubbles = "onfocusin" in window;
	
	
	var
		rkeyEvent = /^key/,
		rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,
		rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
		rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;
	
	function returnTrue() {
		return true;
	}
	
	function returnFalse() {
		return false;
	}
	
	function safeActiveElement() {
		try {
			return document.activeElement;
		} catch ( err ) { }
	}
	
	/*
	 * Helper functions for managing events -- not part of the public interface.
	 * Props to Dean Edwards' addEvent library for many of the ideas.
	 */
	jQuery.event = {
	
		global: {},
	
		add: function( elem, types, handler, data, selector ) {
	
			var handleObjIn, eventHandle, tmp,
				events, t, handleObj,
				special, handlers, type, namespaces, origType,
				elemData = data_priv.get( elem );
	
			// Don't attach events to noData or text/comment nodes (but allow plain objects)
			if ( !elemData ) {
				return;
			}
	
			// Caller can pass in an object of custom data in lieu of the handler
			if ( handler.handler ) {
				handleObjIn = handler;
				handler = handleObjIn.handler;
				selector = handleObjIn.selector;
			}
	
			// Make sure that the handler has a unique ID, used to find/remove it later
			if ( !handler.guid ) {
				handler.guid = jQuery.guid++;
			}
	
			// Init the element's event structure and main handler, if this is the first
			if ( !(events = elemData.events) ) {
				events = elemData.events = {};
			}
			if ( !(eventHandle = elemData.handle) ) {
				eventHandle = elemData.handle = function( e ) {
					// Discard the second event of a jQuery.event.trigger() and
					// when an event is called after a page has unloaded
					return typeof jQuery !== strundefined && jQuery.event.triggered !== e.type ?
						jQuery.event.dispatch.apply( elem, arguments ) : undefined;
				};
			}
	
			// Handle multiple events separated by a space
			types = ( types || "" ).match( rnotwhite ) || [ "" ];
			t = types.length;
			while ( t-- ) {
				tmp = rtypenamespace.exec( types[t] ) || [];
				type = origType = tmp[1];
				namespaces = ( tmp[2] || "" ).split( "." ).sort();
	
				// There *must* be a type, no attaching namespace-only handlers
				if ( !type ) {
					continue;
				}
	
				// If event changes its type, use the special event handlers for the changed type
				special = jQuery.event.special[ type ] || {};
	
				// If selector defined, determine special event api type, otherwise given type
				type = ( selector ? special.delegateType : special.bindType ) || type;
	
				// Update special based on newly reset type
				special = jQuery.event.special[ type ] || {};
	
				// handleObj is passed to all event handlers
				handleObj = jQuery.extend({
					type: type,
					origType: origType,
					data: data,
					handler: handler,
					guid: handler.guid,
					selector: selector,
					needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
					namespace: namespaces.join(".")
				}, handleObjIn );
	
				// Init the event handler queue if we're the first
				if ( !(handlers = events[ type ]) ) {
					handlers = events[ type ] = [];
					handlers.delegateCount = 0;
	
					// Only use addEventListener if the special events handler returns false
					if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
						if ( elem.addEventListener ) {
							elem.addEventListener( type, eventHandle, false );
						}
					}
				}
	
				if ( special.add ) {
					special.add.call( elem, handleObj );
	
					if ( !handleObj.handler.guid ) {
						handleObj.handler.guid = handler.guid;
					}
				}
	
				// Add to the element's handler list, delegates in front
				if ( selector ) {
					handlers.splice( handlers.delegateCount++, 0, handleObj );
				} else {
					handlers.push( handleObj );
				}
	
				// Keep track of which events have ever been used, for event optimization
				jQuery.event.global[ type ] = true;
			}
	
		},
	
		// Detach an event or set of events from an element
		remove: function( elem, types, handler, selector, mappedTypes ) {
	
			var j, origCount, tmp,
				events, t, handleObj,
				special, handlers, type, namespaces, origType,
				elemData = data_priv.hasData( elem ) && data_priv.get( elem );
	
			if ( !elemData || !(events = elemData.events) ) {
				return;
			}
	
			// Once for each type.namespace in types; type may be omitted
			types = ( types || "" ).match( rnotwhite ) || [ "" ];
			t = types.length;
			while ( t-- ) {
				tmp = rtypenamespace.exec( types[t] ) || [];
				type = origType = tmp[1];
				namespaces = ( tmp[2] || "" ).split( "." ).sort();
	
				// Unbind all events (on this namespace, if provided) for the element
				if ( !type ) {
					for ( type in events ) {
						jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
					}
					continue;
				}
	
				special = jQuery.event.special[ type ] || {};
				type = ( selector ? special.delegateType : special.bindType ) || type;
				handlers = events[ type ] || [];
				tmp = tmp[2] && new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" );
	
				// Remove matching events
				origCount = j = handlers.length;
				while ( j-- ) {
					handleObj = handlers[ j ];
	
					if ( ( mappedTypes || origType === handleObj.origType ) &&
						( !handler || handler.guid === handleObj.guid ) &&
						( !tmp || tmp.test( handleObj.namespace ) ) &&
						( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
						handlers.splice( j, 1 );
	
						if ( handleObj.selector ) {
							handlers.delegateCount--;
						}
						if ( special.remove ) {
							special.remove.call( elem, handleObj );
						}
					}
				}
	
				// Remove generic event handler if we removed something and no more handlers exist
				// (avoids potential for endless recursion during removal of special event handlers)
				if ( origCount && !handlers.length ) {
					if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
						jQuery.removeEvent( elem, type, elemData.handle );
					}
	
					delete events[ type ];
				}
			}
	
			// Remove the expando if it's no longer used
			if ( jQuery.isEmptyObject( events ) ) {
				delete elemData.handle;
				data_priv.remove( elem, "events" );
			}
		},
	
		trigger: function( event, data, elem, onlyHandlers ) {
	
			var i, cur, tmp, bubbleType, ontype, handle, special,
				eventPath = [ elem || document ],
				type = hasOwn.call( event, "type" ) ? event.type : event,
				namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split(".") : [];
	
			cur = tmp = elem = elem || document;
	
			// Don't do events on text and comment nodes
			if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
				return;
			}
	
			// focus/blur morphs to focusin/out; ensure we're not firing them right now
			if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
				return;
			}
	
			if ( type.indexOf(".") >= 0 ) {
				// Namespaced trigger; create a regexp to match event type in handle()
				namespaces = type.split(".");
				type = namespaces.shift();
				namespaces.sort();
			}
			ontype = type.indexOf(":") < 0 && "on" + type;
	
			// Caller can pass in a jQuery.Event object, Object, or just an event type string
			event = event[ jQuery.expando ] ?
				event :
				new jQuery.Event( type, typeof event === "object" && event );
	
			// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
			event.isTrigger = onlyHandlers ? 2 : 3;
			event.namespace = namespaces.join(".");
			event.namespace_re = event.namespace ?
				new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" ) :
				null;
	
			// Clean up the event in case it is being reused
			event.result = undefined;
			if ( !event.target ) {
				event.target = elem;
			}
	
			// Clone any incoming data and prepend the event, creating the handler arg list
			data = data == null ?
				[ event ] :
				jQuery.makeArray( data, [ event ] );
	
			// Allow special events to draw outside the lines
			special = jQuery.event.special[ type ] || {};
			if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
				return;
			}
	
			// Determine event propagation path in advance, per W3C events spec (#9951)
			// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
			if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {
	
				bubbleType = special.delegateType || type;
				if ( !rfocusMorph.test( bubbleType + type ) ) {
					cur = cur.parentNode;
				}
				for ( ; cur; cur = cur.parentNode ) {
					eventPath.push( cur );
					tmp = cur;
				}
	
				// Only add window if we got to document (e.g., not plain obj or detached DOM)
				if ( tmp === (elem.ownerDocument || document) ) {
					eventPath.push( tmp.defaultView || tmp.parentWindow || window );
				}
			}
	
			// Fire handlers on the event path
			i = 0;
			while ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {
	
				event.type = i > 1 ?
					bubbleType :
					special.bindType || type;
	
				// jQuery handler
				handle = ( data_priv.get( cur, "events" ) || {} )[ event.type ] && data_priv.get( cur, "handle" );
				if ( handle ) {
					handle.apply( cur, data );
				}
	
				// Native handler
				handle = ontype && cur[ ontype ];
				if ( handle && handle.apply && jQuery.acceptData( cur ) ) {
					event.result = handle.apply( cur, data );
					if ( event.result === false ) {
						event.preventDefault();
					}
				}
			}
			event.type = type;
	
			// If nobody prevented the default action, do it now
			if ( !onlyHandlers && !event.isDefaultPrevented() ) {
	
				if ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&
					jQuery.acceptData( elem ) ) {
	
					// Call a native DOM method on the target with the same name name as the event.
					// Don't do default actions on window, that's where global variables be (#6170)
					if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {
	
						// Don't re-trigger an onFOO event when we call its FOO() method
						tmp = elem[ ontype ];
	
						if ( tmp ) {
							elem[ ontype ] = null;
						}
	
						// Prevent re-triggering of the same event, since we already bubbled it above
						jQuery.event.triggered = type;
						elem[ type ]();
						jQuery.event.triggered = undefined;
	
						if ( tmp ) {
							elem[ ontype ] = tmp;
						}
					}
				}
			}
	
			return event.result;
		},
	
		dispatch: function( event ) {
	
			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( event );
	
			var i, j, ret, matched, handleObj,
				handlerQueue = [],
				args = slice.call( arguments ),
				handlers = ( data_priv.get( this, "events" ) || {} )[ event.type ] || [],
				special = jQuery.event.special[ event.type ] || {};
	
			// Use the fix-ed jQuery.Event rather than the (read-only) native event
			args[0] = event;
			event.delegateTarget = this;
	
			// Call the preDispatch hook for the mapped type, and let it bail if desired
			if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
				return;
			}
	
			// Determine handlers
			handlerQueue = jQuery.event.handlers.call( this, event, handlers );
	
			// Run delegates first; they may want to stop propagation beneath us
			i = 0;
			while ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {
				event.currentTarget = matched.elem;
	
				j = 0;
				while ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {
	
					// Triggered event must either 1) have no namespace, or 2) have namespace(s)
					// a subset or equal to those in the bound event (both can have no namespace).
					if ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {
	
						event.handleObj = handleObj;
						event.data = handleObj.data;
	
						ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
								.apply( matched.elem, args );
	
						if ( ret !== undefined ) {
							if ( (event.result = ret) === false ) {
								event.preventDefault();
								event.stopPropagation();
							}
						}
					}
				}
			}
	
			// Call the postDispatch hook for the mapped type
			if ( special.postDispatch ) {
				special.postDispatch.call( this, event );
			}
	
			return event.result;
		},
	
		handlers: function( event, handlers ) {
			var i, matches, sel, handleObj,
				handlerQueue = [],
				delegateCount = handlers.delegateCount,
				cur = event.target;
	
			// Find delegate handlers
			// Black-hole SVG <use> instance trees (#13180)
			// Avoid non-left-click bubbling in Firefox (#3861)
			if ( delegateCount && cur.nodeType && (!event.button || event.type !== "click") ) {
	
				for ( ; cur !== this; cur = cur.parentNode || this ) {
	
					// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
					if ( cur.disabled !== true || event.type !== "click" ) {
						matches = [];
						for ( i = 0; i < delegateCount; i++ ) {
							handleObj = handlers[ i ];
	
							// Don't conflict with Object.prototype properties (#13203)
							sel = handleObj.selector + " ";
	
							if ( matches[ sel ] === undefined ) {
								matches[ sel ] = handleObj.needsContext ?
									jQuery( sel, this ).index( cur ) >= 0 :
									jQuery.find( sel, this, null, [ cur ] ).length;
							}
							if ( matches[ sel ] ) {
								matches.push( handleObj );
							}
						}
						if ( matches.length ) {
							handlerQueue.push({ elem: cur, handlers: matches });
						}
					}
				}
			}
	
			// Add the remaining (directly-bound) handlers
			if ( delegateCount < handlers.length ) {
				handlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });
			}
	
			return handlerQueue;
		},
	
		// Includes some event props shared by KeyEvent and MouseEvent
		props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
	
		fixHooks: {},
	
		keyHooks: {
			props: "char charCode key keyCode".split(" "),
			filter: function( event, original ) {
	
				// Add which for key events
				if ( event.which == null ) {
					event.which = original.charCode != null ? original.charCode : original.keyCode;
				}
	
				return event;
			}
		},
	
		mouseHooks: {
			props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
			filter: function( event, original ) {
				var eventDoc, doc, body,
					button = original.button;
	
				// Calculate pageX/Y if missing and clientX/Y available
				if ( event.pageX == null && original.clientX != null ) {
					eventDoc = event.target.ownerDocument || document;
					doc = eventDoc.documentElement;
					body = eventDoc.body;
	
					event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
					event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
				}
	
				// Add which for click: 1 === left; 2 === middle; 3 === right
				// Note: button is not normalized, so don't use it
				if ( !event.which && button !== undefined ) {
					event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
				}
	
				return event;
			}
		},
	
		fix: function( event ) {
			if ( event[ jQuery.expando ] ) {
				return event;
			}
	
			// Create a writable copy of the event object and normalize some properties
			var i, prop, copy,
				type = event.type,
				originalEvent = event,
				fixHook = this.fixHooks[ type ];
	
			if ( !fixHook ) {
				this.fixHooks[ type ] = fixHook =
					rmouseEvent.test( type ) ? this.mouseHooks :
					rkeyEvent.test( type ) ? this.keyHooks :
					{};
			}
			copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;
	
			event = new jQuery.Event( originalEvent );
	
			i = copy.length;
			while ( i-- ) {
				prop = copy[ i ];
				event[ prop ] = originalEvent[ prop ];
			}
	
			// Support: Cordova 2.5 (WebKit) (#13255)
			// All events should have a target; Cordova deviceready doesn't
			if ( !event.target ) {
				event.target = document;
			}
	
			// Support: Safari 6.0+, Chrome<28
			// Target should not be a text node (#504, #13143)
			if ( event.target.nodeType === 3 ) {
				event.target = event.target.parentNode;
			}
	
			return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
		},
	
		special: {
			load: {
				// Prevent triggered image.load events from bubbling to window.load
				noBubble: true
			},
			focus: {
				// Fire native event if possible so blur/focus sequence is correct
				trigger: function() {
					if ( this !== safeActiveElement() && this.focus ) {
						this.focus();
						return false;
					}
				},
				delegateType: "focusin"
			},
			blur: {
				trigger: function() {
					if ( this === safeActiveElement() && this.blur ) {
						this.blur();
						return false;
					}
				},
				delegateType: "focusout"
			},
			click: {
				// For checkbox, fire native event so checked state will be right
				trigger: function() {
					if ( this.type === "checkbox" && this.click && jQuery.nodeName( this, "input" ) ) {
						this.click();
						return false;
					}
				},
	
				// For cross-browser consistency, don't fire native .click() on links
				_default: function( event ) {
					return jQuery.nodeName( event.target, "a" );
				}
			},
	
			beforeunload: {
				postDispatch: function( event ) {
	
					// Support: Firefox 20+
					// Firefox doesn't alert if the returnValue field is not set.
					if ( event.result !== undefined && event.originalEvent ) {
						event.originalEvent.returnValue = event.result;
					}
				}
			}
		},
	
		simulate: function( type, elem, event, bubble ) {
			// Piggyback on a donor event to simulate a different one.
			// Fake originalEvent to avoid donor's stopPropagation, but if the
			// simulated event prevents default then we do the same on the donor.
			var e = jQuery.extend(
				new jQuery.Event(),
				event,
				{
					type: type,
					isSimulated: true,
					originalEvent: {}
				}
			);
			if ( bubble ) {
				jQuery.event.trigger( e, null, elem );
			} else {
				jQuery.event.dispatch.call( elem, e );
			}
			if ( e.isDefaultPrevented() ) {
				event.preventDefault();
			}
		}
	};
	
	jQuery.removeEvent = function( elem, type, handle ) {
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle, false );
		}
	};
	
	jQuery.Event = function( src, props ) {
		// Allow instantiation without the 'new' keyword
		if ( !(this instanceof jQuery.Event) ) {
			return new jQuery.Event( src, props );
		}
	
		// Event object
		if ( src && src.type ) {
			this.originalEvent = src;
			this.type = src.type;
	
			// Events bubbling up the document may have been marked as prevented
			// by a handler lower down the tree; reflect the correct value.
			this.isDefaultPrevented = src.defaultPrevented ||
					src.defaultPrevented === undefined &&
					// Support: Android<4.0
					src.returnValue === false ?
				returnTrue :
				returnFalse;
	
		// Event type
		} else {
			this.type = src;
		}
	
		// Put explicitly provided properties onto the event object
		if ( props ) {
			jQuery.extend( this, props );
		}
	
		// Create a timestamp if incoming event doesn't have one
		this.timeStamp = src && src.timeStamp || jQuery.now();
	
		// Mark it as fixed
		this[ jQuery.expando ] = true;
	};
	
	// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
	// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
	jQuery.Event.prototype = {
		isDefaultPrevented: returnFalse,
		isPropagationStopped: returnFalse,
		isImmediatePropagationStopped: returnFalse,
	
		preventDefault: function() {
			var e = this.originalEvent;
	
			this.isDefaultPrevented = returnTrue;
	
			if ( e && e.preventDefault ) {
				e.preventDefault();
			}
		},
		stopPropagation: function() {
			var e = this.originalEvent;
	
			this.isPropagationStopped = returnTrue;
	
			if ( e && e.stopPropagation ) {
				e.stopPropagation();
			}
		},
		stopImmediatePropagation: function() {
			var e = this.originalEvent;
	
			this.isImmediatePropagationStopped = returnTrue;
	
			if ( e && e.stopImmediatePropagation ) {
				e.stopImmediatePropagation();
			}
	
			this.stopPropagation();
		}
	};
	
	// Create mouseenter/leave events using mouseover/out and event-time checks
	// Support: Chrome 15+
	jQuery.each({
		mouseenter: "mouseover",
		mouseleave: "mouseout",
		pointerenter: "pointerover",
		pointerleave: "pointerout"
	}, function( orig, fix ) {
		jQuery.event.special[ orig ] = {
			delegateType: fix,
			bindType: fix,
	
			handle: function( event ) {
				var ret,
					target = this,
					related = event.relatedTarget,
					handleObj = event.handleObj;
	
				// For mousenter/leave call the handler if related is outside the target.
				// NB: No relatedTarget if the mouse left/entered the browser window
				if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
					event.type = handleObj.origType;
					ret = handleObj.handler.apply( this, arguments );
					event.type = fix;
				}
				return ret;
			}
		};
	});
	
	// Support: Firefox, Chrome, Safari
	// Create "bubbling" focus and blur events
	if ( !support.focusinBubbles ) {
		jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {
	
			// Attach a single capturing handler on the document while someone wants focusin/focusout
			var handler = function( event ) {
					jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
				};
	
			jQuery.event.special[ fix ] = {
				setup: function() {
					var doc = this.ownerDocument || this,
						attaches = data_priv.access( doc, fix );
	
					if ( !attaches ) {
						doc.addEventListener( orig, handler, true );
					}
					data_priv.access( doc, fix, ( attaches || 0 ) + 1 );
				},
				teardown: function() {
					var doc = this.ownerDocument || this,
						attaches = data_priv.access( doc, fix ) - 1;
	
					if ( !attaches ) {
						doc.removeEventListener( orig, handler, true );
						data_priv.remove( doc, fix );
	
					} else {
						data_priv.access( doc, fix, attaches );
					}
				}
			};
		});
	}
	
	jQuery.fn.extend({
	
		on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
			var origFn, type;
	
			// Types can be a map of types/handlers
			if ( typeof types === "object" ) {
				// ( types-Object, selector, data )
				if ( typeof selector !== "string" ) {
					// ( types-Object, data )
					data = data || selector;
					selector = undefined;
				}
				for ( type in types ) {
					this.on( type, selector, data, types[ type ], one );
				}
				return this;
			}
	
			if ( data == null && fn == null ) {
				// ( types, fn )
				fn = selector;
				data = selector = undefined;
			} else if ( fn == null ) {
				if ( typeof selector === "string" ) {
					// ( types, selector, fn )
					fn = data;
					data = undefined;
				} else {
					// ( types, data, fn )
					fn = data;
					data = selector;
					selector = undefined;
				}
			}
			if ( fn === false ) {
				fn = returnFalse;
			} else if ( !fn ) {
				return this;
			}
	
			if ( one === 1 ) {
				origFn = fn;
				fn = function( event ) {
					// Can use an empty set, since event contains the info
					jQuery().off( event );
					return origFn.apply( this, arguments );
				};
				// Use same guid so caller can remove using origFn
				fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
			}
			return this.each( function() {
				jQuery.event.add( this, types, fn, data, selector );
			});
		},
		one: function( types, selector, data, fn ) {
			return this.on( types, selector, data, fn, 1 );
		},
		off: function( types, selector, fn ) {
			var handleObj, type;
			if ( types && types.preventDefault && types.handleObj ) {
				// ( event )  dispatched jQuery.Event
				handleObj = types.handleObj;
				jQuery( types.delegateTarget ).off(
					handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
					handleObj.selector,
					handleObj.handler
				);
				return this;
			}
			if ( typeof types === "object" ) {
				// ( types-object [, selector] )
				for ( type in types ) {
					this.off( type, selector, types[ type ] );
				}
				return this;
			}
			if ( selector === false || typeof selector === "function" ) {
				// ( types [, fn] )
				fn = selector;
				selector = undefined;
			}
			if ( fn === false ) {
				fn = returnFalse;
			}
			return this.each(function() {
				jQuery.event.remove( this, types, fn, selector );
			});
		},
	
		trigger: function( type, data ) {
			return this.each(function() {
				jQuery.event.trigger( type, data, this );
			});
		},
		triggerHandler: function( type, data ) {
			var elem = this[0];
			if ( elem ) {
				return jQuery.event.trigger( type, data, elem, true );
			}
		}
	});
	
	
	var
		rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
		rtagName = /<([\w:]+)/,
		rhtml = /<|&#?\w+;/,
		rnoInnerhtml = /<(?:script|style|link)/i,
		// checked="checked" or checked
		rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
		rscriptType = /^$|\/(?:java|ecma)script/i,
		rscriptTypeMasked = /^true\/(.*)/,
		rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
	
		// We have to close these tags to support XHTML (#13200)
		wrapMap = {
	
			// Support: IE9
			option: [ 1, "<select multiple='multiple'>", "</select>" ],
	
			thead: [ 1, "<table>", "</table>" ],
			col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
			tr: [ 2, "<table><tbody>", "</tbody></table>" ],
			td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
	
			_default: [ 0, "", "" ]
		};
	
	// Support: IE9
	wrapMap.optgroup = wrapMap.option;
	
	wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
	wrapMap.th = wrapMap.td;
	
	// Support: 1.x compatibility
	// Manipulating tables requires a tbody
	function manipulationTarget( elem, content ) {
		return jQuery.nodeName( elem, "table" ) &&
			jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?
	
			elem.getElementsByTagName("tbody")[0] ||
				elem.appendChild( elem.ownerDocument.createElement("tbody") ) :
			elem;
	}
	
	// Replace/restore the type attribute of script elements for safe DOM manipulation
	function disableScript( elem ) {
		elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
		return elem;
	}
	function restoreScript( elem ) {
		var match = rscriptTypeMasked.exec( elem.type );
	
		if ( match ) {
			elem.type = match[ 1 ];
		} else {
			elem.removeAttribute("type");
		}
	
		return elem;
	}
	
	// Mark scripts as having already been evaluated
	function setGlobalEval( elems, refElements ) {
		var i = 0,
			l = elems.length;
	
		for ( ; i < l; i++ ) {
			data_priv.set(
				elems[ i ], "globalEval", !refElements || data_priv.get( refElements[ i ], "globalEval" )
			);
		}
	}
	
	function cloneCopyEvent( src, dest ) {
		var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;
	
		if ( dest.nodeType !== 1 ) {
			return;
		}
	
		// 1. Copy private data: events, handlers, etc.
		if ( data_priv.hasData( src ) ) {
			pdataOld = data_priv.access( src );
			pdataCur = data_priv.set( dest, pdataOld );
			events = pdataOld.events;
	
			if ( events ) {
				delete pdataCur.handle;
				pdataCur.events = {};
	
				for ( type in events ) {
					for ( i = 0, l = events[ type ].length; i < l; i++ ) {
						jQuery.event.add( dest, type, events[ type ][ i ] );
					}
				}
			}
		}
	
		// 2. Copy user data
		if ( data_user.hasData( src ) ) {
			udataOld = data_user.access( src );
			udataCur = jQuery.extend( {}, udataOld );
	
			data_user.set( dest, udataCur );
		}
	}
	
	function getAll( context, tag ) {
		var ret = context.getElementsByTagName ? context.getElementsByTagName( tag || "*" ) :
				context.querySelectorAll ? context.querySelectorAll( tag || "*" ) :
				[];
	
		return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
			jQuery.merge( [ context ], ret ) :
			ret;
	}
	
	// Fix IE bugs, see support tests
	function fixInput( src, dest ) {
		var nodeName = dest.nodeName.toLowerCase();
	
		// Fails to persist the checked state of a cloned checkbox or radio button.
		if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
			dest.checked = src.checked;
	
		// Fails to return the selected option to the default selected state when cloning options
		} else if ( nodeName === "input" || nodeName === "textarea" ) {
			dest.defaultValue = src.defaultValue;
		}
	}
	
	jQuery.extend({
		clone: function( elem, dataAndEvents, deepDataAndEvents ) {
			var i, l, srcElements, destElements,
				clone = elem.cloneNode( true ),
				inPage = jQuery.contains( elem.ownerDocument, elem );
	
			// Fix IE cloning issues
			if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
					!jQuery.isXMLDoc( elem ) ) {
	
				// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
				destElements = getAll( clone );
				srcElements = getAll( elem );
	
				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					fixInput( srcElements[ i ], destElements[ i ] );
				}
			}
	
			// Copy the events from the original to the clone
			if ( dataAndEvents ) {
				if ( deepDataAndEvents ) {
					srcElements = srcElements || getAll( elem );
					destElements = destElements || getAll( clone );
	
					for ( i = 0, l = srcElements.length; i < l; i++ ) {
						cloneCopyEvent( srcElements[ i ], destElements[ i ] );
					}
				} else {
					cloneCopyEvent( elem, clone );
				}
			}
	
			// Preserve script evaluation history
			destElements = getAll( clone, "script" );
			if ( destElements.length > 0 ) {
				setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
			}
	
			// Return the cloned set
			return clone;
		},
	
		buildFragment: function( elems, context, scripts, selection ) {
			var elem, tmp, tag, wrap, contains, j,
				fragment = context.createDocumentFragment(),
				nodes = [],
				i = 0,
				l = elems.length;
	
			for ( ; i < l; i++ ) {
				elem = elems[ i ];
	
				if ( elem || elem === 0 ) {
	
					// Add nodes directly
					if ( jQuery.type( elem ) === "object" ) {
						// Support: QtWebKit, PhantomJS
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );
	
					// Convert non-html into a text node
					} else if ( !rhtml.test( elem ) ) {
						nodes.push( context.createTextNode( elem ) );
	
					// Convert html into DOM nodes
					} else {
						tmp = tmp || fragment.appendChild( context.createElement("div") );
	
						// Deserialize a standard representation
						tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
						wrap = wrapMap[ tag ] || wrapMap._default;
						tmp.innerHTML = wrap[ 1 ] + elem.replace( rxhtmlTag, "<$1></$2>" ) + wrap[ 2 ];
	
						// Descend through wrappers to the right content
						j = wrap[ 0 ];
						while ( j-- ) {
							tmp = tmp.lastChild;
						}
	
						// Support: QtWebKit, PhantomJS
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( nodes, tmp.childNodes );
	
						// Remember the top-level container
						tmp = fragment.firstChild;
	
						// Ensure the created nodes are orphaned (#12392)
						tmp.textContent = "";
					}
				}
			}
	
			// Remove wrapper from fragment
			fragment.textContent = "";
	
			i = 0;
			while ( (elem = nodes[ i++ ]) ) {
	
				// #4087 - If origin and destination elements are the same, and this is
				// that element, do not do anything
				if ( selection && jQuery.inArray( elem, selection ) !== -1 ) {
					continue;
				}
	
				contains = jQuery.contains( elem.ownerDocument, elem );
	
				// Append to fragment
				tmp = getAll( fragment.appendChild( elem ), "script" );
	
				// Preserve script evaluation history
				if ( contains ) {
					setGlobalEval( tmp );
				}
	
				// Capture executables
				if ( scripts ) {
					j = 0;
					while ( (elem = tmp[ j++ ]) ) {
						if ( rscriptType.test( elem.type || "" ) ) {
							scripts.push( elem );
						}
					}
				}
			}
	
			return fragment;
		},
	
		cleanData: function( elems ) {
			var data, elem, type, key,
				special = jQuery.event.special,
				i = 0;
	
			for ( ; (elem = elems[ i ]) !== undefined; i++ ) {
				if ( jQuery.acceptData( elem ) ) {
					key = elem[ data_priv.expando ];
	
					if ( key && (data = data_priv.cache[ key ]) ) {
						if ( data.events ) {
							for ( type in data.events ) {
								if ( special[ type ] ) {
									jQuery.event.remove( elem, type );
	
								// This is a shortcut to avoid jQuery.event.remove's overhead
								} else {
									jQuery.removeEvent( elem, type, data.handle );
								}
							}
						}
						if ( data_priv.cache[ key ] ) {
							// Discard any remaining `private` data
							delete data_priv.cache[ key ];
						}
					}
				}
				// Discard any remaining `user` data
				delete data_user.cache[ elem[ data_user.expando ] ];
			}
		}
	});
	
	jQuery.fn.extend({
		text: function( value ) {
			return access( this, function( value ) {
				return value === undefined ?
					jQuery.text( this ) :
					this.empty().each(function() {
						if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
							this.textContent = value;
						}
					});
			}, null, value, arguments.length );
		},
	
		append: function() {
			return this.domManip( arguments, function( elem ) {
				if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
					var target = manipulationTarget( this, elem );
					target.appendChild( elem );
				}
			});
		},
	
		prepend: function() {
			return this.domManip( arguments, function( elem ) {
				if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
					var target = manipulationTarget( this, elem );
					target.insertBefore( elem, target.firstChild );
				}
			});
		},
	
		before: function() {
			return this.domManip( arguments, function( elem ) {
				if ( this.parentNode ) {
					this.parentNode.insertBefore( elem, this );
				}
			});
		},
	
		after: function() {
			return this.domManip( arguments, function( elem ) {
				if ( this.parentNode ) {
					this.parentNode.insertBefore( elem, this.nextSibling );
				}
			});
		},
	
		remove: function( selector, keepData /* Internal Use Only */ ) {
			var elem,
				elems = selector ? jQuery.filter( selector, this ) : this,
				i = 0;
	
			for ( ; (elem = elems[i]) != null; i++ ) {
				if ( !keepData && elem.nodeType === 1 ) {
					jQuery.cleanData( getAll( elem ) );
				}
	
				if ( elem.parentNode ) {
					if ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {
						setGlobalEval( getAll( elem, "script" ) );
					}
					elem.parentNode.removeChild( elem );
				}
			}
	
			return this;
		},
	
		empty: function() {
			var elem,
				i = 0;
	
			for ( ; (elem = this[i]) != null; i++ ) {
				if ( elem.nodeType === 1 ) {
	
					// Prevent memory leaks
					jQuery.cleanData( getAll( elem, false ) );
	
					// Remove any remaining nodes
					elem.textContent = "";
				}
			}
	
			return this;
		},
	
		clone: function( dataAndEvents, deepDataAndEvents ) {
			dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
			deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
	
			return this.map(function() {
				return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
			});
		},
	
		html: function( value ) {
			return access( this, function( value ) {
				var elem = this[ 0 ] || {},
					i = 0,
					l = this.length;
	
				if ( value === undefined && elem.nodeType === 1 ) {
					return elem.innerHTML;
				}
	
				// See if we can take a shortcut and just use innerHTML
				if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
					!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {
	
					value = value.replace( rxhtmlTag, "<$1></$2>" );
	
					try {
						for ( ; i < l; i++ ) {
							elem = this[ i ] || {};
	
							// Remove element nodes and prevent memory leaks
							if ( elem.nodeType === 1 ) {
								jQuery.cleanData( getAll( elem, false ) );
								elem.innerHTML = value;
							}
						}
	
						elem = 0;
	
					// If using innerHTML throws an exception, use the fallback method
					} catch( e ) {}
				}
	
				if ( elem ) {
					this.empty().append( value );
				}
			}, null, value, arguments.length );
		},
	
		replaceWith: function() {
			var arg = arguments[ 0 ];
	
			// Make the changes, replacing each context element with the new content
			this.domManip( arguments, function( elem ) {
				arg = this.parentNode;
	
				jQuery.cleanData( getAll( this ) );
	
				if ( arg ) {
					arg.replaceChild( elem, this );
				}
			});
	
			// Force removal if there was no new content (e.g., from empty arguments)
			return arg && (arg.length || arg.nodeType) ? this : this.remove();
		},
	
		detach: function( selector ) {
			return this.remove( selector, true );
		},
	
		domManip: function( args, callback ) {
	
			// Flatten any nested arrays
			args = concat.apply( [], args );
	
			var fragment, first, scripts, hasScripts, node, doc,
				i = 0,
				l = this.length,
				set = this,
				iNoClone = l - 1,
				value = args[ 0 ],
				isFunction = jQuery.isFunction( value );
	
			// We can't cloneNode fragments that contain checked, in WebKit
			if ( isFunction ||
					( l > 1 && typeof value === "string" &&
						!support.checkClone && rchecked.test( value ) ) ) {
				return this.each(function( index ) {
					var self = set.eq( index );
					if ( isFunction ) {
						args[ 0 ] = value.call( this, index, self.html() );
					}
					self.domManip( args, callback );
				});
			}
	
			if ( l ) {
				fragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );
				first = fragment.firstChild;
	
				if ( fragment.childNodes.length === 1 ) {
					fragment = first;
				}
	
				if ( first ) {
					scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
					hasScripts = scripts.length;
	
					// Use the original fragment for the last item instead of the first because it can end up
					// being emptied incorrectly in certain situations (#8070).
					for ( ; i < l; i++ ) {
						node = fragment;
	
						if ( i !== iNoClone ) {
							node = jQuery.clone( node, true, true );
	
							// Keep references to cloned scripts for later restoration
							if ( hasScripts ) {
								// Support: QtWebKit
								// jQuery.merge because push.apply(_, arraylike) throws
								jQuery.merge( scripts, getAll( node, "script" ) );
							}
						}
	
						callback.call( this[ i ], node, i );
					}
	
					if ( hasScripts ) {
						doc = scripts[ scripts.length - 1 ].ownerDocument;
	
						// Reenable scripts
						jQuery.map( scripts, restoreScript );
	
						// Evaluate executable scripts on first document insertion
						for ( i = 0; i < hasScripts; i++ ) {
							node = scripts[ i ];
							if ( rscriptType.test( node.type || "" ) &&
								!data_priv.access( node, "globalEval" ) && jQuery.contains( doc, node ) ) {
	
								if ( node.src ) {
									// Optional AJAX dependency, but won't run scripts if not present
									if ( jQuery._evalUrl ) {
										jQuery._evalUrl( node.src );
									}
								} else {
									jQuery.globalEval( node.textContent.replace( rcleanScript, "" ) );
								}
							}
						}
					}
				}
			}
	
			return this;
		}
	});
	
	jQuery.each({
		appendTo: "append",
		prependTo: "prepend",
		insertBefore: "before",
		insertAfter: "after",
		replaceAll: "replaceWith"
	}, function( name, original ) {
		jQuery.fn[ name ] = function( selector ) {
			var elems,
				ret = [],
				insert = jQuery( selector ),
				last = insert.length - 1,
				i = 0;
	
			for ( ; i <= last; i++ ) {
				elems = i === last ? this : this.clone( true );
				jQuery( insert[ i ] )[ original ]( elems );
	
				// Support: QtWebKit
				// .get() because push.apply(_, arraylike) throws
				push.apply( ret, elems.get() );
			}
	
			return this.pushStack( ret );
		};
	});
	
	
	var iframe,
		elemdisplay = {};
	
	/**
	 * Retrieve the actual display of a element
	 * @param {String} name nodeName of the element
	 * @param {Object} doc Document object
	 */
	// Called only from within defaultDisplay
	function actualDisplay( name, doc ) {
		var style,
			elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),
	
			// getDefaultComputedStyle might be reliably used only on attached element
			display = window.getDefaultComputedStyle && ( style = window.getDefaultComputedStyle( elem[ 0 ] ) ) ?
	
				// Use of this method is a temporary fix (more like optimization) until something better comes along,
				// since it was removed from specification and supported only in FF
				style.display : jQuery.css( elem[ 0 ], "display" );
	
		// We don't have any data stored on the element,
		// so use "detach" method as fast way to get rid of the element
		elem.detach();
	
		return display;
	}
	
	/**
	 * Try to determine the default display value of an element
	 * @param {String} nodeName
	 */
	function defaultDisplay( nodeName ) {
		var doc = document,
			display = elemdisplay[ nodeName ];
	
		if ( !display ) {
			display = actualDisplay( nodeName, doc );
	
			// If the simple way fails, read from inside an iframe
			if ( display === "none" || !display ) {
	
				// Use the already-created iframe if possible
				iframe = (iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" )).appendTo( doc.documentElement );
	
				// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
				doc = iframe[ 0 ].contentDocument;
	
				// Support: IE
				doc.write();
				doc.close();
	
				display = actualDisplay( nodeName, doc );
				iframe.detach();
			}
	
			// Store the correct default display
			elemdisplay[ nodeName ] = display;
		}
	
		return display;
	}
	var rmargin = (/^margin/);
	
	var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );
	
	var getStyles = function( elem ) {
			// Support: IE<=11+, Firefox<=30+ (#15098, #14150)
			// IE throws on elements created in popups
			// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
			if ( elem.ownerDocument.defaultView.opener ) {
				return elem.ownerDocument.defaultView.getComputedStyle( elem, null );
			}
	
			return window.getComputedStyle( elem, null );
		};
	
	
	
	function curCSS( elem, name, computed ) {
		var width, minWidth, maxWidth, ret,
			style = elem.style;
	
		computed = computed || getStyles( elem );
	
		// Support: IE9
		// getPropertyValue is only needed for .css('filter') (#12537)
		if ( computed ) {
			ret = computed.getPropertyValue( name ) || computed[ name ];
		}
	
		if ( computed ) {
	
			if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
				ret = jQuery.style( elem, name );
			}
	
			// Support: iOS < 6
			// A tribute to the "awesome hack by Dean Edwards"
			// iOS < 6 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
			// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
			if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {
	
				// Remember the original values
				width = style.width;
				minWidth = style.minWidth;
				maxWidth = style.maxWidth;
	
				// Put in the new values to get a computed value out
				style.minWidth = style.maxWidth = style.width = ret;
				ret = computed.width;
	
				// Revert the changed values
				style.width = width;
				style.minWidth = minWidth;
				style.maxWidth = maxWidth;
			}
		}
	
		return ret !== undefined ?
			// Support: IE
			// IE returns zIndex value as an integer.
			ret + "" :
			ret;
	}
	
	
	function addGetHookIf( conditionFn, hookFn ) {
		// Define the hook, we'll check on the first run if it's really needed.
		return {
			get: function() {
				if ( conditionFn() ) {
					// Hook not needed (or it's not possible to use it due
					// to missing dependency), remove it.
					delete this.get;
					return;
				}
	
				// Hook needed; redefine it so that the support test is not executed again.
				return (this.get = hookFn).apply( this, arguments );
			}
		};
	}
	
	
	(function() {
		var pixelPositionVal, boxSizingReliableVal,
			docElem = document.documentElement,
			container = document.createElement( "div" ),
			div = document.createElement( "div" );
	
		if ( !div.style ) {
			return;
		}
	
		// Support: IE9-11+
		// Style of cloned element affects source element cloned (#8908)
		div.style.backgroundClip = "content-box";
		div.cloneNode( true ).style.backgroundClip = "";
		support.clearCloneStyle = div.style.backgroundClip === "content-box";
	
		container.style.cssText = "border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;" +
			"position:absolute";
		container.appendChild( div );
	
		// Executing both pixelPosition & boxSizingReliable tests require only one layout
		// so they're executed at the same time to save the second computation.
		function computePixelPositionAndBoxSizingReliable() {
			div.style.cssText =
				// Support: Firefox<29, Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;" +
				"box-sizing:border-box;display:block;margin-top:1%;top:1%;" +
				"border:1px;padding:1px;width:4px;position:absolute";
			div.innerHTML = "";
			docElem.appendChild( container );
	
			var divStyle = window.getComputedStyle( div, null );
			pixelPositionVal = divStyle.top !== "1%";
			boxSizingReliableVal = divStyle.width === "4px";
	
			docElem.removeChild( container );
		}
	
		// Support: node.js jsdom
		// Don't assume that getComputedStyle is a property of the global object
		if ( window.getComputedStyle ) {
			jQuery.extend( support, {
				pixelPosition: function() {
	
					// This test is executed only once but we still do memoizing
					// since we can use the boxSizingReliable pre-computing.
					// No need to check if the test was already performed, though.
					computePixelPositionAndBoxSizingReliable();
					return pixelPositionVal;
				},
				boxSizingReliable: function() {
					if ( boxSizingReliableVal == null ) {
						computePixelPositionAndBoxSizingReliable();
					}
					return boxSizingReliableVal;
				},
				reliableMarginRight: function() {
	
					// Support: Android 2.3
					// Check if div with explicit width and no margin-right incorrectly
					// gets computed margin-right based on width of container. (#3333)
					// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
					// This support function is only executed once so no memoizing is needed.
					var ret,
						marginDiv = div.appendChild( document.createElement( "div" ) );
	
					// Reset CSS: box-sizing; display; margin; border; padding
					marginDiv.style.cssText = div.style.cssText =
						// Support: Firefox<29, Android 2.3
						// Vendor-prefix box-sizing
						"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
						"box-sizing:content-box;display:block;margin:0;border:0;padding:0";
					marginDiv.style.marginRight = marginDiv.style.width = "0";
					div.style.width = "1px";
					docElem.appendChild( container );
	
					ret = !parseFloat( window.getComputedStyle( marginDiv, null ).marginRight );
	
					docElem.removeChild( container );
					div.removeChild( marginDiv );
	
					return ret;
				}
			});
		}
	})();
	
	
	// A method for quickly swapping in/out CSS properties to get correct calculations.
	jQuery.swap = function( elem, options, callback, args ) {
		var ret, name,
			old = {};
	
		// Remember the old values, and insert the new ones
		for ( name in options ) {
			old[ name ] = elem.style[ name ];
			elem.style[ name ] = options[ name ];
		}
	
		ret = callback.apply( elem, args || [] );
	
		// Revert the old values
		for ( name in options ) {
			elem.style[ name ] = old[ name ];
		}
	
		return ret;
	};
	
	
	var
		// Swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
		// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
		rdisplayswap = /^(none|table(?!-c[ea]).+)/,
		rnumsplit = new RegExp( "^(" + pnum + ")(.*)$", "i" ),
		rrelNum = new RegExp( "^([+-])=(" + pnum + ")", "i" ),
	
		cssShow = { position: "absolute", visibility: "hidden", display: "block" },
		cssNormalTransform = {
			letterSpacing: "0",
			fontWeight: "400"
		},
	
		cssPrefixes = [ "Webkit", "O", "Moz", "ms" ];
	
	// Return a css property mapped to a potentially vendor prefixed property
	function vendorPropName( style, name ) {
	
		// Shortcut for names that are not vendor prefixed
		if ( name in style ) {
			return name;
		}
	
		// Check for vendor prefixed names
		var capName = name[0].toUpperCase() + name.slice(1),
			origName = name,
			i = cssPrefixes.length;
	
		while ( i-- ) {
			name = cssPrefixes[ i ] + capName;
			if ( name in style ) {
				return name;
			}
		}
	
		return origName;
	}
	
	function setPositiveNumber( elem, value, subtract ) {
		var matches = rnumsplit.exec( value );
		return matches ?
			// Guard against undefined "subtract", e.g., when used as in cssHooks
			Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
			value;
	}
	
	function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
		var i = extra === ( isBorderBox ? "border" : "content" ) ?
			// If we already have the right measurement, avoid augmentation
			4 :
			// Otherwise initialize for horizontal or vertical properties
			name === "width" ? 1 : 0,
	
			val = 0;
	
		for ( ; i < 4; i += 2 ) {
			// Both box models exclude margin, so add it if we want it
			if ( extra === "margin" ) {
				val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
			}
	
			if ( isBorderBox ) {
				// border-box includes padding, so remove it if we want content
				if ( extra === "content" ) {
					val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
				}
	
				// At this point, extra isn't border nor margin, so remove border
				if ( extra !== "margin" ) {
					val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
				}
			} else {
				// At this point, extra isn't content, so add padding
				val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
	
				// At this point, extra isn't content nor padding, so add border
				if ( extra !== "padding" ) {
					val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
				}
			}
		}
	
		return val;
	}
	
	function getWidthOrHeight( elem, name, extra ) {
	
		// Start with offset property, which is equivalent to the border-box value
		var valueIsBorderBox = true,
			val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
			styles = getStyles( elem ),
			isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";
	
		// Some non-html elements return undefined for offsetWidth, so check for null/undefined
		// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
		// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
		if ( val <= 0 || val == null ) {
			// Fall back to computed then uncomputed css if necessary
			val = curCSS( elem, name, styles );
			if ( val < 0 || val == null ) {
				val = elem.style[ name ];
			}
	
			// Computed unit is not pixels. Stop here and return.
			if ( rnumnonpx.test(val) ) {
				return val;
			}
	
			// Check for style in case a browser which returns unreliable values
			// for getComputedStyle silently falls back to the reliable elem.style
			valueIsBorderBox = isBorderBox &&
				( support.boxSizingReliable() || val === elem.style[ name ] );
	
			// Normalize "", auto, and prepare for extra
			val = parseFloat( val ) || 0;
		}
	
		// Use the active box-sizing model to add/subtract irrelevant styles
		return ( val +
			augmentWidthOrHeight(
				elem,
				name,
				extra || ( isBorderBox ? "border" : "content" ),
				valueIsBorderBox,
				styles
			)
		) + "px";
	}
	
	function showHide( elements, show ) {
		var display, elem, hidden,
			values = [],
			index = 0,
			length = elements.length;
	
		for ( ; index < length; index++ ) {
			elem = elements[ index ];
			if ( !elem.style ) {
				continue;
			}
	
			values[ index ] = data_priv.get( elem, "olddisplay" );
			display = elem.style.display;
			if ( show ) {
				// Reset the inline display of this element to learn if it is
				// being hidden by cascaded rules or not
				if ( !values[ index ] && display === "none" ) {
					elem.style.display = "";
				}
	
				// Set elements which have been overridden with display: none
				// in a stylesheet to whatever the default browser style is
				// for such an element
				if ( elem.style.display === "" && isHidden( elem ) ) {
					values[ index ] = data_priv.access( elem, "olddisplay", defaultDisplay(elem.nodeName) );
				}
			} else {
				hidden = isHidden( elem );
	
				if ( display !== "none" || !hidden ) {
					data_priv.set( elem, "olddisplay", hidden ? display : jQuery.css( elem, "display" ) );
				}
			}
		}
	
		// Set the display of most of the elements in a second loop
		// to avoid the constant reflow
		for ( index = 0; index < length; index++ ) {
			elem = elements[ index ];
			if ( !elem.style ) {
				continue;
			}
			if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
				elem.style.display = show ? values[ index ] || "" : "none";
			}
		}
	
		return elements;
	}
	
	jQuery.extend({
	
		// Add in style property hooks for overriding the default
		// behavior of getting and setting a style property
		cssHooks: {
			opacity: {
				get: function( elem, computed ) {
					if ( computed ) {
	
						// We should always get a number back from opacity
						var ret = curCSS( elem, "opacity" );
						return ret === "" ? "1" : ret;
					}
				}
			}
		},
	
		// Don't automatically add "px" to these possibly-unitless properties
		cssNumber: {
			"columnCount": true,
			"fillOpacity": true,
			"flexGrow": true,
			"flexShrink": true,
			"fontWeight": true,
			"lineHeight": true,
			"opacity": true,
			"order": true,
			"orphans": true,
			"widows": true,
			"zIndex": true,
			"zoom": true
		},
	
		// Add in properties whose names you wish to fix before
		// setting or getting the value
		cssProps: {
			"float": "cssFloat"
		},
	
		// Get and set the style property on a DOM Node
		style: function( elem, name, value, extra ) {
	
			// Don't set styles on text and comment nodes
			if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
				return;
			}
	
			// Make sure that we're working with the right name
			var ret, type, hooks,
				origName = jQuery.camelCase( name ),
				style = elem.style;
	
			name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );
	
			// Gets hook for the prefixed version, then unprefixed version
			hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];
	
			// Check if we're setting a value
			if ( value !== undefined ) {
				type = typeof value;
	
				// Convert "+=" or "-=" to relative numbers (#7345)
				if ( type === "string" && (ret = rrelNum.exec( value )) ) {
					value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
					// Fixes bug #9237
					type = "number";
				}
	
				// Make sure that null and NaN values aren't set (#7116)
				if ( value == null || value !== value ) {
					return;
				}
	
				// If a number, add 'px' to the (except for certain CSS properties)
				if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
					value += "px";
				}
	
				// Support: IE9-11+
				// background-* props affect original clone's values
				if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
					style[ name ] = "inherit";
				}
	
				// If a hook was provided, use that value, otherwise just set the specified value
				if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {
					style[ name ] = value;
				}
	
			} else {
				// If a hook was provided get the non-computed value from there
				if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
					return ret;
				}
	
				// Otherwise just get the value from the style object
				return style[ name ];
			}
		},
	
		css: function( elem, name, extra, styles ) {
			var val, num, hooks,
				origName = jQuery.camelCase( name );
	
			// Make sure that we're working with the right name
			name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );
	
			// Try prefixed name followed by the unprefixed name
			hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];
	
			// If a hook was provided get the computed value from there
			if ( hooks && "get" in hooks ) {
				val = hooks.get( elem, true, extra );
			}
	
			// Otherwise, if a way to get the computed value exists, use that
			if ( val === undefined ) {
				val = curCSS( elem, name, styles );
			}
	
			// Convert "normal" to computed value
			if ( val === "normal" && name in cssNormalTransform ) {
				val = cssNormalTransform[ name ];
			}
	
			// Make numeric if forced or a qualifier was provided and val looks numeric
			if ( extra === "" || extra ) {
				num = parseFloat( val );
				return extra === true || jQuery.isNumeric( num ) ? num || 0 : val;
			}
			return val;
		}
	});
	
	jQuery.each([ "height", "width" ], function( i, name ) {
		jQuery.cssHooks[ name ] = {
			get: function( elem, computed, extra ) {
				if ( computed ) {
	
					// Certain elements can have dimension info if we invisibly show them
					// but it must have a current display style that would benefit
					return rdisplayswap.test( jQuery.css( elem, "display" ) ) && elem.offsetWidth === 0 ?
						jQuery.swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, name, extra );
						}) :
						getWidthOrHeight( elem, name, extra );
				}
			},
	
			set: function( elem, value, extra ) {
				var styles = extra && getStyles( elem );
				return setPositiveNumber( elem, value, extra ?
					augmentWidthOrHeight(
						elem,
						name,
						extra,
						jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
						styles
					) : 0
				);
			}
		};
	});
	
	// Support: Android 2.3
	jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,
		function( elem, computed ) {
			if ( computed ) {
				return jQuery.swap( elem, { "display": "inline-block" },
					curCSS, [ elem, "marginRight" ] );
			}
		}
	);
	
	// These hooks are used by animate to expand properties
	jQuery.each({
		margin: "",
		padding: "",
		border: "Width"
	}, function( prefix, suffix ) {
		jQuery.cssHooks[ prefix + suffix ] = {
			expand: function( value ) {
				var i = 0,
					expanded = {},
	
					// Assumes a single number if not a string
					parts = typeof value === "string" ? value.split(" ") : [ value ];
	
				for ( ; i < 4; i++ ) {
					expanded[ prefix + cssExpand[ i ] + suffix ] =
						parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
				}
	
				return expanded;
			}
		};
	
		if ( !rmargin.test( prefix ) ) {
			jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
		}
	});
	
	jQuery.fn.extend({
		css: function( name, value ) {
			return access( this, function( elem, name, value ) {
				var styles, len,
					map = {},
					i = 0;
	
				if ( jQuery.isArray( name ) ) {
					styles = getStyles( elem );
					len = name.length;
	
					for ( ; i < len; i++ ) {
						map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
					}
	
					return map;
				}
	
				return value !== undefined ?
					jQuery.style( elem, name, value ) :
					jQuery.css( elem, name );
			}, name, value, arguments.length > 1 );
		},
		show: function() {
			return showHide( this, true );
		},
		hide: function() {
			return showHide( this );
		},
		toggle: function( state ) {
			if ( typeof state === "boolean" ) {
				return state ? this.show() : this.hide();
			}
	
			return this.each(function() {
				if ( isHidden( this ) ) {
					jQuery( this ).show();
				} else {
					jQuery( this ).hide();
				}
			});
		}
	});
	
	
	function Tween( elem, options, prop, end, easing ) {
		return new Tween.prototype.init( elem, options, prop, end, easing );
	}
	jQuery.Tween = Tween;
	
	Tween.prototype = {
		constructor: Tween,
		init: function( elem, options, prop, end, easing, unit ) {
			this.elem = elem;
			this.prop = prop;
			this.easing = easing || "swing";
			this.options = options;
			this.start = this.now = this.cur();
			this.end = end;
			this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
		},
		cur: function() {
			var hooks = Tween.propHooks[ this.prop ];
	
			return hooks && hooks.get ?
				hooks.get( this ) :
				Tween.propHooks._default.get( this );
		},
		run: function( percent ) {
			var eased,
				hooks = Tween.propHooks[ this.prop ];
	
			if ( this.options.duration ) {
				this.pos = eased = jQuery.easing[ this.easing ](
					percent, this.options.duration * percent, 0, 1, this.options.duration
				);
			} else {
				this.pos = eased = percent;
			}
			this.now = ( this.end - this.start ) * eased + this.start;
	
			if ( this.options.step ) {
				this.options.step.call( this.elem, this.now, this );
			}
	
			if ( hooks && hooks.set ) {
				hooks.set( this );
			} else {
				Tween.propHooks._default.set( this );
			}
			return this;
		}
	};
	
	Tween.prototype.init.prototype = Tween.prototype;
	
	Tween.propHooks = {
		_default: {
			get: function( tween ) {
				var result;
	
				if ( tween.elem[ tween.prop ] != null &&
					(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {
					return tween.elem[ tween.prop ];
				}
	
				// Passing an empty string as a 3rd parameter to .css will automatically
				// attempt a parseFloat and fallback to a string if the parse fails.
				// Simple values such as "10px" are parsed to Float;
				// complex values such as "rotate(1rad)" are returned as-is.
				result = jQuery.css( tween.elem, tween.prop, "" );
				// Empty strings, null, undefined and "auto" are converted to 0.
				return !result || result === "auto" ? 0 : result;
			},
			set: function( tween ) {
				// Use step hook for back compat.
				// Use cssHook if its there.
				// Use .style if available and use plain properties where available.
				if ( jQuery.fx.step[ tween.prop ] ) {
					jQuery.fx.step[ tween.prop ]( tween );
				} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {
					jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
				} else {
					tween.elem[ tween.prop ] = tween.now;
				}
			}
		}
	};
	
	// Support: IE9
	// Panic based approach to setting things on disconnected nodes
	Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
		set: function( tween ) {
			if ( tween.elem.nodeType && tween.elem.parentNode ) {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	};
	
	jQuery.easing = {
		linear: function( p ) {
			return p;
		},
		swing: function( p ) {
			return 0.5 - Math.cos( p * Math.PI ) / 2;
		}
	};
	
	jQuery.fx = Tween.prototype.init;
	
	// Back Compat <1.8 extension point
	jQuery.fx.step = {};
	
	
	
	
	var
		fxNow, timerId,
		rfxtypes = /^(?:toggle|show|hide)$/,
		rfxnum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" ),
		rrun = /queueHooks$/,
		animationPrefilters = [ defaultPrefilter ],
		tweeners = {
			"*": [ function( prop, value ) {
				var tween = this.createTween( prop, value ),
					target = tween.cur(),
					parts = rfxnum.exec( value ),
					unit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),
	
					// Starting value computation is required for potential unit mismatches
					start = ( jQuery.cssNumber[ prop ] || unit !== "px" && +target ) &&
						rfxnum.exec( jQuery.css( tween.elem, prop ) ),
					scale = 1,
					maxIterations = 20;
	
				if ( start && start[ 3 ] !== unit ) {
					// Trust units reported by jQuery.css
					unit = unit || start[ 3 ];
	
					// Make sure we update the tween properties later on
					parts = parts || [];
	
					// Iteratively approximate from a nonzero starting point
					start = +target || 1;
	
					do {
						// If previous iteration zeroed out, double until we get *something*.
						// Use string for doubling so we don't accidentally see scale as unchanged below
						scale = scale || ".5";
	
						// Adjust and apply
						start = start / scale;
						jQuery.style( tween.elem, prop, start + unit );
	
					// Update scale, tolerating zero or NaN from tween.cur(),
					// break the loop if scale is unchanged or perfect, or if we've just had enough
					} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );
				}
	
				// Update tween properties
				if ( parts ) {
					start = tween.start = +start || +target || 0;
					tween.unit = unit;
					// If a +=/-= token was provided, we're doing a relative animation
					tween.end = parts[ 1 ] ?
						start + ( parts[ 1 ] + 1 ) * parts[ 2 ] :
						+parts[ 2 ];
				}
	
				return tween;
			} ]
		};
	
	// Animations created synchronously will run synchronously
	function createFxNow() {
		setTimeout(function() {
			fxNow = undefined;
		});
		return ( fxNow = jQuery.now() );
	}
	
	// Generate parameters to create a standard animation
	function genFx( type, includeWidth ) {
		var which,
			i = 0,
			attrs = { height: type };
	
		// If we include width, step value is 1 to do all cssExpand values,
		// otherwise step value is 2 to skip over Left and Right
		includeWidth = includeWidth ? 1 : 0;
		for ( ; i < 4 ; i += 2 - includeWidth ) {
			which = cssExpand[ i ];
			attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
		}
	
		if ( includeWidth ) {
			attrs.opacity = attrs.width = type;
		}
	
		return attrs;
	}
	
	function createTween( value, prop, animation ) {
		var tween,
			collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),
			index = 0,
			length = collection.length;
		for ( ; index < length; index++ ) {
			if ( (tween = collection[ index ].call( animation, prop, value )) ) {
	
				// We're done with this property
				return tween;
			}
		}
	}
	
	function defaultPrefilter( elem, props, opts ) {
		/* jshint validthis: true */
		var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
			anim = this,
			orig = {},
			style = elem.style,
			hidden = elem.nodeType && isHidden( elem ),
			dataShow = data_priv.get( elem, "fxshow" );
	
		// Handle queue: false promises
		if ( !opts.queue ) {
			hooks = jQuery._queueHooks( elem, "fx" );
			if ( hooks.unqueued == null ) {
				hooks.unqueued = 0;
				oldfire = hooks.empty.fire;
				hooks.empty.fire = function() {
					if ( !hooks.unqueued ) {
						oldfire();
					}
				};
			}
			hooks.unqueued++;
	
			anim.always(function() {
				// Ensure the complete handler is called before this completes
				anim.always(function() {
					hooks.unqueued--;
					if ( !jQuery.queue( elem, "fx" ).length ) {
						hooks.empty.fire();
					}
				});
			});
		}
	
		// Height/width overflow pass
		if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {
			// Make sure that nothing sneaks out
			// Record all 3 overflow attributes because IE9-10 do not
			// change the overflow attribute when overflowX and
			// overflowY are set to the same value
			opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];
	
			// Set display property to inline-block for height/width
			// animations on inline elements that are having width/height animated
			display = jQuery.css( elem, "display" );
	
			// Test default display if display is currently "none"
			checkDisplay = display === "none" ?
				data_priv.get( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;
	
			if ( checkDisplay === "inline" && jQuery.css( elem, "float" ) === "none" ) {
				style.display = "inline-block";
			}
		}
	
		if ( opts.overflow ) {
			style.overflow = "hidden";
			anim.always(function() {
				style.overflow = opts.overflow[ 0 ];
				style.overflowX = opts.overflow[ 1 ];
				style.overflowY = opts.overflow[ 2 ];
			});
		}
	
		// show/hide pass
		for ( prop in props ) {
			value = props[ prop ];
			if ( rfxtypes.exec( value ) ) {
				delete props[ prop ];
				toggle = toggle || value === "toggle";
				if ( value === ( hidden ? "hide" : "show" ) ) {
	
					// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden
					if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
						hidden = true;
					} else {
						continue;
					}
				}
				orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
	
			// Any non-fx value stops us from restoring the original display value
			} else {
				display = undefined;
			}
		}
	
		if ( !jQuery.isEmptyObject( orig ) ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = data_priv.access( elem, "fxshow", {} );
			}
	
			// Store state if its toggle - enables .stop().toggle() to "reverse"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}
			if ( hidden ) {
				jQuery( elem ).show();
			} else {
				anim.done(function() {
					jQuery( elem ).hide();
				});
			}
			anim.done(function() {
				var prop;
	
				data_priv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			});
			for ( prop in orig ) {
				tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
	
				if ( !( prop in dataShow ) ) {
					dataShow[ prop ] = tween.start;
					if ( hidden ) {
						tween.end = tween.start;
						tween.start = prop === "width" || prop === "height" ? 1 : 0;
					}
				}
			}
	
		// If this is a noop like .hide().hide(), restore an overwritten display value
		} else if ( (display === "none" ? defaultDisplay( elem.nodeName ) : display) === "inline" ) {
			style.display = display;
		}
	}
	
	function propFilter( props, specialEasing ) {
		var index, name, easing, value, hooks;
	
		// camelCase, specialEasing and expand cssHook pass
		for ( index in props ) {
			name = jQuery.camelCase( index );
			easing = specialEasing[ name ];
			value = props[ index ];
			if ( jQuery.isArray( value ) ) {
				easing = value[ 1 ];
				value = props[ index ] = value[ 0 ];
			}
	
			if ( index !== name ) {
				props[ name ] = value;
				delete props[ index ];
			}
	
			hooks = jQuery.cssHooks[ name ];
			if ( hooks && "expand" in hooks ) {
				value = hooks.expand( value );
				delete props[ name ];
	
				// Not quite $.extend, this won't overwrite existing keys.
				// Reusing 'index' because we have the correct "name"
				for ( index in value ) {
					if ( !( index in props ) ) {
						props[ index ] = value[ index ];
						specialEasing[ index ] = easing;
					}
				}
			} else {
				specialEasing[ name ] = easing;
			}
		}
	}
	
	function Animation( elem, properties, options ) {
		var result,
			stopped,
			index = 0,
			length = animationPrefilters.length,
			deferred = jQuery.Deferred().always( function() {
				// Don't match elem in the :animated selector
				delete tick.elem;
			}),
			tick = function() {
				if ( stopped ) {
					return false;
				}
				var currentTime = fxNow || createFxNow(),
					remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
					// Support: Android 2.3
					// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
					temp = remaining / animation.duration || 0,
					percent = 1 - temp,
					index = 0,
					length = animation.tweens.length;
	
				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( percent );
				}
	
				deferred.notifyWith( elem, [ animation, percent, remaining ]);
	
				if ( percent < 1 && length ) {
					return remaining;
				} else {
					deferred.resolveWith( elem, [ animation ] );
					return false;
				}
			},
			animation = deferred.promise({
				elem: elem,
				props: jQuery.extend( {}, properties ),
				opts: jQuery.extend( true, { specialEasing: {} }, options ),
				originalProperties: properties,
				originalOptions: options,
				startTime: fxNow || createFxNow(),
				duration: options.duration,
				tweens: [],
				createTween: function( prop, end ) {
					var tween = jQuery.Tween( elem, animation.opts, prop, end,
							animation.opts.specialEasing[ prop ] || animation.opts.easing );
					animation.tweens.push( tween );
					return tween;
				},
				stop: function( gotoEnd ) {
					var index = 0,
						// If we are going to the end, we want to run all the tweens
						// otherwise we skip this part
						length = gotoEnd ? animation.tweens.length : 0;
					if ( stopped ) {
						return this;
					}
					stopped = true;
					for ( ; index < length ; index++ ) {
						animation.tweens[ index ].run( 1 );
					}
	
					// Resolve when we played the last frame; otherwise, reject
					if ( gotoEnd ) {
						deferred.resolveWith( elem, [ animation, gotoEnd ] );
					} else {
						deferred.rejectWith( elem, [ animation, gotoEnd ] );
					}
					return this;
				}
			}),
			props = animation.props;
	
		propFilter( props, animation.opts.specialEasing );
	
		for ( ; index < length ; index++ ) {
			result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );
			if ( result ) {
				return result;
			}
		}
	
		jQuery.map( props, createTween, animation );
	
		if ( jQuery.isFunction( animation.opts.start ) ) {
			animation.opts.start.call( elem, animation );
		}
	
		jQuery.fx.timer(
			jQuery.extend( tick, {
				elem: elem,
				anim: animation,
				queue: animation.opts.queue
			})
		);
	
		// attach callbacks from options
		return animation.progress( animation.opts.progress )
			.done( animation.opts.done, animation.opts.complete )
			.fail( animation.opts.fail )
			.always( animation.opts.always );
	}
	
	jQuery.Animation = jQuery.extend( Animation, {
	
		tweener: function( props, callback ) {
			if ( jQuery.isFunction( props ) ) {
				callback = props;
				props = [ "*" ];
			} else {
				props = props.split(" ");
			}
	
			var prop,
				index = 0,
				length = props.length;
	
			for ( ; index < length ; index++ ) {
				prop = props[ index ];
				tweeners[ prop ] = tweeners[ prop ] || [];
				tweeners[ prop ].unshift( callback );
			}
		},
	
		prefilter: function( callback, prepend ) {
			if ( prepend ) {
				animationPrefilters.unshift( callback );
			} else {
				animationPrefilters.push( callback );
			}
		}
	});
	
	jQuery.speed = function( speed, easing, fn ) {
		var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
			complete: fn || !fn && easing ||
				jQuery.isFunction( speed ) && speed,
			duration: speed,
			easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
		};
	
		opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
			opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;
	
		// Normalize opt.queue - true/undefined/null -> "fx"
		if ( opt.queue == null || opt.queue === true ) {
			opt.queue = "fx";
		}
	
		// Queueing
		opt.old = opt.complete;
	
		opt.complete = function() {
			if ( jQuery.isFunction( opt.old ) ) {
				opt.old.call( this );
			}
	
			if ( opt.queue ) {
				jQuery.dequeue( this, opt.queue );
			}
		};
	
		return opt;
	};
	
	jQuery.fn.extend({
		fadeTo: function( speed, to, easing, callback ) {
	
			// Show any hidden elements after setting opacity to 0
			return this.filter( isHidden ).css( "opacity", 0 ).show()
	
				// Animate to the value specified
				.end().animate({ opacity: to }, speed, easing, callback );
		},
		animate: function( prop, speed, easing, callback ) {
			var empty = jQuery.isEmptyObject( prop ),
				optall = jQuery.speed( speed, easing, callback ),
				doAnimation = function() {
					// Operate on a copy of prop so per-property easing won't be lost
					var anim = Animation( this, jQuery.extend( {}, prop ), optall );
	
					// Empty animations, or finishing resolves immediately
					if ( empty || data_priv.get( this, "finish" ) ) {
						anim.stop( true );
					}
				};
				doAnimation.finish = doAnimation;
	
			return empty || optall.queue === false ?
				this.each( doAnimation ) :
				this.queue( optall.queue, doAnimation );
		},
		stop: function( type, clearQueue, gotoEnd ) {
			var stopQueue = function( hooks ) {
				var stop = hooks.stop;
				delete hooks.stop;
				stop( gotoEnd );
			};
	
			if ( typeof type !== "string" ) {
				gotoEnd = clearQueue;
				clearQueue = type;
				type = undefined;
			}
			if ( clearQueue && type !== false ) {
				this.queue( type || "fx", [] );
			}
	
			return this.each(function() {
				var dequeue = true,
					index = type != null && type + "queueHooks",
					timers = jQuery.timers,
					data = data_priv.get( this );
	
				if ( index ) {
					if ( data[ index ] && data[ index ].stop ) {
						stopQueue( data[ index ] );
					}
				} else {
					for ( index in data ) {
						if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
							stopQueue( data[ index ] );
						}
					}
				}
	
				for ( index = timers.length; index--; ) {
					if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
						timers[ index ].anim.stop( gotoEnd );
						dequeue = false;
						timers.splice( index, 1 );
					}
				}
	
				// Start the next in the queue if the last step wasn't forced.
				// Timers currently will call their complete callbacks, which
				// will dequeue but only if they were gotoEnd.
				if ( dequeue || !gotoEnd ) {
					jQuery.dequeue( this, type );
				}
			});
		},
		finish: function( type ) {
			if ( type !== false ) {
				type = type || "fx";
			}
			return this.each(function() {
				var index,
					data = data_priv.get( this ),
					queue = data[ type + "queue" ],
					hooks = data[ type + "queueHooks" ],
					timers = jQuery.timers,
					length = queue ? queue.length : 0;
	
				// Enable finishing flag on private data
				data.finish = true;
	
				// Empty the queue first
				jQuery.queue( this, type, [] );
	
				if ( hooks && hooks.stop ) {
					hooks.stop.call( this, true );
				}
	
				// Look for any active animations, and finish them
				for ( index = timers.length; index--; ) {
					if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
						timers[ index ].anim.stop( true );
						timers.splice( index, 1 );
					}
				}
	
				// Look for any animations in the old queue and finish them
				for ( index = 0; index < length; index++ ) {
					if ( queue[ index ] && queue[ index ].finish ) {
						queue[ index ].finish.call( this );
					}
				}
	
				// Turn off finishing flag
				delete data.finish;
			});
		}
	});
	
	jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
		var cssFn = jQuery.fn[ name ];
		jQuery.fn[ name ] = function( speed, easing, callback ) {
			return speed == null || typeof speed === "boolean" ?
				cssFn.apply( this, arguments ) :
				this.animate( genFx( name, true ), speed, easing, callback );
		};
	});
	
	// Generate shortcuts for custom animations
	jQuery.each({
		slideDown: genFx("show"),
		slideUp: genFx("hide"),
		slideToggle: genFx("toggle"),
		fadeIn: { opacity: "show" },
		fadeOut: { opacity: "hide" },
		fadeToggle: { opacity: "toggle" }
	}, function( name, props ) {
		jQuery.fn[ name ] = function( speed, easing, callback ) {
			return this.animate( props, speed, easing, callback );
		};
	});
	
	jQuery.timers = [];
	jQuery.fx.tick = function() {
		var timer,
			i = 0,
			timers = jQuery.timers;
	
		fxNow = jQuery.now();
	
		for ( ; i < timers.length; i++ ) {
			timer = timers[ i ];
			// Checks the timer has not already been removed
			if ( !timer() && timers[ i ] === timer ) {
				timers.splice( i--, 1 );
			}
		}
	
		if ( !timers.length ) {
			jQuery.fx.stop();
		}
		fxNow = undefined;
	};
	
	jQuery.fx.timer = function( timer ) {
		jQuery.timers.push( timer );
		if ( timer() ) {
			jQuery.fx.start();
		} else {
			jQuery.timers.pop();
		}
	};
	
	jQuery.fx.interval = 13;
	
	jQuery.fx.start = function() {
		if ( !timerId ) {
			timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );
		}
	};
	
	jQuery.fx.stop = function() {
		clearInterval( timerId );
		timerId = null;
	};
	
	jQuery.fx.speeds = {
		slow: 600,
		fast: 200,
		// Default speed
		_default: 400
	};
	
	
	// Based off of the plugin by Clint Helfers, with permission.
	// http://blindsignals.com/index.php/2009/07/jquery-delay/
	jQuery.fn.delay = function( time, type ) {
		time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
		type = type || "fx";
	
		return this.queue( type, function( next, hooks ) {
			var timeout = setTimeout( next, time );
			hooks.stop = function() {
				clearTimeout( timeout );
			};
		});
	};
	
	
	(function() {
		var input = document.createElement( "input" ),
			select = document.createElement( "select" ),
			opt = select.appendChild( document.createElement( "option" ) );
	
		input.type = "checkbox";
	
		// Support: iOS<=5.1, Android<=4.2+
		// Default value for a checkbox should be "on"
		support.checkOn = input.value !== "";
	
		// Support: IE<=11+
		// Must access selectedIndex to make default options select
		support.optSelected = opt.selected;
	
		// Support: Android<=2.3
		// Options inside disabled selects are incorrectly marked as disabled
		select.disabled = true;
		support.optDisabled = !opt.disabled;
	
		// Support: IE<=11+
		// An input loses its value after becoming a radio
		input = document.createElement( "input" );
		input.value = "t";
		input.type = "radio";
		support.radioValue = input.value === "t";
	})();
	
	
	var nodeHook, boolHook,
		attrHandle = jQuery.expr.attrHandle;
	
	jQuery.fn.extend({
		attr: function( name, value ) {
			return access( this, jQuery.attr, name, value, arguments.length > 1 );
		},
	
		removeAttr: function( name ) {
			return this.each(function() {
				jQuery.removeAttr( this, name );
			});
		}
	});
	
	jQuery.extend({
		attr: function( elem, name, value ) {
			var hooks, ret,
				nType = elem.nodeType;
	
			// don't get/set attributes on text, comment and attribute nodes
			if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
				return;
			}
	
			// Fallback to prop when attributes are not supported
			if ( typeof elem.getAttribute === strundefined ) {
				return jQuery.prop( elem, name, value );
			}
	
			// All attributes are lowercase
			// Grab necessary hook if one is defined
			if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
				name = name.toLowerCase();
				hooks = jQuery.attrHooks[ name ] ||
					( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );
			}
	
			if ( value !== undefined ) {
	
				if ( value === null ) {
					jQuery.removeAttr( elem, name );
	
				} else if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
					return ret;
	
				} else {
					elem.setAttribute( name, value + "" );
					return value;
				}
	
			} else if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
				return ret;
	
			} else {
				ret = jQuery.find.attr( elem, name );
	
				// Non-existent attributes return null, we normalize to undefined
				return ret == null ?
					undefined :
					ret;
			}
		},
	
		removeAttr: function( elem, value ) {
			var name, propName,
				i = 0,
				attrNames = value && value.match( rnotwhite );
	
			if ( attrNames && elem.nodeType === 1 ) {
				while ( (name = attrNames[i++]) ) {
					propName = jQuery.propFix[ name ] || name;
	
					// Boolean attributes get special treatment (#10870)
					if ( jQuery.expr.match.bool.test( name ) ) {
						// Set corresponding property to false
						elem[ propName ] = false;
					}
	
					elem.removeAttribute( name );
				}
			}
		},
	
		attrHooks: {
			type: {
				set: function( elem, value ) {
					if ( !support.radioValue && value === "radio" &&
						jQuery.nodeName( elem, "input" ) ) {
						var val = elem.value;
						elem.setAttribute( "type", value );
						if ( val ) {
							elem.value = val;
						}
						return value;
					}
				}
			}
		}
	});
	
	// Hooks for boolean attributes
	boolHook = {
		set: function( elem, value, name ) {
			if ( value === false ) {
				// Remove boolean attributes when set to false
				jQuery.removeAttr( elem, name );
			} else {
				elem.setAttribute( name, name );
			}
			return name;
		}
	};
	jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
		var getter = attrHandle[ name ] || jQuery.find.attr;
	
		attrHandle[ name ] = function( elem, name, isXML ) {
			var ret, handle;
			if ( !isXML ) {
				// Avoid an infinite loop by temporarily removing this function from the getter
				handle = attrHandle[ name ];
				attrHandle[ name ] = ret;
				ret = getter( elem, name, isXML ) != null ?
					name.toLowerCase() :
					null;
				attrHandle[ name ] = handle;
			}
			return ret;
		};
	});
	
	
	
	
	var rfocusable = /^(?:input|select|textarea|button)$/i;
	
	jQuery.fn.extend({
		prop: function( name, value ) {
			return access( this, jQuery.prop, name, value, arguments.length > 1 );
		},
	
		removeProp: function( name ) {
			return this.each(function() {
				delete this[ jQuery.propFix[ name ] || name ];
			});
		}
	});
	
	jQuery.extend({
		propFix: {
			"for": "htmlFor",
			"class": "className"
		},
	
		prop: function( elem, name, value ) {
			var ret, hooks, notxml,
				nType = elem.nodeType;
	
			// Don't get/set properties on text, comment and attribute nodes
			if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
				return;
			}
	
			notxml = nType !== 1 || !jQuery.isXMLDoc( elem );
	
			if ( notxml ) {
				// Fix name and attach hooks
				name = jQuery.propFix[ name ] || name;
				hooks = jQuery.propHooks[ name ];
			}
	
			if ( value !== undefined ) {
				return hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?
					ret :
					( elem[ name ] = value );
	
			} else {
				return hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ?
					ret :
					elem[ name ];
			}
		},
	
		propHooks: {
			tabIndex: {
				get: function( elem ) {
					return elem.hasAttribute( "tabindex" ) || rfocusable.test( elem.nodeName ) || elem.href ?
						elem.tabIndex :
						-1;
				}
			}
		}
	});
	
	if ( !support.optSelected ) {
		jQuery.propHooks.selected = {
			get: function( elem ) {
				var parent = elem.parentNode;
				if ( parent && parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
				return null;
			}
		};
	}
	
	jQuery.each([
		"tabIndex",
		"readOnly",
		"maxLength",
		"cellSpacing",
		"cellPadding",
		"rowSpan",
		"colSpan",
		"useMap",
		"frameBorder",
		"contentEditable"
	], function() {
		jQuery.propFix[ this.toLowerCase() ] = this;
	});
	
	
	
	
	var rclass = /[\t\r\n\f]/g;
	
	jQuery.fn.extend({
		addClass: function( value ) {
			var classes, elem, cur, clazz, j, finalValue,
				proceed = typeof value === "string" && value,
				i = 0,
				len = this.length;
	
			if ( jQuery.isFunction( value ) ) {
				return this.each(function( j ) {
					jQuery( this ).addClass( value.call( this, j, this.className ) );
				});
			}
	
			if ( proceed ) {
				// The disjunction here is for better compressibility (see removeClass)
				classes = ( value || "" ).match( rnotwhite ) || [];
	
				for ( ; i < len; i++ ) {
					elem = this[ i ];
					cur = elem.nodeType === 1 && ( elem.className ?
						( " " + elem.className + " " ).replace( rclass, " " ) :
						" "
					);
	
					if ( cur ) {
						j = 0;
						while ( (clazz = classes[j++]) ) {
							if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
								cur += clazz + " ";
							}
						}
	
						// only assign if different to avoid unneeded rendering.
						finalValue = jQuery.trim( cur );
						if ( elem.className !== finalValue ) {
							elem.className = finalValue;
						}
					}
				}
			}
	
			return this;
		},
	
		removeClass: function( value ) {
			var classes, elem, cur, clazz, j, finalValue,
				proceed = arguments.length === 0 || typeof value === "string" && value,
				i = 0,
				len = this.length;
	
			if ( jQuery.isFunction( value ) ) {
				return this.each(function( j ) {
					jQuery( this ).removeClass( value.call( this, j, this.className ) );
				});
			}
			if ( proceed ) {
				classes = ( value || "" ).match( rnotwhite ) || [];
	
				for ( ; i < len; i++ ) {
					elem = this[ i ];
					// This expression is here for better compressibility (see addClass)
					cur = elem.nodeType === 1 && ( elem.className ?
						( " " + elem.className + " " ).replace( rclass, " " ) :
						""
					);
	
					if ( cur ) {
						j = 0;
						while ( (clazz = classes[j++]) ) {
							// Remove *all* instances
							while ( cur.indexOf( " " + clazz + " " ) >= 0 ) {
								cur = cur.replace( " " + clazz + " ", " " );
							}
						}
	
						// Only assign if different to avoid unneeded rendering.
						finalValue = value ? jQuery.trim( cur ) : "";
						if ( elem.className !== finalValue ) {
							elem.className = finalValue;
						}
					}
				}
			}
	
			return this;
		},
	
		toggleClass: function( value, stateVal ) {
			var type = typeof value;
	
			if ( typeof stateVal === "boolean" && type === "string" ) {
				return stateVal ? this.addClass( value ) : this.removeClass( value );
			}
	
			if ( jQuery.isFunction( value ) ) {
				return this.each(function( i ) {
					jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
				});
			}
	
			return this.each(function() {
				if ( type === "string" ) {
					// Toggle individual class names
					var className,
						i = 0,
						self = jQuery( this ),
						classNames = value.match( rnotwhite ) || [];
	
					while ( (className = classNames[ i++ ]) ) {
						// Check each className given, space separated list
						if ( self.hasClass( className ) ) {
							self.removeClass( className );
						} else {
							self.addClass( className );
						}
					}
	
				// Toggle whole class name
				} else if ( type === strundefined || type === "boolean" ) {
					if ( this.className ) {
						// store className if set
						data_priv.set( this, "__className__", this.className );
					}
	
					// If the element has a class name or if we're passed `false`,
					// then remove the whole classname (if there was one, the above saved it).
					// Otherwise bring back whatever was previously saved (if anything),
					// falling back to the empty string if nothing was stored.
					this.className = this.className || value === false ? "" : data_priv.get( this, "__className__" ) || "";
				}
			});
		},
	
		hasClass: function( selector ) {
			var className = " " + selector + " ",
				i = 0,
				l = this.length;
			for ( ; i < l; i++ ) {
				if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) >= 0 ) {
					return true;
				}
			}
	
			return false;
		}
	});
	
	
	
	
	var rreturn = /\r/g;
	
	jQuery.fn.extend({
		val: function( value ) {
			var hooks, ret, isFunction,
				elem = this[0];
	
			if ( !arguments.length ) {
				if ( elem ) {
					hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];
	
					if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
						return ret;
					}
	
					ret = elem.value;
	
					return typeof ret === "string" ?
						// Handle most common string cases
						ret.replace(rreturn, "") :
						// Handle cases where value is null/undef or number
						ret == null ? "" : ret;
				}
	
				return;
			}
	
			isFunction = jQuery.isFunction( value );
	
			return this.each(function( i ) {
				var val;
	
				if ( this.nodeType !== 1 ) {
					return;
				}
	
				if ( isFunction ) {
					val = value.call( this, i, jQuery( this ).val() );
				} else {
					val = value;
				}
	
				// Treat null/undefined as ""; convert numbers to string
				if ( val == null ) {
					val = "";
	
				} else if ( typeof val === "number" ) {
					val += "";
	
				} else if ( jQuery.isArray( val ) ) {
					val = jQuery.map( val, function( value ) {
						return value == null ? "" : value + "";
					});
				}
	
				hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];
	
				// If set returns undefined, fall back to normal setting
				if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
					this.value = val;
				}
			});
		}
	});
	
	jQuery.extend({
		valHooks: {
			option: {
				get: function( elem ) {
					var val = jQuery.find.attr( elem, "value" );
					return val != null ?
						val :
						// Support: IE10-11+
						// option.text throws exceptions (#14686, #14858)
						jQuery.trim( jQuery.text( elem ) );
				}
			},
			select: {
				get: function( elem ) {
					var value, option,
						options = elem.options,
						index = elem.selectedIndex,
						one = elem.type === "select-one" || index < 0,
						values = one ? null : [],
						max = one ? index + 1 : options.length,
						i = index < 0 ?
							max :
							one ? index : 0;
	
					// Loop through all the selected options
					for ( ; i < max; i++ ) {
						option = options[ i ];
	
						// IE6-9 doesn't update selected after form reset (#2551)
						if ( ( option.selected || i === index ) &&
								// Don't return options that are disabled or in a disabled optgroup
								( support.optDisabled ? !option.disabled : option.getAttribute( "disabled" ) === null ) &&
								( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {
	
							// Get the specific value for the option
							value = jQuery( option ).val();
	
							// We don't need an array for one selects
							if ( one ) {
								return value;
							}
	
							// Multi-Selects return an array
							values.push( value );
						}
					}
	
					return values;
				},
	
				set: function( elem, value ) {
					var optionSet, option,
						options = elem.options,
						values = jQuery.makeArray( value ),
						i = options.length;
	
					while ( i-- ) {
						option = options[ i ];
						if ( (option.selected = jQuery.inArray( option.value, values ) >= 0) ) {
							optionSet = true;
						}
					}
	
					// Force browsers to behave consistently when non-matching value is set
					if ( !optionSet ) {
						elem.selectedIndex = -1;
					}
					return values;
				}
			}
		}
	});
	
	// Radios and checkboxes getter/setter
	jQuery.each([ "radio", "checkbox" ], function() {
		jQuery.valHooks[ this ] = {
			set: function( elem, value ) {
				if ( jQuery.isArray( value ) ) {
					return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
				}
			}
		};
		if ( !support.checkOn ) {
			jQuery.valHooks[ this ].get = function( elem ) {
				return elem.getAttribute("value") === null ? "on" : elem.value;
			};
		}
	});
	
	
	
	
	// Return jQuery for attributes-only inclusion
	
	
	jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
		"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
		"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {
	
		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	});
	
	jQuery.fn.extend({
		hover: function( fnOver, fnOut ) {
			return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
		},
	
		bind: function( types, data, fn ) {
			return this.on( types, null, data, fn );
		},
		unbind: function( types, fn ) {
			return this.off( types, null, fn );
		},
	
		delegate: function( selector, types, data, fn ) {
			return this.on( types, selector, data, fn );
		},
		undelegate: function( selector, types, fn ) {
			// ( namespace ) or ( selector, types [, fn] )
			return arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector || "**", fn );
		}
	});
	
	
	var nonce = jQuery.now();
	
	var rquery = (/\?/);
	
	
	
	// Support: Android 2.3
	// Workaround failure to string-cast null input
	jQuery.parseJSON = function( data ) {
		return JSON.parse( data + "" );
	};
	
	
	// Cross-browser xml parsing
	jQuery.parseXML = function( data ) {
		var xml, tmp;
		if ( !data || typeof data !== "string" ) {
			return null;
		}
	
		// Support: IE9
		try {
			tmp = new DOMParser();
			xml = tmp.parseFromString( data, "text/xml" );
		} catch ( e ) {
			xml = undefined;
		}
	
		if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
			jQuery.error( "Invalid XML: " + data );
		}
		return xml;
	};
	
	
	var
		rhash = /#.*$/,
		rts = /([?&])_=[^&]*/,
		rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
		// #7653, #8125, #8152: local protocol detection
		rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
		rnoContent = /^(?:GET|HEAD)$/,
		rprotocol = /^\/\//,
		rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,
	
		/* Prefilters
		 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
		 * 2) These are called:
		 *    - BEFORE asking for a transport
		 *    - AFTER param serialization (s.data is a string if s.processData is true)
		 * 3) key is the dataType
		 * 4) the catchall symbol "*" can be used
		 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
		 */
		prefilters = {},
	
		/* Transports bindings
		 * 1) key is the dataType
		 * 2) the catchall symbol "*" can be used
		 * 3) selection will start with transport dataType and THEN go to "*" if needed
		 */
		transports = {},
	
		// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
		allTypes = "*/".concat( "*" ),
	
		// Document location
		ajaxLocation = window.location.href,
	
		// Segment location into parts
		ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];
	
	// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
	function addToPrefiltersOrTransports( structure ) {
	
		// dataTypeExpression is optional and defaults to "*"
		return function( dataTypeExpression, func ) {
	
			if ( typeof dataTypeExpression !== "string" ) {
				func = dataTypeExpression;
				dataTypeExpression = "*";
			}
	
			var dataType,
				i = 0,
				dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];
	
			if ( jQuery.isFunction( func ) ) {
				// For each dataType in the dataTypeExpression
				while ( (dataType = dataTypes[i++]) ) {
					// Prepend if requested
					if ( dataType[0] === "+" ) {
						dataType = dataType.slice( 1 ) || "*";
						(structure[ dataType ] = structure[ dataType ] || []).unshift( func );
	
					// Otherwise append
					} else {
						(structure[ dataType ] = structure[ dataType ] || []).push( func );
					}
				}
			}
		};
	}
	
	// Base inspection function for prefilters and transports
	function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {
	
		var inspected = {},
			seekingTransport = ( structure === transports );
	
		function inspect( dataType ) {
			var selected;
			inspected[ dataType ] = true;
			jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
				var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
				if ( typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {
					options.dataTypes.unshift( dataTypeOrTransport );
					inspect( dataTypeOrTransport );
					return false;
				} else if ( seekingTransport ) {
					return !( selected = dataTypeOrTransport );
				}
			});
			return selected;
		}
	
		return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
	}
	
	// A special extend for ajax options
	// that takes "flat" options (not to be deep extended)
	// Fixes #9887
	function ajaxExtend( target, src ) {
		var key, deep,
			flatOptions = jQuery.ajaxSettings.flatOptions || {};
	
		for ( key in src ) {
			if ( src[ key ] !== undefined ) {
				( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];
			}
		}
		if ( deep ) {
			jQuery.extend( true, target, deep );
		}
	
		return target;
	}
	
	/* Handles responses to an ajax request:
	 * - finds the right dataType (mediates between content-type and expected dataType)
	 * - returns the corresponding response
	 */
	function ajaxHandleResponses( s, jqXHR, responses ) {
	
		var ct, type, finalDataType, firstDataType,
			contents = s.contents,
			dataTypes = s.dataTypes;
	
		// Remove auto dataType and get content-type in the process
		while ( dataTypes[ 0 ] === "*" ) {
			dataTypes.shift();
			if ( ct === undefined ) {
				ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
			}
		}
	
		// Check if we're dealing with a known content-type
		if ( ct ) {
			for ( type in contents ) {
				if ( contents[ type ] && contents[ type ].test( ct ) ) {
					dataTypes.unshift( type );
					break;
				}
			}
		}
	
		// Check to see if we have a response for the expected dataType
		if ( dataTypes[ 0 ] in responses ) {
			finalDataType = dataTypes[ 0 ];
		} else {
			// Try convertible dataTypes
			for ( type in responses ) {
				if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
					finalDataType = type;
					break;
				}
				if ( !firstDataType ) {
					firstDataType = type;
				}
			}
			// Or just use first one
			finalDataType = finalDataType || firstDataType;
		}
	
		// If we found a dataType
		// We add the dataType to the list if needed
		// and return the corresponding response
		if ( finalDataType ) {
			if ( finalDataType !== dataTypes[ 0 ] ) {
				dataTypes.unshift( finalDataType );
			}
			return responses[ finalDataType ];
		}
	}
	
	/* Chain conversions given the request and the original response
	 * Also sets the responseXXX fields on the jqXHR instance
	 */
	function ajaxConvert( s, response, jqXHR, isSuccess ) {
		var conv2, current, conv, tmp, prev,
			converters = {},
			// Work with a copy of dataTypes in case we need to modify it for conversion
			dataTypes = s.dataTypes.slice();
	
		// Create converters map with lowercased keys
		if ( dataTypes[ 1 ] ) {
			for ( conv in s.converters ) {
				converters[ conv.toLowerCase() ] = s.converters[ conv ];
			}
		}
	
		current = dataTypes.shift();
	
		// Convert to each sequential dataType
		while ( current ) {
	
			if ( s.responseFields[ current ] ) {
				jqXHR[ s.responseFields[ current ] ] = response;
			}
	
			// Apply the dataFilter if provided
			if ( !prev && isSuccess && s.dataFilter ) {
				response = s.dataFilter( response, s.dataType );
			}
	
			prev = current;
			current = dataTypes.shift();
	
			if ( current ) {
	
			// There's only work to do if current dataType is non-auto
				if ( current === "*" ) {
	
					current = prev;
	
				// Convert response if prev dataType is non-auto and differs from current
				} else if ( prev !== "*" && prev !== current ) {
	
					// Seek a direct converter
					conv = converters[ prev + " " + current ] || converters[ "* " + current ];
	
					// If none found, seek a pair
					if ( !conv ) {
						for ( conv2 in converters ) {
	
							// If conv2 outputs current
							tmp = conv2.split( " " );
							if ( tmp[ 1 ] === current ) {
	
								// If prev can be converted to accepted input
								conv = converters[ prev + " " + tmp[ 0 ] ] ||
									converters[ "* " + tmp[ 0 ] ];
								if ( conv ) {
									// Condense equivalence converters
									if ( conv === true ) {
										conv = converters[ conv2 ];
	
									// Otherwise, insert the intermediate dataType
									} else if ( converters[ conv2 ] !== true ) {
										current = tmp[ 0 ];
										dataTypes.unshift( tmp[ 1 ] );
									}
									break;
								}
							}
						}
					}
	
					// Apply converter (if not an equivalence)
					if ( conv !== true ) {
	
						// Unless errors are allowed to bubble, catch and return them
						if ( conv && s[ "throws" ] ) {
							response = conv( response );
						} else {
							try {
								response = conv( response );
							} catch ( e ) {
								return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };
							}
						}
					}
				}
			}
		}
	
		return { state: "success", data: response };
	}
	
	jQuery.extend({
	
		// Counter for holding the number of active queries
		active: 0,
	
		// Last-Modified header cache for next request
		lastModified: {},
		etag: {},
	
		ajaxSettings: {
			url: ajaxLocation,
			type: "GET",
			isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
			global: true,
			processData: true,
			async: true,
			contentType: "application/x-www-form-urlencoded; charset=UTF-8",
			/*
			timeout: 0,
			data: null,
			dataType: null,
			username: null,
			password: null,
			cache: null,
			throws: false,
			traditional: false,
			headers: {},
			*/
	
			accepts: {
				"*": allTypes,
				text: "text/plain",
				html: "text/html",
				xml: "application/xml, text/xml",
				json: "application/json, text/javascript"
			},
	
			contents: {
				xml: /xml/,
				html: /html/,
				json: /json/
			},
	
			responseFields: {
				xml: "responseXML",
				text: "responseText",
				json: "responseJSON"
			},
	
			// Data converters
			// Keys separate source (or catchall "*") and destination types with a single space
			converters: {
	
				// Convert anything to text
				"* text": String,
	
				// Text to html (true = no transformation)
				"text html": true,
	
				// Evaluate text as a json expression
				"text json": jQuery.parseJSON,
	
				// Parse text as xml
				"text xml": jQuery.parseXML
			},
	
			// For options that shouldn't be deep extended:
			// you can add your own custom options here if
			// and when you create one that shouldn't be
			// deep extended (see ajaxExtend)
			flatOptions: {
				url: true,
				context: true
			}
		},
	
		// Creates a full fledged settings object into target
		// with both ajaxSettings and settings fields.
		// If target is omitted, writes into ajaxSettings.
		ajaxSetup: function( target, settings ) {
			return settings ?
	
				// Building a settings object
				ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :
	
				// Extending ajaxSettings
				ajaxExtend( jQuery.ajaxSettings, target );
		},
	
		ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
		ajaxTransport: addToPrefiltersOrTransports( transports ),
	
		// Main method
		ajax: function( url, options ) {
	
			// If url is an object, simulate pre-1.5 signature
			if ( typeof url === "object" ) {
				options = url;
				url = undefined;
			}
	
			// Force options to be an object
			options = options || {};
	
			var transport,
				// URL without anti-cache param
				cacheURL,
				// Response headers
				responseHeadersString,
				responseHeaders,
				// timeout handle
				timeoutTimer,
				// Cross-domain detection vars
				parts,
				// To know if global events are to be dispatched
				fireGlobals,
				// Loop variable
				i,
				// Create the final options object
				s = jQuery.ajaxSetup( {}, options ),
				// Callbacks context
				callbackContext = s.context || s,
				// Context for global events is callbackContext if it is a DOM node or jQuery collection
				globalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,
				// Deferreds
				deferred = jQuery.Deferred(),
				completeDeferred = jQuery.Callbacks("once memory"),
				// Status-dependent callbacks
				statusCode = s.statusCode || {},
				// Headers (they are sent all at once)
				requestHeaders = {},
				requestHeadersNames = {},
				// The jqXHR state
				state = 0,
				// Default abort message
				strAbort = "canceled",
				// Fake xhr
				jqXHR = {
					readyState: 0,
	
					// Builds headers hashtable if needed
					getResponseHeader: function( key ) {
						var match;
						if ( state === 2 ) {
							if ( !responseHeaders ) {
								responseHeaders = {};
								while ( (match = rheaders.exec( responseHeadersString )) ) {
									responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
								}
							}
							match = responseHeaders[ key.toLowerCase() ];
						}
						return match == null ? null : match;
					},
	
					// Raw string
					getAllResponseHeaders: function() {
						return state === 2 ? responseHeadersString : null;
					},
	
					// Caches the header
					setRequestHeader: function( name, value ) {
						var lname = name.toLowerCase();
						if ( !state ) {
							name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
							requestHeaders[ name ] = value;
						}
						return this;
					},
	
					// Overrides response content-type header
					overrideMimeType: function( type ) {
						if ( !state ) {
							s.mimeType = type;
						}
						return this;
					},
	
					// Status-dependent callbacks
					statusCode: function( map ) {
						var code;
						if ( map ) {
							if ( state < 2 ) {
								for ( code in map ) {
									// Lazy-add the new callback in a way that preserves old ones
									statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
								}
							} else {
								// Execute the appropriate callbacks
								jqXHR.always( map[ jqXHR.status ] );
							}
						}
						return this;
					},
	
					// Cancel the request
					abort: function( statusText ) {
						var finalText = statusText || strAbort;
						if ( transport ) {
							transport.abort( finalText );
						}
						done( 0, finalText );
						return this;
					}
				};
	
			// Attach deferreds
			deferred.promise( jqXHR ).complete = completeDeferred.add;
			jqXHR.success = jqXHR.done;
			jqXHR.error = jqXHR.fail;
	
			// Remove hash character (#7531: and string promotion)
			// Add protocol if not provided (prefilters might expect it)
			// Handle falsy url in the settings object (#10093: consistency with old signature)
			// We also use the url parameter if available
			s.url = ( ( url || s.url || ajaxLocation ) + "" ).replace( rhash, "" )
				.replace( rprotocol, ajaxLocParts[ 1 ] + "//" );
	
			// Alias method option to type as per ticket #12004
			s.type = options.method || options.type || s.method || s.type;
	
			// Extract dataTypes list
			s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];
	
			// A cross-domain request is in order when we have a protocol:host:port mismatch
			if ( s.crossDomain == null ) {
				parts = rurl.exec( s.url.toLowerCase() );
				s.crossDomain = !!( parts &&
					( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
						( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==
							( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )
				);
			}
	
			// Convert data if not already a string
			if ( s.data && s.processData && typeof s.data !== "string" ) {
				s.data = jQuery.param( s.data, s.traditional );
			}
	
			// Apply prefilters
			inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );
	
			// If request was aborted inside a prefilter, stop there
			if ( state === 2 ) {
				return jqXHR;
			}
	
			// We can fire global events as of now if asked to
			// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
			fireGlobals = jQuery.event && s.global;
	
			// Watch for a new set of requests
			if ( fireGlobals && jQuery.active++ === 0 ) {
				jQuery.event.trigger("ajaxStart");
			}
	
			// Uppercase the type
			s.type = s.type.toUpperCase();
	
			// Determine if request has content
			s.hasContent = !rnoContent.test( s.type );
	
			// Save the URL in case we're toying with the If-Modified-Since
			// and/or If-None-Match header later on
			cacheURL = s.url;
	
			// More options handling for requests with no content
			if ( !s.hasContent ) {
	
				// If data is available, append data to url
				if ( s.data ) {
					cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );
					// #9682: remove data so that it's not used in an eventual retry
					delete s.data;
				}
	
				// Add anti-cache in url if needed
				if ( s.cache === false ) {
					s.url = rts.test( cacheURL ) ?
	
						// If there is already a '_' parameter, set its value
						cacheURL.replace( rts, "$1_=" + nonce++ ) :
	
						// Otherwise add one to the end
						cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
				}
			}
	
			// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
			if ( s.ifModified ) {
				if ( jQuery.lastModified[ cacheURL ] ) {
					jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
				}
				if ( jQuery.etag[ cacheURL ] ) {
					jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
				}
			}
	
			// Set the correct header, if data is being sent
			if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
				jqXHR.setRequestHeader( "Content-Type", s.contentType );
			}
	
			// Set the Accepts header for the server, depending on the dataType
			jqXHR.setRequestHeader(
				"Accept",
				s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
					s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
					s.accepts[ "*" ]
			);
	
			// Check for headers option
			for ( i in s.headers ) {
				jqXHR.setRequestHeader( i, s.headers[ i ] );
			}
	
			// Allow custom headers/mimetypes and early abort
			if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
				// Abort if not done already and return
				return jqXHR.abort();
			}
	
			// Aborting is no longer a cancellation
			strAbort = "abort";
	
			// Install callbacks on deferreds
			for ( i in { success: 1, error: 1, complete: 1 } ) {
				jqXHR[ i ]( s[ i ] );
			}
	
			// Get transport
			transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );
	
			// If no transport, we auto-abort
			if ( !transport ) {
				done( -1, "No Transport" );
			} else {
				jqXHR.readyState = 1;
	
				// Send global event
				if ( fireGlobals ) {
					globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
				}
				// Timeout
				if ( s.async && s.timeout > 0 ) {
					timeoutTimer = setTimeout(function() {
						jqXHR.abort("timeout");
					}, s.timeout );
				}
	
				try {
					state = 1;
					transport.send( requestHeaders, done );
				} catch ( e ) {
					// Propagate exception as error if not done
					if ( state < 2 ) {
						done( -1, e );
					// Simply rethrow otherwise
					} else {
						throw e;
					}
				}
			}
	
			// Callback for when everything is done
			function done( status, nativeStatusText, responses, headers ) {
				var isSuccess, success, error, response, modified,
					statusText = nativeStatusText;
	
				// Called once
				if ( state === 2 ) {
					return;
				}
	
				// State is "done" now
				state = 2;
	
				// Clear timeout if it exists
				if ( timeoutTimer ) {
					clearTimeout( timeoutTimer );
				}
	
				// Dereference transport for early garbage collection
				// (no matter how long the jqXHR object will be used)
				transport = undefined;
	
				// Cache response headers
				responseHeadersString = headers || "";
	
				// Set readyState
				jqXHR.readyState = status > 0 ? 4 : 0;
	
				// Determine if successful
				isSuccess = status >= 200 && status < 300 || status === 304;
	
				// Get response data
				if ( responses ) {
					response = ajaxHandleResponses( s, jqXHR, responses );
				}
	
				// Convert no matter what (that way responseXXX fields are always set)
				response = ajaxConvert( s, response, jqXHR, isSuccess );
	
				// If successful, handle type chaining
				if ( isSuccess ) {
	
					// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
					if ( s.ifModified ) {
						modified = jqXHR.getResponseHeader("Last-Modified");
						if ( modified ) {
							jQuery.lastModified[ cacheURL ] = modified;
						}
						modified = jqXHR.getResponseHeader("etag");
						if ( modified ) {
							jQuery.etag[ cacheURL ] = modified;
						}
					}
	
					// if no content
					if ( status === 204 || s.type === "HEAD" ) {
						statusText = "nocontent";
	
					// if not modified
					} else if ( status === 304 ) {
						statusText = "notmodified";
	
					// If we have data, let's convert it
					} else {
						statusText = response.state;
						success = response.data;
						error = response.error;
						isSuccess = !error;
					}
				} else {
					// Extract error from statusText and normalize for non-aborts
					error = statusText;
					if ( status || !statusText ) {
						statusText = "error";
						if ( status < 0 ) {
							status = 0;
						}
					}
				}
	
				// Set data for the fake xhr object
				jqXHR.status = status;
				jqXHR.statusText = ( nativeStatusText || statusText ) + "";
	
				// Success/Error
				if ( isSuccess ) {
					deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
				} else {
					deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
				}
	
				// Status-dependent callbacks
				jqXHR.statusCode( statusCode );
				statusCode = undefined;
	
				if ( fireGlobals ) {
					globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
						[ jqXHR, s, isSuccess ? success : error ] );
				}
	
				// Complete
				completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );
	
				if ( fireGlobals ) {
					globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
					// Handle the global AJAX counter
					if ( !( --jQuery.active ) ) {
						jQuery.event.trigger("ajaxStop");
					}
				}
			}
	
			return jqXHR;
		},
	
		getJSON: function( url, data, callback ) {
			return jQuery.get( url, data, callback, "json" );
		},
	
		getScript: function( url, callback ) {
			return jQuery.get( url, undefined, callback, "script" );
		}
	});
	
	jQuery.each( [ "get", "post" ], function( i, method ) {
		jQuery[ method ] = function( url, data, callback, type ) {
			// Shift arguments if data argument was omitted
			if ( jQuery.isFunction( data ) ) {
				type = type || callback;
				callback = data;
				data = undefined;
			}
	
			return jQuery.ajax({
				url: url,
				type: method,
				dataType: type,
				data: data,
				success: callback
			});
		};
	});
	
	
	jQuery._evalUrl = function( url ) {
		return jQuery.ajax({
			url: url,
			type: "GET",
			dataType: "script",
			async: false,
			global: false,
			"throws": true
		});
	};
	
	
	jQuery.fn.extend({
		wrapAll: function( html ) {
			var wrap;
	
			if ( jQuery.isFunction( html ) ) {
				return this.each(function( i ) {
					jQuery( this ).wrapAll( html.call(this, i) );
				});
			}
	
			if ( this[ 0 ] ) {
	
				// The elements to wrap the target around
				wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );
	
				if ( this[ 0 ].parentNode ) {
					wrap.insertBefore( this[ 0 ] );
				}
	
				wrap.map(function() {
					var elem = this;
	
					while ( elem.firstElementChild ) {
						elem = elem.firstElementChild;
					}
	
					return elem;
				}).append( this );
			}
	
			return this;
		},
	
		wrapInner: function( html ) {
			if ( jQuery.isFunction( html ) ) {
				return this.each(function( i ) {
					jQuery( this ).wrapInner( html.call(this, i) );
				});
			}
	
			return this.each(function() {
				var self = jQuery( this ),
					contents = self.contents();
	
				if ( contents.length ) {
					contents.wrapAll( html );
	
				} else {
					self.append( html );
				}
			});
		},
	
		wrap: function( html ) {
			var isFunction = jQuery.isFunction( html );
	
			return this.each(function( i ) {
				jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
			});
		},
	
		unwrap: function() {
			return this.parent().each(function() {
				if ( !jQuery.nodeName( this, "body" ) ) {
					jQuery( this ).replaceWith( this.childNodes );
				}
			}).end();
		}
	});
	
	
	jQuery.expr.filters.hidden = function( elem ) {
		// Support: Opera <= 12.12
		// Opera reports offsetWidths and offsetHeights less than zero on some elements
		return elem.offsetWidth <= 0 && elem.offsetHeight <= 0;
	};
	jQuery.expr.filters.visible = function( elem ) {
		return !jQuery.expr.filters.hidden( elem );
	};
	
	
	
	
	var r20 = /%20/g,
		rbracket = /\[\]$/,
		rCRLF = /\r?\n/g,
		rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
		rsubmittable = /^(?:input|select|textarea|keygen)/i;
	
	function buildParams( prefix, obj, traditional, add ) {
		var name;
	
		if ( jQuery.isArray( obj ) ) {
			// Serialize array item.
			jQuery.each( obj, function( i, v ) {
				if ( traditional || rbracket.test( prefix ) ) {
					// Treat each array item as a scalar.
					add( prefix, v );
	
				} else {
					// Item is non-scalar (array or object), encode its numeric index.
					buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
				}
			});
	
		} else if ( !traditional && jQuery.type( obj ) === "object" ) {
			// Serialize object item.
			for ( name in obj ) {
				buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
			}
	
		} else {
			// Serialize scalar item.
			add( prefix, obj );
		}
	}
	
	// Serialize an array of form elements or a set of
	// key/values into a query string
	jQuery.param = function( a, traditional ) {
		var prefix,
			s = [],
			add = function( key, value ) {
				// If value is a function, invoke it and return its value
				value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
				s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
			};
	
		// Set traditional to true for jQuery <= 1.3.2 behavior.
		if ( traditional === undefined ) {
			traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
		}
	
		// If an array was passed in, assume that it is an array of form elements.
		if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
			// Serialize the form elements
			jQuery.each( a, function() {
				add( this.name, this.value );
			});
	
		} else {
			// If traditional, encode the "old" way (the way 1.3.2 or older
			// did it), otherwise encode params recursively.
			for ( prefix in a ) {
				buildParams( prefix, a[ prefix ], traditional, add );
			}
		}
	
		// Return the resulting serialization
		return s.join( "&" ).replace( r20, "+" );
	};
	
	jQuery.fn.extend({
		serialize: function() {
			return jQuery.param( this.serializeArray() );
		},
		serializeArray: function() {
			return this.map(function() {
				// Can add propHook for "elements" to filter or add form elements
				var elements = jQuery.prop( this, "elements" );
				return elements ? jQuery.makeArray( elements ) : this;
			})
			.filter(function() {
				var type = this.type;
	
				// Use .is( ":disabled" ) so that fieldset[disabled] works
				return this.name && !jQuery( this ).is( ":disabled" ) &&
					rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
					( this.checked || !rcheckableType.test( type ) );
			})
			.map(function( i, elem ) {
				var val = jQuery( this ).val();
	
				return val == null ?
					null :
					jQuery.isArray( val ) ?
						jQuery.map( val, function( val ) {
							return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
						}) :
						{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
			}).get();
		}
	});
	
	
	jQuery.ajaxSettings.xhr = function() {
		try {
			return new XMLHttpRequest();
		} catch( e ) {}
	};
	
	var xhrId = 0,
		xhrCallbacks = {},
		xhrSuccessStatus = {
			// file protocol always yields status code 0, assume 200
			0: 200,
			// Support: IE9
			// #1450: sometimes IE returns 1223 when it should be 204
			1223: 204
		},
		xhrSupported = jQuery.ajaxSettings.xhr();
	
	// Support: IE9
	// Open requests must be manually aborted on unload (#5280)
	// See https://support.microsoft.com/kb/2856746 for more info
	if ( window.attachEvent ) {
		window.attachEvent( "onunload", function() {
			for ( var key in xhrCallbacks ) {
				xhrCallbacks[ key ]();
			}
		});
	}
	
	support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
	support.ajax = xhrSupported = !!xhrSupported;
	
	jQuery.ajaxTransport(function( options ) {
		var callback;
	
		// Cross domain only allowed if supported through XMLHttpRequest
		if ( support.cors || xhrSupported && !options.crossDomain ) {
			return {
				send: function( headers, complete ) {
					var i,
						xhr = options.xhr(),
						id = ++xhrId;
	
					xhr.open( options.type, options.url, options.async, options.username, options.password );
	
					// Apply custom fields if provided
					if ( options.xhrFields ) {
						for ( i in options.xhrFields ) {
							xhr[ i ] = options.xhrFields[ i ];
						}
					}
	
					// Override mime type if needed
					if ( options.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( options.mimeType );
					}
	
					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !options.crossDomain && !headers["X-Requested-With"] ) {
						headers["X-Requested-With"] = "XMLHttpRequest";
					}
	
					// Set headers
					for ( i in headers ) {
						xhr.setRequestHeader( i, headers[ i ] );
					}
	
					// Callback
					callback = function( type ) {
						return function() {
							if ( callback ) {
								delete xhrCallbacks[ id ];
								callback = xhr.onload = xhr.onerror = null;
	
								if ( type === "abort" ) {
									xhr.abort();
								} else if ( type === "error" ) {
									complete(
										// file: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								} else {
									complete(
										xhrSuccessStatus[ xhr.status ] || xhr.status,
										xhr.statusText,
										// Support: IE9
										// Accessing binary-data responseText throws an exception
										// (#11426)
										typeof xhr.responseText === "string" ? {
											text: xhr.responseText
										} : undefined,
										xhr.getAllResponseHeaders()
									);
								}
							}
						};
					};
	
					// Listen to events
					xhr.onload = callback();
					xhr.onerror = callback("error");
	
					// Create the abort callback
					callback = xhrCallbacks[ id ] = callback("abort");
	
					try {
						// Do send the request (this may raise an exception)
						xhr.send( options.hasContent && options.data || null );
					} catch ( e ) {
						// #14683: Only rethrow if this hasn't been notified as an error yet
						if ( callback ) {
							throw e;
						}
					}
				},
	
				abort: function() {
					if ( callback ) {
						callback();
					}
				}
			};
		}
	});
	
	
	
	
	// Install script dataType
	jQuery.ajaxSetup({
		accepts: {
			script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
		},
		contents: {
			script: /(?:java|ecma)script/
		},
		converters: {
			"text script": function( text ) {
				jQuery.globalEval( text );
				return text;
			}
		}
	});
	
	// Handle cache's special case and crossDomain
	jQuery.ajaxPrefilter( "script", function( s ) {
		if ( s.cache === undefined ) {
			s.cache = false;
		}
		if ( s.crossDomain ) {
			s.type = "GET";
		}
	});
	
	// Bind script tag hack transport
	jQuery.ajaxTransport( "script", function( s ) {
		// This transport only deals with cross domain requests
		if ( s.crossDomain ) {
			var script, callback;
			return {
				send: function( _, complete ) {
					script = jQuery("<script>").prop({
						async: true,
						charset: s.scriptCharset,
						src: s.url
					}).on(
						"load error",
						callback = function( evt ) {
							script.remove();
							callback = null;
							if ( evt ) {
								complete( evt.type === "error" ? 404 : 200, evt.type );
							}
						}
					);
					document.head.appendChild( script[ 0 ] );
				},
				abort: function() {
					if ( callback ) {
						callback();
					}
				}
			};
		}
	});
	
	
	
	
	var oldCallbacks = [],
		rjsonp = /(=)\?(?=&|$)|\?\?/;
	
	// Default jsonp settings
	jQuery.ajaxSetup({
		jsonp: "callback",
		jsonpCallback: function() {
			var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
			this[ callback ] = true;
			return callback;
		}
	});
	
	// Detect, normalize options and install callbacks for jsonp requests
	jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {
	
		var callbackName, overwritten, responseContainer,
			jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
				"url" :
				typeof s.data === "string" && !( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") && rjsonp.test( s.data ) && "data"
			);
	
		// Handle iff the expected data type is "jsonp" or we have a parameter to set
		if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {
	
			// Get callback name, remembering preexisting value associated with it
			callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
				s.jsonpCallback() :
				s.jsonpCallback;
	
			// Insert callback into url or form data
			if ( jsonProp ) {
				s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
			} else if ( s.jsonp !== false ) {
				s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
			}
	
			// Use data converter to retrieve json after script execution
			s.converters["script json"] = function() {
				if ( !responseContainer ) {
					jQuery.error( callbackName + " was not called" );
				}
				return responseContainer[ 0 ];
			};
	
			// force json dataType
			s.dataTypes[ 0 ] = "json";
	
			// Install callback
			overwritten = window[ callbackName ];
			window[ callbackName ] = function() {
				responseContainer = arguments;
			};
	
			// Clean-up function (fires after converters)
			jqXHR.always(function() {
				// Restore preexisting value
				window[ callbackName ] = overwritten;
	
				// Save back as free
				if ( s[ callbackName ] ) {
					// make sure that re-using the options doesn't screw things around
					s.jsonpCallback = originalSettings.jsonpCallback;
	
					// save the callback name for future use
					oldCallbacks.push( callbackName );
				}
	
				// Call if it was a function and we have a response
				if ( responseContainer && jQuery.isFunction( overwritten ) ) {
					overwritten( responseContainer[ 0 ] );
				}
	
				responseContainer = overwritten = undefined;
			});
	
			// Delegate to script
			return "script";
		}
	});
	
	
	
	
	// data: string of html
	// context (optional): If specified, the fragment will be created in this context, defaults to document
	// keepScripts (optional): If true, will include scripts passed in the html string
	jQuery.parseHTML = function( data, context, keepScripts ) {
		if ( !data || typeof data !== "string" ) {
			return null;
		}
		if ( typeof context === "boolean" ) {
			keepScripts = context;
			context = false;
		}
		context = context || document;
	
		var parsed = rsingleTag.exec( data ),
			scripts = !keepScripts && [];
	
		// Single tag
		if ( parsed ) {
			return [ context.createElement( parsed[1] ) ];
		}
	
		parsed = jQuery.buildFragment( [ data ], context, scripts );
	
		if ( scripts && scripts.length ) {
			jQuery( scripts ).remove();
		}
	
		return jQuery.merge( [], parsed.childNodes );
	};
	
	
	// Keep a copy of the old load method
	var _load = jQuery.fn.load;
	
	/**
	 * Load a url into a page
	 */
	jQuery.fn.load = function( url, params, callback ) {
		if ( typeof url !== "string" && _load ) {
			return _load.apply( this, arguments );
		}
	
		var selector, type, response,
			self = this,
			off = url.indexOf(" ");
	
		if ( off >= 0 ) {
			selector = jQuery.trim( url.slice( off ) );
			url = url.slice( 0, off );
		}
	
		// If it's a function
		if ( jQuery.isFunction( params ) ) {
	
			// We assume that it's the callback
			callback = params;
			params = undefined;
	
		// Otherwise, build a param string
		} else if ( params && typeof params === "object" ) {
			type = "POST";
		}
	
		// If we have elements to modify, make the request
		if ( self.length > 0 ) {
			jQuery.ajax({
				url: url,
	
				// if "type" variable is undefined, then "GET" method will be used
				type: type,
				dataType: "html",
				data: params
			}).done(function( responseText ) {
	
				// Save response for use in complete callback
				response = arguments;
	
				self.html( selector ?
	
					// If a selector was specified, locate the right elements in a dummy div
					// Exclude scripts to avoid IE 'Permission Denied' errors
					jQuery("<div>").append( jQuery.parseHTML( responseText ) ).find( selector ) :
	
					// Otherwise use the full result
					responseText );
	
			}).complete( callback && function( jqXHR, status ) {
				self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );
			});
		}
	
		return this;
	};
	
	
	
	
	// Attach a bunch of functions for handling common AJAX events
	jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ) {
		jQuery.fn[ type ] = function( fn ) {
			return this.on( type, fn );
		};
	});
	
	
	
	
	jQuery.expr.filters.animated = function( elem ) {
		return jQuery.grep(jQuery.timers, function( fn ) {
			return elem === fn.elem;
		}).length;
	};
	
	
	
	
	var docElem = window.document.documentElement;
	
	/**
	 * Gets a window from an element
	 */
	function getWindow( elem ) {
		return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;
	}
	
	jQuery.offset = {
		setOffset: function( elem, options, i ) {
			var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
				position = jQuery.css( elem, "position" ),
				curElem = jQuery( elem ),
				props = {};
	
			// Set position first, in-case top/left are set even on static elem
			if ( position === "static" ) {
				elem.style.position = "relative";
			}
	
			curOffset = curElem.offset();
			curCSSTop = jQuery.css( elem, "top" );
			curCSSLeft = jQuery.css( elem, "left" );
			calculatePosition = ( position === "absolute" || position === "fixed" ) &&
				( curCSSTop + curCSSLeft ).indexOf("auto") > -1;
	
			// Need to be able to calculate position if either
			// top or left is auto and position is either absolute or fixed
			if ( calculatePosition ) {
				curPosition = curElem.position();
				curTop = curPosition.top;
				curLeft = curPosition.left;
	
			} else {
				curTop = parseFloat( curCSSTop ) || 0;
				curLeft = parseFloat( curCSSLeft ) || 0;
			}
	
			if ( jQuery.isFunction( options ) ) {
				options = options.call( elem, i, curOffset );
			}
	
			if ( options.top != null ) {
				props.top = ( options.top - curOffset.top ) + curTop;
			}
			if ( options.left != null ) {
				props.left = ( options.left - curOffset.left ) + curLeft;
			}
	
			if ( "using" in options ) {
				options.using.call( elem, props );
	
			} else {
				curElem.css( props );
			}
		}
	};
	
	jQuery.fn.extend({
		offset: function( options ) {
			if ( arguments.length ) {
				return options === undefined ?
					this :
					this.each(function( i ) {
						jQuery.offset.setOffset( this, options, i );
					});
			}
	
			var docElem, win,
				elem = this[ 0 ],
				box = { top: 0, left: 0 },
				doc = elem && elem.ownerDocument;
	
			if ( !doc ) {
				return;
			}
	
			docElem = doc.documentElement;
	
			// Make sure it's not a disconnected DOM node
			if ( !jQuery.contains( docElem, elem ) ) {
				return box;
			}
	
			// Support: BlackBerry 5, iOS 3 (original iPhone)
			// If we don't have gBCR, just use 0,0 rather than error
			if ( typeof elem.getBoundingClientRect !== strundefined ) {
				box = elem.getBoundingClientRect();
			}
			win = getWindow( doc );
			return {
				top: box.top + win.pageYOffset - docElem.clientTop,
				left: box.left + win.pageXOffset - docElem.clientLeft
			};
		},
	
		position: function() {
			if ( !this[ 0 ] ) {
				return;
			}
	
			var offsetParent, offset,
				elem = this[ 0 ],
				parentOffset = { top: 0, left: 0 };
	
			// Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent
			if ( jQuery.css( elem, "position" ) === "fixed" ) {
				// Assume getBoundingClientRect is there when computed position is fixed
				offset = elem.getBoundingClientRect();
	
			} else {
				// Get *real* offsetParent
				offsetParent = this.offsetParent();
	
				// Get correct offsets
				offset = this.offset();
				if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
					parentOffset = offsetParent.offset();
				}
	
				// Add offsetParent borders
				parentOffset.top += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
			}
	
			// Subtract parent offsets and element margins
			return {
				top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
				left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
			};
		},
	
		offsetParent: function() {
			return this.map(function() {
				var offsetParent = this.offsetParent || docElem;
	
				while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) && jQuery.css( offsetParent, "position" ) === "static" ) ) {
					offsetParent = offsetParent.offsetParent;
				}
	
				return offsetParent || docElem;
			});
		}
	});
	
	// Create scrollLeft and scrollTop methods
	jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
		var top = "pageYOffset" === prop;
	
		jQuery.fn[ method ] = function( val ) {
			return access( this, function( elem, method, val ) {
				var win = getWindow( elem );
	
				if ( val === undefined ) {
					return win ? win[ prop ] : elem[ method ];
				}
	
				if ( win ) {
					win.scrollTo(
						!top ? val : window.pageXOffset,
						top ? val : window.pageYOffset
					);
	
				} else {
					elem[ method ] = val;
				}
			}, method, val, arguments.length, null );
		};
	});
	
	// Support: Safari<7+, Chrome<37+
	// Add the top/left cssHooks using jQuery.fn.position
	// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
	// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280
	// getComputedStyle returns percent when specified for top/left/bottom/right;
	// rather than make the css module depend on the offset module, just check for it here
	jQuery.each( [ "top", "left" ], function( i, prop ) {
		jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
			function( elem, computed ) {
				if ( computed ) {
					computed = curCSS( elem, prop );
					// If curCSS returns percentage, fallback to offset
					return rnumnonpx.test( computed ) ?
						jQuery( elem ).position()[ prop ] + "px" :
						computed;
				}
			}
		);
	});
	
	
	// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
	jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
		jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
			// Margin is only for outerHeight, outerWidth
			jQuery.fn[ funcName ] = function( margin, value ) {
				var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
					extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );
	
				return access( this, function( elem, type, value ) {
					var doc;
	
					if ( jQuery.isWindow( elem ) ) {
						// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
						// isn't a whole lot we can do. See pull request at this URL for discussion:
						// https://github.com/jquery/jquery/pull/764
						return elem.document.documentElement[ "client" + name ];
					}
	
					// Get document width or height
					if ( elem.nodeType === 9 ) {
						doc = elem.documentElement;
	
						// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
						// whichever is greatest
						return Math.max(
							elem.body[ "scroll" + name ], doc[ "scroll" + name ],
							elem.body[ "offset" + name ], doc[ "offset" + name ],
							doc[ "client" + name ]
						);
					}
	
					return value === undefined ?
						// Get width or height on the element, requesting but not forcing parseFloat
						jQuery.css( elem, type, extra ) :
	
						// Set width or height on the element
						jQuery.style( elem, type, value, extra );
				}, type, chainable ? margin : undefined, chainable, null );
			};
		});
	});
	
	
	// The number of elements contained in the matched element set
	jQuery.fn.size = function() {
		return this.length;
	};
	
	jQuery.fn.andSelf = jQuery.fn.addBack;
	
	
	
	
	// Register as a named AMD module, since jQuery can be concatenated with other
	// files that may use define, but not via a proper concatenation script that
	// understands anonymous AMD modules. A named AMD is safest and most robust
	// way to register. Lowercase jquery is used because AMD module names are
	// derived from file names, and jQuery is normally delivered in a lowercase
	// file name. Do this after creating the global so that if an AMD module wants
	// to call noConflict to hide this version of jQuery, it will work.
	
	// Note that for maximum portability, libraries that are not jQuery should
	// declare themselves as anonymous modules, and avoid setting a global if an
	// AMD loader is present. jQuery is a special case. For more information, see
	// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon
	
	if ( true ) {
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
			return jQuery;
		}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	}
	
	
	
	
	var
		// Map over jQuery in case of overwrite
		_jQuery = window.jQuery,
	
		// Map over the $ in case of overwrite
		_$ = window.$;
	
	jQuery.noConflict = function( deep ) {
		if ( window.$ === jQuery ) {
			window.$ = _$;
		}
	
		if ( deep && window.jQuery === jQuery ) {
			window.jQuery = _jQuery;
		}
	
		return jQuery;
	};
	
	// Expose jQuery and $ identifiers, even in AMD
	// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
	// and CommonJS for browser emulators (#13566)
	if ( typeof noGlobal === strundefined ) {
		window.jQuery = window.$ = jQuery;
	}
	
	
	
	
	return jQuery;
	
	}));


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./src/javascripts/filter-builder": 9
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 8;


/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	var dc = __webpack_require__(2),
	    inflection = __webpack_require__(10);
	
	// styles
	__webpack_require__(11);
	
	__webpack_require__(15);
	__webpack_require__(23);
	__webpack_require__(25);
	
	module.exports = function (parent, chartGroup) {
	  
	    var _chart = dc.baseMixin({});    
	    var _filterSources = [];
	    _chart._mandatoryAttributes([]);
	
	    _chart.filterSources = function(_) {
	        // _ is of the following format:
	        // [{chart: yourDcChartObject, icon: 'fontawesome-class', label: 'Your Label'}]
	        if (!arguments.length) return _filterSources;
	        _filterSources = _;
	        return _chart;
	    };
	
	    _chart._doRender = function () {
	        var hasFilters = false;
	        var filtered = _filterSources.filter(function(d){ return d.chart.filters().length > 0;});
	        var notFiltered = _filterSources.filter(function(d){ return d.chart.filters().length === 0;});
	        if (filtered.length > 0) hasFilters = true;
	
	        _chart.root().classed('filter-builder', true);
	        _chart.root().html('');
	        _chart.root().append('h2').html('<i class="fa fa-2x fa-filter"></i><span class="hide-visually">Filter</span>');
	        var list = _chart.root().append('ul');
	
	        var addFilterButton = list.append('li').classed('add-filter', true);
	        addFilterButton.append('i')
	          .classed({'fa': true, 'fa-plus': true});
	        filterMenu(addFilterButton, notFiltered);
	
	        if (hasFilters) {
	          var filteredFieldsRoot = list.selectAll('li.filtered-field')
	              .data(filtered)
	            .enter().append('li').classed('filtered-field', true);
	
	          var fieldLabels = filteredFieldsRoot.selectAll('span.field-label')
	              .data(function(d){return [d];})
	            .enter().append('span').classed('field-label', true)
	            .text(function(d){return d.label;});
	
	          var filteredFields = filteredFieldsRoot.selectAll('ul')
	             .data(function(d){return [d];})
	            .enter().append('ul')
	            .classed('filter-value-list', true);
	
	          var filterValues = filteredFields.selectAll('li.filter-value')
	              .data(function(d){return d.chart.filters().map(function(v){return {chart: d.chart, filterValue: v};});})
	            .enter().append('li')
	            .classed('filter-value', true)
	            .text(function(d){return tryLabel(d);})
	            .on('click', function(d){
	              d.chart.filter(d.filterValue); // dc base .filter() function works for removal as well as addition of filters
	              dc.redrawAll();
	              d3.event.stopPropagation();
	            });
	
	          var addValueButton = filteredFields.selectAll('li.add-value')
	            .data(function(d){return [d];})
	            .enter()
	            .append('li')
	            .classed({'add-value': true, 'filter-value': true})  
	            .append('i')
	            .classed({'fa': true, 'fa-plus': true})
	            .on("click", function(){
	              showValueOptions(this);
	              d3.event.stopPropagation();
	            });
	            
	          valuePicker(addValueButton);
	
	
	          var clearFilterButton = filteredFieldsRoot.selectAll('span.close')
	            .data(function(d){return [d.chart];})
	            .enter()
	            .append('span')  
	            .classed({'close': true})
	            .on('click', function(chart){
	              chart.filterAll();
	              dc.redrawAll();
	              d3.event.stopPropagation();
	            })
	            .append('i')
	            .classed({'fa': true, 'fa-times': true});
	        }
	
	        return _chart;
	    };
	
	    function tryLabel(filterItem){
	      if (filterItem.chart.label && filterItem.chart.label() !== undefined){
	        return filterItem.chart.label()({key: filterItem.filterValue}) || "N/A";
	      } 
	      return filterItem.filterValue || "N/A";
	    }
	
	    function optionSort(a, b){
	      var aLabel = tryLabel(a);
	      var bLabel = tryLabel(b);
	
	      if (aLabel > bLabel) {
	        return 1;
	      }
	      if (aLabel < bLabel){
	        return -1;
	      }
	      return 0;
	    }
	
	    _chart._doRedraw = function(){
	        return _chart._doRender();
	    };
	
	    // Filter Menu
	    function filterMenu(parent, options){
	      var _parentElement;
	      if (parent.on === undefined) {
	        _parentElement = d3.select(parent);
	      } else {
	        _parentElement = parent;
	      } 
	      
	      var _dimensionListContainer = _parentElement.append('div')
	        .classed({'picker-choices': true, 'dimension-list-container': true}).style('display', 'none');
	
	      var _dimListHeader = _dimensionListContainer.append('div')
	        .classed('header', true)
	        .on('click', function(){
	          _dimensionListContainer.style('display', 'none');
	          _dimensionList.selectAll('div.picker-choices').style('display', 'none');
	          _dimensionList.selectAll('li.selected').classed('selected', false);
	          d3.event.stopPropagation();
	        });
	
	      _dimListHeader.append('div')
	        .classed({'fa': true, 'fa-times': true, 'close-button': true});
	
	      _dimListHeader.append('div')
	        .text('Add a Filter on')
	        .classed({'header-label': true});
	
	      var _dimensionList = _dimensionListContainer.append('ul')
	        .classed({'dimension-list': true});
	
	      var _dimensionOptions = _dimensionList.selectAll('li.dimension-option')
	          .data(options)
	        .enter().append('li')
	        .attr('class', function(d){
	          return (d.options && d.options.class);
	        })
	        .classed('dimension-option', true)
	        .text(function(d){return d.label;})
	        .on('click', function(d){
	          showValueOptions(this, _parentElement);
	          d3.event.stopPropagation();
	        });
	
	      valuePicker(_dimensionOptions);
	
	
	      _parentElement.on('click', function(){
	        blurMenus();
	        d3.select('.dimension-list-container').style("display", "block");
	        try{
	          d3.event.stopPropagation();
	        } catch(e) {
	          // swallow
	        }
	      });
	
	    }
	
	    function valuePicker(selection){
	
	      var _valueListContainer = selection.selectAll('div.value-list-container')
	          .data(function(d){return [d];})
	        .enter().append('div')
	        .classed({'picker-choices': true,'value-list-container': true}).style("display", "none");
	
	      var _valueListHeader = _valueListContainer.selectAll('div.header')
	          .data(function(d){return [d];})
	        .enter().append('div')
	        .classed('header', true)
	        .on('click', function(){
	          _valueListContainer.style('display', 'none');
	          _valueList.selectAll('div.picker-choices').style('display', 'none');
	          _valueList.selectAll('li.selected').classed('selected', false);
	          d3.event.stopPropagation();
	        });
	
	      _valueListHeader.append('div')
	        .append('i')
	        .classed({'fa': true, 'fa-times': true, 'close-button': true});
	        
	
	      _valueListHeader.append('div')
	        .text(function(d){return 'Choose a value for "' + d.label +'"';})
	        .classed({'header-label': true});;
	
	      var _listFilterContainer = _valueListContainer
	        .append('div')
	        .classed('listFilterContainer', true);
	
	      _listFilterContainer
	        .append('i')
	        .classed('fa fa-2x fa-search', true);
	
	      _listFilterContainer
	          .data(function(d){return [d];})
	        .append('input')
	        .attr('placeholder','Filter the list below...')
	        .on("click", function(d) {
	          d3.event.stopPropagation();
	        })
	        .on('input', function(d){
	          that = this;
	          dc.events.trigger(function(){
	            selection.select('ul.'+dc.utils.nameToId(d.label)).selectAll('li.value-option')
	              .classed('hidden', function(d){
	                var re = new RegExp(that.value, 'i');
	                return this.textContent.search(re) < 0; 
	              });
	          }, 200);
	        });
	
	      var _valueList = _valueListContainer.selectAll('ul.value-list')
	          .data(function(d){return [d];})
	        .enter().append('ul')
	        .attr('class', function(d){return dc.utils.nameToId(d.label);})
	        .classed({'value-list': true});
	    
	      var _valueOptions = _valueList.selectAll('li.value-option')
	          .data(function(d){
	            return d.chart.group().top(Infinity)
	              .map(function(i){ return {chart: d.chart, filterValue: i.key};})
	              .filter(function(i){
	                return i.chart.filters().indexOf(i.filterValue) < 0;
	              })
	              .sort(optionSort);
	          })
	        .enter().append('li')
	        .text(function(d){return tryLabel(d);})
	        .classed('value-option', true)
	        .on('click', function(d){
	          d.chart.filter(d.filterValue);
	          dc.redrawAll();
	          d3.event.stopPropagation();
	        });
	        
	    }
	
	    function showValueOptions(element, parentElement){
	      var _element;
	      if (element.on === undefined) {
	        _element = d3.select(element);
	      } else {
	        _element = element;
	      } 
	      if (parentElement) {
	        parentElement.selectAll('ul.dimension-list .value-list-container').style('display', 'none');
	        parentElement.selectAll('ul.dimension-list li').classed('selected', false);
	      }  
	      else {
	        blurMenus();
	      }
	
	      _element.select('.value-list-container').style('display','block');
	      _element.classed('selected', true);
	    }
	
	    function blurMenus() {
	      d3.selectAll(".value-list-container")[0].forEach(function(valueOptionList) {
	        d3.select(valueOptionList).style('display', "none");
	      });
	
	      d3.select('.dimension-list-container').style("display", "none");
	
	    }
	
	    d3.select("html").on("click", function(){
	      d3.selectAll('.picker-choices').style('display', 'none');
	    });
	
	    return _chart.anchor(parent, chartGroup);
	  }; 


/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * inflection
	 * Copyright(c) 2011 Ben Lin <ben@dreamerslab.com>
	 * MIT Licensed
	 *
	 * @fileoverview
	 * A port of inflection-js to node.js module.
	 */
	
	( function ( root, factory ){
	  if( true ){
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  }else if( typeof exports === 'object' ){
	    module.exports = factory();
	  }else{
	    root.inflection = factory();
	  }
	}( this, function (){
	
	  /**
	   * @description This is a list of nouns that use the same form for both singular and plural.
	   *              This list should remain entirely in lower case to correctly match Strings.
	   * @private
	   */
	  var uncountable_words = [
	    'equipment', 'information', 'rice', 'money', 'species',
	    'series', 'fish', 'sheep', 'moose', 'deer', 'news'
	  ];
	
	  /**
	   * @description These rules translate from the singular form of a noun to its plural form.
	   * @private
	   */
	  var plural_rules = [
	
	    // do not replace if its already a plural word
	    [ new RegExp( '(m)en$',      'gi' )],
	    [ new RegExp( '(pe)ople$',   'gi' )],
	    [ new RegExp( '(child)ren$', 'gi' )],
	    [ new RegExp( '([ti])a$',    'gi' )],
	    [ new RegExp( '((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$','gi' )],
	    [ new RegExp( '(hive)s$',           'gi' )],
	    [ new RegExp( '(tive)s$',           'gi' )],
	    [ new RegExp( '(curve)s$',          'gi' )],
	    [ new RegExp( '([lr])ves$',         'gi' )],
	    [ new RegExp( '([^fo])ves$',        'gi' )],
	    [ new RegExp( '([^aeiouy]|qu)ies$', 'gi' )],
	    [ new RegExp( '(s)eries$',          'gi' )],
	    [ new RegExp( '(m)ovies$',          'gi' )],
	    [ new RegExp( '(x|ch|ss|sh)es$',    'gi' )],
	    [ new RegExp( '([m|l])ice$',        'gi' )],
	    [ new RegExp( '(bus)es$',           'gi' )],
	    [ new RegExp( '(o)es$',             'gi' )],
	    [ new RegExp( '(shoe)s$',           'gi' )],
	    [ new RegExp( '(cris|ax|test)es$',  'gi' )],
	    [ new RegExp( '(octop|vir)i$',      'gi' )],
	    [ new RegExp( '(alias|status)es$',  'gi' )],
	    [ new RegExp( '^(ox)en',            'gi' )],
	    [ new RegExp( '(vert|ind)ices$',    'gi' )],
	    [ new RegExp( '(matr)ices$',        'gi' )],
	    [ new RegExp( '(quiz)zes$',         'gi' )],
	
	    // original rule
	    [ new RegExp( '(m)an$', 'gi' ),                 '$1en' ],
	    [ new RegExp( '(pe)rson$', 'gi' ),              '$1ople' ],
	    [ new RegExp( '(child)$', 'gi' ),               '$1ren' ],
	    [ new RegExp( '^(ox)$', 'gi' ),                 '$1en' ],
	    [ new RegExp( '(ax|test)is$', 'gi' ),           '$1es' ],
	    [ new RegExp( '(octop|vir)us$', 'gi' ),         '$1i' ],
	    [ new RegExp( '(alias|status)$', 'gi' ),        '$1es' ],
	    [ new RegExp( '(bu)s$', 'gi' ),                 '$1ses' ],
	    [ new RegExp( '(buffal|tomat|potat)o$', 'gi' ), '$1oes' ],
	    [ new RegExp( '([ti])um$', 'gi' ),              '$1a' ],
	    [ new RegExp( 'sis$', 'gi' ),                   'ses' ],
	    [ new RegExp( '(?:([^f])fe|([lr])f)$', 'gi' ),  '$1$2ves' ],
	    [ new RegExp( '(hive)$', 'gi' ),                '$1s' ],
	    [ new RegExp( '([^aeiouy]|qu)y$', 'gi' ),       '$1ies' ],
	    [ new RegExp( '(x|ch|ss|sh)$', 'gi' ),          '$1es' ],
	    [ new RegExp( '(matr|vert|ind)ix|ex$', 'gi' ),  '$1ices' ],
	    [ new RegExp( '([m|l])ouse$', 'gi' ),           '$1ice' ],
	    [ new RegExp( '(quiz)$', 'gi' ),                '$1zes' ],
	
	    [ new RegExp( 's$', 'gi' ), 's' ],
	    [ new RegExp( '$', 'gi' ),  's' ]
	  ];
	
	  /**
	   * @description These rules translate from the plural form of a noun to its singular form.
	   * @private
	   */
	  var singular_rules = [
	
	    // do not replace if its already a singular word
	    [ new RegExp( '(m)an$',                 'gi' )],
	    [ new RegExp( '(pe)rson$',              'gi' )],
	    [ new RegExp( '(child)$',               'gi' )],
	    [ new RegExp( '^(ox)$',                 'gi' )],
	    [ new RegExp( '(ax|test)is$',           'gi' )],
	    [ new RegExp( '(octop|vir)us$',         'gi' )],
	    [ new RegExp( '(alias|status)$',        'gi' )],
	    [ new RegExp( '(bu)s$',                 'gi' )],
	    [ new RegExp( '(buffal|tomat|potat)o$', 'gi' )],
	    [ new RegExp( '([ti])um$',              'gi' )],
	    [ new RegExp( 'sis$',                   'gi' )],
	    [ new RegExp( '(?:([^f])fe|([lr])f)$',  'gi' )],
	    [ new RegExp( '(hive)$',                'gi' )],
	    [ new RegExp( '([^aeiouy]|qu)y$',       'gi' )],
	    [ new RegExp( '(x|ch|ss|sh)$',          'gi' )],
	    [ new RegExp( '(matr|vert|ind)ix|ex$',  'gi' )],
	    [ new RegExp( '([m|l])ouse$',           'gi' )],
	    [ new RegExp( '(quiz)$',                'gi' )],
	
	    // original rule
	    [ new RegExp( '(m)en$', 'gi' ),                                                       '$1an' ],
	    [ new RegExp( '(pe)ople$', 'gi' ),                                                    '$1rson' ],
	    [ new RegExp( '(child)ren$', 'gi' ),                                                  '$1' ],
	    [ new RegExp( '([ti])a$', 'gi' ),                                                     '$1um' ],
	    [ new RegExp( '((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$','gi' ), '$1$2sis' ],
	    [ new RegExp( '(hive)s$', 'gi' ),                                                     '$1' ],
	    [ new RegExp( '(tive)s$', 'gi' ),                                                     '$1' ],
	    [ new RegExp( '(curve)s$', 'gi' ),                                                    '$1' ],
	    [ new RegExp( '([lr])ves$', 'gi' ),                                                   '$1f' ],
	    [ new RegExp( '([^fo])ves$', 'gi' ),                                                  '$1fe' ],
	    [ new RegExp( '(m)ovies$', 'gi' ),                                                    '$1ovie' ],
	    [ new RegExp( '([^aeiouy]|qu)ies$', 'gi' ),                                           '$1y' ],
	    [ new RegExp( '(s)eries$', 'gi' ),                                                    '$1eries' ],
	    [ new RegExp( '(x|ch|ss|sh)es$', 'gi' ),                                              '$1' ],
	    [ new RegExp( '([m|l])ice$', 'gi' ),                                                  '$1ouse' ],
	    [ new RegExp( '(bus)es$', 'gi' ),                                                     '$1' ],
	    [ new RegExp( '(o)es$', 'gi' ),                                                       '$1' ],
	    [ new RegExp( '(shoe)s$', 'gi' ),                                                     '$1' ],
	    [ new RegExp( '(cris|ax|test)es$', 'gi' ),                                            '$1is' ],
	    [ new RegExp( '(octop|vir)i$', 'gi' ),                                                '$1us' ],
	    [ new RegExp( '(alias|status)es$', 'gi' ),                                            '$1' ],
	    [ new RegExp( '^(ox)en', 'gi' ),                                                      '$1' ],
	    [ new RegExp( '(vert|ind)ices$', 'gi' ),                                              '$1ex' ],
	    [ new RegExp( '(matr)ices$', 'gi' ),                                                  '$1ix' ],
	    [ new RegExp( '(quiz)zes$', 'gi' ),                                                   '$1' ],
	    [ new RegExp( 'ss$', 'gi' ),                                                          'ss' ],
	    [ new RegExp( 's$', 'gi' ),                                                           '' ]
	  ];
	
	  /**
	   * @description This is a list of words that should not be capitalized for title case.
	   * @private
	   */
	  var non_titlecased_words = [
	    'and', 'or', 'nor', 'a', 'an', 'the', 'so', 'but', 'to', 'of', 'at','by',
	    'from', 'into', 'on', 'onto', 'off', 'out', 'in', 'over', 'with', 'for'
	  ];
	
	  /**
	   * @description These are regular expressions used for converting between String formats.
	   * @private
	   */
	  var id_suffix         = new RegExp( '(_ids|_id)$', 'g' );
	  var underbar          = new RegExp( '_', 'g' );
	  var space_or_underbar = new RegExp( '[\ _]', 'g' );
	  var uppercase         = new RegExp( '([A-Z])', 'g' );
	  var underbar_prefix   = new RegExp( '^_' );
	
	  var inflector = {
	
	  /**
	   * A helper method that applies rules based replacement to a String.
	   * @private
	   * @function
	   * @param {String} str String to modify and return based on the passed rules.
	   * @param {Array: [RegExp, String]} rules Regexp to match paired with String to use for replacement
	   * @param {Array: [String]} skip Strings to skip if they match
	   * @param {String} override String to return as though this method succeeded (used to conform to APIs)
	   * @returns {String} Return passed String modified by passed rules.
	   * @example
	   *
	   *     this._apply_rules( 'cows', singular_rules ); // === 'cow'
	   */
	    _apply_rules : function ( str, rules, skip, override ){
	      if( override ){
	        str = override;
	      }else{
	        var ignore = ( inflector.indexOf( skip, str.toLowerCase()) > -1 );
	
	        if( !ignore ){
	          var i = 0;
	          var j = rules.length;
	
	          for( ; i < j; i++ ){
	            if( str.match( rules[ i ][ 0 ])){
	              if( rules[ i ][ 1 ] !== undefined ){
	                str = str.replace( rules[ i ][ 0 ], rules[ i ][ 1 ]);
	              }
	              break;
	            }
	          }
	        }
	      }
	
	      return str;
	    },
	
	
	
	  /**
	   * This lets us detect if an Array contains a given element.
	   * @public
	   * @function
	   * @param {Array} arr The subject array.
	   * @param {Object} item Object to locate in the Array.
	   * @param {Number} from_index Starts checking from this position in the Array.(optional)
	   * @param {Function} compare_func Function used to compare Array item vs passed item.(optional)
	   * @returns {Number} Return index position in the Array of the passed item.
	   * @example
	   *
	   *     var inflection = require( 'inflection' );
	   *
	   *     inflection.indexOf([ 'hi','there' ], 'guys' ); // === -1
	   *     inflection.indexOf([ 'hi','there' ], 'hi' ); // === 0
	   */
	    indexOf : function ( arr, item, from_index, compare_func ){
	      if( !from_index ){
	        from_index = -1;
	      }
	
	      var index = -1;
	      var i     = from_index;
	      var j     = arr.length;
	
	      for( ; i < j; i++ ){
	        if( arr[ i ]  === item || compare_func && compare_func( arr[ i ], item )){
	          index = i;
	          break;
	        }
	      }
	
	      return index;
	    },
	
	
	
	  /**
	   * This function adds pluralization support to every String object.
	   * @public
	   * @function
	   * @param {String} str The subject string.
	   * @param {String} plural Overrides normal output with said String.(optional)
	   * @returns {String} Singular English language nouns are returned in plural form.
	   * @example
	   *
	   *     var inflection = require( 'inflection' );
	   *
	   *     inflection.pluralize( 'person' ); // === 'people'
	   *     inflection.pluralize( 'octopus' ); // === 'octopi'
	   *     inflection.pluralize( 'Hat' ); // === 'Hats'
	   *     inflection.pluralize( 'person', 'guys' ); // === 'guys'
	   */
	    pluralize : function ( str, plural ){
	      return inflector._apply_rules( str, plural_rules, uncountable_words, plural );
	    },
	
	
	
	  /**
	   * This function adds singularization support to every String object.
	   * @public
	   * @function
	   * @param {String} str The subject string.
	   * @param {String} singular Overrides normal output with said String.(optional)
	   * @returns {String} Plural English language nouns are returned in singular form.
	   * @example
	   *
	   *     var inflection = require( 'inflection' );
	   *
	   *     inflection.singularize( 'people' ); // === 'person'
	   *     inflection.singularize( 'octopi' ); // === 'octopus'
	   *     inflection.singularize( 'Hats' ); // === 'Hat'
	   *     inflection.singularize( 'guys', 'person' ); // === 'person'
	   */
	    singularize : function ( str, singular ){
	      return inflector._apply_rules( str, singular_rules, uncountable_words, singular );
	    },
	
	
	
	  /**
	   * This function adds camelization support to every String object.
	   * @public
	   * @function
	   * @param {String} str The subject string.
	   * @param {Boolean} low_first_letter Default is to capitalize the first letter of the results.(optional)
	   *                                 Passing true will lowercase it.
	   * @returns {String} Lower case underscored words will be returned in camel case.
	   *                  additionally '/' is translated to '::'
	   * @example
	   *
	   *     var inflection = require( 'inflection' );
	   *
	   *     inflection.camelize( 'message_properties' ); // === 'MessageProperties'
	   *     inflection.camelize( 'message_properties', true ); // === 'messageProperties'
	   */
	    camelize : function ( str, low_first_letter ){
	      var str_path = str.split( '/' );
	      var i        = 0;
	      var j        = str_path.length;
	      var str_arr, init_x, k, l, first;
	
	      for( ; i < j; i++ ){
	        str_arr = str_path[ i ].split( '_' );
	        k       = 0;
	        l       = str_arr.length;
	
	        for( ; k < l; k++ ){
	          if( k !== 0 ){
	            str_arr[ k ] = str_arr[ k ].toLowerCase();
	          }
	
	          first = str_arr[ k ].charAt( 0 );
	          first = low_first_letter && i === 0 && k === 0
	            ? first.toLowerCase() : first.toUpperCase();
	          str_arr[ k ] = first + str_arr[ k ].substring( 1 );
	        }
	
	        str_path[ i ] = str_arr.join( '' );
	      }
	
	      return str_path.join( '::' );
	    },
	
	
	
	  /**
	   * This function adds underscore support to every String object.
	   * @public
	   * @function
	   * @param {String} str The subject string.
	   * @param {Boolean} all_upper_case Default is to lowercase and add underscore prefix.(optional)
	   *                  Passing true will return as entered.
	   * @returns {String} Camel cased words are returned as lower cased and underscored.
	   *                  additionally '::' is translated to '/'.
	   * @example
	   *
	   *     var inflection = require( 'inflection' );
	   *
	   *     inflection.underscore( 'MessageProperties' ); // === 'message_properties'
	   *     inflection.underscore( 'messageProperties' ); // === 'message_properties'
	   *     inflection.underscore( 'MP', true ); // === 'MP'
	   */
	    underscore : function ( str, all_upper_case ){
	      if( all_upper_case && str === str.toUpperCase()) return str;
	
	      var str_path = str.split( '::' );
	      var i        = 0;
	      var j        = str_path.length;
	
	      for( ; i < j; i++ ){
	        str_path[ i ] = str_path[ i ].replace( uppercase, '_$1' );
	        str_path[ i ] = str_path[ i ].replace( underbar_prefix, '' );
	      }
	
	      return str_path.join( '/' ).toLowerCase();
	    },
	
	
	
	  /**
	   * This function adds humanize support to every String object.
	   * @public
	   * @function
	   * @param {String} str The subject string.
	   * @param {Boolean} low_first_letter Default is to capitalize the first letter of the results.(optional)
	   *                                 Passing true will lowercase it.
	   * @returns {String} Lower case underscored words will be returned in humanized form.
	   * @example
	   *
	   *     var inflection = require( 'inflection' );
	   *
	   *     inflection.humanize( 'message_properties' ); // === 'Message properties'
	   *     inflection.humanize( 'message_properties', true ); // === 'message properties'
	   */
	    humanize : function ( str, low_first_letter ){
	      str = str.toLowerCase();
	      str = str.replace( id_suffix, '' );
	      str = str.replace( underbar, ' ' );
	
	      if( !low_first_letter ){
	        str = inflector.capitalize( str );
	      }
	
	      return str;
	    },
	
	
	
	  /**
	   * This function adds capitalization support to every String object.
	   * @public
	   * @function
	   * @param {String} str The subject string.
	   * @returns {String} All characters will be lower case and the first will be upper.
	   * @example
	   *
	   *     var inflection = require( 'inflection' );
	   *
	   *     inflection.capitalize( 'message_properties' ); // === 'Message_properties'
	   *     inflection.capitalize( 'message properties', true ); // === 'Message properties'
	   */
	    capitalize : function ( str ){
	      str = str.toLowerCase();
	
	      return str.substring( 0, 1 ).toUpperCase() + str.substring( 1 );
	    },
	
	
	
	  /**
	   * This function adds dasherization support to every String object.
	   * @public
	   * @function
	   * @param {String} str The subject string.
	   * @returns {String} Replaces all spaces or underbars with dashes.
	   * @example
	   *
	   *     var inflection = require( 'inflection' );
	   *
	   *     inflection.dasherize( 'message_properties' ); // === 'message-properties'
	   *     inflection.dasherize( 'Message Properties' ); // === 'Message-Properties'
	   */
	    dasherize : function ( str ){
	      return str.replace( space_or_underbar, '-' );
	    },
	
	
	
	  /**
	   * This function adds titleize support to every String object.
	   * @public
	   * @function
	   * @param {String} str The subject string.
	   * @returns {String} Capitalizes words as you would for a book title.
	   * @example
	   *
	   *     var inflection = require( 'inflection' );
	   *
	   *     inflection.titleize( 'message_properties' ); // === 'Message Properties'
	   *     inflection.titleize( 'message properties to keep' ); // === 'Message Properties to Keep'
	   */
	    titleize : function ( str ){
	      str         = str.toLowerCase().replace( underbar, ' ' );
	      var str_arr = str.split( ' ' );
	      var i       = 0;
	      var j       = str_arr.length;
	      var d, k, l;
	
	      for( ; i < j; i++ ){
	        d = str_arr[ i ].split( '-' );
	        k = 0;
	        l = d.length;
	
	        for( ; k < l; k++){
	          if( inflector.indexOf( non_titlecased_words, d[ k ].toLowerCase()) < 0 ){
	            d[ k ] = inflector.capitalize( d[ k ]);
	          }
	        }
	
	        str_arr[ i ] = d.join( '-' );
	      }
	
	      str = str_arr.join( ' ' );
	      str = str.substring( 0, 1 ).toUpperCase() + str.substring( 1 );
	
	      return str;
	    },
	
	
	
	  /**
	   * This function adds demodulize support to every String object.
	   * @public
	   * @function
	   * @param {String} str The subject string.
	   * @returns {String} Removes module names leaving only class names.(Ruby style)
	   * @example
	   *
	   *     var inflection = require( 'inflection' );
	   *
	   *     inflection.demodulize( 'Message::Bus::Properties' ); // === 'Properties'
	   */
	    demodulize : function ( str ){
	      var str_arr = str.split( '::' );
	
	      return str_arr[ str_arr.length - 1 ];
	    },
	
	
	
	  /**
	   * This function adds tableize support to every String object.
	   * @public
	   * @function
	   * @param {String} str The subject string.
	   * @returns {String} Return camel cased words into their underscored plural form.
	   * @example
	   *
	   *     var inflection = require( 'inflection' );
	   *
	   *     inflection.tableize( 'MessageBusProperty' ); // === 'message_bus_properties'
	   */
	    tableize : function ( str ){
	      str = inflector.underscore( str );
	      str = inflector.pluralize( str );
	
	      return str;
	    },
	
	
	
	  /**
	   * This function adds classification support to every String object.
	   * @public
	   * @function
	   * @param {String} str The subject string.
	   * @returns {String} Underscored plural nouns become the camel cased singular form.
	   * @example
	   *
	   *     var inflection = require( 'inflection' );
	   *
	   *     inflection.classify( 'message_bus_properties' ); // === 'MessageBusProperty'
	   */
	    classify : function ( str ){
	      str = inflector.camelize( str );
	      str = inflector.singularize( str );
	
	      return str;
	    },
	
	
	
	  /**
	   * This function adds foreign key support to every String object.
	   * @public
	   * @function
	   * @param {String} str The subject string.
	   * @param {Boolean} drop_id_ubar Default is to seperate id with an underbar at the end of the class name,
	                                 you can pass true to skip it.(optional)
	   * @returns {String} Underscored plural nouns become the camel cased singular form.
	   * @example
	   *
	   *     var inflection = require( 'inflection' );
	   *
	   *     inflection.foreign_key( 'MessageBusProperty' ); // === 'message_bus_property_id'
	   *     inflection.foreign_key( 'MessageBusProperty', true ); // === 'message_bus_propertyid'
	   */
	    foreign_key : function ( str, drop_id_ubar ){
	      str = inflector.demodulize( str );
	      str = inflector.underscore( str ) + (( drop_id_ubar ) ? ( '' ) : ( '_' )) + 'id';
	
	      return str;
	    },
	
	
	
	  /**
	   * This function adds ordinalize support to every String object.
	   * @public
	   * @function
	   * @param {String} str The subject string.
	   * @returns {String} Return all found numbers their sequence like '22nd'.
	   * @example
	   *
	   *     var inflection = require( 'inflection' );
	   *
	   *     inflection.ordinalize( 'the 1 pitch' ); // === 'the 1st pitch'
	   */
	    ordinalize : function ( str ){
	      var str_arr = str.split( ' ' );
	      var i       = 0;
	      var j       = str_arr.length;
	
	      for( ; i < j; i++ ){
	        var k = parseInt( str_arr[ i ], 10 );
	
	        if( !isNaN( k )){
	          var ltd = str_arr[ i ].substring( str_arr[ i ].length - 2 );
	          var ld  = str_arr[ i ].substring( str_arr[ i ].length - 1 );
	          var suf = 'th';
	
	          if( ltd != '11' && ltd != '12' && ltd != '13' ){
	            if( ld === '1' ){
	              suf = 'st';
	            }else if( ld === '2' ){
	              suf = 'nd';
	            }else if( ld === '3' ){
	              suf = 'rd';
	            }
	          }
	
	          str_arr[ i ] += suf;
	        }
	      }
	
	      return str_arr.join( ' ' );
	    },
	
	  /**
	   * This function performs multiple inflection methods on a string
	   * @public
	   * @function
	   * @param {String} str The subject string.
	   * @param {Array} arr An array of inflection methods.
	   * @returns {String}
	   * @example
	   *
	   *     var inflection = require( 'inflection' );
	   *
	   *     inflection.transform( 'all job', [ 'pluralize', 'capitalize', 'dasherize' ]); // === 'All-jobs'
	   */
	    transform : function ( str, arr ){
	      var i = 0;
	      var j = arr.length;
	
	      for( ;i < j; i++ ){
	        var method = arr[ i ];
	
	        if( this.hasOwnProperty( method )){
	          str = this[ method ]( str );
	        }
	      }
	
	      return str;
	    }
	  };
	
	/**
	 * @public
	 */
	  inflector.version = '1.3.8';
	
	  return inflector;
	}));


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(12);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(14)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./filter-builder.scss", function() {
				var newContent = require("!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./filter-builder.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(13)();
	// imports
	
	
	// module
	exports.push([module.id, ".row.row-filter {\n  /* optional foundation row layout */\n  background-color: rgba(120, 120, 120, 0.15);\n  padding: 0;\n  font-size: 12px;\n  min-height: 33px; }\n  .row.row-filter .filter-builder {\n    background-color: transparent; }\n\n.filter-builder {\n  background-color: rgba(120, 120, 120, 0.15);\n  padding: 0;\n  font-size: 12px;\n  min-height: 33px;\n  pointer-events: none;\n  width: 100%; }\n  .filter-builder h2 {\n    margin: 0;\n    font-size: 12px;\n    position: absolute;\n    z-index: 0;\n    top: 3px; }\n  .filter-builder i.fa {\n    color: #666; }\n  .filter-builder ul {\n    padding: 0;\n    margin: 0;\n    list-style-type: none; }\n  .filter-builder li {\n    display: inline;\n    float: left; }\n  .filter-builder li.filtered-field {\n    background-color: #fff;\n    color: #666;\n    border: 1px solid #ccc;\n    margin: 3px 0 3px 1em;\n    padding: 0;\n    float: left;\n    border-radius: 5px;\n    font-size: 12px;\n    line-height: 1.5;\n    text-indent: 0;\n    overflow: hidden; }\n    .filter-builder li.filtered-field:first-child {\n      margin-left: 24px; }\n    .filter-builder li.filtered-field.no-tag {\n      background-color: transparent;\n      border-width: 0;\n      text-indent: 20px;\n      font-size: 12px; }\n      .filter-builder li.filtered-field.no-tag:hover {\n        color: #666;\n        background-color: transparent; }\n    .filter-builder li.filtered-field span {\n      display: table-cell;\n      height: 100%;\n      vertical-align: top;\n      padding: 3px 2px 3px 4px; }\n      .filter-builder li.filtered-field span.field-label {\n        cursor: default;\n        font-weight: bold;\n        padding-left: 4px;\n        white-space: nowrap; }\n      .filter-builder li.filtered-field span.close {\n        cursor: pointer;\n        padding-right: 3px;\n        pointer-events: auto; }\n        .filter-builder li.filtered-field span.close:hover .fa-times {\n          color: #C2113A; }\n        .filter-builder li.filtered-field span.close .fa-times {\n          font-size: 14px; }\n    .filter-builder li.filtered-field ul.filter-value-list {\n      display: table-cell; }\n      .filter-builder li.filtered-field ul.filter-value-list > li {\n        margin: 0px;\n        padding: 3px 5px;\n        pointer-events: auto; }\n        .filter-builder li.filtered-field ul.filter-value-list > li.filter-value {\n          font-weight: normal;\n          font-size: 12px;\n          border: 1px solid #d3d3d3;\n          margin: 2px 0 2px 3px;\n          padding: 0 4px;\n          border-radius: 4px;\n          cursor: pointer;\n          transition: all 140ms ease; }\n          .filter-builder li.filtered-field ul.filter-value-list > li.filter-value:hover {\n            text-decoration: line-through;\n            border-color: #eaeaea;\n            color: #aaa; }\n        .filter-builder li.filtered-field ul.filter-value-list > li.add-value {\n          padding: 0 4px;\n          margin-left: 2px;\n          border-color: #fff;\n          cursor: pointer;\n          line-height: 18px; }\n          .filter-builder li.filtered-field ul.filter-value-list > li.add-value .fa-plus {\n            border: 1px solid #dfdfdf;\n            padding: 1px 3px 1px 3px;\n            border-radius: 3px;\n            display: inline; }\n          .filter-builder li.filtered-field ul.filter-value-list > li.add-value:hover {\n            border-color: #fff; }\n            .filter-builder li.filtered-field ul.filter-value-list > li.add-value:hover .fa-plus {\n              color: #007e40;\n              border-color: #dadada;\n              box-shadow: 0 0 7px rgba(0, 0, 0, 0.17) inset; }\n  .filter-builder li.filtered-field .picker-choices,\n  .filter-builder li.add-filter .picker-choices {\n    border: 1px solid #ddd;\n    border-bottom-color: #ccc;\n    position: absolute;\n    z-index: 99;\n    background-color: rgba(255, 255, 255, 0.95);\n    max-height: 26em;\n    width: 36%;\n    left: 0;\n    top: 32px;\n    box-shadow: 2px 3px 2px rgba(0, 0, 0, 0.1), 0px 0px 7px rgba(0, 0, 0, 0.08) inset; }\n    .filter-builder li.filtered-field .picker-choices .value-list-container,\n    .filter-builder li.add-filter .picker-choices .value-list-container {\n      left: -180%;\n      top: 27px;\n      min-width: 174%;\n      max-height: 24em !important;\n      overflow-x: hidden;\n      overflow-y: hidden;\n      transition: all 380ms ease; }\n    .filter-builder li.filtered-field .picker-choices .value-list,\n    .filter-builder li.add-filter .picker-choices .value-list {\n      left: -180%;\n      top: 27px;\n      min-width: 100%;\n      max-height: 14em !important;\n      overflow: auto;\n      overflow-x: hidden;\n      transition: all 380ms ease; }\n    .filter-builder li.filtered-field .picker-choices div.header,\n    .filter-builder li.add-filter .picker-choices div.header {\n      position: relative;\n      font-family: 'Abel', Helvetica, Arial, sans-serif;\n      font-size: 12px;\n      padding: 0.1rem 0.3rem 0.1rem 0.9375rem;\n      border-bottom: 1px solid #ddd;\n      height: 1.4rem;\n      line-height: 1.4rem;\n      color: #999;\n      background-color: #fff;\n      pointer-events: auto;\n      cursor: pointer; }\n      .filter-builder li.filtered-field .picker-choices div.header .close-button,\n      .filter-builder li.add-filter .picker-choices div.header .close-button {\n        width: 15px;\n        float: right;\n        cursor: pointer;\n        text-align: right;\n        padding: 4px 0px 0 0;\n        font-size: 14px; }\n      .filter-builder li.filtered-field .picker-choices div.header:hover .fa-times,\n      .filter-builder li.add-filter .picker-choices div.header:hover .fa-times {\n        color: #C2113A; }\n    .filter-builder li.filtered-field .picker-choices li,\n    .filter-builder li.add-filter .picker-choices li {\n      display: block;\n      cursor: pointer;\n      border: none;\n      float: none;\n      padding: 0.4rem 0.9375rem;\n      font-size: 12px;\n      line-height: 1.1rem;\n      pointer-events: auto; }\n      .filter-builder li.filtered-field .picker-choices li:hover,\n      .filter-builder li.add-filter .picker-choices li:hover {\n        background-color: #EEE; }\n      .filter-builder li.filtered-field .picker-choices li.selected,\n      .filter-builder li.add-filter .picker-choices li.selected {\n        background-color: #ddd; }\n        .filter-builder li.filtered-field .picker-choices li.selected .value-list-container,\n        .filter-builder li.add-filter .picker-choices li.selected .value-list-container {\n          left: 100%;\n          transition: all 180ms ease;\n          overflow: hidden; }\n  .filter-builder li.add-filter + li.filtered-field {\n    margin-left: 0; }\n  .filter-builder .listFilterContainer {\n    background-color: #eee;\n    border-bottom: 1px solid #dbdbdb;\n    padding: .7%;\n    box-shadow: 0 0 5px rgba(120, 120, 120, 0.2);\n    position: relative; }\n    .filter-builder .listFilterContainer i.fa {\n      font-size: 1.2em;\n      position: absolute;\n      margin-top: 6px;\n      margin-left: 6px; }\n    .filter-builder .listFilterContainer input {\n      width: 100%;\n      padding: 5px 5px 5px 21px;\n      font-family: \"Helvetica Neue\", \"Helvetica\", Helvetica, Arial, sans-serif;\n      font-size: 12px;\n      background-color: #fff;\n      border-radius: 3px;\n      border: 1px solid #bbb; }\n  .filter-builder .add-value .listFilterContainer {\n    padding: .5%; }\n    .filter-builder .add-value .listFilterContainer i.fa {\n      margin-top: 5px;\n      margin-left: 5px; }\n    .filter-builder .add-value .listFilterContainer input {\n      padding-top: 4px;\n      padding-left: 20px; }\n  .filter-builder ::-webkit-input-placeholder {\n    font-family: 'Abel', Helvetica, Arial, sans-serif; }\n  .filter-builder :-moz-placeholder {\n    /* Firefox 18- */\n    font-family: 'Abel', Helvetica, Arial, sans-serif; }\n  .filter-builder ::-moz-placeholder {\n    /* Firefox 19+ */\n    font-family: 'Abel', Helvetica, Arial, sans-serif; }\n  .filter-builder :-ms-input-placeholder {\n    font-family: 'Abel', Helvetica, Arial, sans-serif; }\n  .filter-builder li.add-filter i.fa-plus {\n    display: block;\n    padding: 8px 3px 5px 16px;\n    position: relative;\n    left: -1px;\n    z-index: 1;\n    cursor: pointer;\n    top: 4px;\n    pointer-events: auto; }\n  .filter-builder li.add-filter:hover i.fa-plus {\n    color: #007e40; }\n  .filter-builder li.filtered-field .picker-choices {\n    overflow-y: hidden;\n    overflow-x: hidden;\n    width: 98%; }\n    .filter-builder li.filtered-field .picker-choices li {\n      color: #666; }\n  .filter-builder .dimension-list-container, .filter-builder .value-list-container {\n    display: none; }\n  .filter-builder .value-list-container li.hidden.value-option {\n    display: none; }\n", ""]);
	
	// exports


/***/ },
/* 13 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0;
	
	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
	
		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();
	
		var styles = listToStyles(list);
		addStylesToDom(styles, options);
	
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}
	
	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}
	
	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}
	
	function createStyleElement() {
		var styleElement = document.createElement("style");
		var head = getHeadElement();
		styleElement.type = "text/css";
		head.appendChild(styleElement);
		return styleElement;
	}
	
	function createLinkElement() {
		var linkElement = document.createElement("link");
		var head = getHeadElement();
		linkElement.rel = "stylesheet";
		head.appendChild(linkElement);
		return linkElement;
	}
	
	function addStyle(obj, options) {
		var styleElement, update, remove;
	
		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement());
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement();
			update = updateLink.bind(null, styleElement);
			remove = function() {
				styleElement.parentNode.removeChild(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement();
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				styleElement.parentNode.removeChild(styleElement);
			};
		}
	
		update(obj);
	
		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}
	
	var replaceText = (function () {
		var textStore = [];
	
		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();
	
	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}
	
	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
		var sourceMap = obj.sourceMap;
	
		if(media) {
			styleElement.setAttribute("media", media)
		}
	
		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}
	
	function updateLink(linkElement, obj) {
		var css = obj.css;
		var media = obj.media;
		var sourceMap = obj.sourceMap;
	
		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}
	
		var blob = new Blob([css], { type: "text/css" });
	
		var oldSrc = linkElement.href;
	
		linkElement.href = URL.createObjectURL(blob);
	
		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(16);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(14)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../css-loader/index.js!./font-awesome.css", function() {
				var newContent = require("!!./../../css-loader/index.js!./font-awesome.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(13)();
	// imports
	
	
	// module
	exports.push([module.id, "/*!\n *  Font Awesome 4.4.0 by @davegandy - http://fontawesome.io - @fontawesome\n *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)\n */\n/* FONT PATH\n * -------------------------- */\n@font-face {\n  font-family: 'FontAwesome';\n  src: url(" + __webpack_require__(17) + ");\n  src: url(" + __webpack_require__(18) + "?#iefix&v=4.4.0) format('embedded-opentype'), url(" + __webpack_require__(19) + ") format('woff2'), url(" + __webpack_require__(20) + ") format('woff'), url(" + __webpack_require__(21) + ") format('truetype'), url(" + __webpack_require__(22) + "#fontawesomeregular) format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n.fa {\n  display: inline-block;\n  font: normal normal normal 14px/1 FontAwesome;\n  font-size: inherit;\n  text-rendering: auto;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n/* makes the font 33% larger relative to the icon container */\n.fa-lg {\n  font-size: 1.33333333em;\n  line-height: 0.75em;\n  vertical-align: -15%;\n}\n.fa-2x {\n  font-size: 2em;\n}\n.fa-3x {\n  font-size: 3em;\n}\n.fa-4x {\n  font-size: 4em;\n}\n.fa-5x {\n  font-size: 5em;\n}\n.fa-fw {\n  width: 1.28571429em;\n  text-align: center;\n}\n.fa-ul {\n  padding-left: 0;\n  margin-left: 2.14285714em;\n  list-style-type: none;\n}\n.fa-ul > li {\n  position: relative;\n}\n.fa-li {\n  position: absolute;\n  left: -2.14285714em;\n  width: 2.14285714em;\n  top: 0.14285714em;\n  text-align: center;\n}\n.fa-li.fa-lg {\n  left: -1.85714286em;\n}\n.fa-border {\n  padding: .2em .25em .15em;\n  border: solid 0.08em #eeeeee;\n  border-radius: .1em;\n}\n.fa-pull-left {\n  float: left;\n}\n.fa-pull-right {\n  float: right;\n}\n.fa.fa-pull-left {\n  margin-right: .3em;\n}\n.fa.fa-pull-right {\n  margin-left: .3em;\n}\n/* Deprecated as of 4.4.0 */\n.pull-right {\n  float: right;\n}\n.pull-left {\n  float: left;\n}\n.fa.pull-left {\n  margin-right: .3em;\n}\n.fa.pull-right {\n  margin-left: .3em;\n}\n.fa-spin {\n  -webkit-animation: fa-spin 2s infinite linear;\n  animation: fa-spin 2s infinite linear;\n}\n.fa-pulse {\n  -webkit-animation: fa-spin 1s infinite steps(8);\n  animation: fa-spin 1s infinite steps(8);\n}\n@-webkit-keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n.fa-rotate-90 {\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1);\n  -webkit-transform: rotate(90deg);\n  -ms-transform: rotate(90deg);\n  transform: rotate(90deg);\n}\n.fa-rotate-180 {\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2);\n  -webkit-transform: rotate(180deg);\n  -ms-transform: rotate(180deg);\n  transform: rotate(180deg);\n}\n.fa-rotate-270 {\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);\n  -webkit-transform: rotate(270deg);\n  -ms-transform: rotate(270deg);\n  transform: rotate(270deg);\n}\n.fa-flip-horizontal {\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1);\n  -webkit-transform: scale(-1, 1);\n  -ms-transform: scale(-1, 1);\n  transform: scale(-1, 1);\n}\n.fa-flip-vertical {\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1);\n  -webkit-transform: scale(1, -1);\n  -ms-transform: scale(1, -1);\n  transform: scale(1, -1);\n}\n:root .fa-rotate-90,\n:root .fa-rotate-180,\n:root .fa-rotate-270,\n:root .fa-flip-horizontal,\n:root .fa-flip-vertical {\n  filter: none;\n}\n.fa-stack {\n  position: relative;\n  display: inline-block;\n  width: 2em;\n  height: 2em;\n  line-height: 2em;\n  vertical-align: middle;\n}\n.fa-stack-1x,\n.fa-stack-2x {\n  position: absolute;\n  left: 0;\n  width: 100%;\n  text-align: center;\n}\n.fa-stack-1x {\n  line-height: inherit;\n}\n.fa-stack-2x {\n  font-size: 2em;\n}\n.fa-inverse {\n  color: #ffffff;\n}\n/* Font Awesome uses the Unicode Private Use Area (PUA) to ensure screen\n   readers do not read off random characters that represent icons */\n.fa-glass:before {\n  content: \"\\F000\";\n}\n.fa-music:before {\n  content: \"\\F001\";\n}\n.fa-search:before {\n  content: \"\\F002\";\n}\n.fa-envelope-o:before {\n  content: \"\\F003\";\n}\n.fa-heart:before {\n  content: \"\\F004\";\n}\n.fa-star:before {\n  content: \"\\F005\";\n}\n.fa-star-o:before {\n  content: \"\\F006\";\n}\n.fa-user:before {\n  content: \"\\F007\";\n}\n.fa-film:before {\n  content: \"\\F008\";\n}\n.fa-th-large:before {\n  content: \"\\F009\";\n}\n.fa-th:before {\n  content: \"\\F00A\";\n}\n.fa-th-list:before {\n  content: \"\\F00B\";\n}\n.fa-check:before {\n  content: \"\\F00C\";\n}\n.fa-remove:before,\n.fa-close:before,\n.fa-times:before {\n  content: \"\\F00D\";\n}\n.fa-search-plus:before {\n  content: \"\\F00E\";\n}\n.fa-search-minus:before {\n  content: \"\\F010\";\n}\n.fa-power-off:before {\n  content: \"\\F011\";\n}\n.fa-signal:before {\n  content: \"\\F012\";\n}\n.fa-gear:before,\n.fa-cog:before {\n  content: \"\\F013\";\n}\n.fa-trash-o:before {\n  content: \"\\F014\";\n}\n.fa-home:before {\n  content: \"\\F015\";\n}\n.fa-file-o:before {\n  content: \"\\F016\";\n}\n.fa-clock-o:before {\n  content: \"\\F017\";\n}\n.fa-road:before {\n  content: \"\\F018\";\n}\n.fa-download:before {\n  content: \"\\F019\";\n}\n.fa-arrow-circle-o-down:before {\n  content: \"\\F01A\";\n}\n.fa-arrow-circle-o-up:before {\n  content: \"\\F01B\";\n}\n.fa-inbox:before {\n  content: \"\\F01C\";\n}\n.fa-play-circle-o:before {\n  content: \"\\F01D\";\n}\n.fa-rotate-right:before,\n.fa-repeat:before {\n  content: \"\\F01E\";\n}\n.fa-refresh:before {\n  content: \"\\F021\";\n}\n.fa-list-alt:before {\n  content: \"\\F022\";\n}\n.fa-lock:before {\n  content: \"\\F023\";\n}\n.fa-flag:before {\n  content: \"\\F024\";\n}\n.fa-headphones:before {\n  content: \"\\F025\";\n}\n.fa-volume-off:before {\n  content: \"\\F026\";\n}\n.fa-volume-down:before {\n  content: \"\\F027\";\n}\n.fa-volume-up:before {\n  content: \"\\F028\";\n}\n.fa-qrcode:before {\n  content: \"\\F029\";\n}\n.fa-barcode:before {\n  content: \"\\F02A\";\n}\n.fa-tag:before {\n  content: \"\\F02B\";\n}\n.fa-tags:before {\n  content: \"\\F02C\";\n}\n.fa-book:before {\n  content: \"\\F02D\";\n}\n.fa-bookmark:before {\n  content: \"\\F02E\";\n}\n.fa-print:before {\n  content: \"\\F02F\";\n}\n.fa-camera:before {\n  content: \"\\F030\";\n}\n.fa-font:before {\n  content: \"\\F031\";\n}\n.fa-bold:before {\n  content: \"\\F032\";\n}\n.fa-italic:before {\n  content: \"\\F033\";\n}\n.fa-text-height:before {\n  content: \"\\F034\";\n}\n.fa-text-width:before {\n  content: \"\\F035\";\n}\n.fa-align-left:before {\n  content: \"\\F036\";\n}\n.fa-align-center:before {\n  content: \"\\F037\";\n}\n.fa-align-right:before {\n  content: \"\\F038\";\n}\n.fa-align-justify:before {\n  content: \"\\F039\";\n}\n.fa-list:before {\n  content: \"\\F03A\";\n}\n.fa-dedent:before,\n.fa-outdent:before {\n  content: \"\\F03B\";\n}\n.fa-indent:before {\n  content: \"\\F03C\";\n}\n.fa-video-camera:before {\n  content: \"\\F03D\";\n}\n.fa-photo:before,\n.fa-image:before,\n.fa-picture-o:before {\n  content: \"\\F03E\";\n}\n.fa-pencil:before {\n  content: \"\\F040\";\n}\n.fa-map-marker:before {\n  content: \"\\F041\";\n}\n.fa-adjust:before {\n  content: \"\\F042\";\n}\n.fa-tint:before {\n  content: \"\\F043\";\n}\n.fa-edit:before,\n.fa-pencil-square-o:before {\n  content: \"\\F044\";\n}\n.fa-share-square-o:before {\n  content: \"\\F045\";\n}\n.fa-check-square-o:before {\n  content: \"\\F046\";\n}\n.fa-arrows:before {\n  content: \"\\F047\";\n}\n.fa-step-backward:before {\n  content: \"\\F048\";\n}\n.fa-fast-backward:before {\n  content: \"\\F049\";\n}\n.fa-backward:before {\n  content: \"\\F04A\";\n}\n.fa-play:before {\n  content: \"\\F04B\";\n}\n.fa-pause:before {\n  content: \"\\F04C\";\n}\n.fa-stop:before {\n  content: \"\\F04D\";\n}\n.fa-forward:before {\n  content: \"\\F04E\";\n}\n.fa-fast-forward:before {\n  content: \"\\F050\";\n}\n.fa-step-forward:before {\n  content: \"\\F051\";\n}\n.fa-eject:before {\n  content: \"\\F052\";\n}\n.fa-chevron-left:before {\n  content: \"\\F053\";\n}\n.fa-chevron-right:before {\n  content: \"\\F054\";\n}\n.fa-plus-circle:before {\n  content: \"\\F055\";\n}\n.fa-minus-circle:before {\n  content: \"\\F056\";\n}\n.fa-times-circle:before {\n  content: \"\\F057\";\n}\n.fa-check-circle:before {\n  content: \"\\F058\";\n}\n.fa-question-circle:before {\n  content: \"\\F059\";\n}\n.fa-info-circle:before {\n  content: \"\\F05A\";\n}\n.fa-crosshairs:before {\n  content: \"\\F05B\";\n}\n.fa-times-circle-o:before {\n  content: \"\\F05C\";\n}\n.fa-check-circle-o:before {\n  content: \"\\F05D\";\n}\n.fa-ban:before {\n  content: \"\\F05E\";\n}\n.fa-arrow-left:before {\n  content: \"\\F060\";\n}\n.fa-arrow-right:before {\n  content: \"\\F061\";\n}\n.fa-arrow-up:before {\n  content: \"\\F062\";\n}\n.fa-arrow-down:before {\n  content: \"\\F063\";\n}\n.fa-mail-forward:before,\n.fa-share:before {\n  content: \"\\F064\";\n}\n.fa-expand:before {\n  content: \"\\F065\";\n}\n.fa-compress:before {\n  content: \"\\F066\";\n}\n.fa-plus:before {\n  content: \"\\F067\";\n}\n.fa-minus:before {\n  content: \"\\F068\";\n}\n.fa-asterisk:before {\n  content: \"\\F069\";\n}\n.fa-exclamation-circle:before {\n  content: \"\\F06A\";\n}\n.fa-gift:before {\n  content: \"\\F06B\";\n}\n.fa-leaf:before {\n  content: \"\\F06C\";\n}\n.fa-fire:before {\n  content: \"\\F06D\";\n}\n.fa-eye:before {\n  content: \"\\F06E\";\n}\n.fa-eye-slash:before {\n  content: \"\\F070\";\n}\n.fa-warning:before,\n.fa-exclamation-triangle:before {\n  content: \"\\F071\";\n}\n.fa-plane:before {\n  content: \"\\F072\";\n}\n.fa-calendar:before {\n  content: \"\\F073\";\n}\n.fa-random:before {\n  content: \"\\F074\";\n}\n.fa-comment:before {\n  content: \"\\F075\";\n}\n.fa-magnet:before {\n  content: \"\\F076\";\n}\n.fa-chevron-up:before {\n  content: \"\\F077\";\n}\n.fa-chevron-down:before {\n  content: \"\\F078\";\n}\n.fa-retweet:before {\n  content: \"\\F079\";\n}\n.fa-shopping-cart:before {\n  content: \"\\F07A\";\n}\n.fa-folder:before {\n  content: \"\\F07B\";\n}\n.fa-folder-open:before {\n  content: \"\\F07C\";\n}\n.fa-arrows-v:before {\n  content: \"\\F07D\";\n}\n.fa-arrows-h:before {\n  content: \"\\F07E\";\n}\n.fa-bar-chart-o:before,\n.fa-bar-chart:before {\n  content: \"\\F080\";\n}\n.fa-twitter-square:before {\n  content: \"\\F081\";\n}\n.fa-facebook-square:before {\n  content: \"\\F082\";\n}\n.fa-camera-retro:before {\n  content: \"\\F083\";\n}\n.fa-key:before {\n  content: \"\\F084\";\n}\n.fa-gears:before,\n.fa-cogs:before {\n  content: \"\\F085\";\n}\n.fa-comments:before {\n  content: \"\\F086\";\n}\n.fa-thumbs-o-up:before {\n  content: \"\\F087\";\n}\n.fa-thumbs-o-down:before {\n  content: \"\\F088\";\n}\n.fa-star-half:before {\n  content: \"\\F089\";\n}\n.fa-heart-o:before {\n  content: \"\\F08A\";\n}\n.fa-sign-out:before {\n  content: \"\\F08B\";\n}\n.fa-linkedin-square:before {\n  content: \"\\F08C\";\n}\n.fa-thumb-tack:before {\n  content: \"\\F08D\";\n}\n.fa-external-link:before {\n  content: \"\\F08E\";\n}\n.fa-sign-in:before {\n  content: \"\\F090\";\n}\n.fa-trophy:before {\n  content: \"\\F091\";\n}\n.fa-github-square:before {\n  content: \"\\F092\";\n}\n.fa-upload:before {\n  content: \"\\F093\";\n}\n.fa-lemon-o:before {\n  content: \"\\F094\";\n}\n.fa-phone:before {\n  content: \"\\F095\";\n}\n.fa-square-o:before {\n  content: \"\\F096\";\n}\n.fa-bookmark-o:before {\n  content: \"\\F097\";\n}\n.fa-phone-square:before {\n  content: \"\\F098\";\n}\n.fa-twitter:before {\n  content: \"\\F099\";\n}\n.fa-facebook-f:before,\n.fa-facebook:before {\n  content: \"\\F09A\";\n}\n.fa-github:before {\n  content: \"\\F09B\";\n}\n.fa-unlock:before {\n  content: \"\\F09C\";\n}\n.fa-credit-card:before {\n  content: \"\\F09D\";\n}\n.fa-feed:before,\n.fa-rss:before {\n  content: \"\\F09E\";\n}\n.fa-hdd-o:before {\n  content: \"\\F0A0\";\n}\n.fa-bullhorn:before {\n  content: \"\\F0A1\";\n}\n.fa-bell:before {\n  content: \"\\F0F3\";\n}\n.fa-certificate:before {\n  content: \"\\F0A3\";\n}\n.fa-hand-o-right:before {\n  content: \"\\F0A4\";\n}\n.fa-hand-o-left:before {\n  content: \"\\F0A5\";\n}\n.fa-hand-o-up:before {\n  content: \"\\F0A6\";\n}\n.fa-hand-o-down:before {\n  content: \"\\F0A7\";\n}\n.fa-arrow-circle-left:before {\n  content: \"\\F0A8\";\n}\n.fa-arrow-circle-right:before {\n  content: \"\\F0A9\";\n}\n.fa-arrow-circle-up:before {\n  content: \"\\F0AA\";\n}\n.fa-arrow-circle-down:before {\n  content: \"\\F0AB\";\n}\n.fa-globe:before {\n  content: \"\\F0AC\";\n}\n.fa-wrench:before {\n  content: \"\\F0AD\";\n}\n.fa-tasks:before {\n  content: \"\\F0AE\";\n}\n.fa-filter:before {\n  content: \"\\F0B0\";\n}\n.fa-briefcase:before {\n  content: \"\\F0B1\";\n}\n.fa-arrows-alt:before {\n  content: \"\\F0B2\";\n}\n.fa-group:before,\n.fa-users:before {\n  content: \"\\F0C0\";\n}\n.fa-chain:before,\n.fa-link:before {\n  content: \"\\F0C1\";\n}\n.fa-cloud:before {\n  content: \"\\F0C2\";\n}\n.fa-flask:before {\n  content: \"\\F0C3\";\n}\n.fa-cut:before,\n.fa-scissors:before {\n  content: \"\\F0C4\";\n}\n.fa-copy:before,\n.fa-files-o:before {\n  content: \"\\F0C5\";\n}\n.fa-paperclip:before {\n  content: \"\\F0C6\";\n}\n.fa-save:before,\n.fa-floppy-o:before {\n  content: \"\\F0C7\";\n}\n.fa-square:before {\n  content: \"\\F0C8\";\n}\n.fa-navicon:before,\n.fa-reorder:before,\n.fa-bars:before {\n  content: \"\\F0C9\";\n}\n.fa-list-ul:before {\n  content: \"\\F0CA\";\n}\n.fa-list-ol:before {\n  content: \"\\F0CB\";\n}\n.fa-strikethrough:before {\n  content: \"\\F0CC\";\n}\n.fa-underline:before {\n  content: \"\\F0CD\";\n}\n.fa-table:before {\n  content: \"\\F0CE\";\n}\n.fa-magic:before {\n  content: \"\\F0D0\";\n}\n.fa-truck:before {\n  content: \"\\F0D1\";\n}\n.fa-pinterest:before {\n  content: \"\\F0D2\";\n}\n.fa-pinterest-square:before {\n  content: \"\\F0D3\";\n}\n.fa-google-plus-square:before {\n  content: \"\\F0D4\";\n}\n.fa-google-plus:before {\n  content: \"\\F0D5\";\n}\n.fa-money:before {\n  content: \"\\F0D6\";\n}\n.fa-caret-down:before {\n  content: \"\\F0D7\";\n}\n.fa-caret-up:before {\n  content: \"\\F0D8\";\n}\n.fa-caret-left:before {\n  content: \"\\F0D9\";\n}\n.fa-caret-right:before {\n  content: \"\\F0DA\";\n}\n.fa-columns:before {\n  content: \"\\F0DB\";\n}\n.fa-unsorted:before,\n.fa-sort:before {\n  content: \"\\F0DC\";\n}\n.fa-sort-down:before,\n.fa-sort-desc:before {\n  content: \"\\F0DD\";\n}\n.fa-sort-up:before,\n.fa-sort-asc:before {\n  content: \"\\F0DE\";\n}\n.fa-envelope:before {\n  content: \"\\F0E0\";\n}\n.fa-linkedin:before {\n  content: \"\\F0E1\";\n}\n.fa-rotate-left:before,\n.fa-undo:before {\n  content: \"\\F0E2\";\n}\n.fa-legal:before,\n.fa-gavel:before {\n  content: \"\\F0E3\";\n}\n.fa-dashboard:before,\n.fa-tachometer:before {\n  content: \"\\F0E4\";\n}\n.fa-comment-o:before {\n  content: \"\\F0E5\";\n}\n.fa-comments-o:before {\n  content: \"\\F0E6\";\n}\n.fa-flash:before,\n.fa-bolt:before {\n  content: \"\\F0E7\";\n}\n.fa-sitemap:before {\n  content: \"\\F0E8\";\n}\n.fa-umbrella:before {\n  content: \"\\F0E9\";\n}\n.fa-paste:before,\n.fa-clipboard:before {\n  content: \"\\F0EA\";\n}\n.fa-lightbulb-o:before {\n  content: \"\\F0EB\";\n}\n.fa-exchange:before {\n  content: \"\\F0EC\";\n}\n.fa-cloud-download:before {\n  content: \"\\F0ED\";\n}\n.fa-cloud-upload:before {\n  content: \"\\F0EE\";\n}\n.fa-user-md:before {\n  content: \"\\F0F0\";\n}\n.fa-stethoscope:before {\n  content: \"\\F0F1\";\n}\n.fa-suitcase:before {\n  content: \"\\F0F2\";\n}\n.fa-bell-o:before {\n  content: \"\\F0A2\";\n}\n.fa-coffee:before {\n  content: \"\\F0F4\";\n}\n.fa-cutlery:before {\n  content: \"\\F0F5\";\n}\n.fa-file-text-o:before {\n  content: \"\\F0F6\";\n}\n.fa-building-o:before {\n  content: \"\\F0F7\";\n}\n.fa-hospital-o:before {\n  content: \"\\F0F8\";\n}\n.fa-ambulance:before {\n  content: \"\\F0F9\";\n}\n.fa-medkit:before {\n  content: \"\\F0FA\";\n}\n.fa-fighter-jet:before {\n  content: \"\\F0FB\";\n}\n.fa-beer:before {\n  content: \"\\F0FC\";\n}\n.fa-h-square:before {\n  content: \"\\F0FD\";\n}\n.fa-plus-square:before {\n  content: \"\\F0FE\";\n}\n.fa-angle-double-left:before {\n  content: \"\\F100\";\n}\n.fa-angle-double-right:before {\n  content: \"\\F101\";\n}\n.fa-angle-double-up:before {\n  content: \"\\F102\";\n}\n.fa-angle-double-down:before {\n  content: \"\\F103\";\n}\n.fa-angle-left:before {\n  content: \"\\F104\";\n}\n.fa-angle-right:before {\n  content: \"\\F105\";\n}\n.fa-angle-up:before {\n  content: \"\\F106\";\n}\n.fa-angle-down:before {\n  content: \"\\F107\";\n}\n.fa-desktop:before {\n  content: \"\\F108\";\n}\n.fa-laptop:before {\n  content: \"\\F109\";\n}\n.fa-tablet:before {\n  content: \"\\F10A\";\n}\n.fa-mobile-phone:before,\n.fa-mobile:before {\n  content: \"\\F10B\";\n}\n.fa-circle-o:before {\n  content: \"\\F10C\";\n}\n.fa-quote-left:before {\n  content: \"\\F10D\";\n}\n.fa-quote-right:before {\n  content: \"\\F10E\";\n}\n.fa-spinner:before {\n  content: \"\\F110\";\n}\n.fa-circle:before {\n  content: \"\\F111\";\n}\n.fa-mail-reply:before,\n.fa-reply:before {\n  content: \"\\F112\";\n}\n.fa-github-alt:before {\n  content: \"\\F113\";\n}\n.fa-folder-o:before {\n  content: \"\\F114\";\n}\n.fa-folder-open-o:before {\n  content: \"\\F115\";\n}\n.fa-smile-o:before {\n  content: \"\\F118\";\n}\n.fa-frown-o:before {\n  content: \"\\F119\";\n}\n.fa-meh-o:before {\n  content: \"\\F11A\";\n}\n.fa-gamepad:before {\n  content: \"\\F11B\";\n}\n.fa-keyboard-o:before {\n  content: \"\\F11C\";\n}\n.fa-flag-o:before {\n  content: \"\\F11D\";\n}\n.fa-flag-checkered:before {\n  content: \"\\F11E\";\n}\n.fa-terminal:before {\n  content: \"\\F120\";\n}\n.fa-code:before {\n  content: \"\\F121\";\n}\n.fa-mail-reply-all:before,\n.fa-reply-all:before {\n  content: \"\\F122\";\n}\n.fa-star-half-empty:before,\n.fa-star-half-full:before,\n.fa-star-half-o:before {\n  content: \"\\F123\";\n}\n.fa-location-arrow:before {\n  content: \"\\F124\";\n}\n.fa-crop:before {\n  content: \"\\F125\";\n}\n.fa-code-fork:before {\n  content: \"\\F126\";\n}\n.fa-unlink:before,\n.fa-chain-broken:before {\n  content: \"\\F127\";\n}\n.fa-question:before {\n  content: \"\\F128\";\n}\n.fa-info:before {\n  content: \"\\F129\";\n}\n.fa-exclamation:before {\n  content: \"\\F12A\";\n}\n.fa-superscript:before {\n  content: \"\\F12B\";\n}\n.fa-subscript:before {\n  content: \"\\F12C\";\n}\n.fa-eraser:before {\n  content: \"\\F12D\";\n}\n.fa-puzzle-piece:before {\n  content: \"\\F12E\";\n}\n.fa-microphone:before {\n  content: \"\\F130\";\n}\n.fa-microphone-slash:before {\n  content: \"\\F131\";\n}\n.fa-shield:before {\n  content: \"\\F132\";\n}\n.fa-calendar-o:before {\n  content: \"\\F133\";\n}\n.fa-fire-extinguisher:before {\n  content: \"\\F134\";\n}\n.fa-rocket:before {\n  content: \"\\F135\";\n}\n.fa-maxcdn:before {\n  content: \"\\F136\";\n}\n.fa-chevron-circle-left:before {\n  content: \"\\F137\";\n}\n.fa-chevron-circle-right:before {\n  content: \"\\F138\";\n}\n.fa-chevron-circle-up:before {\n  content: \"\\F139\";\n}\n.fa-chevron-circle-down:before {\n  content: \"\\F13A\";\n}\n.fa-html5:before {\n  content: \"\\F13B\";\n}\n.fa-css3:before {\n  content: \"\\F13C\";\n}\n.fa-anchor:before {\n  content: \"\\F13D\";\n}\n.fa-unlock-alt:before {\n  content: \"\\F13E\";\n}\n.fa-bullseye:before {\n  content: \"\\F140\";\n}\n.fa-ellipsis-h:before {\n  content: \"\\F141\";\n}\n.fa-ellipsis-v:before {\n  content: \"\\F142\";\n}\n.fa-rss-square:before {\n  content: \"\\F143\";\n}\n.fa-play-circle:before {\n  content: \"\\F144\";\n}\n.fa-ticket:before {\n  content: \"\\F145\";\n}\n.fa-minus-square:before {\n  content: \"\\F146\";\n}\n.fa-minus-square-o:before {\n  content: \"\\F147\";\n}\n.fa-level-up:before {\n  content: \"\\F148\";\n}\n.fa-level-down:before {\n  content: \"\\F149\";\n}\n.fa-check-square:before {\n  content: \"\\F14A\";\n}\n.fa-pencil-square:before {\n  content: \"\\F14B\";\n}\n.fa-external-link-square:before {\n  content: \"\\F14C\";\n}\n.fa-share-square:before {\n  content: \"\\F14D\";\n}\n.fa-compass:before {\n  content: \"\\F14E\";\n}\n.fa-toggle-down:before,\n.fa-caret-square-o-down:before {\n  content: \"\\F150\";\n}\n.fa-toggle-up:before,\n.fa-caret-square-o-up:before {\n  content: \"\\F151\";\n}\n.fa-toggle-right:before,\n.fa-caret-square-o-right:before {\n  content: \"\\F152\";\n}\n.fa-euro:before,\n.fa-eur:before {\n  content: \"\\F153\";\n}\n.fa-gbp:before {\n  content: \"\\F154\";\n}\n.fa-dollar:before,\n.fa-usd:before {\n  content: \"\\F155\";\n}\n.fa-rupee:before,\n.fa-inr:before {\n  content: \"\\F156\";\n}\n.fa-cny:before,\n.fa-rmb:before,\n.fa-yen:before,\n.fa-jpy:before {\n  content: \"\\F157\";\n}\n.fa-ruble:before,\n.fa-rouble:before,\n.fa-rub:before {\n  content: \"\\F158\";\n}\n.fa-won:before,\n.fa-krw:before {\n  content: \"\\F159\";\n}\n.fa-bitcoin:before,\n.fa-btc:before {\n  content: \"\\F15A\";\n}\n.fa-file:before {\n  content: \"\\F15B\";\n}\n.fa-file-text:before {\n  content: \"\\F15C\";\n}\n.fa-sort-alpha-asc:before {\n  content: \"\\F15D\";\n}\n.fa-sort-alpha-desc:before {\n  content: \"\\F15E\";\n}\n.fa-sort-amount-asc:before {\n  content: \"\\F160\";\n}\n.fa-sort-amount-desc:before {\n  content: \"\\F161\";\n}\n.fa-sort-numeric-asc:before {\n  content: \"\\F162\";\n}\n.fa-sort-numeric-desc:before {\n  content: \"\\F163\";\n}\n.fa-thumbs-up:before {\n  content: \"\\F164\";\n}\n.fa-thumbs-down:before {\n  content: \"\\F165\";\n}\n.fa-youtube-square:before {\n  content: \"\\F166\";\n}\n.fa-youtube:before {\n  content: \"\\F167\";\n}\n.fa-xing:before {\n  content: \"\\F168\";\n}\n.fa-xing-square:before {\n  content: \"\\F169\";\n}\n.fa-youtube-play:before {\n  content: \"\\F16A\";\n}\n.fa-dropbox:before {\n  content: \"\\F16B\";\n}\n.fa-stack-overflow:before {\n  content: \"\\F16C\";\n}\n.fa-instagram:before {\n  content: \"\\F16D\";\n}\n.fa-flickr:before {\n  content: \"\\F16E\";\n}\n.fa-adn:before {\n  content: \"\\F170\";\n}\n.fa-bitbucket:before {\n  content: \"\\F171\";\n}\n.fa-bitbucket-square:before {\n  content: \"\\F172\";\n}\n.fa-tumblr:before {\n  content: \"\\F173\";\n}\n.fa-tumblr-square:before {\n  content: \"\\F174\";\n}\n.fa-long-arrow-down:before {\n  content: \"\\F175\";\n}\n.fa-long-arrow-up:before {\n  content: \"\\F176\";\n}\n.fa-long-arrow-left:before {\n  content: \"\\F177\";\n}\n.fa-long-arrow-right:before {\n  content: \"\\F178\";\n}\n.fa-apple:before {\n  content: \"\\F179\";\n}\n.fa-windows:before {\n  content: \"\\F17A\";\n}\n.fa-android:before {\n  content: \"\\F17B\";\n}\n.fa-linux:before {\n  content: \"\\F17C\";\n}\n.fa-dribbble:before {\n  content: \"\\F17D\";\n}\n.fa-skype:before {\n  content: \"\\F17E\";\n}\n.fa-foursquare:before {\n  content: \"\\F180\";\n}\n.fa-trello:before {\n  content: \"\\F181\";\n}\n.fa-female:before {\n  content: \"\\F182\";\n}\n.fa-male:before {\n  content: \"\\F183\";\n}\n.fa-gittip:before,\n.fa-gratipay:before {\n  content: \"\\F184\";\n}\n.fa-sun-o:before {\n  content: \"\\F185\";\n}\n.fa-moon-o:before {\n  content: \"\\F186\";\n}\n.fa-archive:before {\n  content: \"\\F187\";\n}\n.fa-bug:before {\n  content: \"\\F188\";\n}\n.fa-vk:before {\n  content: \"\\F189\";\n}\n.fa-weibo:before {\n  content: \"\\F18A\";\n}\n.fa-renren:before {\n  content: \"\\F18B\";\n}\n.fa-pagelines:before {\n  content: \"\\F18C\";\n}\n.fa-stack-exchange:before {\n  content: \"\\F18D\";\n}\n.fa-arrow-circle-o-right:before {\n  content: \"\\F18E\";\n}\n.fa-arrow-circle-o-left:before {\n  content: \"\\F190\";\n}\n.fa-toggle-left:before,\n.fa-caret-square-o-left:before {\n  content: \"\\F191\";\n}\n.fa-dot-circle-o:before {\n  content: \"\\F192\";\n}\n.fa-wheelchair:before {\n  content: \"\\F193\";\n}\n.fa-vimeo-square:before {\n  content: \"\\F194\";\n}\n.fa-turkish-lira:before,\n.fa-try:before {\n  content: \"\\F195\";\n}\n.fa-plus-square-o:before {\n  content: \"\\F196\";\n}\n.fa-space-shuttle:before {\n  content: \"\\F197\";\n}\n.fa-slack:before {\n  content: \"\\F198\";\n}\n.fa-envelope-square:before {\n  content: \"\\F199\";\n}\n.fa-wordpress:before {\n  content: \"\\F19A\";\n}\n.fa-openid:before {\n  content: \"\\F19B\";\n}\n.fa-institution:before,\n.fa-bank:before,\n.fa-university:before {\n  content: \"\\F19C\";\n}\n.fa-mortar-board:before,\n.fa-graduation-cap:before {\n  content: \"\\F19D\";\n}\n.fa-yahoo:before {\n  content: \"\\F19E\";\n}\n.fa-google:before {\n  content: \"\\F1A0\";\n}\n.fa-reddit:before {\n  content: \"\\F1A1\";\n}\n.fa-reddit-square:before {\n  content: \"\\F1A2\";\n}\n.fa-stumbleupon-circle:before {\n  content: \"\\F1A3\";\n}\n.fa-stumbleupon:before {\n  content: \"\\F1A4\";\n}\n.fa-delicious:before {\n  content: \"\\F1A5\";\n}\n.fa-digg:before {\n  content: \"\\F1A6\";\n}\n.fa-pied-piper:before {\n  content: \"\\F1A7\";\n}\n.fa-pied-piper-alt:before {\n  content: \"\\F1A8\";\n}\n.fa-drupal:before {\n  content: \"\\F1A9\";\n}\n.fa-joomla:before {\n  content: \"\\F1AA\";\n}\n.fa-language:before {\n  content: \"\\F1AB\";\n}\n.fa-fax:before {\n  content: \"\\F1AC\";\n}\n.fa-building:before {\n  content: \"\\F1AD\";\n}\n.fa-child:before {\n  content: \"\\F1AE\";\n}\n.fa-paw:before {\n  content: \"\\F1B0\";\n}\n.fa-spoon:before {\n  content: \"\\F1B1\";\n}\n.fa-cube:before {\n  content: \"\\F1B2\";\n}\n.fa-cubes:before {\n  content: \"\\F1B3\";\n}\n.fa-behance:before {\n  content: \"\\F1B4\";\n}\n.fa-behance-square:before {\n  content: \"\\F1B5\";\n}\n.fa-steam:before {\n  content: \"\\F1B6\";\n}\n.fa-steam-square:before {\n  content: \"\\F1B7\";\n}\n.fa-recycle:before {\n  content: \"\\F1B8\";\n}\n.fa-automobile:before,\n.fa-car:before {\n  content: \"\\F1B9\";\n}\n.fa-cab:before,\n.fa-taxi:before {\n  content: \"\\F1BA\";\n}\n.fa-tree:before {\n  content: \"\\F1BB\";\n}\n.fa-spotify:before {\n  content: \"\\F1BC\";\n}\n.fa-deviantart:before {\n  content: \"\\F1BD\";\n}\n.fa-soundcloud:before {\n  content: \"\\F1BE\";\n}\n.fa-database:before {\n  content: \"\\F1C0\";\n}\n.fa-file-pdf-o:before {\n  content: \"\\F1C1\";\n}\n.fa-file-word-o:before {\n  content: \"\\F1C2\";\n}\n.fa-file-excel-o:before {\n  content: \"\\F1C3\";\n}\n.fa-file-powerpoint-o:before {\n  content: \"\\F1C4\";\n}\n.fa-file-photo-o:before,\n.fa-file-picture-o:before,\n.fa-file-image-o:before {\n  content: \"\\F1C5\";\n}\n.fa-file-zip-o:before,\n.fa-file-archive-o:before {\n  content: \"\\F1C6\";\n}\n.fa-file-sound-o:before,\n.fa-file-audio-o:before {\n  content: \"\\F1C7\";\n}\n.fa-file-movie-o:before,\n.fa-file-video-o:before {\n  content: \"\\F1C8\";\n}\n.fa-file-code-o:before {\n  content: \"\\F1C9\";\n}\n.fa-vine:before {\n  content: \"\\F1CA\";\n}\n.fa-codepen:before {\n  content: \"\\F1CB\";\n}\n.fa-jsfiddle:before {\n  content: \"\\F1CC\";\n}\n.fa-life-bouy:before,\n.fa-life-buoy:before,\n.fa-life-saver:before,\n.fa-support:before,\n.fa-life-ring:before {\n  content: \"\\F1CD\";\n}\n.fa-circle-o-notch:before {\n  content: \"\\F1CE\";\n}\n.fa-ra:before,\n.fa-rebel:before {\n  content: \"\\F1D0\";\n}\n.fa-ge:before,\n.fa-empire:before {\n  content: \"\\F1D1\";\n}\n.fa-git-square:before {\n  content: \"\\F1D2\";\n}\n.fa-git:before {\n  content: \"\\F1D3\";\n}\n.fa-y-combinator-square:before,\n.fa-yc-square:before,\n.fa-hacker-news:before {\n  content: \"\\F1D4\";\n}\n.fa-tencent-weibo:before {\n  content: \"\\F1D5\";\n}\n.fa-qq:before {\n  content: \"\\F1D6\";\n}\n.fa-wechat:before,\n.fa-weixin:before {\n  content: \"\\F1D7\";\n}\n.fa-send:before,\n.fa-paper-plane:before {\n  content: \"\\F1D8\";\n}\n.fa-send-o:before,\n.fa-paper-plane-o:before {\n  content: \"\\F1D9\";\n}\n.fa-history:before {\n  content: \"\\F1DA\";\n}\n.fa-circle-thin:before {\n  content: \"\\F1DB\";\n}\n.fa-header:before {\n  content: \"\\F1DC\";\n}\n.fa-paragraph:before {\n  content: \"\\F1DD\";\n}\n.fa-sliders:before {\n  content: \"\\F1DE\";\n}\n.fa-share-alt:before {\n  content: \"\\F1E0\";\n}\n.fa-share-alt-square:before {\n  content: \"\\F1E1\";\n}\n.fa-bomb:before {\n  content: \"\\F1E2\";\n}\n.fa-soccer-ball-o:before,\n.fa-futbol-o:before {\n  content: \"\\F1E3\";\n}\n.fa-tty:before {\n  content: \"\\F1E4\";\n}\n.fa-binoculars:before {\n  content: \"\\F1E5\";\n}\n.fa-plug:before {\n  content: \"\\F1E6\";\n}\n.fa-slideshare:before {\n  content: \"\\F1E7\";\n}\n.fa-twitch:before {\n  content: \"\\F1E8\";\n}\n.fa-yelp:before {\n  content: \"\\F1E9\";\n}\n.fa-newspaper-o:before {\n  content: \"\\F1EA\";\n}\n.fa-wifi:before {\n  content: \"\\F1EB\";\n}\n.fa-calculator:before {\n  content: \"\\F1EC\";\n}\n.fa-paypal:before {\n  content: \"\\F1ED\";\n}\n.fa-google-wallet:before {\n  content: \"\\F1EE\";\n}\n.fa-cc-visa:before {\n  content: \"\\F1F0\";\n}\n.fa-cc-mastercard:before {\n  content: \"\\F1F1\";\n}\n.fa-cc-discover:before {\n  content: \"\\F1F2\";\n}\n.fa-cc-amex:before {\n  content: \"\\F1F3\";\n}\n.fa-cc-paypal:before {\n  content: \"\\F1F4\";\n}\n.fa-cc-stripe:before {\n  content: \"\\F1F5\";\n}\n.fa-bell-slash:before {\n  content: \"\\F1F6\";\n}\n.fa-bell-slash-o:before {\n  content: \"\\F1F7\";\n}\n.fa-trash:before {\n  content: \"\\F1F8\";\n}\n.fa-copyright:before {\n  content: \"\\F1F9\";\n}\n.fa-at:before {\n  content: \"\\F1FA\";\n}\n.fa-eyedropper:before {\n  content: \"\\F1FB\";\n}\n.fa-paint-brush:before {\n  content: \"\\F1FC\";\n}\n.fa-birthday-cake:before {\n  content: \"\\F1FD\";\n}\n.fa-area-chart:before {\n  content: \"\\F1FE\";\n}\n.fa-pie-chart:before {\n  content: \"\\F200\";\n}\n.fa-line-chart:before {\n  content: \"\\F201\";\n}\n.fa-lastfm:before {\n  content: \"\\F202\";\n}\n.fa-lastfm-square:before {\n  content: \"\\F203\";\n}\n.fa-toggle-off:before {\n  content: \"\\F204\";\n}\n.fa-toggle-on:before {\n  content: \"\\F205\";\n}\n.fa-bicycle:before {\n  content: \"\\F206\";\n}\n.fa-bus:before {\n  content: \"\\F207\";\n}\n.fa-ioxhost:before {\n  content: \"\\F208\";\n}\n.fa-angellist:before {\n  content: \"\\F209\";\n}\n.fa-cc:before {\n  content: \"\\F20A\";\n}\n.fa-shekel:before,\n.fa-sheqel:before,\n.fa-ils:before {\n  content: \"\\F20B\";\n}\n.fa-meanpath:before {\n  content: \"\\F20C\";\n}\n.fa-buysellads:before {\n  content: \"\\F20D\";\n}\n.fa-connectdevelop:before {\n  content: \"\\F20E\";\n}\n.fa-dashcube:before {\n  content: \"\\F210\";\n}\n.fa-forumbee:before {\n  content: \"\\F211\";\n}\n.fa-leanpub:before {\n  content: \"\\F212\";\n}\n.fa-sellsy:before {\n  content: \"\\F213\";\n}\n.fa-shirtsinbulk:before {\n  content: \"\\F214\";\n}\n.fa-simplybuilt:before {\n  content: \"\\F215\";\n}\n.fa-skyatlas:before {\n  content: \"\\F216\";\n}\n.fa-cart-plus:before {\n  content: \"\\F217\";\n}\n.fa-cart-arrow-down:before {\n  content: \"\\F218\";\n}\n.fa-diamond:before {\n  content: \"\\F219\";\n}\n.fa-ship:before {\n  content: \"\\F21A\";\n}\n.fa-user-secret:before {\n  content: \"\\F21B\";\n}\n.fa-motorcycle:before {\n  content: \"\\F21C\";\n}\n.fa-street-view:before {\n  content: \"\\F21D\";\n}\n.fa-heartbeat:before {\n  content: \"\\F21E\";\n}\n.fa-venus:before {\n  content: \"\\F221\";\n}\n.fa-mars:before {\n  content: \"\\F222\";\n}\n.fa-mercury:before {\n  content: \"\\F223\";\n}\n.fa-intersex:before,\n.fa-transgender:before {\n  content: \"\\F224\";\n}\n.fa-transgender-alt:before {\n  content: \"\\F225\";\n}\n.fa-venus-double:before {\n  content: \"\\F226\";\n}\n.fa-mars-double:before {\n  content: \"\\F227\";\n}\n.fa-venus-mars:before {\n  content: \"\\F228\";\n}\n.fa-mars-stroke:before {\n  content: \"\\F229\";\n}\n.fa-mars-stroke-v:before {\n  content: \"\\F22A\";\n}\n.fa-mars-stroke-h:before {\n  content: \"\\F22B\";\n}\n.fa-neuter:before {\n  content: \"\\F22C\";\n}\n.fa-genderless:before {\n  content: \"\\F22D\";\n}\n.fa-facebook-official:before {\n  content: \"\\F230\";\n}\n.fa-pinterest-p:before {\n  content: \"\\F231\";\n}\n.fa-whatsapp:before {\n  content: \"\\F232\";\n}\n.fa-server:before {\n  content: \"\\F233\";\n}\n.fa-user-plus:before {\n  content: \"\\F234\";\n}\n.fa-user-times:before {\n  content: \"\\F235\";\n}\n.fa-hotel:before,\n.fa-bed:before {\n  content: \"\\F236\";\n}\n.fa-viacoin:before {\n  content: \"\\F237\";\n}\n.fa-train:before {\n  content: \"\\F238\";\n}\n.fa-subway:before {\n  content: \"\\F239\";\n}\n.fa-medium:before {\n  content: \"\\F23A\";\n}\n.fa-yc:before,\n.fa-y-combinator:before {\n  content: \"\\F23B\";\n}\n.fa-optin-monster:before {\n  content: \"\\F23C\";\n}\n.fa-opencart:before {\n  content: \"\\F23D\";\n}\n.fa-expeditedssl:before {\n  content: \"\\F23E\";\n}\n.fa-battery-4:before,\n.fa-battery-full:before {\n  content: \"\\F240\";\n}\n.fa-battery-3:before,\n.fa-battery-three-quarters:before {\n  content: \"\\F241\";\n}\n.fa-battery-2:before,\n.fa-battery-half:before {\n  content: \"\\F242\";\n}\n.fa-battery-1:before,\n.fa-battery-quarter:before {\n  content: \"\\F243\";\n}\n.fa-battery-0:before,\n.fa-battery-empty:before {\n  content: \"\\F244\";\n}\n.fa-mouse-pointer:before {\n  content: \"\\F245\";\n}\n.fa-i-cursor:before {\n  content: \"\\F246\";\n}\n.fa-object-group:before {\n  content: \"\\F247\";\n}\n.fa-object-ungroup:before {\n  content: \"\\F248\";\n}\n.fa-sticky-note:before {\n  content: \"\\F249\";\n}\n.fa-sticky-note-o:before {\n  content: \"\\F24A\";\n}\n.fa-cc-jcb:before {\n  content: \"\\F24B\";\n}\n.fa-cc-diners-club:before {\n  content: \"\\F24C\";\n}\n.fa-clone:before {\n  content: \"\\F24D\";\n}\n.fa-balance-scale:before {\n  content: \"\\F24E\";\n}\n.fa-hourglass-o:before {\n  content: \"\\F250\";\n}\n.fa-hourglass-1:before,\n.fa-hourglass-start:before {\n  content: \"\\F251\";\n}\n.fa-hourglass-2:before,\n.fa-hourglass-half:before {\n  content: \"\\F252\";\n}\n.fa-hourglass-3:before,\n.fa-hourglass-end:before {\n  content: \"\\F253\";\n}\n.fa-hourglass:before {\n  content: \"\\F254\";\n}\n.fa-hand-grab-o:before,\n.fa-hand-rock-o:before {\n  content: \"\\F255\";\n}\n.fa-hand-stop-o:before,\n.fa-hand-paper-o:before {\n  content: \"\\F256\";\n}\n.fa-hand-scissors-o:before {\n  content: \"\\F257\";\n}\n.fa-hand-lizard-o:before {\n  content: \"\\F258\";\n}\n.fa-hand-spock-o:before {\n  content: \"\\F259\";\n}\n.fa-hand-pointer-o:before {\n  content: \"\\F25A\";\n}\n.fa-hand-peace-o:before {\n  content: \"\\F25B\";\n}\n.fa-trademark:before {\n  content: \"\\F25C\";\n}\n.fa-registered:before {\n  content: \"\\F25D\";\n}\n.fa-creative-commons:before {\n  content: \"\\F25E\";\n}\n.fa-gg:before {\n  content: \"\\F260\";\n}\n.fa-gg-circle:before {\n  content: \"\\F261\";\n}\n.fa-tripadvisor:before {\n  content: \"\\F262\";\n}\n.fa-odnoklassniki:before {\n  content: \"\\F263\";\n}\n.fa-odnoklassniki-square:before {\n  content: \"\\F264\";\n}\n.fa-get-pocket:before {\n  content: \"\\F265\";\n}\n.fa-wikipedia-w:before {\n  content: \"\\F266\";\n}\n.fa-safari:before {\n  content: \"\\F267\";\n}\n.fa-chrome:before {\n  content: \"\\F268\";\n}\n.fa-firefox:before {\n  content: \"\\F269\";\n}\n.fa-opera:before {\n  content: \"\\F26A\";\n}\n.fa-internet-explorer:before {\n  content: \"\\F26B\";\n}\n.fa-tv:before,\n.fa-television:before {\n  content: \"\\F26C\";\n}\n.fa-contao:before {\n  content: \"\\F26D\";\n}\n.fa-500px:before {\n  content: \"\\F26E\";\n}\n.fa-amazon:before {\n  content: \"\\F270\";\n}\n.fa-calendar-plus-o:before {\n  content: \"\\F271\";\n}\n.fa-calendar-minus-o:before {\n  content: \"\\F272\";\n}\n.fa-calendar-times-o:before {\n  content: \"\\F273\";\n}\n.fa-calendar-check-o:before {\n  content: \"\\F274\";\n}\n.fa-industry:before {\n  content: \"\\F275\";\n}\n.fa-map-pin:before {\n  content: \"\\F276\";\n}\n.fa-map-signs:before {\n  content: \"\\F277\";\n}\n.fa-map-o:before {\n  content: \"\\F278\";\n}\n.fa-map:before {\n  content: \"\\F279\";\n}\n.fa-commenting:before {\n  content: \"\\F27A\";\n}\n.fa-commenting-o:before {\n  content: \"\\F27B\";\n}\n.fa-houzz:before {\n  content: \"\\F27C\";\n}\n.fa-vimeo:before {\n  content: \"\\F27D\";\n}\n.fa-black-tie:before {\n  content: \"\\F27E\";\n}\n.fa-fonticons:before {\n  content: \"\\F280\";\n}\n", ""]);
	
	// exports


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "45c73723862c6fc5eb3d6961db2d71fb.eot"

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "45c73723862c6fc5eb3d6961db2d71fb.eot"

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "4b5a84aaf1c9485e060c503a0ff8cadb.woff2"

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "dfb02f8f6d0cedc009ee5887cc68f1f3.woff"

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "7c87870ab40d63cfb8870c1f183f9939.ttf"

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "76a4f23c6be74fd309e0d0fd2c27a5de.svg"

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(24);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(14)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./common.scss", function() {
				var newContent = require("!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./common.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(13)();
	// imports
	
	
	// module
	exports.push([module.id, ".hide-visually {\n  display: none; }\n", ""]);
	
	// exports


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(26);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(14)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../css-loader/index.js!./normalize.css", function() {
				var newContent = require("!!./../css-loader/index.js!./normalize.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(13)();
	// imports
	
	
	// module
	exports.push([module.id, "/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */\n\n/**\n * 1. Set default font family to sans-serif.\n * 2. Prevent iOS and IE text size adjust after device orientation change,\n *    without disabling user zoom.\n */\n\nhtml {\n  font-family: sans-serif; /* 1 */\n  -ms-text-size-adjust: 100%; /* 2 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/**\n * Remove default margin.\n */\n\nbody {\n  margin: 0;\n}\n\n/* HTML5 display definitions\n   ========================================================================== */\n\n/**\n * Correct `block` display not defined for any HTML5 element in IE 8/9.\n * Correct `block` display not defined for `details` or `summary` in IE 10/11\n * and Firefox.\n * Correct `block` display not defined for `main` in IE 11.\n */\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block;\n}\n\n/**\n * 1. Correct `inline-block` display not defined in IE 8/9.\n * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\n */\n\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block; /* 1 */\n  vertical-align: baseline; /* 2 */\n}\n\n/**\n * Prevent modern browsers from displaying `audio` without controls.\n * Remove excess height in iOS 5 devices.\n */\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n/**\n * Address `[hidden]` styling not present in IE 8/9/10.\n * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.\n */\n\n[hidden],\ntemplate {\n  display: none;\n}\n\n/* Links\n   ========================================================================== */\n\n/**\n * Remove the gray background color from active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * Improve readability of focused elements when they are also in an\n * active/hover state.\n */\n\na:active,\na:hover {\n  outline: 0;\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Address styling not present in IE 8/9/10/11, Safari, and Chrome.\n */\n\nabbr[title] {\n  border-bottom: 1px dotted;\n}\n\n/**\n * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\n */\n\nb,\nstrong {\n  font-weight: bold;\n}\n\n/**\n * Address styling not present in Safari and Chrome.\n */\n\ndfn {\n  font-style: italic;\n}\n\n/**\n * Address variable `h1` font-size and margin within `section` and `article`\n * contexts in Firefox 4+, Safari, and Chrome.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/**\n * Address styling not present in IE 8/9.\n */\n\nmark {\n  background: #ff0;\n  color: #000;\n}\n\n/**\n * Address inconsistent and variable font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` affecting `line-height` in all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsup {\n  top: -0.5em;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove border when inside `a` element in IE 8/9/10.\n */\n\nimg {\n  border: 0;\n}\n\n/**\n * Correct overflow not hidden in IE 9/10/11.\n */\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * Address margin not present in IE 8/9 and Safari.\n */\n\nfigure {\n  margin: 1em 40px;\n}\n\n/**\n * Address differences between Firefox and other browsers.\n */\n\nhr {\n  box-sizing: content-box;\n  height: 0;\n}\n\n/**\n * Contain overflow in all browsers.\n */\n\npre {\n  overflow: auto;\n}\n\n/**\n * Address odd `em`-unit font size rendering in all browsers.\n */\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * Known limitation: by default, Chrome and Safari on OS X allow very limited\n * styling of `select`, unless a `border` property is set.\n */\n\n/**\n * 1. Correct color not being inherited.\n *    Known issue: affects color of disabled elements.\n * 2. Correct font properties not being inherited.\n * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit; /* 1 */\n  font: inherit; /* 2 */\n  margin: 0; /* 3 */\n}\n\n/**\n * Address `overflow` set to `hidden` in IE 8/9/10/11.\n */\n\nbutton {\n  overflow: visible;\n}\n\n/**\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\n * All other form control elements do not inherit `text-transform` values.\n * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\n * Correct `select` style inheritance in Firefox.\n */\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/**\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\n *    and `video` controls.\n * 2. Correct inability to style clickable `input` types in iOS.\n * 3. Improve usability and consistency of cursor style between image-type\n *    `input` and others.\n */\n\nbutton,\nhtml input[type=\"button\"], /* 1 */\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button; /* 2 */\n  cursor: pointer; /* 3 */\n}\n\n/**\n * Re-set default cursor for disabled elements.\n */\n\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\n\n/**\n * Remove inner padding and border in Firefox 4+.\n */\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\n\n/**\n * Address Firefox 4+ setting `line-height` on `input` using `!important` in\n * the UA stylesheet.\n */\n\ninput {\n  line-height: normal;\n}\n\n/**\n * It's recommended that you don't attempt to style these elements.\n * Firefox's implementation doesn't respect box-sizing, padding, or width.\n *\n * 1. Address box sizing set to `content-box` in IE 8/9/10.\n * 2. Remove excess padding in IE 8/9/10.\n */\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Fix the cursor style for Chrome's increment/decrement buttons. For certain\n * `font-size` values of the `input`, it causes the cursor style of the\n * decrement button to change from `default` to `text`.\n */\n\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Address `appearance` set to `searchfield` in Safari and Chrome.\n * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.\n */\n\ninput[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  box-sizing: content-box; /* 2 */\n}\n\n/**\n * Remove inner padding and search cancel button in Safari and Chrome on OS X.\n * Safari (but not Chrome) clips the cancel button when the search input has\n * padding (and `textfield` appearance).\n */\n\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * Define consistent border, margin, and padding.\n */\n\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n}\n\n/**\n * 1. Correct `color` not being inherited in IE 8/9/10/11.\n * 2. Remove padding so people aren't caught out if they zero out fieldsets.\n */\n\nlegend {\n  border: 0; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Remove default vertical scrollbar in IE 8/9/10/11.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * Don't inherit the `font-weight` (applied by a rule above).\n * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\n */\n\noptgroup {\n  font-weight: bold;\n}\n\n/* Tables\n   ========================================================================== */\n\n/**\n * Remove most spacing between table cells.\n */\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ntd,\nth {\n  padding: 0;\n}\n", ""]);
	
	// exports


/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./src/javascripts/dynatable-component": 28
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 27;


/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	var $  = __webpack_require__(7);
	window.jQuery = $;
	var dc = __webpack_require__(2),
	    dynatable = __webpack_require__(29);
	
	// styles
	__webpack_require__(30);
	__webpack_require__(15);
	__webpack_require__(23);
	__webpack_require__(25);
	
	module.exports = function(parent, chartGroup){
	
	  var _chart = dc.baseMixin({});
	  var _columns; 
	  var _dataTable;
	  var _settings;
	  var _initialRecordSize = "Infinity";
	
	  /**
	      #### .columns({label: String, csvColumnName: String})
	      Explicitly set default selection. If not set, defaults to the first item in the select options.
	  
	  **/
	  _chart.columns = function(_) {
	    if (!arguments.length) return _columns;
	    _columns = _;
	    return _chart;
	  };
	
	  _chart.settings = function(_) {
	    if (!arguments.length) return _settings;
	    _settings = _;
	    return _chart;
	  };
	
	  _chart.dataTable = function() {
	    return _dataTable;
	  };
	
	  _chart.shortLoad = function(_) {
	    if(_) {
	      if(typeof _ === 'number') {
	        _initialRecordSize = _;
	      }
	      else {
	        _initialRecordSize = 10;
	      }
	    }
	  };
	
	  _chart._doRender = function() {
	    // Insert Table HTML into parent node
	    if (!_dataTable){
	      _chart.root().html("");
	      var table = _chart.root().append('table');
	      table.attr("class", "dc-datatable");
	      //id for the table is needed to allow for mutliple dynatables on one page
	      table.attr("id", parent.replace("#", "") + "-id"); 
	
	      var headerRow = table.append('thead').append('tr');
	      headerRow.selectAll('th')
	        .data(_columns).enter()
	          .append('th')
	          .attr("data-dynatable-column", function(d){return d.csvColumnName})
	          .style({"text-align": function(d){return d.alignment}})
	          .text(function(d){return d.label});
	
	      //wasnt what the best way would be to pass the readers and writers from aid-explorer-dashboard
	      var dynatableConfig = {
	          features: {
	              pushState: false,
	              search: true
	          },
	          inputs: {
	            paginationPrev: '<i class="fa fa-caret-square-o-left"></i>&#160;Previous',
	            paginationNext: 'Next&#160;<i class="fa fa-caret-square-o-right"></i>',
	            perPageText: 'records per page'
	          },
	          dataset: {
	              records: _chart.dimension().top(_initialRecordSize),//.top(10),
	              perPageDefault: 10,
	              perPageOptions: [10, 50, 100, 200, 500]
	          }
	      };
	
	      $.extend(dynatableConfig, _settings);
	
	      // Initialize jQuery DataTable
	      _dataTable = $(parent + " table").dynatable(dynatableConfig).data('dynatable');
	    }  
	    //_chart._doRedraw(); 
	    RefreshTable(_initialRecordSize);   
	  }
	
	  _chart._doRedraw = function(){
	    RefreshTable();
	  }
	
	  function RefreshTable(_) {
	    var top = (_ || Infinity);
	    dc.events.trigger(function () {
	        _dataTable.settings.dataset.originalRecords = _chart.dimension().top(top);
	        _dataTable.paginationPage.set(1);
	        _dataTable.process();
	    });
	  };
	
	  return _chart.anchor(parent, chartGroup);
	}

/***/ },
/* 29 */
/***/ function(module, exports) {

	/*
	 * jQuery Dynatable plugin 0.3.1
	 *
	 * Copyright (c) 2014 Steve Schwartz (JangoSteve)
	 *
	 * Dual licensed under the AGPL and Proprietary licenses:
	 *   http://www.dynatable.com/license/
	 *
	 * Date: Tue Jan 02 2014
	 */
	//
	
	(function($) {
	  var defaults,
	      mergeSettings,
	      dt,
	      Model,
	      modelPrototypes = {
	        dom: Dom,
	        domColumns: DomColumns,
	        records: Records,
	        recordsCount: RecordsCount,
	        processingIndicator: ProcessingIndicator,
	        state: State,
	        sorts: Sorts,
	        sortsHeaders: SortsHeaders,
	        queries: Queries,
	        inputsSearch: InputsSearch,
	        paginationPage: PaginationPage,
	        paginationPerPage: PaginationPerPage,
	        paginationLinks: PaginationLinks
	      },
	      utility,
	      build,
	      processAll,
	      initModel,
	      defaultRowWriter,
	      defaultCellWriter,
	      defaultAttributeWriter,
	      defaultAttributeReader;
	
	  //-----------------------------------------------------------------
	  // Cached plugin global defaults
	  //-----------------------------------------------------------------
	
	  defaults = {
	    features: {
	      paginate: true,
	      sort: true,
	      pushState: true,
	      search: true,
	      recordCount: true,
	      perPageSelect: true
	    },
	    table: {
	      defaultColumnIdStyle: 'camelCase',
	      columns: null,
	      headRowSelector: 'thead tr', // or e.g. tr:first-child
	      bodyRowSelector: 'tbody tr',
	      headRowClass: null,
	      copyHeaderAlignment: true,
	      copyHeaderClass: false
	    },
	    inputs: {
	      queries: null,
	      sorts: null,
	      multisort: ['ctrlKey', 'shiftKey', 'metaKey'],
	      page: null,
	      queryEvent: 'blur change',
	      recordCountTarget: null,
	      recordCountPlacement: 'after',
	      paginationLinkTarget: null,
	      paginationLinkPlacement: 'after',
	      paginationClass: 'dynatable-pagination-links',
	      paginationLinkClass: 'dynatable-page-link',
	      paginationPrevClass: 'dynatable-page-prev',
	      paginationNextClass: 'dynatable-page-next',
	      paginationActiveClass: 'dynatable-active-page',
	      paginationDisabledClass: 'dynatable-disabled-page',
	      paginationPrev: 'Previous',
	      paginationNext: 'Next',
	      paginationGap: [1,2,2,1],
	      searchTarget: null,
	      searchPlacement: 'before',
	      searchText: 'Search: ',
	      perPageTarget: null,
	      perPagePlacement: 'before',
	      perPageText: 'Show: ',
	      pageText: 'Pages: ',
	      recordCountPageBoundTemplate: '{pageLowerBound} to {pageUpperBound} of',
	      recordCountPageUnboundedTemplate: '{recordsShown} of',
	      recordCountTotalTemplate: '{recordsQueryCount} {collectionName}',
	      recordCountFilteredTemplate: ' (filtered from {recordsTotal} total records)',
	      recordCountText: 'Showing',
	      recordCountTextTemplate: '{text} {pageTemplate} {totalTemplate} {filteredTemplate}',
	      recordCountTemplate: '<span id="dynatable-record-count-{elementId}" class="dynatable-record-count">{textTemplate}</span>',
	      processingText: 'Processing...'
	    },
	    dataset: {
	      ajax: false,
	      ajaxUrl: null,
	      ajaxCache: null,
	      ajaxOnLoad: false,
	      ajaxMethod: 'GET',
	      ajaxDataType: 'json',
	      totalRecordCount: null,
	      queries: {},
	      queryRecordCount: null,
	      page: null,
	      perPageDefault: 10,
	      perPageOptions: [10,20,50,100],
	      sorts: {},
	      sortsKeys: [],
	      sortTypes: {},
	      records: null
	    },
	    writers: {
	      _rowWriter: defaultRowWriter,
	      _cellWriter: defaultCellWriter,
	      _attributeWriter: defaultAttributeWriter
	    },
	    readers: {
	      _rowReader: null,
	      _attributeReader: defaultAttributeReader
	    },
	    params: {
	      dynatable: 'dynatable',
	      queries: 'queries',
	      sorts: 'sorts',
	      page: 'page',
	      perPage: 'perPage',
	      offset: 'offset',
	      records: 'records',
	      record: null,
	      queryRecordCount: 'queryRecordCount',
	      totalRecordCount: 'totalRecordCount'
	    }
	  };
	
	  //-----------------------------------------------------------------
	  // Each dynatable instance inherits from this,
	  // set properties specific to instance
	  //-----------------------------------------------------------------
	
	  dt = {
	    init: function(element, options) {
	      this.settings = mergeSettings(options);
	      this.element = element;
	      this.$element = $(element);
	
	      // All the setup that doesn't require element or options
	      build.call(this);
	
	      return this;
	    },
	
	    process: function(skipPushState) {
	      processAll.call(this, skipPushState);
	    }
	  };
	
	  //-----------------------------------------------------------------
	  // Cached plugin global functions
	  //-----------------------------------------------------------------
	
	  mergeSettings = function(options) {
	    var newOptions = $.extend(true, {}, defaults, options);
	
	    // TODO: figure out a better way to do this.
	    // Doing `extend(true)` causes any elements that are arrays
	    // to merge the default and options arrays instead of overriding the defaults.
	    if (options) {
	      if (options.inputs) {
	        if (options.inputs.multisort) {
	          newOptions.inputs.multisort = options.inputs.multisort;
	        }
	        if (options.inputs.paginationGap) {
	          newOptions.inputs.paginationGap = options.inputs.paginationGap;
	        }
	      }
	      if (options.dataset && options.dataset.perPageOptions) {
	        newOptions.dataset.perPageOptions = options.dataset.perPageOptions;
	      }
	    }
	
	    return newOptions;
	  };
	
	  build = function() {
	    this.$element.trigger('dynatable:preinit', this);
	
	    for (model in modelPrototypes) {
	      if (modelPrototypes.hasOwnProperty(model)) {
	        var modelInstance = this[model] = new modelPrototypes[model](this, this.settings);
	        if (modelInstance.initOnLoad()) {
	          modelInstance.init();
	        }
	      }
	    }
	
	    this.$element.trigger('dynatable:init', this);
	
	    if (!this.settings.dataset.ajax || (this.settings.dataset.ajax && this.settings.dataset.ajaxOnLoad) || this.settings.features.paginate || (this.settings.features.sort && !$.isEmptyObject(this.settings.dataset.sorts))) {
	      this.process();
	    }
	  };
	
	  processAll = function(skipPushState) {
	    var data = {};
	
	    this.$element.trigger('dynatable:beforeProcess', data);
	
	    if (!$.isEmptyObject(this.settings.dataset.queries)) { data[this.settings.params.queries] = this.settings.dataset.queries; }
	    // TODO: Wrap this in a try/rescue block to hide the processing indicator and indicate something went wrong if error
	    this.processingIndicator.show();
	
	    if (this.settings.features.sort && !$.isEmptyObject(this.settings.dataset.sorts)) { data[this.settings.params.sorts] = this.settings.dataset.sorts; }
	    if (this.settings.features.paginate && this.settings.dataset.page) {
	      var page = this.settings.dataset.page,
	          perPage = this.settings.dataset.perPage;
	      data[this.settings.params.page] = page;
	      data[this.settings.params.perPage] = perPage;
	      data[this.settings.params.offset] = (page - 1) * perPage;
	    }
	    if (this.settings.dataset.ajaxData) { $.extend(data, this.settings.dataset.ajaxData); }
	
	    // If ajax, sends query to ajaxUrl with queries and sorts serialized and appended in ajax data
	    // otherwise, executes queries and sorts on in-page data
	    if (this.settings.dataset.ajax) {
	      var _this = this;
	      var options = {
	        type: _this.settings.dataset.ajaxMethod,
	        dataType: _this.settings.dataset.ajaxDataType,
	        data: data,
	        error: function(xhr, error) {
	          _this.$element.trigger('dynatable:ajax:error', {xhr: xhr, error : error});
	        },
	        success: function(response) {
	          _this.$element.trigger('dynatable:ajax:success', response);
	          // Merge ajax results and meta-data into dynatables cached data
	          _this.records.updateFromJson(response);
	          // update table with new records
	          _this.dom.update();
	
	          if (!skipPushState && _this.state.initOnLoad()) {
	            _this.state.push(data);
	          }
	        },
	        complete: function() {
	          _this.processingIndicator.hide();
	        }
	      };
	      // Do not pass url to `ajax` options if blank
	      if (this.settings.dataset.ajaxUrl) {
	        options.url = this.settings.dataset.ajaxUrl;
	
	      // If ajaxUrl is blank, then we're using the current page URL,
	      // we need to strip out any query, sort, or page data controlled by dynatable
	      // that may have been in URL when page loaded, so that it doesn't conflict with
	      // what's passed in with the data ajax parameter
	      } else {
	        options.url = utility.refreshQueryString(window.location.href, {}, this.settings);
	      }
	      if (this.settings.dataset.ajaxCache !== null) { options.cache = this.settings.dataset.ajaxCache; }
	
	      $.ajax(options);
	    } else {
	      this.records.resetOriginal();
	      this.queries.run();
	      if (this.settings.features.sort) {
	        this.records.sort();
	      }
	      if (this.settings.features.paginate) {
	        this.records.paginate();
	      }
	      this.dom.update();
	      this.processingIndicator.hide();
	
	      if (!skipPushState && this.state.initOnLoad()) {
	        this.state.push(data);
	      }
	    }
	
	    this.$element.addClass('dynatable-loaded');
	    this.$element.trigger('dynatable:afterProcess', data);
	  };
	
	  function defaultRowWriter(rowIndex, record, columns, cellWriter) {
	    var tr = '';
	
	    // grab the record's attribute for each column
	    for (var i = 0, len = columns.length; i < len; i++) {
	      tr += cellWriter(columns[i], record);
	    }
	
	    return '<tr>' + tr + '</tr>';
	  };
	
	  function defaultCellWriter(column, record) {
	    var html = column.attributeWriter(record),
	        td = '<td';
	
	    if (column.hidden || column.textAlign) {
	      td += ' style="';
	
	      // keep cells for hidden column headers hidden
	      if (column.hidden) {
	        td += 'display: none;';
	      }
	
	      // keep cells aligned as their column headers are aligned
	      if (column.textAlign) {
	        td += 'text-align: ' + column.textAlign + ';';
	      }
	
	      td += '"';
	    }
	
	    if (column.cssClass) {
	      td += ' class="' + column.cssClass + '"';
	    }
	
	    return td + '>' + html + '</td>';
	  };
	
	  function defaultAttributeWriter(record) {
	    // `this` is the column object in settings.columns
	    // TODO: automatically convert common types, such as arrays and objects, to string
	    return record[this.id];
	  };
	
	  function defaultAttributeReader(cell, record) {
	    return $(cell).html();
	  };
	
	  //-----------------------------------------------------------------
	  // Dynatable object model prototype
	  // (all object models get these default functions)
	  //-----------------------------------------------------------------
	
	  Model = {
	    initOnLoad: function() {
	      return true;
	    },
	
	    init: function() {}
	  };
	
	  for (model in modelPrototypes) {
	    if (modelPrototypes.hasOwnProperty(model)) {
	      var modelPrototype = modelPrototypes[model];
	      modelPrototype.prototype = Model;
	    }
	  }
	
	  //-----------------------------------------------------------------
	  // Dynatable object models
	  //-----------------------------------------------------------------
	
	  function Dom(obj, settings) {
	    var _this = this;
	
	    // update table contents with new records array
	    // from query (whether ajax or not)
	    this.update = function() {
	      var rows = '',
	          columns = settings.table.columns,
	          rowWriter = settings.writers._rowWriter,
	          cellWriter = settings.writers._cellWriter;
	
	      obj.$element.trigger('dynatable:beforeUpdate', rows);
	
	      // loop through records
	      for (var i = 0, len = settings.dataset.records.length; i < len; i++) {
	        var record = settings.dataset.records[i],
	            tr = rowWriter(i, record, columns, cellWriter);
	        rows += tr;
	      }
	
	      // Appended dynatable interactive elements
	      if (settings.features.recordCount) {
	        $('#dynatable-record-count-' + obj.element.id).replaceWith(obj.recordsCount.create());
	      }
	      if (settings.features.paginate) {
	        $('#dynatable-pagination-links-' + obj.element.id).replaceWith(obj.paginationLinks.create());
	        if (settings.features.perPageSelect) {
	          $('#dynatable-per-page-' + obj.element.id).val(parseInt(settings.dataset.perPage));
	        }
	      }
	
	      // Sort headers functionality
	      if (settings.features.sort && columns) {
	        obj.sortsHeaders.removeAllArrows();
	        for (var i = 0, len = columns.length; i < len; i++) {
	          var column = columns[i],
	              sortedByColumn = utility.allMatch(settings.dataset.sorts, column.sorts, function(sorts, sort) { return sort in sorts; }),
	              value = settings.dataset.sorts[column.sorts[0]];
	
	          if (sortedByColumn) {
	            obj.$element.find('[data-dynatable-column="' + column.id + '"]').find('.dynatable-sort-header').each(function(){
	              if (value == 1) {
	                obj.sortsHeaders.appendArrowUp($(this));
	              } else {
	                obj.sortsHeaders.appendArrowDown($(this));
	              }
	            });
	          }
	        }
	      }
	
	      // Query search functionality
	      if (settings.inputs.queries || settings.features.search) {
	        var allQueries = settings.inputs.queries || $();
	        if (settings.features.search) {
	          allQueries = allQueries.add('#dynatable-query-search-' + obj.element.id);
	        }
	
	        allQueries.each(function() {
	          var $this = $(this),
	              q = settings.dataset.queries[$this.data('dynatable-query')];
	          $this.val(q || '');
	        });
	      }
	
	      obj.$element.find(settings.table.bodyRowSelector).remove();
	      obj.$element.append(rows);
	
	      obj.$element.trigger('dynatable:afterUpdate', rows);
	    };
	  };
	
	  function DomColumns(obj, settings) {
	    var _this = this;
	
	    this.initOnLoad = function() {
	      return obj.$element.is('table');
	    };
	
	    this.init = function() {
	      settings.table.columns = [];
	      this.getFromTable();
	    };
	
	    // initialize table[columns] array
	    this.getFromTable = function() {
	      var $columns = obj.$element.find(settings.table.headRowSelector).children('th,td');
	      if ($columns.length) {
	        $columns.each(function(index){
	          _this.add($(this), index, true);
	        });
	      } else {
	        return $.error("Couldn't find any columns headers in '" + settings.table.headRowSelector + " th,td'. If your header row is different, specify the selector in the table: headRowSelector option.");
	      }
	    };
	
	    this.add = function($column, position, skipAppend, skipUpdate) {
	      var columns = settings.table.columns,
	          label = $column.text(),
	          id = $column.data('dynatable-column') || utility.normalizeText(label, settings.table.defaultColumnIdStyle),
	          dataSorts = $column.data('dynatable-sorts'),
	          sorts = dataSorts ? $.map(dataSorts.split(','), function(text) { return $.trim(text); }) : [id];
	
	      // If the column id is blank, generate an id for it
	      if ( !id ) {
	        this.generate($column);
	        id = $column.data('dynatable-column');
	      }
	      // Add column data to plugin instance
	      columns.splice(position, 0, {
	        index: position,
	        label: label,
	        id: id,
	        attributeWriter: settings.writers[id] || settings.writers._attributeWriter,
	        attributeReader: settings.readers[id] || settings.readers._attributeReader,
	        sorts: sorts,
	        hidden: $column.css('display') === 'none',
	        textAlign: settings.table.copyHeaderAlignment && $column.css('text-align'),
	        cssClass: settings.table.copyHeaderClass && $column.attr('class')
	      });
	
	      // Modify header cell
	      $column
	        .attr('data-dynatable-column', id)
	        .addClass('dynatable-head');
	      if (settings.table.headRowClass) { $column.addClass(settings.table.headRowClass); }
	
	      // Append column header to table
	      if (!skipAppend) {
	        var domPosition = position + 1,
	            $sibling = obj.$element.find(settings.table.headRowSelector)
	              .children('th:nth-child(' + domPosition + '),td:nth-child(' + domPosition + ')').first(),
	            columnsAfter = columns.slice(position + 1, columns.length);
	
	        if ($sibling.length) {
	          $sibling.before($column);
	        // sibling column doesn't yet exist (maybe this is the last column in the header row)
	        } else {
	          obj.$element.find(settings.table.headRowSelector).append($column);
	        }
	
	        obj.sortsHeaders.attachOne($column.get());
	
	        // increment the index of all columns after this one that was just inserted
	        if (columnsAfter.length) {
	          for (var i = 0, len = columnsAfter.length; i < len; i++) {
	            columnsAfter[i].index += 1;
	          }
	        }
	
	        if (!skipUpdate) {
	          obj.dom.update();
	        }
	      }
	
	      return dt;
	    };
	
	    this.remove = function(columnIndexOrId) {
	      var columns = settings.table.columns,
	          length = columns.length;
	
	      if (typeof(columnIndexOrId) === "number") {
	        var column = columns[columnIndexOrId];
	        this.removeFromTable(column.id);
	        this.removeFromArray(columnIndexOrId);
	      } else {
	        // Traverse columns array in reverse order so that subsequent indices
	        // don't get messed up when we delete an item from the array in an iteration
	        for (var i = columns.length - 1; i >= 0; i--) {
	          var column = columns[i];
	
	          if (column.id === columnIndexOrId) {
	            this.removeFromTable(columnIndexOrId);
	            this.removeFromArray(i);
	          }
	        }
	      }
	
	      obj.dom.update();
	    };
	
	    this.removeFromTable = function(columnId) {
	      obj.$element.find(settings.table.headRowSelector).children('[data-dynatable-column="' + columnId + '"]').first()
	        .remove();
	    };
	
	    this.removeFromArray = function(index) {
	      var columns = settings.table.columns,
	          adjustColumns;
	      columns.splice(index, 1);
	      adjustColumns = columns.slice(index, columns.length);
	      for (var i = 0, len = adjustColumns.length; i < len; i++) {
	        adjustColumns[i].index -= 1;
	      }
	    };
	
	    this.generate = function($cell) {
	      var cell = $cell === undefined ? $('<th></th>') : $cell;
	      return this.attachGeneratedAttributes(cell);
	    };
	
	    this.attachGeneratedAttributes = function($cell) {
	      // Use increment to create unique column name that is the same each time the page is reloaded,
	      // in order to avoid errors with mismatched attribute names when loading cached `dataset.records` array
	      var increment = obj.$element.find(settings.table.headRowSelector).children('th[data-dynatable-generated]').length;
	      return $cell
	        .attr('data-dynatable-column', 'dynatable-generated-' + increment) //+ utility.randomHash(),
	        .attr('data-dynatable-no-sort', 'true')
	        .attr('data-dynatable-generated', increment);
	    };
	  };
	
	  function Records(obj, settings) {
	    var _this = this;
	
	    this.initOnLoad = function() {
	      return !settings.dataset.ajax;
	    };
	
	    this.init = function() {
	      if (settings.dataset.records === null) {
	        settings.dataset.records = this.getFromTable();
	
	        if (!settings.dataset.queryRecordCount) {
	          settings.dataset.queryRecordCount = this.count();
	        }
	
	        if (!settings.dataset.totalRecordCount){
	          settings.dataset.totalRecordCount = settings.dataset.queryRecordCount;
	        }
	      }
	
	      // Create cache of original full recordset (unpaginated and unqueried)
	      settings.dataset.originalRecords = $.extend(true, [], settings.dataset.records);
	    };
	
	    // merge ajax response json with cached data including
	    // meta-data and records
	    this.updateFromJson = function(data) {
	      var records;
	      if (settings.params.records === "_root") {
	        records = data;
	      } else if (settings.params.records in data) {
	        records = data[settings.params.records];
	      }
	      if (settings.params.record) {
	        var len = records.length - 1;
	        for (var i = 0; i < len; i++) {
	          records[i] = records[i][settings.params.record];
	        }
	      }
	      if (settings.params.queryRecordCount in data) {
	        settings.dataset.queryRecordCount = data[settings.params.queryRecordCount];
	      }
	      if (settings.params.totalRecordCount in data) {
	        settings.dataset.totalRecordCount = data[settings.params.totalRecordCount];
	      }
	      settings.dataset.records = records;
	    };
	
	    // For really advanced sorting,
	    // see http://james.padolsey.com/javascript/sorting-elements-with-jquery/
	    this.sort = function() {
	      var sort = [].sort,
	          sorts = settings.dataset.sorts,
	          sortsKeys = settings.dataset.sortsKeys,
	          sortTypes = settings.dataset.sortTypes;
	
	      var sortFunction = function(a, b) {
	        var comparison;
	        if ($.isEmptyObject(sorts)) {
	          comparison = obj.sorts.functions['originalPlacement'](a, b);
	        } else {
	          for (var i = 0, len = sortsKeys.length; i < len; i++) {
	            var attr = sortsKeys[i],
	                direction = sorts[attr],
	                sortType = sortTypes[attr] || obj.sorts.guessType(a, b, attr);
	            comparison = obj.sorts.functions[sortType](a, b, attr, direction);
	            // Don't need to sort any further unless this sort is a tie between a and b,
	            // so break the for loop unless tied
	            if (comparison !== 0) { break; }
	          }
	        }
	        return comparison;
	      }
	
	      return sort.call(settings.dataset.records, sortFunction);
	    };
	
	    this.paginate = function() {
	      var bounds = this.pageBounds(),
	          first = bounds[0], last = bounds[1];
	      settings.dataset.records = settings.dataset.records.slice(first, last);
	    };
	
	    this.resetOriginal = function() {
	      settings.dataset.records = settings.dataset.originalRecords || [];
	    };
	
	    this.pageBounds = function() {
	      var page = settings.dataset.page || 1,
	          first = (page - 1) * settings.dataset.perPage,
	          last = Math.min(first + settings.dataset.perPage, settings.dataset.queryRecordCount);
	      return [first,last];
	    };
	
	    // get initial recordset to populate table
	    // if ajax, call ajaxUrl
	    // otherwise, initialize from in-table records
	    this.getFromTable = function() {
	      var records = [],
	          columns = settings.table.columns,
	          tableRecords = obj.$element.find(settings.table.bodyRowSelector);
	
	      tableRecords.each(function(index){
	        var record = {};
	        record['dynatable-original-index'] = index;
	        $(this).find('th,td').each(function(index) {
	          if (columns[index] === undefined) {
	            // Header cell didn't exist for this column, so let's generate and append
	            // a new header cell with a randomly generated name (so we can store and
	            // retrieve the contents of this column for each record)
	            obj.domColumns.add(obj.domColumns.generate(), columns.length, false, true); // don't skipAppend, do skipUpdate
	          }
	          var value = columns[index].attributeReader(this, record),
	              attr = columns[index].id;
	
	          // If value from table is HTML, let's get and cache the text equivalent for
	          // the default string sorting, since it rarely makes sense for sort headers
	          // to sort based on HTML tags.
	          if (typeof(value) === "string" && value.match(/\s*\<.+\>/)) {
	            if (! record['dynatable-sortable-text']) {
	              record['dynatable-sortable-text'] = {};
	            }
	            record['dynatable-sortable-text'][attr] = $.trim($('<div></div>').html(value).text());
	          }
	
	          record[attr] = value;
	        });
	        // Allow configuration function which alters record based on attributes of
	        // table row (e.g. from html5 data- attributes)
	        if (typeof(settings.readers._rowReader) === "function") {
	          settings.readers._rowReader(index, this, record);
	        }
	        records.push(record);
	      });
	      return records; // 1st row is header
	    };
	
	    // count records from table
	    this.count = function() {
	      return settings.dataset.records.length;
	    };
	  };
	
	  function RecordsCount(obj, settings) {
	    this.initOnLoad = function() {
	      return settings.features.recordCount;
	    };
	
	    this.init = function() {
	      this.attach();
	    };
	
	    this.create = function() {
	      var pageTemplate = '',
	          filteredTemplate = '',
	          options = {
	            elementId: obj.element.id,
	            recordsShown: obj.records.count(),
	            recordsQueryCount: settings.dataset.queryRecordCount,
	            recordsTotal: settings.dataset.totalRecordCount,
	            collectionName: settings.params.records === "_root" ? "records" : settings.params.records,
	            text: settings.inputs.recordCountText
	          };
	
	      if (settings.features.paginate) {
	
	        // If currently displayed records are a subset (page) of the entire collection
	        if (options.recordsShown < options.recordsQueryCount) {
	          var bounds = obj.records.pageBounds();
	          options.pageLowerBound = bounds[0] + 1;
	          options.pageUpperBound = bounds[1];
	          pageTemplate = settings.inputs.recordCountPageBoundTemplate;
	
	        // Else if currently displayed records are the entire collection
	        } else if (options.recordsShown === options.recordsQueryCount) {
	          pageTemplate = settings.inputs.recordCountPageUnboundedTemplate;
	        }
	      }
	
	      // If collection for table is queried subset of collection
	      if (options.recordsQueryCount < options.recordsTotal) {
	        filteredTemplate = settings.inputs.recordCountFilteredTemplate;
	      }
	
	      // Populate templates with options
	      options.pageTemplate = utility.template(pageTemplate, options);
	      options.filteredTemplate = utility.template(filteredTemplate, options);
	      options.totalTemplate = utility.template(settings.inputs.recordCountTotalTemplate, options);
	      options.textTemplate = utility.template(settings.inputs.recordCountTextTemplate, options);
	
	      return utility.template(settings.inputs.recordCountTemplate, options);
	    };
	
	    this.attach = function() {
	      var $target = settings.inputs.recordCountTarget ? $(settings.inputs.recordCountTarget) : obj.$element;
	      $target[settings.inputs.recordCountPlacement](this.create());
	    };
	  };
	
	  function ProcessingIndicator(obj, settings) {
	    this.init = function() {
	      this.attach();
	    };
	
	    this.create = function() {
	      var $processing = $('<div></div>', {
	            html: '<span>' + settings.inputs.processingText + '</span>',
	            id: 'dynatable-processing-' + obj.element.id,
	            'class': 'dynatable-processing',
	            style: 'position: absolute; display: none;'
	          });
	
	      return $processing;
	    };
	
	    this.position = function() {
	      var $processing = $('#dynatable-processing-' + obj.element.id),
	          $span = $processing.children('span'),
	          spanHeight = $span.outerHeight(),
	          spanWidth = $span.outerWidth(),
	          $covered = obj.$element,
	          offset = $covered.offset(),
	          height = $covered.outerHeight(), width = $covered.outerWidth();
	
	      $processing
	        .offset({left: offset.left, top: offset.top})
	        .width(width)
	        .height(height)
	      $span
	        .offset({left: offset.left + ( (width - spanWidth) / 2 ), top: offset.top + ( (height - spanHeight) / 2 )});
	
	      return $processing;
	    };
	
	    this.attach = function() {
	      obj.$element.before(this.create());
	    };
	
	    this.show = function() {
	      $('#dynatable-processing-' + obj.element.id).show();
	      this.position();
	    };
	
	    this.hide = function() {
	      $('#dynatable-processing-' + obj.element.id).hide();
	    };
	  };
	
	  function State(obj, settings) {
	    this.initOnLoad = function() {
	      // Check if pushState option is true, and if browser supports it
	      return settings.features.pushState && history.pushState;
	    };
	
	    this.init = function() {
	      window.onpopstate = function(event) {
	        if (event.state && event.state.dynatable) {
	          obj.state.pop(event);
	        }
	      }
	    };
	
	    this.push = function(data) {
	      var urlString = window.location.search,
	          urlOptions,
	          path,
	          params,
	          hash,
	          newParams,
	          cacheStr,
	          cache,
	          // replaceState on initial load, then pushState after that
	          firstPush = !(window.history.state && window.history.state.dynatable),
	          pushFunction = firstPush ? 'replaceState' : 'pushState';
	
	      if (urlString && /^\?/.test(urlString)) { urlString = urlString.substring(1); }
	      $.extend(urlOptions, data);
	
	      params = utility.refreshQueryString(urlString, data, settings);
	      if (params) { params = '?' + params; }
	      hash = window.location.hash;
	      path = window.location.pathname;
	
	      obj.$element.trigger('dynatable:push', data);
	
	      cache = { dynatable: { dataset: settings.dataset } };
	      if (!firstPush) { cache.dynatable.scrollTop = $(window).scrollTop(); }
	      cacheStr = JSON.stringify(cache);
	
	      // Mozilla has a 640k char limit on what can be stored in pushState.
	      // See "limit" in https://developer.mozilla.org/en/DOM/Manipulating_the_browser_history#The_pushState().C2.A0method
	      // and "dataStr.length" in http://wine.git.sourceforge.net/git/gitweb.cgi?p=wine/wine-gecko;a=patch;h=43a11bdddc5fc1ff102278a120be66a7b90afe28
	      //
	      // Likewise, other browsers may have varying (undocumented) limits.
	      // Also, Firefox's limit can be changed in about:config as browser.history.maxStateObjectSize
	      // Since we don't know what the actual limit will be in any given situation, we'll just try caching and rescue
	      // any exceptions by retrying pushState without caching the records.
	      //
	      // I have absolutely no idea why perPageOptions suddenly becomes an array-like object instead of an array,
	      // but just recently, this started throwing an error if I don't convert it:
	      // 'Uncaught Error: DATA_CLONE_ERR: DOM Exception 25'
	      cache.dynatable.dataset.perPageOptions = $.makeArray(cache.dynatable.dataset.perPageOptions);
	
	      try {
	        window.history[pushFunction](cache, "Dynatable state", path + params + hash);
	      } catch(error) {
	        // Make cached records = null, so that `pop` will rerun process to retrieve records
	        cache.dynatable.dataset.records = null;
	        window.history[pushFunction](cache, "Dynatable state", path + params + hash);
	      }
	    };
	
	    this.pop = function(event) {
	      var data = event.state.dynatable;
	      settings.dataset = data.dataset;
	
	      if (data.scrollTop) { $(window).scrollTop(data.scrollTop); }
	
	      // If dataset.records is cached from pushState
	      if ( data.dataset.records ) {
	        obj.dom.update();
	      } else {
	        obj.process(true);
	      }
	    };
	  };
	
	  function Sorts(obj, settings) {
	    this.initOnLoad = function() {
	      return settings.features.sort;
	    };
	
	    this.init = function() {
	      var sortsUrl = window.location.search.match(new RegExp(settings.params.sorts + '[^&=]*=[^&]*', 'g'));
	      if (sortsUrl) {
	        settings.dataset.sorts = utility.deserialize(sortsUrl)[settings.params.sorts];
	      }
	      if (!settings.dataset.sortsKeys.length) {
	        settings.dataset.sortsKeys = utility.keysFromObject(settings.dataset.sorts);
	      }
	    };
	
	    this.add = function(attr, direction) {
	      var sortsKeys = settings.dataset.sortsKeys,
	          index = $.inArray(attr, sortsKeys);
	      settings.dataset.sorts[attr] = direction;
	      obj.$element.trigger('dynatable:sorts:added', [attr, direction]);
	      if (index === -1) { sortsKeys.push(attr); }
	      return dt;
	    };
	
	    this.remove = function(attr) {
	      var sortsKeys = settings.dataset.sortsKeys,
	          index = $.inArray(attr, sortsKeys);
	      delete settings.dataset.sorts[attr];
	      obj.$element.trigger('dynatable:sorts:removed', attr);
	      if (index !== -1) { sortsKeys.splice(index, 1); }
	      return dt;
	    };
	
	    this.clear = function() {
	      settings.dataset.sorts = {};
	      settings.dataset.sortsKeys.length = 0;
	      obj.$element.trigger('dynatable:sorts:cleared');
	    };
	
	    // Try to intelligently guess which sort function to use
	    // based on the type of attribute values.
	    // Consider using something more robust than `typeof` (http://javascriptweblog.wordpress.com/2011/08/08/fixing-the-javascript-typeof-operator/)
	    this.guessType = function(a, b, attr) {
	      var types = {
	            string: 'string',
	            number: 'number',
	            'boolean': 'number',
	            object: 'number' // dates and null values are also objects, this works...
	          },
	          attrType = a[attr] ? typeof(a[attr]) : typeof(b[attr]),
	          type = types[attrType] || 'number';
	      return type;
	    };
	
	    // Built-in sort functions
	    // (the most common use-cases I could think of)
	    this.functions = {
	      number: function(a, b, attr, direction) {
	        return a[attr] === b[attr] ? 0 : (direction > 0 ? a[attr] - b[attr] : b[attr] - a[attr]);
	      },
	      string: function(a, b, attr, direction) {
	        var aAttr = (a['dynatable-sortable-text'] && a['dynatable-sortable-text'][attr]) ? a['dynatable-sortable-text'][attr] : a[attr],
	            bAttr = (b['dynatable-sortable-text'] && b['dynatable-sortable-text'][attr]) ? b['dynatable-sortable-text'][attr] : b[attr],
	            comparison;
	        aAttr = aAttr.toLowerCase();
	        bAttr = bAttr.toLowerCase();
	        comparison = aAttr === bAttr ? 0 : (direction > 0 ? aAttr > bAttr : bAttr > aAttr);
	        // force false boolean value to -1, true to 1, and tie to 0
	        return comparison === false ? -1 : (comparison - 0);
	      },
	      originalPlacement: function(a, b) {
	        return a['dynatable-original-index'] - b['dynatable-original-index'];
	      }
	    };
	  };
	
	  // turn table headers into links which add sort to sorts array
	  function SortsHeaders(obj, settings) {
	    var _this = this;
	
	    this.initOnLoad = function() {
	      return settings.features.sort;
	    };
	
	    this.init = function() {
	      this.attach();
	    };
	
	    this.create = function(cell) {
	      var $cell = $(cell),
	          $link = $('<a></a>', {
	            'class': 'dynatable-sort-header',
	            href: '#',
	            html: $cell.html()
	          }),
	          id = $cell.data('dynatable-column'),
	          column = utility.findObjectInArray(settings.table.columns, {id: id});
	
	      $link.bind('click', function(e) {
	        _this.toggleSort(e, $link, column);
	        obj.process();
	
	        e.preventDefault();
	      });
	
	      if (this.sortedByColumn($link, column)) {
	        if (this.sortedByColumnValue(column) == 1) {
	          this.appendArrowUp($link);
	        } else {
	          this.appendArrowDown($link);
	        }
	      }
	
	      return $link;
	    };
	
	    this.removeAll = function() {
	      obj.$element.find(settings.table.headRowSelector).children('th,td').each(function(){
	        _this.removeAllArrows();
	        _this.removeOne(this);
	      });
	    };
	
	    this.removeOne = function(cell) {
	      var $cell = $(cell),
	          $link = $cell.find('.dynatable-sort-header');
	      if ($link.length) {
	        var html = $link.html();
	        $link.remove();
	        $cell.html($cell.html() + html);
	      }
	    };
	
	    this.attach = function() {
	      obj.$element.find(settings.table.headRowSelector).children('th,td').each(function(){
	        _this.attachOne(this);
	      });
	    };
	
	    this.attachOne = function(cell) {
	      var $cell = $(cell);
	      if (!$cell.data('dynatable-no-sort')) {
	        $cell.html(this.create(cell));
	      }
	    };
	
	    this.appendArrowUp = function($link) {
	      this.removeArrow($link);
	      $link.append("<span class='dynatable-arrow'> &#9650;</span>");
	    };
	
	    this.appendArrowDown = function($link) {
	      this.removeArrow($link);
	      $link.append("<span class='dynatable-arrow'> &#9660;</span>");
	    };
	
	    this.removeArrow = function($link) {
	      // Not sure why `parent()` is needed, the arrow should be inside the link from `append()` above
	      $link.find('.dynatable-arrow').remove();
	    };
	
	    this.removeAllArrows = function() {
	      obj.$element.find('.dynatable-arrow').remove();
	    };
	
	    this.toggleSort = function(e, $link, column) {
	      var sortedByColumn = this.sortedByColumn($link, column),
	          value = this.sortedByColumnValue(column);
	      // Clear existing sorts unless this is a multisort event
	      if (!settings.inputs.multisort || !utility.anyMatch(e, settings.inputs.multisort, function(evt, key) { return e[key]; })) {
	        this.removeAllArrows();
	        obj.sorts.clear();
	      }
	
	      // If sorts for this column are already set
	      if (sortedByColumn) {
	        // If ascending, then make descending
	        if (value == 1) {
	          for (var i = 0, len = column.sorts.length; i < len; i++) {
	            obj.sorts.add(column.sorts[i], -1);
	          }
	          this.appendArrowDown($link);
	        // If descending, remove sort
	        } else {
	          for (var i = 0, len = column.sorts.length; i < len; i++) {
	            obj.sorts.remove(column.sorts[i]);
	          }
	          this.removeArrow($link);
	        }
	      // Otherwise, if not already set, set to ascending
	      } else {
	        for (var i = 0, len = column.sorts.length; i < len; i++) {
	          obj.sorts.add(column.sorts[i], 1);
	        }
	        this.appendArrowUp($link);
	      }
	    };
	
	    this.sortedByColumn = function($link, column) {
	      return utility.allMatch(settings.dataset.sorts, column.sorts, function(sorts, sort) { return sort in sorts; });
	    };
	
	    this.sortedByColumnValue = function(column) {
	      return settings.dataset.sorts[column.sorts[0]];
	    };
	  };
	
	  function Queries(obj, settings) {
	    var _this = this;
	
	    this.initOnLoad = function() {
	      return settings.inputs.queries || settings.features.search;
	    };
	
	    this.init = function() {
	      var queriesUrl = window.location.search.match(new RegExp(settings.params.queries + '[^&=]*=[^&]*', 'g'));
	
	      settings.dataset.queries = queriesUrl ? utility.deserialize(queriesUrl)[settings.params.queries] : {};
	      if (settings.dataset.queries === "") { settings.dataset.queries = {}; }
	
	      if (settings.inputs.queries) {
	        this.setupInputs();
	      }
	    };
	
	    this.add = function(name, value) {
	      // reset to first page since query will change records
	      if (settings.features.paginate) {
	        settings.dataset.page = 1;
	      }
	      settings.dataset.queries[name] = value;
	      obj.$element.trigger('dynatable:queries:added', [name, value]);
	      return dt;
	    };
	
	    this.remove = function(name) {
	      delete settings.dataset.queries[name];
	      obj.$element.trigger('dynatable:queries:removed', name);
	      return dt;
	    };
	
	    this.run = function() {
	      for (query in settings.dataset.queries) {
	        if (settings.dataset.queries.hasOwnProperty(query)) {
	          var value = settings.dataset.queries[query];
	          if (_this.functions[query] === undefined) {
	            // Try to lazily evaluate query from column names if not explicitly defined
	            var queryColumn = utility.findObjectInArray(settings.table.columns, {id: query});
	            if (queryColumn) {
	              _this.functions[query] = function(record, queryValue) {
	                return record[query] == queryValue;
	              };
	            } else {
	              $.error("Query named '" + query + "' called, but not defined in queries.functions");
	              continue; // to skip to next query
	            }
	          }
	          // collect all records that return true for query
	          settings.dataset.records = $.map(settings.dataset.records, function(record) {
	            return _this.functions[query](record, value) ? record : null;
	          });
	        }
	      }
	      settings.dataset.queryRecordCount = obj.records.count();
	    };
	
	    // Shortcut for performing simple query from built-in search
	    this.runSearch = function(q) {
	      var origQueries = $.extend({}, settings.dataset.queries);
	      if (q) {
	        this.add('search', q);
	      } else {
	        this.remove('search');
	      }
	      if (!utility.objectsEqual(settings.dataset.queries, origQueries)) {
	        obj.process();
	      }
	    };
	
	    this.setupInputs = function() {
	      settings.inputs.queries.each(function() {
	        var $this = $(this),
	            event = $this.data('dynatable-query-event') || settings.inputs.queryEvent,
	            query = $this.data('dynatable-query') || $this.attr('name') || this.id,
	            queryFunction = function(e) {
	              var q = $(this).val();
	              if (q === "") { q = undefined; }
	              if (q === settings.dataset.queries[query]) { return false; }
	              if (q) {
	                _this.add(query, q);
	              } else {
	                _this.remove(query);
	              }
	              obj.process();
	              e.preventDefault();
	            };
	
	        $this
	          .attr('data-dynatable-query', query)
	          .bind(event, queryFunction)
	          .bind('keypress', function(e) {
	            if (e.which == 13) {
	              queryFunction.call(this, e);
	            }
	          });
	
	        if (settings.dataset.queries[query]) { $this.val(decodeURIComponent(settings.dataset.queries[query])); }
	      });
	    };
	
	    // Query functions for in-page querying
	    // each function should take a record and a value as input
	    // and output true of false as to whether the record is a match or not
	    this.functions = {
	      search: function(record, queryValue) {
	        var contains = false;
	        // Loop through each attribute of record
	        for (attr in record) {
	          if (record.hasOwnProperty(attr)) {
	            var attrValue = record[attr];
	            if (typeof(attrValue) === "string" && attrValue.toLowerCase().indexOf(queryValue.toLowerCase()) !== -1) {
	              contains = true;
	              // Don't need to keep searching attributes once found
	              break;
	            } else {
	              continue;
	            }
	          }
	        }
	        return contains;
	      }
	    };
	  };
	
	  function InputsSearch(obj, settings) {
	    var _this = this;
	
	    this.initOnLoad = function() {
	      return settings.features.search;
	    };
	
	    this.init = function() {
	      this.attach();
	    };
	
	    this.create = function() {
	      var $search = $('<input />', {
	            type: 'search',
	            id: 'dynatable-query-search-' + obj.element.id,
	            'data-dynatable-query': 'search',
	            value: settings.dataset.queries.search
	          }),
	          $searchSpan = $('<span></span>', {
	            id: 'dynatable-search-' + obj.element.id,
	            'class': 'dynatable-search',
	            text: settings.inputs.searchText
	          }).append($search);
	
	      $search
	        .bind(settings.inputs.queryEvent, function() {
	          obj.queries.runSearch($(this).val());
	        })
	        .bind('keypress', function(e) {
	          if (e.which == 13) {
	            obj.queries.runSearch($(this).val());
	            e.preventDefault();
	          }
	        });
	      return $searchSpan;
	    };
	
	    this.attach = function() {
	      var $target = settings.inputs.searchTarget ? $(settings.inputs.searchTarget) : obj.$element;
	      $target[settings.inputs.searchPlacement](this.create());
	    };
	  };
	
	  // provide a public function for selecting page
	  function PaginationPage(obj, settings) {
	    this.initOnLoad = function() {
	      return settings.features.paginate;
	    };
	
	    this.init = function() {
	      var pageUrl = window.location.search.match(new RegExp(settings.params.page + '=([^&]*)'));
	      // If page is present in URL parameters and pushState is enabled
	      // (meaning that it'd be possible for dynatable to have put the
	      // page parameter in the URL)
	      if (pageUrl && settings.features.pushState) {
	        this.set(pageUrl[1]);
	      } else {
	        this.set(1);
	      }
	    };
	
	    this.set = function(page) {
	      var newPage = parseInt(page, 10);
	      settings.dataset.page = newPage;
	      obj.$element.trigger('dynatable:page:set', newPage);
	    }
	  };
	
	  function PaginationPerPage(obj, settings) {
	    var _this = this;
	
	    this.initOnLoad = function() {
	      return settings.features.paginate;
	    };
	
	    this.init = function() {
	      var perPageUrl = window.location.search.match(new RegExp(settings.params.perPage + '=([^&]*)'));
	
	      // If perPage is present in URL parameters and pushState is enabled
	      // (meaning that it'd be possible for dynatable to have put the
	      // perPage parameter in the URL)
	      if (perPageUrl && settings.features.pushState) {
	        // Don't reset page to 1 on init, since it might override page
	        // set on init from URL
	        this.set(perPageUrl[1], true);
	      } else {
	        this.set(settings.dataset.perPageDefault, true);
	      }
	
	      if (settings.features.perPageSelect) {
	        this.attach();
	      }
	    };
	
	    this.create = function() {
	      var $select = $('<select>', {
	            id: 'dynatable-per-page-' + obj.element.id,
	            'class': 'dynatable-per-page-select'
	          });
	
	      for (var i = 0, len = settings.dataset.perPageOptions.length; i < len; i++) {
	        var number = settings.dataset.perPageOptions[i],
	            selected = settings.dataset.perPage == number ? 'selected="selected"' : '';
	        $select.append('<option value="' + number + '" ' + selected + '>' + number + '</option>');
	      }
	
	      $select.bind('change', function(e) {
	        _this.set($(this).val());
	        obj.process();
	      });
	
	      return $('<span />', {
	        'class': 'dynatable-per-page'
	      }).append("<span class='dynatable-per-page-label'>" + settings.inputs.perPageText + "</span>").append($select);
	    };
	
	    this.attach = function() {
	      var $target = settings.inputs.perPageTarget ? $(settings.inputs.perPageTarget) : obj.$element;
	      $target[settings.inputs.perPagePlacement](this.create());
	    };
	
	    this.set = function(number, skipResetPage) {
	      var newPerPage = parseInt(number);
	      if (!skipResetPage) { obj.paginationPage.set(1); }
	      settings.dataset.perPage = newPerPage;
	      obj.$element.trigger('dynatable:perPage:set', newPerPage);
	    };
	  };
	
	  // pagination links which update dataset.page attribute
	  function PaginationLinks(obj, settings) {
	    var _this = this;
	
	    this.initOnLoad = function() {
	      return settings.features.paginate;
	    };
	
	    this.init = function() {
	      this.attach();
	    };
	
	    this.create = function() {
	      var pageLinks = '<ul id="' + 'dynatable-pagination-links-' + obj.element.id + '" class="' + settings.inputs.paginationClass + '">',
	          pageLinkClass = settings.inputs.paginationLinkClass,
	          activePageClass = settings.inputs.paginationActiveClass,
	          disabledPageClass = settings.inputs.paginationDisabledClass,
	          pages = Math.ceil(settings.dataset.queryRecordCount / settings.dataset.perPage),
	          page = settings.dataset.page,
	          breaks = [
	            settings.inputs.paginationGap[0],
	            settings.dataset.page - settings.inputs.paginationGap[1],
	            settings.dataset.page + settings.inputs.paginationGap[2],
	            (pages + 1) - settings.inputs.paginationGap[3]
	          ];
	
	      pageLinks += '<li><span>' + settings.inputs.pageText + '</span></li>';
	
	      for (var i = 1; i <= pages; i++) {
	        if ( (i > breaks[0] && i < breaks[1]) || (i > breaks[2] && i < breaks[3])) {
	          // skip to next iteration in loop
	          continue;
	        } else {
	          var li = obj.paginationLinks.buildLink(i, i, pageLinkClass, page == i, activePageClass),
	              breakIndex,
	              nextBreak;
	
	          // If i is not between one of the following
	          // (1 + (settings.paginationGap[0]))
	          // (page - settings.paginationGap[1])
	          // (page + settings.paginationGap[2])
	          // (pages - settings.paginationGap[3])
	          breakIndex = $.inArray(i, breaks);
	          nextBreak = breaks[breakIndex + 1];
	          if (breakIndex > 0 && i !== 1 && nextBreak && nextBreak > (i + 1)) {
	            var ellip = '<li><span class="dynatable-page-break">&hellip;</span></li>';
	            li = breakIndex < 2 ? ellip + li : li + ellip;
	          }
	
	          if (settings.inputs.paginationPrev && i === 1) {
	            var prevLi = obj.paginationLinks.buildLink(page - 1, settings.inputs.paginationPrev, pageLinkClass + ' ' + settings.inputs.paginationPrevClass, page === 1, disabledPageClass);
	            li = prevLi + li;
	          }
	          if (settings.inputs.paginationNext && i === pages) {
	            var nextLi = obj.paginationLinks.buildLink(page + 1, settings.inputs.paginationNext, pageLinkClass + ' ' + settings.inputs.paginationNextClass, page === pages, disabledPageClass);
	            li += nextLi;
	          }
	
	          pageLinks += li;
	        }
	      }
	
	      pageLinks += '</ul>';
	
	      // only bind page handler to non-active and non-disabled page links
	      var selector = '#dynatable-pagination-links-' + obj.element.id + ' a.' + pageLinkClass + ':not(.' + activePageClass + ',.' + disabledPageClass + ')';
	      // kill any existing delegated-bindings so they don't stack up
	      $(document).undelegate(selector, 'click.dynatable');
	      $(document).delegate(selector, 'click.dynatable', function(e) {
	        $this = $(this);
	        $this.closest(settings.inputs.paginationClass).find('.' + activePageClass).removeClass(activePageClass);
	        $this.addClass(activePageClass);
	
	        obj.paginationPage.set($this.data('dynatable-page'));
	        obj.process();
	        e.preventDefault();
	      });
	
	      return pageLinks;
	    };
	
	    this.buildLink = function(page, label, linkClass, conditional, conditionalClass) {
	      var link = '<a data-dynatable-page=' + page + ' class="' + linkClass,
	          li = '<li';
	
	      if (conditional) {
	        link += ' ' + conditionalClass;
	        li += ' class="' + conditionalClass + '"';
	      }
	
	      link += '">' + label + '</a>';
	      li += '>' + link + '</li>';
	
	      return li;
	    };
	
	    this.attach = function() {
	      // append page links *after* delegate-event-binding so it doesn't need to
	      // find and select all page links to bind event
	      var $target = settings.inputs.paginationLinkTarget ? $(settings.inputs.paginationLinkTarget) : obj.$element;
	      $target[settings.inputs.paginationLinkPlacement](obj.paginationLinks.create());
	    };
	  };
	
	  utility = dt.utility = {
	    normalizeText: function(text, style) {
	      text = this.textTransform[style](text);
	      return text;
	    },
	    textTransform: {
	      trimDash: function(text) {
	        return text.replace(/^\s+|\s+$/g, "").replace(/\s+/g, "-");
	      },
	      camelCase: function(text) {
	        text = this.trimDash(text);
	        return text
	          .replace(/(\-[a-zA-Z])/g, function($1){return $1.toUpperCase().replace('-','');})
	          .replace(/([A-Z])([A-Z]+)/g, function($1,$2,$3){return $2 + $3.toLowerCase();})
	          .replace(/^[A-Z]/, function($1){return $1.toLowerCase();});
	      },
	      dashed: function(text) {
	        text = this.trimDash(text);
	        return this.lowercase(text);
	      },
	      underscore: function(text) {
	        text = this.trimDash(text);
	        return this.lowercase(text.replace(/(-)/g, '_'));
	      },
	      lowercase: function(text) {
	        return text.replace(/([A-Z])/g, function($1){return $1.toLowerCase();});
	      }
	    },
	    // Deserialize params in URL to object
	    // see http://stackoverflow.com/questions/1131630/javascript-jquery-param-inverse-function/3401265#3401265
	    deserialize: function(query) {
	      if (!query) return {};
	      // modified to accept an array of partial URL strings
	      if (typeof(query) === "object") { query = query.join('&'); }
	
	      var hash = {},
	          vars = query.split("&");
	
	      for (var i = 0; i < vars.length; i++) {
	        var pair = vars[i].split("="),
	            k = decodeURIComponent(pair[0]),
	            v, m;
	
	        if (!pair[1]) { continue };
	        v = decodeURIComponent(pair[1].replace(/\+/g, ' '));
	
	        // modified to parse multi-level parameters (e.g. "hi[there][dude]=whatsup" => hi: {there: {dude: "whatsup"}})
	        while (m = k.match(/([^&=]+)\[([^&=]+)\]$/)) {
	          var origV = v;
	          k = m[1];
	          v = {};
	
	          // If nested param ends in '][', then the regex above erroneously included half of a trailing '[]',
	          // which indicates the end-value is part of an array
	          if (m[2].substr(m[2].length-2) == '][') { // must use substr for IE to understand it
	            v[m[2].substr(0,m[2].length-2)] = [origV];
	          } else {
	            v[m[2]] = origV;
	          }
	        }
	
	        // If it is the first entry with this name
	        if (typeof hash[k] === "undefined") {
	          if (k.substr(k.length-2) != '[]') { // not end with []. cannot use negative index as IE doesn't understand it
	            hash[k] = v;
	          } else {
	            hash[k] = [v];
	          }
	        // If subsequent entry with this name and not array
	        } else if (typeof hash[k] === "string") {
	          hash[k] = v;  // replace it
	        // modified to add support for objects
	        } else if (typeof hash[k] === "object") {
	          hash[k] = $.extend({}, hash[k], v);
	        // If subsequent entry with this name and is array
	        } else {
	          hash[k].push(v);
	        }
	      }
	      return hash;
	    },
	    refreshQueryString: function(urlString, data, settings) {
	      var _this = this,
	          queryString = urlString.split('?'),
	          path = queryString.shift(),
	          urlOptions;
	
	      urlOptions = this.deserialize(urlString);
	
	      // Loop through each dynatable param and update the URL with it
	      for (attr in settings.params) {
	        if (settings.params.hasOwnProperty(attr)) {
	          var label = settings.params[attr];
	          // Skip over parameters matching attributes for disabled features (i.e. leave them untouched),
	          // because if the feature is turned off, then parameter name is a coincidence and it's unrelated to dynatable.
	          if (
	            (!settings.features.sort && attr == "sorts") ||
	              (!settings.features.paginate && _this.anyMatch(attr, ["page", "perPage", "offset"], function(attr, param) { return attr == param; }))
	          ) {
	            continue;
	          }
	
	          // Delete page and offset from url params if on page 1 (default)
	          if ((attr === "page" || attr === "offset") && data["page"] === 1) {
	            if (urlOptions[label]) {
	              delete urlOptions[label];
	            }
	            continue;
	          }
	
	          // Delete perPage from url params if default perPage value
	          if (attr === "perPage" && data[label] == settings.dataset.perPageDefault) {
	            if (urlOptions[label]) {
	              delete urlOptions[label];
	            }
	            continue;
	          }
	
	          // For queries, we're going to handle each possible query parameter individually here instead of
	          // handling the entire queries object below, since we need to make sure that this is a query controlled by dynatable.
	          if (attr == "queries" && data[label]) {
	            var queries = settings.inputs.queries || [],
	                inputQueries = $.makeArray(queries.map(function() { return $(this).attr('name') }));
	
	            if (settings.features.search) { inputQueries.push('search'); }
	
	            for (var i = 0, len = inputQueries.length; i < len; i++) {
	              var attr = inputQueries[i];
	              if (data[label][attr]) {
	                if (typeof urlOptions[label] === 'undefined') { urlOptions[label] = {}; }
	                urlOptions[label][attr] = data[label][attr];
	              } else {
	                if (urlOptions && urlOptions[label] && urlOptions[label][attr]) { delete urlOptions[label][attr]; }
	              }
	            }
	            continue;
	          }
	
	          // If we haven't returned true by now, then we actually want to update the parameter in the URL
	          if (data[label]) {
	            urlOptions[label] = data[label];
	          } else {
	            delete urlOptions[label];
	          }
	        }
	      }
	      return $.param(urlOptions);
	    },
	    // Get array of keys from object
	    // see http://stackoverflow.com/questions/208016/how-to-list-the-properties-of-a-javascript-object/208020#208020
	    keysFromObject: function(obj){
	      var keys = [];
	      for (var key in obj){
	        keys.push(key);
	      }
	      return keys;
	    },
	    // Find an object in an array of objects by attributes.
	    // E.g. find object with {id: 'hi', name: 'there'} in an array of objects
	    findObjectInArray: function(array, objectAttr) {
	      var _this = this,
	          foundObject;
	      for (var i = 0, len = array.length; i < len; i++) {
	        var item = array[i];
	        // For each object in array, test to make sure all attributes in objectAttr match
	        if (_this.allMatch(item, objectAttr, function(item, key, value) { return item[key] == value; })) {
	          foundObject = item;
	          break;
	        }
	      }
	      return foundObject;
	    },
	    // Return true if supplied test function passes for ALL items in an array
	    allMatch: function(item, arrayOrObject, test) {
	      // start off with true result by default
	      var match = true,
	          isArray = $.isArray(arrayOrObject);
	      // Loop through all items in array
	      $.each(arrayOrObject, function(key, value) {
	        var result = isArray ? test(item, value) : test(item, key, value);
	        // If a single item tests false, go ahead and break the array by returning false
	        // and return false as result,
	        // otherwise, continue with next iteration in loop
	        // (if we make it through all iterations without overriding match with false,
	        // then we can return the true result we started with by default)
	        if (!result) { return match = false; }
	      });
	      return match;
	    },
	    // Return true if supplied test function passes for ANY items in an array
	    anyMatch: function(item, arrayOrObject, test) {
	      var match = false,
	          isArray = $.isArray(arrayOrObject);
	
	      $.each(arrayOrObject, function(key, value) {
	        var result = isArray ? test(item, value) : test(item, key, value);
	        if (result) {
	          // As soon as a match is found, set match to true, and return false to stop the `$.each` loop
	          match = true;
	          return false;
	        }
	      });
	      return match;
	    },
	    // Return true if two objects are equal
	    // (i.e. have the same attributes and attribute values)
	    objectsEqual: function(a, b) {
	      for (attr in a) {
	        if (a.hasOwnProperty(attr)) {
	          if (!b.hasOwnProperty(attr) || a[attr] !== b[attr]) {
	            return false;
	          }
	        }
	      }
	      for (attr in b) {
	        if (b.hasOwnProperty(attr) && !a.hasOwnProperty(attr)) {
	          return false;
	        }
	      }
	      return true;
	    },
	    // Taken from http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/105074#105074
	    randomHash: function() {
	      return (((1+Math.random())*0x10000)|0).toString(16).substring(1);
	    },
	    // Adapted from http://stackoverflow.com/questions/377961/efficient-javascript-string-replacement/378001#378001
	    template: function(str, data) {
	      return str.replace(/{(\w*)}/g, function(match, key) {
	        return data.hasOwnProperty(key) ? data[key] : "";
	      });
	    }
	  };
	
	  //-----------------------------------------------------------------
	  // Build the dynatable plugin
	  //-----------------------------------------------------------------
	
	  // Object.create support test, and fallback for browsers without it
	  if ( typeof Object.create !== "function" ) {
	    Object.create = function (o) {
	      function F() {}
	      F.prototype = o;
	      return new F();
	    };
	  }
	
	  //-----------------------------------------------------------------
	  // Global dynatable plugin setting defaults
	  //-----------------------------------------------------------------
	
	  $.dynatableSetup = function(options) {
	    defaults = mergeSettings(options);
	  };
	
	  // Create dynatable plugin based on a defined object
	  $.dynatable = function( object ) {
	    $.fn['dynatable'] = function( options ) {
	      return this.each(function() {
	        if ( ! $.data( this, 'dynatable' ) ) {
	          $.data( this, 'dynatable', Object.create(object).init(this, options) );
	        }
	      });
	    };
	  };
	
	  $.dynatable(dt);
	
	})(jQuery);


/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(31);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(14)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./dynatable.scss", function() {
				var newContent = require("!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./dynatable.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(13)();
	// imports
	
	
	// module
	exports.push([module.id, "#table-container {\n  width: 50%;\n  height: 400px;\n  margin: 30px; }\n\n#dynatable {\n  position: relative;\n  width: 100%;\n  margin-top: 30px; }\n  #dynatable table.dc-datatable {\n    margin: 15px 0;\n    width: 100%; }\n    #dynatable table.dc-datatable th, #dynatable table.dc-datatable td {\n      font-size: 14px;\n      line-height: 16px;\n      vertical-align: top;\n      text-align: left;\n      padding: 5px 5px; }\n    #dynatable table.dc-datatable th a {\n      color: #222; }\n      #dynatable table.dc-datatable th a .dynatable-arrow {\n        color: #666;\n        display: inline-block;\n        font-size: 11px;\n        margin-left: 3px; }\n  #dynatable .dynatable-search {\n    position: absolute;\n    top: -28px;\n    right: 5px;\n    font-size: 11px;\n    width: 50%;\n    padding-left: 45px;\n    text-indent: -45px;\n    text-shadow: 0 -1px 0 rgba(255, 255, 255, 0.6); }\n    #dynatable .dynatable-search input {\n      width: 95%;\n      float: right;\n      border-radius: 3px;\n      padding: 4px 4px 4px 2px;\n      border: 1px solid #aaa;\n      margin-top: 1px;\n      outline: 0; }\n      #dynatable .dynatable-search input:focus {\n        border-color: #336799;\n        outline: 0;\n        box-shadow: 0 0 3px rgba(53, 104, 147, 0.6); }\n  #dynatable .dynatable-per-page {\n    position: absolute;\n    top: -30px;\n    left: 5px; }\n    #dynatable .dynatable-per-page span {\n      float: right;\n      margin-left: 3px;\n      margin-top: 2px;\n      font-size: 11px;\n      text-shadow: 0 -1px 0 rgba(255, 255, 255, 0.6); }\n    #dynatable .dynatable-per-page select {\n      width: 64px; }\n  #dynatable .dynatable-record-count {\n    font-size: 11px;\n    text-transform: lowercase;\n    position: absolute;\n    bottom: -32px;\n    left: 6px;\n    color: #666;\n    text-shadow: 0 -1px 0 rgba(255, 255, 255, 0.6); }\n  #dynatable ul.dynatable-pagination-links {\n    margin: 0 5px 0 0;\n    list-style-type: none;\n    position: absolute;\n    bottom: -37px;\n    padding: 0;\n    right: 5px; }\n    #dynatable ul.dynatable-pagination-links li {\n      float: left; }\n      #dynatable ul.dynatable-pagination-links li:first-child span {\n        font-size: 11px;\n        text-shadow: 0 -1px 0 rgba(255, 255, 255, 0.6);\n        position: relative;\n        top: 2px; }\n    #dynatable ul.dynatable-pagination-links a.dynatable-page-link {\n      padding: 3px 3px;\n      display: block;\n      margin: 0 2px;\n      color: #336799;\n      text-decoration: underline;\n      font-size: 14px;\n      cursor: pointer; }\n      #dynatable ul.dynatable-pagination-links a.dynatable-page-link.dynatable-active-page {\n        text-decoration: none;\n        font-weight: bold;\n        color: #222; }\n    #dynatable ul.dynatable-pagination-links a.dynatable-page-prev,\n    #dynatable ul.dynatable-pagination-links a.dynatable-page-next {\n      background-color: #f6f6f6;\n      border: 2px solid rgba(53, 104, 147, 0.6);\n      border-radius: 3px;\n      padding: 2px 6px;\n      display: block;\n      text-decoration: none;\n      margin-left: 5px; }\n      #dynatable ul.dynatable-pagination-links a.dynatable-page-prev .fa,\n      #dynatable ul.dynatable-pagination-links a.dynatable-page-next .fa {\n        color: #bbb; }\n      #dynatable ul.dynatable-pagination-links a.dynatable-page-prev:hover,\n      #dynatable ul.dynatable-pagination-links a.dynatable-page-next:hover {\n        background-color: #fff; }\n        #dynatable ul.dynatable-pagination-links a.dynatable-page-prev:hover .fa,\n        #dynatable ul.dynatable-pagination-links a.dynatable-page-next:hover .fa {\n          color: #336799; }\n      #dynatable ul.dynatable-pagination-links a.dynatable-page-prev.dynatable-disabled-page,\n      #dynatable ul.dynatable-pagination-links a.dynatable-page-next.dynatable-disabled-page {\n        color: #bbb;\n        background-color: #f7f7f7;\n        border-color: #e0e0e0;\n        box-shadow: none;\n        text-decoration: none;\n        cursor: default; }\n        #dynatable ul.dynatable-pagination-links a.dynatable-page-prev.dynatable-disabled-page .fa,\n        #dynatable ul.dynatable-pagination-links a.dynatable-page-prev.dynatable-disabled-page:hover .fa,\n        #dynatable ul.dynatable-pagination-links a.dynatable-page-next.dynatable-disabled-page .fa,\n        #dynatable ul.dynatable-pagination-links a.dynatable-page-next.dynatable-disabled-page:hover .fa {\n          color: #e0e0e0; }\n    #dynatable ul.dynatable-pagination-links a.dynatable-page-prev {\n      margin-right: 5px; }\n", ""]);
	
	// exports


/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./src/javascripts/audio-dash": 33
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 32;


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	var dc = __webpack_require__(2);
	
	//This component will take a collection of dc charts as the input, 
	//and output a 508 compliant version of the charts using the chart data.
	module.exports = function(parent, chartGroup) {
	
		var _chart = dc.baseMixin({});
		var _hiddenClassName = 'hide-visually';
	
		//all of the charts to be translated to 508
		var _charts; 
	
		_chart._mandatoryAttributes(undefined);
	
		_chart.hiddenClassName = function(_) {
			if(!arguments.length) return _hiddenClassName;
			_hiddenClassName = _;
			return _chart;
		};
	
		_chart.charts = function(_) {
			if(!arguments.length) return _charts;
			_charts = _;
			return _chart;
		};
	
		_chart.refreshList = function() {
			_chart.root().html('');
			Object.keys(_charts).forEach(function(chartName) {
				_chart.root()
					.append("h2")
					.attr("tabindex", "0")
					.text(chartName);
				var dataList = _chart.root().append("ul").style("list-style-type", "none");
				var chartToHide = _charts[chartName].chart;
				var chartFormatter = _charts[chartName].formatter || function(k, v) {return k + " " + v;};
	
				//hide the chart from 508 reader
				chartToHide.root()
					.attr("aria-hidden", "true");
	
				//add the chart data to a list of data for 508 readers
				chartToHide.data().forEach(function(d) {
	
					//check for normal .data() values
					if(!d) {
						dataList.append("li").append("button")
							.text(chartFormatter("No Data", ""));
					}
					else if(d.key !== undefined && d.value != undefined) {
						var key = chartToHide.label()(d);
						var value = chartToHide.valueAccessor()(d);
	
						dataList.append("li").append("button")
							.on("click", function(){
								chartToHide.filter(d.key);
								dc.redrawAll();
							})
							.text(chartFormatter(key, value));
					}
					//check for .data() value from barchart
					else if(d.values !== undefined) {
						d.values.forEach(function(dNested){
							var dataObj = dNested.data;
							var key = chartToHide.label()(dataObj);
							var value;
							value = chartToHide.valueAccessor()(dataObj);
	
							dataList.append("li").append("button")
								.on("click", function(){
									chartToHide.filter(dataObj.key);
									dc.redrawAll();
								})
								.text(chartFormatter(key, value));
						});
						
					}
					//check for .data() value from treemap
					else if(d.depth !== undefined) {
						var dataObj = d;
						var key = dataObj.name;
						var value = dataObj.value;
	
						//add a level
						var newLevel = dataList.append("li");
						newLevel.append("h2").text("Top Level: " + dataObj.columnName)
						newLevel.append("h3").text(chartFormatter(key, value));
						var levelList = newLevel.append("ul").style("list-style-type", "none");
						//New structure for reader because of hierarchical data
						addDataNodesTreemap(dataObj, levelList);
	
					}
					//check for .data() value from sankey
					else if(d.links !== undefined) {
						var dataObj = d;
						var topLevelColumnName = dataObj.nodes[0].columnName;
	
						//only traverse from the top level down the tree
						dataObj.nodes.forEach(function(node) {
							if(node.columnName === topLevelColumnName) {
								var key = node.name;
								var value = node.value;
	
								//add a level
								var newLevel = dataList.append("li");
								newLevel.append("h2").text("Column: " + node.columnName);
								newLevel.append("h3").text(chartFormatter(key, value));
								var levelList = newLevel.append("ul").style("list-style-type", "none");
								addDataNodesSankey(node, levelList)
							}
						});
					}
	
	
				});
	
				function addDataNodesTreemap(dataObj, listSelector) {
					if(dataObj._children) {
						dataObj._children.forEach(function(childObj) {
							var key = childObj.name;
							var value = childObj.value;
	
							var newLevel = listSelector.append("li");
							newLevel.append("h2").text("Level: " + childObj.columnName);
							newLevel.append("h3").text(chartFormatter(key, value));
							
							if(childObj._children) {
								var levelList = newLevel.append("ul").style("list-style-type", "none");
								addDataNodesTreemap(childObj, levelList);
							}
						});
					}
					return;
				}
	
				function addDataNodesSankey(dataObj, listSelector) {
					dataObj.sourceLinks.forEach(function(linkToNextNode) {
						var targetNode = linkToNextNode.target;
						var key = targetNode.name;
						var value = targetNode.value;
	
						var newLevel = listSelector.append("li");
						newLevel.append("h2").text("Column: " + targetNode.columnName);
						newLevel.append("h3").text(chartFormatter(key, value));
	
						if(targetNode.sourceLinks.length > 0){
							var levelList = newLevel.append("ul").style("list-style-type", "none");
							addDataNodesSankey(targetNode, levelList);
						}
					});
				}
			
			});
		};
	
	
	
		_chart._doRender = function() {
			_chart.root().classed('audio-dash', true);
			_chart.root().classed(_hiddenClassName, true);
	
			_chart.refreshList();
		};
	
		_chart._doRedraw = function() {
			_chart.refreshList();
		};
	
		return _chart.anchor(parent, chartGroup);
	};

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./src/javascripts/tool-tipsify": 35
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 34;


/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	var dc = __webpack_require__(2),
	    inflection = __webpack_require__(10),
	    dtip = __webpack_require__(36)(d3);
	
	__webpack_require__(37);
	
	var toolTipsify = function(chart, options){
	
	  // default & override setup for formatter
	  var formatter = d3.format(",");
	  if (options && options.formatter) {
	    formatter = options.formatter;
	  }
	
	  // default setup for content & position 
	  var content = function(d) {
	    return "<label>" + chart.label()(d) + "</label><br/>" + formatter(d.value);
	  };
	  var position = 'mouse';
	  
	
	  // override content and position via options
	  if (options && options.content) {
	    content = options.content;
	  }
	  if (options && options.position) {
	    position = options.position;
	  }
	  
	  var d3TipClass = 'd3-tip';
	  if (position === 'mouse') {
	    d3TipClass = 'd3-tip-mouse';
	  }
	
	  chart.renderlet(function(){
	    var ttId = '#' + chart.root().attr('id') + '-tip';
	
	    var tt = d3.tip()
	      .attr('class', d3TipClass)
	      .attr('id', ttId)
	      .positionAnchor(position)
	      .html(content);
	
	    var tippables = tippableSelector(chart); 
	
	    // HACK...
	    if (!d3.select(ttId).empty()) d3.select(ttId).remove(); 
	
	    tippables.call(tt);
	    tippables.on('mouseover', tt.show)
	             .on('mouseout', tt.hide)
	             .on('mousemove', tt.updatePosition)
	             .on('click', tt.hide);
	  });
	
	};
	
	function tippableSelector(chart) {
	
	  var selectors = ['g.row', 'g.pie-slice', 'g.country', 'g.bubble', 'rect.bar'];
	
	  for(var i=0; i<selectors.length;i++) {
	    var tippables = chart.selectAll(selectors[i]);
	    if (tippables[0].length > 0) {
	      return tippables;
	    }
	  }
	
	}
	
	module.exports = toolTipsify;

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// d3.tip
	// Copyright (c) 2013 Justin Palmer
	//
	// Tooltips for d3.js SVG visualizations
	
	(function (root, factory) {
	  if (true) {
	    // AMD. Register as an anonymous module with d3 as a dependency.
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
	  } else if (typeof module === 'object' && module.exports) {
	    // CommonJS
	    module.exports = function(d3) {
	      d3.tip = factory(d3)
	      return d3.tip
	    }
	  } else {
	    // Browser global.
	    factory(root.d3)
	  }
	}(this, function (d3) {
	
	  // Public - contructs a new tooltip
	  //
	  // Returns a tip
	  d3.tip = function() {
	    var direction = d3_tip_direction,
	        offset    = d3_tip_offset,
	        html      = d3_tip_html,
	        node      = initNode(),
	        svg       = null,
	        point     = null,
	        target    = null,
	        positionAnchor = d3_tip_positionAnchor;
	
	    function tip(vis) {
	      svg = getSVGNode(vis)
	      point = svg.createSVGPoint()
	      document.body.appendChild(node)
	    }
	
	    // Public - show the tooltip on the screen
	    //
	    // Returns a tip
	    tip.show = function() {
	      var args = Array.prototype.slice.call(arguments)
	      if(args[args.length - 1] instanceof SVGElement) target = args.pop()
	
	      var content = html.apply(this, args),
	          poffset = offset.apply(this, args),
	          dir     = direction.apply(this, args),
	          nodel   = d3.select(node),
	          i       = directions.length,
	          coords,
	          scrollTop  = document.documentElement.scrollTop || document.body.scrollTop,
	          scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft
	
	      nodel.html(content)
	        .style({ opacity: 1, 'pointer-events': 'all', 'z-index': 100 })
	
	      while(i--) nodel.classed(directions[i], false)
	      coords = direction_callbacks.get(dir).apply(this)
	      var rightEdge =  coords.left + poffset[1] + scrollLeft + nodel.property('offsetWidth');
	      var bottomEdge = coords.top +  poffset[0] + scrollTop + nodel.property('offsetHeight');
	      var overFlowRight = tipOverFlowRight(rightEdge);
	      var overFlowBottom = tipOverFlowBottom(bottomEdge);
	      var leftEdge = coords.left + poffset[1] + scrollLeft;
	      var overFlowLeft = tipOverFlowLeft(leftEdge);
	      var topEdge = coords.top + poffset[0] + scrollTop;
	
	      if(overFlowRight) leftEdge -= overFlowRight;
	      if(overFlowLeft) leftEdge += overFlowLeft;
	      if(overFlowBottom) topEdge -= overFlowBottom;
	
	      if(positionAnchor() === 'shape') {
	        nodel.classed(dir, true).style({
	          top: topEdge + 'px',
	          left: leftEdge + 'px'
	        });
	      }
	      else if(positionAnchor() === 'mouse') {
	        nodel.classed(dir, true);
	        tip.updatePosition(poffset);
	      }
	      
	      return tip
	    }
	
	    // Public - hide the tooltip
	    //
	    // Returns a tip
	    tip.hide = function() {
	      var nodel = d3.select(node)
	      nodel.style({ opacity: 0, 'pointer-events': 'none', 'z-index': -1 })
	      return tip
	    }
	
	    //Public - update position of tooltip based on mouse
	    //
	    // Returns a tip
	    tip.updatePosition = function(v) {
	      var nodel = d3.select(node);
	      var mouseX = d3.mouse(d3.select("html").node())[0] + 10;
	      var mouseY = d3.mouse(d3.select("html").node())[1] + 20;
	      var rightEdge = mouseX + nodel.property('offsetWidth');
	      var bottomEdge = mouseY + nodel.property('offsetHeight');
	      var overFlowRight = tipOverFlowRight(rightEdge);
	      var overFlowLeft = tipOverFlowLeft(mouseX);
	      var overFlowBottom = tipOverFlowBottom(bottomEdge);
	
	      if(v.length) {
	        mouseX += v[0];
	        mouseY += v[1];
	      }
	      if(overFlowRight) mouseX -= overFlowRight;
	      if(overFlowLeft) mouseX += overFlowLeft;
	      if(overFlowBottom) mouseY -= overFlowBottom;
	
	      nodel.style({
	        top: mouseY + 'px',
	        left: mouseX + 'px'
	      });
	      return tip;
	    };
	
	    function tipOverFlowRight(rightEdge) {
	      var windowWidth = window.outerWidth;
	      if(rightEdge > windowWidth)
	        return rightEdge - windowWidth;
	      else
	        return false;
	    }
	
	    function tipOverFlowLeft(leftEdge) {
	      var windowWidth = window.outerWidth;
	      if(leftEdge < 0)
	        return -(leftEdge);
	      else
	        return false;
	    }
	
	    function tipOverFlowBottom(bottomEdge) {
	      var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;
	      var windowHeight = window.innerHeight + scrollTop;
	      if(bottomEdge > windowHeight)
	        return bottomEdge - windowHeight;
	      else
	        return false;
	    }
	    // Public: Proxy attr calls to the d3 tip container.  Sets or gets attribute value.
	    //
	    // n - name of the attribute
	    // v - value of the attribute
	    //
	    // Returns tip or attribute value
	    tip.attr = function(n, v) {
	      if (arguments.length < 2 && typeof n === 'string') {
	        return d3.select(node).attr(n)
	      } else {
	        var args =  Array.prototype.slice.call(arguments)
	        d3.selection.prototype.attr.apply(d3.select(node), args)
	      }
	
	      return tip
	    }
	
	    // Public: Proxy style calls to the d3 tip container.  Sets or gets a style value.
	    //
	    // n - name of the property
	    // v - value of the property
	    //
	    // Returns tip or style property value
	    tip.style = function(n, v) {
	      if (arguments.length < 2 && typeof n === 'string') {
	        return d3.select(node).style(n)
	      } else {
	        var args =  Array.prototype.slice.call(arguments)
	        d3.selection.prototype.style.apply(d3.select(node), args)
	      }
	
	      return tip
	    }
	
	    // Public: Set or get the direction of the tooltip
	    //
	    // v - One of n(north), s(south), e(east), or w(west), nw(northwest),
	    //     sw(southwest), ne(northeast) or se(southeast)
	    //
	    // Returns tip or direction
	    tip.direction = function(v) {
	      if (!arguments.length) return direction
	      direction = v == null ? v : d3.functor(v)
	
	      return tip
	    }
	
	    // Public: Set or get the position anchor of the tool tip.
	    //
	    // v - either 'ordinal' - the default position that uses ordinal positioning
	    // or 'mouse' - to position the tool tip wherever the mouse goes on the selected node
	    //
	    // Returns tip or position
	    tip.positionAnchor = function(v) {
	      if (!arguments.length) return positionAnchor;
	      positionAnchor = v == null ? v : d3.functor(v);
	
	      return tip;
	    };
	
	    // Public: Sets or gets the offset of the tip
	    //
	    // v - Array of [x, y] offset
	    //
	    // Returns offset or
	    tip.offset = function(v) {
	      if (!arguments.length) return offset
	      offset = v == null ? v : d3.functor(v)
	
	      return tip
	    }
	
	    // Public: sets or gets the html value of the tooltip
	    //
	    // v - String value of the tip
	    //
	    // Returns html value or tip
	    tip.html = function(v) {
	      if (!arguments.length) return html
	      html = v == null ? v : d3.functor(v)
	
	      return tip
	    }
	
	    function d3_tip_direction() { return 'n' }
	    function d3_tip_offset() { return [0, 0] }
	    function d3_tip_html() { return ' ' }
	    function d3_tip_positionAnchor() { return 'shape';}
	
	    var direction_callbacks = d3.map({
	      n:  direction_n,
	      s:  direction_s,
	      e:  direction_e,
	      w:  direction_w,
	      nw: direction_nw,
	      ne: direction_ne,
	      sw: direction_sw,
	      se: direction_se
	    }),
	
	    directions = direction_callbacks.keys()
	
	    function direction_n() {
	      var bbox = getScreenBBox()
	      return {
	        top:  bbox.n.y - node.offsetHeight,
	        left: bbox.n.x - node.offsetWidth / 2
	      }
	    }
	
	    function direction_s() {
	      var bbox = getScreenBBox()
	      return {
	        top:  bbox.s.y,
	        left: bbox.s.x - node.offsetWidth / 2
	      }
	    }
	
	    function direction_e() {
	      var bbox = getScreenBBox()
	      return {
	        top:  bbox.e.y - node.offsetHeight / 2,
	        left: bbox.e.x
	      }
	    }
	
	    function direction_w() {
	      var bbox = getScreenBBox()
	      return {
	        top:  bbox.w.y - node.offsetHeight / 2,
	        left: bbox.w.x - node.offsetWidth
	      }
	    }
	
	    function direction_nw() {
	      var bbox = getScreenBBox()
	      return {
	        top:  bbox.nw.y - node.offsetHeight,
	        left: bbox.nw.x - node.offsetWidth
	      }
	    }
	
	    function direction_ne() {
	      var bbox = getScreenBBox()
	      return {
	        top:  bbox.ne.y - node.offsetHeight,
	        left: bbox.ne.x
	      }
	    }
	
	    function direction_sw() {
	      var bbox = getScreenBBox()
	      return {
	        top:  bbox.sw.y,
	        left: bbox.sw.x - node.offsetWidth
	      }
	    }
	
	    function direction_se() {
	      var bbox = getScreenBBox()
	      return {
	        top:  bbox.se.y,
	        left: bbox.e.x
	      }
	    }
	
	    function initNode() {
	      var node = d3.select(document.createElement('div'))
	      node.style({
	        position: 'absolute',
	        top: 0,
	        opacity: 0,
	        'pointer-events': 'none',
	        'box-sizing': 'border-box'
	      })
	
	      return node.node()
	    }
	
	    function getSVGNode(el) {
	      el = el.node()
	      if(el.tagName.toLowerCase() === 'svg')
	        return el
	
	      return el.ownerSVGElement
	    }
	
	    // Private - gets the screen coordinates of a shape
	    //
	    // Given a shape on the screen, will return an SVGPoint for the directions
	    // n(north), s(south), e(east), w(west), ne(northeast), se(southeast), nw(northwest),
	    // sw(southwest).
	    //
	    //    +-+-+
	    //    |   |
	    //    +   +
	    //    |   |
	    //    +-+-+
	    //
	    // Returns an Object {n, s, e, w, nw, sw, ne, se}
	    function getScreenBBox() {
	      var targetel   = target || d3.event.target;
	
	      while ('undefined' === typeof targetel.getScreenCTM && 'undefined' === targetel.parentNode) {
	          targetel = targetel.parentNode;
	      }
	
	      var bbox       = {},
	          matrix     = targetel.getScreenCTM(),
	          tbbox      = targetel.getBBox(),
	          width      = tbbox.width,
	          height     = tbbox.height,
	          x          = tbbox.x,
	          y          = tbbox.y
	
	      point.x = x
	      point.y = y
	      bbox.nw = point.matrixTransform(matrix)
	      point.x += width
	      bbox.ne = point.matrixTransform(matrix)
	      point.y += height
	      bbox.se = point.matrixTransform(matrix)
	      point.x -= width
	      bbox.sw = point.matrixTransform(matrix)
	      point.y -= height / 2
	      bbox.w  = point.matrixTransform(matrix)
	      point.x += width
	      bbox.e = point.matrixTransform(matrix)
	      point.x -= width / 2
	      point.y -= height / 2
	      bbox.n = point.matrixTransform(matrix)
	      point.y += height
	      bbox.s = point.matrixTransform(matrix)
	
	      return bbox
	    }
	
	    return tip
	  };
	  return d3.tip
	}));


/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(38);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(14)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./tool-tipsify.scss", function() {
				var newContent = require("!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./tool-tipsify.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(13)();
	// imports
	
	
	// module
	exports.push([module.id, ".d3-tip-mouse {\n  font-size: 13px;\n  line-height: 16px;\n  padding: 8px;\n  background: rgba(0, 0, 0, 0.8);\n  color: #fff;\n  border-radius: 2px;\n  pointer-events: none;\n  z-index: 100;\n  outline: none; }\n  .d3-tip-mouse label {\n    font-family: 'Abel', Helvetica, Arial, sans-serif;\n    font-weight: 400; }\n\n.d3-tip {\n  font-size: 13px;\n  line-height: 16px;\n  padding: 8px;\n  background: rgba(0, 0, 0, 0.8);\n  color: #fff;\n  border-radius: 2px;\n  pointer-events: none;\n  z-index: 100;\n  outline: none;\n  /* Creates a small triangle extender for the tooltip */\n  /* Northward tooltips */\n  /* Eastward tooltips */\n  /* Southward tooltips */\n  /* Westward tooltips */ }\n  .d3-tip label {\n    font-family: 'Abel', Helvetica, Arial, sans-serif;\n    font-weight: 400; }\n  .d3-tip:after {\n    box-sizing: border-box;\n    display: inline;\n    font-size: 10px;\n    width: 100%;\n    line-height: 1;\n    color: rgba(0, 0, 0, 0.8);\n    position: absolute;\n    pointer-events: none;\n    z-index: 100; }\n  .d3-tip.n:after {\n    content: \"\\25BC\";\n    top: auto;\n    bottom: -7px;\n    left: 0;\n    text-align: center; }\n  .d3-tip.ne:after {\n    content: \"\\25BC\";\n    top: auto;\n    bottom: -7px;\n    left: 0;\n    text-align: left;\n    padding-left: 8px; }\n  .d3-tip.nw:after {\n    content: \"\\25BC\";\n    top: auto;\n    bottom: -7px;\n    left: 0;\n    text-align: right;\n    padding-right: 8px; }\n  .d3-tip.e:after {\n    content: \"\\25C0\";\n    margin: -4px 0 0 0;\n    top: 50%;\n    left: -7px; }\n  .d3-tip.s:after {\n    content: \"\\25B2\";\n    margin: 0 0 1px 0;\n    top: -8px;\n    left: 0;\n    text-align: center; }\n  .d3-tip.w:after {\n    content: \"\\25B6\";\n    margin: -4px 0 0 -2px;\n    top: 50%;\n    left: 100%; }\n", ""]);
	
	// exports


/***/ },
/* 39 */
/***/ function(module, exports) {

	function loadDateFixture() {
	    var fixture = JSON.parse("[" +
	        "{\"id\":\"1\",\"value\":\"44\",\"nvalue\":\"-4\",\"countrycode\":\"US\",\"state\":\"California\",\"status\":\"T\",\"id\":1,\"region\":\"South\",\"date\":\"2012-05-25T16:10:09Z\"}, " +
	        "{\"id\":\"2\",\"value\":\"22\",\"nvalue\":\"-2\",\"countrycode\":\"US\",\"state\":\"Colorado\",\"status\":\"F\",\"id\":2,\"region\":\"West\",\"date\":\"2012-06-10T16:10:19Z\"}, " +
	        "{\"id\":\"3\",\"value\":\"33\",\"nvalue\":\"1\",\"countrycode\":\"US\",\"state\":\"Delaware\",\"status\":\"T\",\"id\":3,\"region\":\"West\",\"date\":\"2012-08-10T16:20:29Z\"}, " +
	        "{\"id\":\"4\",\"value\":\"44\",\"nvalue\":\"-3\",\"countrycode\":\"US\",\"state\":\"California\",\"status\":\"F\",\"id\":4,\"region\":\"South\",\"date\":\"2012-07-01T16:10:39Z\"}, " +
	        "{\"id\":\"5\",\"value\":\"55\",\"nvalue\":\"-5\",\"countrycode\":\"CA\",\"state\":\"Ontario\",\"status\":\"T\",\"id\":5,\"region\":\"Central\",\"date\":\"2012-06-10T16:10:49Z\"}, " +
	        "{\"id\":\"6\",\"value\":\"66\",\"nvalue\":\"-4\",\"countrycode\":\"US\",\"state\":\"California\",\"status\":\"F\",\"id\":6,\"region\":\"West\",\"date\":\"2012-06-08T16:10:59Z\"}, " +
	        "{\"id\":\"7\",\"value\":\"22\",\"nvalue\":\"10\",\"countrycode\":\"CA\",\"state\":\"Ontario\",\"status\":\"T\",\"id\":7,\"region\":\"East\",\"date\":\"2012-07-10T16:10:09Z\"}, " +
	        "{\"id\":\"8\",\"value\":\"33\",\"nvalue\":\"1\",\"countrycode\":\"US\",\"state\":\"Mississippi\",\"status\":\"F\",\"id\":8,\"region\":\"Central\",\"date\":\"2012-07-10T16:10:19Z\"}, " +
	        "{\"id\":\"9\",\"value\":\"44\",\"nvalue\":\"2\",\"countrycode\":\"US\",\"state\":\"Mississippi\",\"status\":\"T\",\"id\":9,\"region\":\"Central\",\"date\":\"2012-08-10T16:30:29Z\"}, " +
	        "{\"id\":\"10\",\"value\":\"55\",\"nvalue\":\"-3\",\"countrycode\":\"US\",\"state\":\"Oklahoma\",\"status\":\"F\",\"id\":10,\"region\":\"\",\"date\":\"2012-06-10T16:10:39Z\"}" +
	        "]");
	
	    fixture.forEach(dateCleaner);
	    return fixture;
	}
	
	function loadForeignAidFixture() {
	    var fixture = [{"country_id":"376","country_code":"ISR","country_name":"Israel","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"16","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"156451","activity_name":"DOD - Foreign Military Financing (FMF) Program, Payment Waived","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"2943233720"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"8","funding_agency_name":"Department of the Army","funding_agency_acronym":"ARMY","activity_id":"21571","activity_name":"Afghanistan Security Force Fund","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"1736000000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"4","implementing_agency_acronym":"TREAS","implementing_agency_name":"Department of the Treasury","implementing_subagency_id":"999","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"13","channel_subcategory_name":"Multilateral - World Bank Group","channel_id":"4000219","channel_name":"International Development Association","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"998","dac_sector_name":"Unallocated/ Unspecified","dac_purpose_code":"99810","dac_purpose_name":"Sectors not specified","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"28","funding_agency_name":"Executive Office of the President","funding_agency_acronym":"EOP","activity_id":"26859","activity_name":"World Bank, International Development Association (IDA) - Deposit Basis","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"1351017936"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"25","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"18","channel_subcategory_name":"Multilateral - Other","channel_id":"4000158","channel_name":"Global Fund to Fight AIDS, Tuberculosis and Malaria","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"110433","activity_name":"Contribution to the Global Fund to Fight AIDS, Tuberculosis and Malaria (GFATM)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"1245584354"},{"country_id":"818","country_code":"EGY","country_name":"Egypt","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"16","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"156451","activity_name":"DOD - Foreign Military Financing (FMF) Program, Payment Waived","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"1234259302"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"25","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4001519","channel_name":"Partnership for Supply Chain Management","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"123066","activity_name":"Supply Chain Management System (SCMS) - Task Order 3","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"580426921"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"85","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"6","funding_agency_name":"Department of Health and Human Services","funding_agency_acronym":"HHS","activity_id":"31992","activity_name":"National Institute of Health - International Research","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"392052000"},{"country_id":"400","country_code":"JOR","country_name":"Jordan","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000072","channel_name":"Government of Jordan","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"510","dac_sector_name":"General Budget Support","dac_purpose_code":"51010","dac_purpose_name":"General budget support","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"1","aid_type_group_name":"Budget support","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"114000","activity_name":"Cash Transfer","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"384000000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"6","funding_agency_name":"Department of Health and Human Services","funding_agency_acronym":"HHS","activity_id":"31979","activity_name":"HHS, Center for Disease Control HIV/AIDs Activities - International Research","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"369546000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"62","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"58674","activity_name":"International Narcotics & Law Enforcement: Overseas Contingency Operations","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"318697037"},{"country_id":"400","country_code":"JOR","country_name":"Jordan","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"16","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"156451","activity_name":"DOD - Foreign Military Financing (FMF) Program, Payment Waived","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"284829070"},{"country_id":"360","country_code":"IDN","country_name":"Indonesia","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"430","dac_sector_name":"Other Multisector","dac_purpose_code":"43040","dac_purpose_name":"Rural development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39121","activity_name":"MCC Green Prosperity Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"242000000"},{"country_id":"484","country_code":"MEX","country_name":"Mexico","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"62","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"58627","activity_name":"International Narcotics & Law Enforcement: Country Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"227229563"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"4","implementing_agency_acronym":"TREAS","implementing_agency_name":"Department of the Treasury","implementing_subagency_id":"999","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"13","channel_subcategory_name":"Multilateral - World Bank Group","channel_id":"4002666","channel_name":"Clean Technology Fund","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"998","dac_sector_name":"Unallocated/ Unspecified","dac_purpose_code":"99810","dac_purpose_name":"Sectors not specified","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"4","funding_agency_name":"Department of the Treasury","funding_agency_acronym":"TREAS","activity_id":"26867","activity_name":"IBRD/Clean Technology Fund (CTF) - Deposit Basis","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"220282921"},{"country_id":"275","country_code":"PSE","country_name":"West Bank/Gaza","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000153","channel_name":"Government of West Bank/Gaza","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"160","dac_sector_name":"Other Social Infrastructure and Services","dac_purpose_code":"16010","dac_purpose_name":"Social/ welfare services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"1","aid_type_group_name":"Budget support","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128584","activity_name":"Cash Transfer","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"200000000"},{"country_id":"818","country_code":"EGY","country_name":"Egypt","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000046","channel_name":"Government of Egypt","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"510","dac_sector_name":"General Budget Support","dac_purpose_code":"51010","dac_purpose_name":"General budget support","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"1","aid_type_group_name":"Budget support","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128586","activity_name":"Cash Transfer","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"190000000"},{"country_id":"643","country_code":"RUS","country_name":"Russia","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"13","implementing_agency_acronym":"DOE","implementing_agency_name":"Department of Energy","implementing_subagency_id":"36","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000016","channel_name":"U.S. Government - Department of Energy","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"13","funding_agency_name":"Department of Energy","funding_agency_acronym":"DOE","activity_id":"21280","activity_name":"Department of Energy, International Materials Protection & Cooperation","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"183284000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"17","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23010","dac_purpose_name":"Energy policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"4","aid_type_group_name":"Technical Assistance","funding_agency_id":"8","funding_agency_name":"Department of the Army","funding_agency_acronym":"ARMY","activity_id":"156698","activity_name":"Afghanistan Infrastructure Fund (AIF): Infrastructure (Power)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"181361302"},{"country_id":"643","country_code":"RUS","country_name":"Russia","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"13","implementing_agency_acronym":"DOE","implementing_agency_name":"Department of Energy","implementing_subagency_id":"36","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000016","channel_name":"U.S. Government - Department of Energy","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"13","funding_agency_name":"Department of Energy","funding_agency_acronym":"DOE","activity_id":"21147","activity_name":"Department of Energy, International Nuclear Materials Protection, Control & Accounting (MPC&A) (formerly International Nuclear Materials Protection & Cooperation)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"180567396"},{"country_id":"404","country_code":"KEN","country_name":"Kenya","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32040","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"180305545"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"17","channel_subcategory_name":"Multilateral - Regional Development Banks","channel_id":"4000736","channel_name":"Asian Development Bank - Other","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23010","dac_purpose_name":"Energy policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129716","activity_name":"USAID contribution to Afghanistan Infrastructure Trust Fund (AITF)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"180300000"},{"country_id":"706","country_code":"SOM","country_name":"Somalia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"66","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"60851","activity_name":"Department of State - Peacekeeping Operations: Somalia - African Union Mission in Somalia (AMISOM) - UN Assessments","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"179180000"},{"country_id":"800","country_code":"UGA","country_name":"Uganda","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32040","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"171560861"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"13","channel_subcategory_name":"Multilateral - World Bank Group","channel_id":"4003810","channel_name":"World Bank Group","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"126539","activity_name":"Afghanistan Reconstruction Trust Fund (ARTF) II","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"168585500"},{"country_id":"710","country_code":"ZAF","country_name":"South Africa","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32040","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"164703241"},{"country_id":"1033","country_code":"SSA","country_name":"Sub-Saharan Africa Region","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"4","implementing_agency_acronym":"TREAS","implementing_agency_name":"Department of the Treasury","implementing_subagency_id":"999","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"17","channel_subcategory_name":"Multilateral - Regional Development Banks","channel_id":"4000010","channel_name":"African Development Fund","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"998","dac_sector_name":"Unallocated/ Unspecified","dac_purpose_code":"99810","dac_purpose_name":"Sectors not specified","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"28","funding_agency_name":"Executive Office of the President","funding_agency_acronym":"EOP","activity_id":"26824","activity_name":"African Development Fund (AfDF) - Deposit Basis","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"163449408"},{"country_id":"454","country_code":"MWI","country_name":"Malawi","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23040","dac_purpose_name":"Electrical transmission/ distribution","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39279","activity_name":"MCC Power Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"160155202"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"4","implementing_agency_acronym":"TREAS","implementing_agency_name":"Department of the Treasury","implementing_subagency_id":"999","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"18","channel_subcategory_name":"Multilateral - Other","channel_id":"4000156","channel_name":"Global Environment Facility","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"998","dac_sector_name":"Unallocated/ Unspecified","dac_purpose_code":"99810","dac_purpose_name":"Sectors not specified","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"28","funding_agency_name":"Executive Office of the President","funding_agency_acronym":"EOP","activity_id":"26865","activity_name":"Global Environment Facility - Deposit Basis","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"154840107"},{"country_id":"566","country_code":"NGA","country_name":"Nigeria","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32040","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"148042494"},{"country_id":"275","country_code":"PSE","country_name":"West Bank/Gaza","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000153","channel_name":"Government of West Bank/Gaza","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"160","dac_sector_name":"Other Social Infrastructure and Services","dac_purpose_code":"16010","dac_purpose_name":"Social/ welfare services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"1","aid_type_group_name":"Budget support","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128585","activity_name":"Cash Transfer","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"148000000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"4","implementing_agency_acronym":"TREAS","implementing_agency_name":"Department of the Treasury","implementing_subagency_id":"999","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"13","channel_subcategory_name":"Multilateral - World Bank Group","channel_id":"4002667","channel_name":"Global Agriculture and Food Security Program","dac_category_id":"8","dac_category_name":"Commodity Assistance","dac_sector_code":"520","dac_sector_name":"Developmental Food Aid/Food Security Assistance","dac_purpose_code":"52010","dac_purpose_name":"Food aid/Food security programmes","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"4","funding_agency_name":"Department of the Treasury","funding_agency_acronym":"TREAS","activity_id":"26869","activity_name":"IBRD/Global Agriculture and Food Security Program (GAFSP)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"142765490"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"18","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"16192","activity_name":"Cooperative Threat Reduction Program: Cooperative Threat Reduction (CTR) Multiple Programs [non-ODA]","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"142514000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"15","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"160","dac_sector_name":"Other Social Infrastructure and Services","dac_purpose_code":"16063","dac_purpose_name":"Narcotics control","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"4","aid_type_group_name":"Technical Assistance","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"16168","activity_name":"In-Country Counternarcotics Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"140489000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000001","channel_name":"Government of Afghanistan","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23010","dac_purpose_name":"Energy policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129423","activity_name":"Power Transmission Expansion and Connectivity (PTEC)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"140000000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"25","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"18","channel_subcategory_name":"Multilateral - Other","channel_id":"4000152","channel_name":"Global Alliance for Vaccines and Immunization","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12250","dac_purpose_name":"Infectious disease control","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"123762","activity_name":"Contributions to Global Alliance for Vaccines and Immunization (GAVI)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"137978655"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"82","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"94480","activity_name":"Administrative costs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"127910072"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"63","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000421","channel_name":"United Nations Children's Fund","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"57145","activity_name":"Contributions to United Nations Children's Fund","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"125168000"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128275","activity_name":"WFP Syria Emergency Food Security Program (EFSP) Award","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"124600000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"4","implementing_agency_acronym":"TREAS","implementing_agency_name":"Department of the Treasury","implementing_subagency_id":"999","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"13","channel_subcategory_name":"Multilateral - World Bank Group","channel_id":"4000193","channel_name":"International Bank for Reconstruction and Development","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"998","dac_sector_name":"Unallocated/ Unspecified","dac_purpose_code":"99810","dac_purpose_name":"Sectors not specified","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"28","funding_agency_name":"Executive Office of the President","funding_agency_acronym":"EOP","activity_id":"26876","activity_name":"International Bank for Reconstruction and Development - Deposit Basis","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"123620485"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000001","channel_name":"Government of Afghanistan","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23010","dac_purpose_name":"Energy policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128894","activity_name":"Funds for Da Afghanistan Breshna Sherkaat (DABS)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"123300000"},{"country_id":"400","country_code":"JOR","country_name":"Jordan","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128178","activity_name":"Title II - WFP Syrian Regional Response","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"118700000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32062","activity_name":"President's Emergency Plan for AIDS Relief - Technical Leadership and Support: Technical Leadership & Support","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"111191781"},{"country_id":"1021","country_code":"LAC","country_name":"Latin America and Caribbean Region","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"4","implementing_agency_acronym":"TREAS","implementing_agency_name":"Department of the Treasury","implementing_subagency_id":"999","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"17","channel_subcategory_name":"Multilateral - Regional Development Banks","channel_id":"4000177","channel_name":"Inter-American Development Fund for Special Operations","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"998","dac_sector_name":"Unallocated/ Unspecified","dac_purpose_code":"99810","dac_purpose_name":"Sectors not specified","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"28","funding_agency_name":"Executive Office of the President","funding_agency_acronym":"EOP","activity_id":"26842","activity_name":"Inter-American Development Bank (IDB), Fund for Special Operations (FSO) - Deposit Basis","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"107109552"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39246","activity_name":"MCC NA","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"102568477"},{"country_id":"1006","country_code":"WLD","country_name":"Asia Region","region_id":"7","region_name":"World","implementing_agency_id":"4","implementing_agency_acronym":"TREAS","implementing_agency_name":"Department of the Treasury","implementing_subagency_id":"999","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"17","channel_subcategory_name":"Multilateral - Regional Development Banks","channel_id":"4000032","channel_name":"Asian Development Bank Ordinary Capital","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"998","dac_sector_name":"Unallocated/ Unspecified","dac_purpose_code":"99810","dac_purpose_name":"Sectors not specified","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"28","funding_agency_name":"Executive Office of the President","funding_agency_acronym":"EOP","activity_id":"26881","activity_name":"Asian Development Bank (ADB) - Deposit Basis","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"101189977"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"6","funding_agency_name":"Department of Health and Human Services","funding_agency_acronym":"HHS","activity_id":"31978","activity_name":"HHS, Center for Disease Control HIV/AIDs Activities - International Partners: Global Fund","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"99200000"},{"country_id":"508","country_code":"MOZ","country_name":"Mozambique","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32040","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"96153499"},{"country_id":"1023","country_code":"MNA","country_name":"Middle East and North Africa Region","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"56","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"156793","activity_name":"Bureau of Near Eastern Affairs(NEA) - Multi-Sector - Unspecified","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"93522768"},{"country_id":"275","country_code":"PSE","country_name":"West Bank/Gaza","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"62","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"58627","activity_name":"International Narcotics & Law Enforcement: Country Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"92571161"},{"country_id":"834","country_code":"TZA","country_name":"Tanzania","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32040","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"92133265"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"64","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000192","channel_name":"International Atomic Energy Agency - Technical Cooperation Fund","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"998","dac_sector_name":"Unallocated/ Unspecified","dac_purpose_code":"99810","dac_purpose_name":"Sectors not specified","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"59931","activity_name":"U.S. Department of State: Voluntary Contributions to the International Atomic Energy Agency (IAEA)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"90035000"},{"country_id":"566","country_code":"NGA","country_name":"Nigeria","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000131","channel_name":"FHI 360","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"126194","activity_name":"Strengthening Integrated Delivery of HIV/AIDS Services (SIDHAS)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"81949777"},{"country_id":"360","country_code":"IDN","country_name":"Indonesia","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"160","dac_sector_name":"Other Social Infrastructure and Services","dac_purpose_code":"16050","dac_purpose_name":"Multisector aid for basic social services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39026","activity_name":"MCC Community Nutrition Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"81648000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"18","channel_subcategory_name":"Multilateral - Other","channel_id":"4000256","channel_name":"International Organisation for Migration","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71747","activity_name":"Transport Staff and Office and Movement Costs Worldwide","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"81202930"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"63","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000428","channel_name":"United Nations Development Programme","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"160","dac_sector_name":"Other Social Infrastructure and Services","dac_purpose_code":"16050","dac_purpose_name":"Multisector aid for basic social services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"57154","activity_name":"Contributions to United Nations Development Programme","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"78523000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32068","activity_name":"President's Emergency Plan for AIDS Relief - Technical Oversight & Management","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"78000832"},{"country_id":"332","country_code":"HTI","country_name":"Haiti","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32040","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"75970935"},{"country_id":"275","country_code":"PSE","country_name":"West Bank/Gaza","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000465","channel_name":"United Nations Relief and Works Agency","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71762","activity_name":"UNWRA's 2013 Emergency Appeal for The West Bank and Gaza","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"75000000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"66","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"60841","activity_name":"Department of State - Peacekeeping Operations: Global Peace Operations Initiative (GPOI)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"75000000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000001","channel_name":"Government of Afghanistan","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23010","dac_purpose_name":"Energy policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129149","activity_name":"Kajaki Dam Unit 2 - Da Afghanistan Breshna Sherkaat (DABS)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"75000000"},{"country_id":"804","country_code":"UKR","country_name":"Ukraine","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"13","implementing_agency_acronym":"DOE","implementing_agency_name":"Department of Energy","implementing_subagency_id":"36","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000016","channel_name":"U.S. Government - Department of Energy","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23064","dac_purpose_name":"Nuclear power plants","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"13","funding_agency_name":"Department of Energy","funding_agency_acronym":"DOE","activity_id":"21317","activity_name":"Department of Energy, Office of Global Nuclear Material Threat Reduction (NA-212)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"74798238"},{"country_id":"1006","country_code":"WLD","country_name":"Asia Region","region_id":"7","region_name":"World","implementing_agency_id":"4","implementing_agency_acronym":"TREAS","implementing_agency_name":"Department of the Treasury","implementing_subagency_id":"999","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"17","channel_subcategory_name":"Multilateral - Regional Development Banks","channel_id":"4000033","channel_name":"Asian Development Fund","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"998","dac_sector_name":"Unallocated/ Unspecified","dac_purpose_code":"99810","dac_purpose_name":"Sectors not specified","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"28","funding_agency_name":"Executive Office of the President","funding_agency_acronym":"EOP","activity_id":"26863","activity_name":"Asian Development Fund - Deposit Basis","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"73300000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"63","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000426","channel_name":"United Nations Entity for Gender Equality and the Empowerment of Women","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15170","dac_purpose_name":"Women’s equality organisations and institutions","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"57152","activity_name":"Contributions to United Nations Development Fund for Women","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"72500000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"16","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"156451","activity_name":"DOD - Foreign Military Financing (FMF) Program, Payment Waived","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"72385511"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"4","implementing_agency_acronym":"TREAS","implementing_agency_name":"Department of the Treasury","implementing_subagency_id":"999","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"13","channel_subcategory_name":"Multilateral - World Bank Group","channel_id":"4010223","channel_name":"Strategic Climate Fund","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"998","dac_sector_name":"Unallocated/ Unspecified","dac_purpose_code":"99810","dac_purpose_name":"Sectors not specified","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"4","funding_agency_name":"Department of the Treasury","funding_agency_acronym":"TREAS","activity_id":"26883","activity_name":"IBRD/Strategic Climate Fund - Deposit Basis","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"72373763"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"82","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000002","channel_name":"U.S. Government - Department of Agriculture","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"94476","activity_name":"Administrative costs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"72251968"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000107","channel_name":"Government of Pakistan","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23010","dac_purpose_name":"Energy policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129253","activity_name":"Mangla Dam Rehabilitation Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"72000000"},{"country_id":"422","country_code":"LBN","country_name":"Lebanon","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"16","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"156451","activity_name":"DOD - Foreign Military Financing (FMF) Program, Payment Waived","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"71207267"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"27","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000002","channel_name":"U.S. Government - Department of Agriculture","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"94476","activity_name":"Administrative costs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"70858372"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000465","channel_name":"United Nations Relief and Works Agency","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70968","activity_name":"Contribution To UNWRA General Fund","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"70000000"},{"country_id":"422","country_code":"LBN","country_name":"Lebanon","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71000","activity_name":"Contribution To United Nations High Commissioner for Refugees (UNHCR) Needs Defined in The Syria Regional Response Plan 5 - Lebanon","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"67000000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"4","implementing_agency_acronym":"TREAS","implementing_agency_name":"Department of the Treasury","implementing_subagency_id":"999","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000231","channel_name":"International Fund for Agricultural Development","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"998","dac_sector_name":"Unallocated/ Unspecified","dac_purpose_code":"99810","dac_purpose_name":"Sectors not specified","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"28","funding_agency_name":"Executive Office of the President","funding_agency_acronym":"EOP","activity_id":"26853","activity_name":"International Fund for Agricultural Development - Deposit Basis","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"66204188"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000002","channel_name":"U.S. Government - Department of Agriculture","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"94476","activity_name":"Administrative costs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"66147505"},{"country_id":"484","country_code":"MEX","country_name":"Mexico","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"15","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"160","dac_sector_name":"Other Social Infrastructure and Services","dac_purpose_code":"16063","dac_purpose_name":"Narcotics control","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"4","aid_type_group_name":"Technical Assistance","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"16172","activity_name":"In-Country Counternarcotics Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"63328000"},{"country_id":"454","country_code":"MWI","country_name":"Malawi","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23040","dac_purpose_name":"Electrical transmission/ distribution","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39274","activity_name":"MCC Power Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"62887108"},{"country_id":"170","country_code":"COL","country_name":"Colombia","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"15","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"160","dac_sector_name":"Other Social Infrastructure and Services","dac_purpose_code":"16063","dac_purpose_name":"Narcotics control","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"4","aid_type_group_name":"Technical Assistance","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"16176","activity_name":"In-Country Counternarcotics Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"60056000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000465","channel_name":"United Nations Relief and Works Agency","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71759","activity_name":"UNWRA 2013 General Fund","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"60000000"},{"country_id":"818","country_code":"EGY","country_name":"Egypt","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4010022","channel_name":"Egyptian-American Enterprise Fund","dac_category_id":"5","dac_category_name":"Economic Growth","dac_sector_code":"240","dac_sector_name":"Banking and Financial Services","dac_purpose_code":"24010","dac_purpose_name":"Financial policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128805","activity_name":"Egyptian-American Enterprise Fund","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"60000000"},{"country_id":"583","country_code":"FSM","country_name":"Micronesia (Federated States)","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"9","implementing_agency_acronym":"DOI","implementing_agency_name":"Department of the Interior","implementing_subagency_id":"41","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000095","channel_name":"Government of Micronesia (Federated States)","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"510","dac_sector_name":"General Budget Support","dac_purpose_code":"51010","dac_purpose_name":"General budget support","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"1","aid_type_group_name":"Budget support","funding_agency_id":"9","funding_agency_name":"Department of the Interior","funding_agency_acronym":"DOI","activity_id":"34777","activity_name":"Compacts of Free Association, Sector Grants: Program Support - Unspecified.","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"58620820"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000001","channel_name":"U.S. Government - U.S. Agency for International Development","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"94473","activity_name":"Administrative costs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"58199672"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32002","activity_name":"President's Emergency Plan for AIDS Relief - Central Programs: ART","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"56787854"},{"country_id":"894","country_code":"ZMB","country_name":"Zambia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32040","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"55208411"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000428","channel_name":"United Nations Development Programme","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15151","dac_purpose_name":"Elections","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"114656","activity_name":"Elections and Political Processes","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"55000000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"62","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"58616","activity_name":"International Narcotics & Law Enforcement: Anti-Crime Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"53751916"},{"country_id":"360","country_code":"IDN","country_name":"Indonesia","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"430","dac_sector_name":"Other Multisector","dac_purpose_code":"43040","dac_purpose_name":"Rural development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39123","activity_name":"MCC Green Prosperity Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"50800000"},{"country_id":"384","country_code":"CIV","country_name":"Cote d'Ivoire","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32040","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"50732268"},{"country_id":"231","country_code":"ETH","country_name":"Ethiopia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153146","activity_name":"Commodity Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"50607500"},{"country_id":"368","country_code":"IRQ","country_name":"Iraq","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71568","activity_name":"Second Contribution Towards United Nations High Commissioner for Refugees (UNHCR)'s Iraqis (Gna) Annual Budget Activities","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"50340000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"13","channel_subcategory_name":"Multilateral - World Bank Group","channel_id":"4003810","channel_name":"World Bank Group","dac_category_id":"1","dac_category_name":"Education","dac_sector_code":"112","dac_sector_name":"Basic Education","dac_purpose_code":"11220","dac_purpose_name":"Primary education","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"126539","activity_name":"Afghanistan Reconstruction Trust Fund (ARTF) II","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"50000000"},{"country_id":"275","country_code":"PSE","country_name":"West Bank/Gaza","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"62","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"58616","activity_name":"International Narcotics & Law Enforcement: Anti-Crime Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"49933655"},{"country_id":"360","country_code":"IDN","country_name":"Indonesia","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39327","activity_name":"MCC Program Administration and Control","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"49741112"},{"country_id":"398","country_code":"KAZ","country_name":"Kazakhstan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"13","implementing_agency_acronym":"DOE","implementing_agency_name":"Department of Energy","implementing_subagency_id":"36","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000016","channel_name":"U.S. Government - Department of Energy","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23064","dac_purpose_name":"Nuclear power plants","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"13","funding_agency_name":"Department of Energy","funding_agency_acronym":"DOE","activity_id":"21317","activity_name":"Department of Energy, Office of Global Nuclear Material Threat Reduction (NA-212)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"48792903"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4000669","channel_name":"Chemonics International, Inc.","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15220","dac_purpose_name":"Civilian peace-building, conflict prevention and resolution","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129656","activity_name":"Syria Regional Program - New Task Order","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"48771414"},{"country_id":"1033","country_code":"SSA","country_name":"Sub-Saharan Africa Region","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71607","activity_name":"Second Tranche Contribution Towards United Nations High Commissioner for Refugees (UNHCR)'s Africa Annual Budget Activities - Unearmarked","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"48000000"},{"country_id":"398","country_code":"KAZ","country_name":"Kazakhstan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"18","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"430","dac_sector_name":"Other Multisector","dac_purpose_code":"43082","dac_purpose_name":"Research/scientific institutions","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"16191","activity_name":"Cooperative Threat Reduction Program: Cooperative Biological Engagement/Proliferation Prevention [non-ODA]","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"46988000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4001528","channel_name":"AECOM Technology Corporation","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15220","dac_purpose_name":"Civilian peace-building, conflict prevention and resolution","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"126176","activity_name":"Stabilization in Key Areas (SIKA) - East","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"46134275"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"38","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000001","channel_name":"U.S. Government - U.S. Agency for International Development","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"156244","activity_name":"Payment to the Foreign Service Retirement and Disability Fund","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"45000000"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000107","channel_name":"Government of Pakistan","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23010","dac_purpose_name":"Energy policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129147","activity_name":"KURRAM-TANGI Dam related infrastructure","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"44800000"},{"country_id":"360","country_code":"IDN","country_name":"Indonesia","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39298","activity_name":"MCC Procurement Modernization Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"44637000"},{"country_id":"368","country_code":"IRQ","country_name":"Iraq","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71720","activity_name":"Third Tranche Contribution Towards United Nations High Commissioner for Refugees (UNHCR)'s Iraqis (Gna) Annual Budget Activities","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"44500000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71558","activity_name":"Second Contribution Towards United Nations High Commissioner for Refugees (UNHCR)'s Afghans Annual Budget Activities","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"44280000"},{"country_id":"584","country_code":"MHL","country_name":"Marshall Islands","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"9","implementing_agency_acronym":"DOI","implementing_agency_name":"Department of the Interior","implementing_subagency_id":"41","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000091","channel_name":"Government of Marshall Islands","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"510","dac_sector_name":"General Budget Support","dac_purpose_code":"51010","dac_purpose_name":"General budget support","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"1","aid_type_group_name":"Budget support","funding_agency_id":"9","funding_agency_name":"Department of the Interior","funding_agency_acronym":"DOI","activity_id":"34739","activity_name":"Compacts of Free Association, Sector Grants: Program Support - Unspecified.","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"43529120"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128178","activity_name":"Title II - WFP Syrian Regional Response","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"43400000"},{"country_id":"1007","country_code":"LAC","country_name":"Central America Region","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"62","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"58627","activity_name":"International Narcotics & Law Enforcement: Country Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"42687174"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000502","channel_name":"World Health Organisation","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12250","dac_purpose_name":"Infectious disease control","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"6","funding_agency_name":"Department of Health and Human Services","funding_agency_acronym":"HHS","activity_id":"28376","activity_name":"CDC: Global Health Programs (Polio Eradication)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"41898250"},{"country_id":"231","country_code":"ETH","country_name":"Ethiopia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32040","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"41868230"},{"country_id":"736","country_code":"SDN","country_name":"Sudan (former)","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153224","activity_name":"ITSH Freight Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"41777800"},{"country_id":"400","country_code":"JOR","country_name":"Jordan","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"18","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23064","dac_purpose_name":"Nuclear power plants","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"16215","activity_name":"Cooperative Threat Reduction Program: Proliferation Prevention [non-ODA]","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"41385000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"72","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"4","aid_type_group_name":"Technical Assistance","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"55284","activity_name":"Anti-Terrorism Assistance Training","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"40975357"},{"country_id":"728","country_code":"SSD","country_name":"South Sudan","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153226","activity_name":"ITSH Freight Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"40914200"},{"country_id":"268","country_code":"GEO","country_name":"Georgia","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"18","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"430","dac_sector_name":"Other Multisector","dac_purpose_code":"43082","dac_purpose_name":"Research/scientific institutions","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"16189","activity_name":"Cooperative Threat Reduction Program: Cooperative Biological Engagement [non-ODA]","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"40745000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"85","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32062","activity_name":"President's Emergency Plan for AIDS Relief - Technical Leadership and Support: Technical Leadership & Support","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"40509982"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"62","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"58627","activity_name":"International Narcotics & Law Enforcement: Country Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"40198559"},{"country_id":"788","country_code":"TUN","country_name":"Tunisia","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000001","channel_name":"U.S. Government - U.S. Agency for International Development","dac_category_id":"5","dac_category_name":"Economic Growth","dac_sector_code":"240","dac_sector_name":"Banking and Financial Services","dac_purpose_code":"24010","dac_purpose_name":"Financial policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128929","activity_name":"Grant to the Tunisian-American Enterprise Fund","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"40000000"},{"country_id":"404","country_code":"KEN","country_name":"Kenya","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153135","activity_name":"Commodity Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"39974000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"82","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4009171","channel_name":"International Business Machines Corp.","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"127352","activity_name":"IT and Telecommunications Network Management","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"38738584"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"59","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"3990001","channel_name":"NGO - United States Other","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15150","dac_purpose_name":"Democratic participation and civil society","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"56091","activity_name":"Democracy, Human Rights and Labor Program - Unspecified Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"38672373"},{"country_id":"368","country_code":"IRQ","country_name":"Iraq","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"16","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"156451","activity_name":"DOD - Foreign Military Financing (FMF) Program, Payment Waived","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"37290771"},{"country_id":"404","country_code":"KEN","country_name":"Kenya","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"18","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"430","dac_sector_name":"Other Multisector","dac_purpose_code":"43082","dac_purpose_name":"Research/scientific institutions","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"16189","activity_name":"Cooperative Threat Reduction Program: Cooperative Biological Engagement [non-ODA]","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"35345000"},{"country_id":"710","country_code":"ZAF","country_name":"South Africa","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"20","channel_subcategory_name":"Enterprises - Non United States","channel_id":"4008781","channel_name":"CJI Cornerstone Projects (Pty) Ltd","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"126525","activity_name":"Administrative costs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"35026972"},{"country_id":"360","country_code":"IDN","country_name":"Indonesia","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12240","dac_purpose_name":"Basic nutrition","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39027","activity_name":"MCC Community Nutrition Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"34931011"},{"country_id":"1020","country_code":"LAC","country_name":"Latin America Region","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"4","implementing_agency_acronym":"TREAS","implementing_agency_name":"Department of the Treasury","implementing_subagency_id":"999","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"17","channel_subcategory_name":"Multilateral - Regional Development Banks","channel_id":"4000549","channel_name":"Enterprises for the Americas, Multilateral Investment Fund","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"998","dac_sector_name":"Unallocated/ Unspecified","dac_purpose_code":"99810","dac_purpose_name":"Sectors not specified","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"28","funding_agency_name":"Executive Office of the President","funding_agency_acronym":"EOP","activity_id":"26830","activity_name":"Enterprises for the Americas Multilateral Investment Fund - Deposit Basis","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"34731700"},{"country_id":"643","country_code":"RUS","country_name":"Russia","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"13","implementing_agency_acronym":"DOE","implementing_agency_name":"Department of Energy","implementing_subagency_id":"36","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000016","channel_name":"U.S. Government - Department of Energy","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23064","dac_purpose_name":"Nuclear power plants","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"13","funding_agency_name":"Department of Energy","funding_agency_acronym":"DOE","activity_id":"21309","activity_name":"Department of Energy, Office of Global Nuclear Material Threat Reduction (NA-212)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"34514822"},{"country_id":"368","country_code":"IRQ","country_name":"Iraq","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70998","activity_name":"Contribution To United Nations High Commissioner for Refugees (UNHCR) Needs Defined in The Syria Regional Response Plan 5 - Iraq","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"34500000"},{"country_id":"368","country_code":"IRQ","country_name":"Iraq","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000317","channel_name":"Mercy Corps","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15150","dac_purpose_name":"Democratic participation and civil society","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"126729","activity_name":"Broadening Participation through Civil Society (BPCS)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"34000000"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"6","channel_subcategory_name":"NGO - International","channel_id":"4000247","channel_name":"International Medical Corps","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128979","activity_name":"Health, WASH, Protection, Logs, Nutrition in Syria.","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"33994800"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153128","activity_name":"Commodity Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"33687200"},{"country_id":"400","country_code":"JOR","country_name":"Jordan","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70999","activity_name":"Contribution To United Nations High Commissioner for Refugees (UNHCR) Needs Defined in The Syria Regional Response Plan 5 - Jordan","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"33500000"},{"country_id":"404","country_code":"KEN","country_name":"Kenya","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71612","activity_name":"Second Tranche Contribution Towards United Nations High Commissioner for Refugees (UNHCR)s Africa Annual Budget Activities  Kenya","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"33200000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"82","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"3990008","channel_name":"Enterprise - United States Other","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"94541","activity_name":"Administrative costs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"33187236"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"61193","activity_name":"Administrative Expenses","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"33105467"},{"country_id":"72","country_code":"BWA","country_name":"Botswana","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32040","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"32841193"},{"country_id":"804","country_code":"UKR","country_name":"Ukraine","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"18","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"430","dac_sector_name":"Other Multisector","dac_purpose_code":"43082","dac_purpose_name":"Research/scientific institutions","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"16191","activity_name":"Cooperative Threat Reduction Program: Cooperative Biological Engagement/Proliferation Prevention [non-ODA]","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"32758000"},{"country_id":"400","country_code":"JOR","country_name":"Jordan","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"20","channel_subcategory_name":"Enterprises - Non United States","channel_id":"3990007","channel_name":"Enterprise - Non United States Other","dac_category_id":"1","dac_category_name":"Education","dac_sector_code":"112","dac_sector_name":"Basic Education","dac_purpose_code":"11220","dac_purpose_name":"Primary education","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"113737","activity_name":"Basic Education","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"32438340"},{"country_id":"646","country_code":"RWA","country_name":"Rwanda","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32040","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"32330513"},{"country_id":"454","country_code":"MWI","country_name":"Malawi","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23065","dac_purpose_name":"Hydro-electric power plants","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39276","activity_name":"MCC Power Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"31620690"},{"country_id":"728","country_code":"SSD","country_name":"South Sudan","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"62","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"58627","activity_name":"International Narcotics & Law Enforcement: Country Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"31568317"},{"country_id":"404","country_code":"KEN","country_name":"Kenya","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153217","activity_name":"ITSH Freight Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"31336500"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"100","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"18","channel_subcategory_name":"Multilateral - Other","channel_id":"4000092","channel_name":"Comprehensive Nuclear Test-Ban Treaty Organization","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"156455","activity_name":"U.S. Department of State: Nonproliferation Assistance Programs - Comprehensive Nuclear-Test-Ban Treaty Organization (CTBTO), International Monitoring System","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"31331000"},{"country_id":"1033","country_code":"SSA","country_name":"Sub-Saharan Africa Region","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"4","implementing_agency_acronym":"TREAS","implementing_agency_name":"Department of the Treasury","implementing_subagency_id":"999","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"17","channel_subcategory_name":"Multilateral - Regional Development Banks","channel_id":"4000009","channel_name":"African Development Bank Ordinary Capital","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"998","dac_sector_name":"Unallocated/ Unspecified","dac_purpose_code":"99810","dac_purpose_name":"Sectors not specified","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"28","funding_agency_name":"Executive Office of the President","funding_agency_acronym":"EOP","activity_id":"26822","activity_name":"African Development Bank (AFDB), Cash - Deposit Basis","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"30716853"},{"country_id":"368","country_code":"IRQ","country_name":"Iraq","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"62","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"58674","activity_name":"International Narcotics & Law Enforcement: Overseas Contingency Operations","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"30503217"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"90","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32062","activity_name":"President's Emergency Plan for AIDS Relief - Technical Leadership and Support: Technical Leadership & Support","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"30301906"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000190","channel_name":"Government of Afghanistan - Ministry of Mines and Petroleum","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23010","dac_purpose_name":"Energy policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128070","activity_name":"Sheberghan Gas Development Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"30000000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"32088","activity_name":"Prevention of Mother-to-Child HIV/AIDs Transmission - Technical Oversight & Management","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"29917184"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"18","channel_subcategory_name":"Multilateral - Other","channel_id":"4000256","channel_name":"International Organisation for Migration","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15112","dac_purpose_name":"Decentralisation and support to subnational government","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"114750","activity_name":"FATA Transition Initiative","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"29289975"},{"country_id":"894","country_code":"ZMB","country_name":"Zambia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000131","channel_name":"FHI 360","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"122699","activity_name":"Prevention, Care, and Treatment Partnership II","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"29228595"},{"country_id":"728","country_code":"SSD","country_name":"South Sudan","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71614","activity_name":"Second Tranche Contribution Towards United Nations High Commissioner for Refugees (UNHCR)s Africa Annual Budget Activities  South Sudan","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"28900000"},{"country_id":"170","country_code":"COL","country_name":"Colombia","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"16","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"156451","activity_name":"DOD - Foreign Military Financing (FMF) Program, Payment Waived","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"28861730"},{"country_id":"729","country_code":"SDN","country_name":"Sudan","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"4","channel_category_name":"Church and Faith Based","channel_subcategory_id":"8","channel_subcategory_name":"Church and Faith Based - United States","channel_id":"4000382","channel_name":"Samaritan's Purse","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129672","activity_name":"Title II - Emergency Assistance to Sudan","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"28517798"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"62","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"58674","activity_name":"International Narcotics & Law Enforcement: Overseas Contingency Operations","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"28478592"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"63","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000464","channel_name":"United Nations Population Fund","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13010","dac_purpose_name":"Population policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"57189","activity_name":"Contributions to United Nations Population Fund","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"28450000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000001","channel_name":"Government of Afghanistan","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13020","dac_purpose_name":"Reproductive health care","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"120205","activity_name":"Partnership Contract for Health Services (PCH) program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"28395000"},{"country_id":"454","country_code":"MWI","country_name":"Malawi","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000555","channel_name":"John Snow International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12262","dac_purpose_name":"Malaria control","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"125354","activity_name":"Deliver Project for Malaria","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"27900000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"25","channel_category_id":"5","channel_category_name":"Public and Private Partnerships","channel_subcategory_id":"10","channel_subcategory_name":"Public and Private Partnerships","channel_id":"4000189","channel_name":"International AIDS Vaccine Initiative","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"125727","activity_name":"International AIDS Vaccine Initiative (IAVI) III","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"27319774"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"65","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"13","channel_subcategory_name":"Multilateral - World Bank Group","channel_id":"4002662","channel_name":"Global Environment Facility - Least Developed Countries Fund","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"410","dac_sector_name":"General Environmental Protection","dac_purpose_code":"41020","dac_purpose_name":"Biosphere protection","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"60732","activity_name":"Least Developed Country Fund","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"27020000"},{"country_id":"728","country_code":"SSD","country_name":"South Sudan","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4001528","channel_name":"AECOM Technology Corporation","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15220","dac_purpose_name":"Civilian peace-building, conflict prevention and resolution","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129734","activity_name":"Viable Support to Transition and Stability (VISTAS)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"27010543"},{"country_id":"736","country_code":"SDN","country_name":"Sudan (former)","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153223","activity_name":"ITSH Freight Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"26996600"},{"country_id":"275","country_code":"PSE","country_name":"West Bank/Gaza","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000063","channel_name":"Global Communities","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"160","dac_sector_name":"Other Social Infrastructure and Services","dac_purpose_code":"16010","dac_purpose_name":"Social/ welfare services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"123708","activity_name":"Community Infrastructure Development Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"26800000"},{"country_id":"1022","country_code":"MNA","country_name":"Middle East Region","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"66","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"60848","activity_name":"Department of State - Peacekeeping Operations: Multinational Force and Observers (MFO)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"26593000"},{"country_id":"231","country_code":"ETH","country_name":"Ethiopia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"4","channel_category_name":"Church and Faith Based","channel_subcategory_id":"8","channel_subcategory_name":"Church and Faith Based - United States","channel_id":"4000055","channel_name":"Catholic Relief Services","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153156","activity_name":"Commodity Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"26504300"},{"country_id":"231","country_code":"ETH","country_name":"Ethiopia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"5","implementing_agency_acronym":"AGR","implementing_agency_name":"Department of Agriculture","implementing_subagency_id":"8","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12240","dac_purpose_name":"Basic nutrition","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"3858","activity_name":"McGovern-Dole","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"26500000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000002","channel_name":"U.S. Government - Department of Agriculture","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"94476","activity_name":"Administrative costs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"26405063"},{"country_id":"368","country_code":"IRQ","country_name":"Iraq","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"59","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"3990001","channel_name":"NGO - United States Other","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15150","dac_purpose_name":"Democratic participation and civil society","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"56091","activity_name":"Democracy, Human Rights and Labor Program - Unspecified Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"26359354"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4001525","channel_name":"International Resources Group Ltd.","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23010","dac_purpose_name":"Energy policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"126302","activity_name":"USAID Power Distribution Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"26350000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4001905","channel_name":"Tutor Perini Corporation","dac_category_id":"6","dac_category_name":"Agriculture","dac_sector_code":"311","dac_sector_name":"Agriculture","dac_purpose_code":"31120","dac_purpose_name":"Agricultural development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"125732","activity_name":"Irrigation and Watershed Management Program (IWMP)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"26000000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000421","channel_name":"United Nations Children's Fund","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12250","dac_purpose_name":"Infectious disease control","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"6","funding_agency_name":"Department of Health and Human Services","funding_agency_acronym":"HHS","activity_id":"28374","activity_name":"CDC: Global Health Programs (Polio Eradication)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"25983538"},{"country_id":"231","country_code":"ETH","country_name":"Ethiopia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000421","channel_name":"United Nations Children's Fund","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12262","dac_purpose_name":"Malaria control","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"128150","activity_name":"Sustaining Malaria Reduction Interventions in Ethiopia","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"25973463"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"82","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000031","channel_name":"U.S. Government - General Services Administration","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"94495","activity_name":"Administrative costs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"25929621"},{"country_id":"736","country_code":"SDN","country_name":"Sudan (former)","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153142","activity_name":"Commodity Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"25812900"},{"country_id":"404","country_code":"KEN","country_name":"Kenya","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"81","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32041","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"25727795"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"63","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"18","channel_subcategory_name":"Multilateral - Other","channel_id":"4000320","channel_name":"Multilateral Fund for the Implementation of the Montreal Protocol","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"410","dac_sector_name":"General Environmental Protection","dac_purpose_code":"41020","dac_purpose_name":"Biosphere protection","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"57122","activity_name":"Contributions to Multilateral Fund for the Implementation of the Montreal Protocol","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"25650000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"20","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000002","channel_name":"U.S. Government - Department of Agriculture","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"94476","activity_name":"Administrative costs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"25626420"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"17","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"210","dac_sector_name":"Transport and Storage","dac_purpose_code":"21010","dac_purpose_name":"Transport policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"4","aid_type_group_name":"Technical Assistance","funding_agency_id":"8","funding_agency_name":"Department of the Army","funding_agency_acronym":"ARMY","activity_id":"156699","activity_name":"Afghanistan Infrastructure Fund (AIF): Infrastructure (Transportation)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"25524432"},{"country_id":"231","country_code":"ETH","country_name":"Ethiopia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71611","activity_name":"Second Tranche Contribution Towards United Nations High Commissioner for Refugees (UNHCR)s Africa Annual Budget Activities  Ethiopia","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"25500000"},{"country_id":"275","country_code":"PSE","country_name":"West Bank/Gaza","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129372","activity_name":"PIO Grant to the World Food Programme","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"25499000"},{"country_id":"608","country_code":"PHL","country_name":"Philippines","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"16","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"156451","activity_name":"DOD - Foreign Military Financing (FMF) Program, Payment Waived","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"25482907"},{"country_id":"1010","country_code":"LAC","country_name":"Caribbean Region","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"62","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"58627","activity_name":"International Narcotics & Law Enforcement: Country Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"25287699"},{"country_id":"368","country_code":"IRQ","country_name":"Iraq","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71266","activity_name":"Initial Contribution Towards United Nations High Commissioner for Refugees (UNHCR)'s Middle East and North Africa Annual Budget Activities - Iraqis","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"25160000"},{"country_id":"332","country_code":"HTI","country_name":"Haiti","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"26","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4000670","channel_name":"Development Alternatives, Inc.","dac_category_id":"6","dac_category_name":"Agriculture","dac_sector_code":"311","dac_sector_name":"Agriculture","dac_purpose_code":"31120","dac_purpose_name":"Agricultural development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128877","activity_name":"Feed the Future North (AVANSE)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"25119471"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4000536","channel_name":"Creative Associates International","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15112","dac_purpose_name":"Decentralisation and support to subnational government","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"124852","activity_name":"USAID DO3 - OTI Pakistan Transition Initiative Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"25117798"},{"country_id":"400","country_code":"JOR","country_name":"Jordan","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70994","activity_name":"Contribution To United Nations High Commissioner for Refugees (UNHCR) Needs Defined in The Syria Regional Response Plan 4 (January - June 2013) - Jordan","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"25000000"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70990","activity_name":"Contribution To United Nations High Commissioner for Refugees (UNHCR) Needs Defined in The Syria Humanitarian Assistance Response Plan - Syria","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"25000000"},{"country_id":"422","country_code":"LBN","country_name":"Lebanon","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70995","activity_name":"Contribution To United Nations High Commissioner for Refugees (UNHCR) Needs Defined in The Syria Regional Response Plan 4 (January - June 2013) - Lebanon","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"25000000"},{"country_id":"583","country_code":"FSM","country_name":"Micronesia (Federated States)","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"9","implementing_agency_acronym":"DOI","implementing_agency_name":"Department of the Interior","implementing_subagency_id":"41","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000095","channel_name":"Government of Micronesia (Federated States)","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"510","dac_sector_name":"General Budget Support","dac_purpose_code":"51010","dac_purpose_name":"General budget support","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"1","aid_type_group_name":"Budget support","funding_agency_id":"9","funding_agency_name":"Department of the Interior","funding_agency_acronym":"DOI","activity_id":"34776","activity_name":"Compacts of Free Association, Sector Grants: Program Support - Unspecified.","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"24993360"},{"country_id":"704","country_code":"VNM","country_name":"Vietnam","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32040","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"24684466"},{"country_id":"422","country_code":"LBN","country_name":"Lebanon","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000531","channel_name":"World Learning","dac_category_id":"1","dac_category_name":"Education","dac_sector_code":"112","dac_sector_name":"Basic Education","dac_purpose_code":"11220","dac_purpose_name":"Primary education","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128760","activity_name":"Developing Rehabilitation Assistance to Schools and Teacher Improvement Program II (D-RASATI II)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"24500000"},{"country_id":"736","country_code":"SDN","country_name":"Sudan (former)","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153109","activity_name":"Commodity Cost of USAID Emergency Food Security Program for Social and Economic Services and Protection for Vulnerable Populations","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"24467552"},{"country_id":"404","country_code":"KEN","country_name":"Kenya","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000810","channel_name":"PATH","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"123282","activity_name":"APHIA Plus Nyanza/Western","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"24413155"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000317","channel_name":"Mercy Corps","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129289","activity_name":"Mercy Corp Emergency Food Security Program (EFSP) Award - 2013 Award","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"23956392"},{"country_id":"710","country_code":"ZAF","country_name":"South Africa","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"7","channel_subcategory_name":"NGO - Non United States","channel_id":"4001884","channel_name":"Right to Care (South Africa)","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"127808","activity_name":"Performance for Health through Focused Outputs, Results and Management (PerFORM)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"23895097"},{"country_id":"231","country_code":"ETH","country_name":"Ethiopia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"5","implementing_agency_acronym":"AGR","implementing_agency_name":"Department of Agriculture","implementing_subagency_id":"8","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000021","channel_name":"Agriculture Cooperative Development International/Volunteers in Overseas Cooperative Assistance","dac_category_id":"8","dac_category_name":"Commodity Assistance","dac_sector_code":"520","dac_sector_name":"Developmental Food Aid/Food Security Assistance","dac_purpose_code":"52010","dac_purpose_name":"Food aid/Food security programmes","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"3790","activity_name":"Food for Progress","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"23842560"},{"country_id":"484","country_code":"MEX","country_name":"Mexico","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"26","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4001522","channel_name":"ARD, Inc.","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129293","activity_name":"Mexico Promoting Justice Project (PROJUST)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"23824012"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"6","channel_category_name":"Networks","channel_subcategory_id":"11","channel_subcategory_name":"Networks","channel_id":"4002062","channel_name":"Volunteers for Economic Growth Alliance","dac_category_id":"5","dac_category_name":"Economic Growth","dac_sector_code":"250","dac_sector_name":"Business and Other Services","dac_purpose_code":"25010","dac_purpose_name":"Business support services and institutions","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"126673","activity_name":"Assistance in Building Afghanistan by Developing Enterprises (ABADE)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"23610000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"25","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000555","channel_name":"John Snow International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"115158","activity_name":"HIV/AIDS","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"23584188"},{"country_id":"860","country_code":"UZB","country_name":"Uzbekistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"13","implementing_agency_acronym":"DOE","implementing_agency_name":"Department of Energy","implementing_subagency_id":"36","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000016","channel_name":"U.S. Government - Department of Energy","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23064","dac_purpose_name":"Nuclear power plants","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"13","funding_agency_name":"Department of Energy","funding_agency_acronym":"DOE","activity_id":"21319","activity_name":"Department of Energy, Office of Global Nuclear Material Threat Reduction (NA-212)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"23471830"},{"country_id":"608","country_code":"PHL","country_name":"Philippines","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"5","implementing_agency_acronym":"AGR","implementing_agency_name":"Department of Agriculture","implementing_subagency_id":"8","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000492","channel_name":"Winrock International","dac_category_id":"8","dac_category_name":"Commodity Assistance","dac_sector_code":"520","dac_sector_name":"Developmental Food Aid/Food Security Assistance","dac_purpose_code":"52010","dac_purpose_name":"Food aid/Food security programmes","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"3763","activity_name":"Food for Progress","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"23317116"},{"country_id":"834","country_code":"TZA","country_name":"Tanzania","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"81","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32041","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"23179888"},{"country_id":"454","country_code":"MWI","country_name":"Malawi","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32040","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"23115062"},{"country_id":"404","country_code":"KEN","country_name":"Kenya","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"5","implementing_agency_acronym":"AGR","implementing_agency_name":"Department of Agriculture","implementing_subagency_id":"8","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000307","channel_name":"Land-O-Lakes International","dac_category_id":"8","dac_category_name":"Commodity Assistance","dac_sector_code":"520","dac_sector_name":"Developmental Food Aid/Food Security Assistance","dac_purpose_code":"52010","dac_purpose_name":"Food aid/Food security programmes","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"3778","activity_name":"Food for Progress","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"23101286"},{"country_id":"616","country_code":"POL","country_name":"Poland","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"13","implementing_agency_acronym":"DOE","implementing_agency_name":"Department of Energy","implementing_subagency_id":"36","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000016","channel_name":"U.S. Government - Department of Energy","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23064","dac_purpose_name":"Nuclear power plants","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"13","funding_agency_name":"Department of Energy","funding_agency_acronym":"DOE","activity_id":"21319","activity_name":"Department of Energy, Office of Global Nuclear Material Threat Reduction (NA-212)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"23101056"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000002","channel_name":"U.S. Government - Department of Agriculture","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"94476","activity_name":"Administrative costs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"23079577"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000268","channel_name":"International Relief and Development","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23010","dac_purpose_name":"Energy policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"125452","activity_name":"Engineering Quality and Logistic Support (EQUALS)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"23000000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"72","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"4","aid_type_group_name":"Technical Assistance","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"55284","activity_name":"Anti-Terrorism Assistance Training","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"22976697"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4001528","channel_name":"AECOM Technology Corporation","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15220","dac_purpose_name":"Civilian peace-building, conflict prevention and resolution","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128112","activity_name":"Stabilization in Key Areas (SIKA) - West","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"22905109"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000465","channel_name":"United Nations Relief and Works Agency","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70838","activity_name":"2013 Syria Humanitarian Response - International Organization Partners","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"22800000"},{"country_id":"148","country_code":"TCD","country_name":"Chad","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71609","activity_name":"Second Tranche Contribution Towards United Nations High Commissioner for Refugees (UNHCR)s Africa Annual Budget Activities  Chad","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"22700000"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"20","channel_subcategory_name":"Enterprises - Non United States","channel_id":"3990007","channel_name":"Enterprise - Non United States Other","dac_category_id":"1","dac_category_name":"Education","dac_sector_code":"112","dac_sector_name":"Basic Education","dac_purpose_code":"11220","dac_purpose_name":"Primary education","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128701","activity_name":"Construction of 10 Academic Blocks","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"22634523"},{"country_id":"788","country_code":"TUN","country_name":"Tunisia","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"62","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"58674","activity_name":"International Narcotics & Law Enforcement: Overseas Contingency Operations","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"22496242"},{"country_id":"887","country_code":"YEM","country_name":"Yemen","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"6","channel_subcategory_name":"NGO - International","channel_id":"4000019","channel_name":"Agency for Technical Cooperation and Development","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153101","activity_name":"Commodity Cost of USAID Emergency Food Security Program for Health","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"22416131"},{"country_id":"132","country_code":"CPV","country_name":"Cabo Verde","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"140","dac_sector_name":"Water Supply and Sanitation","dac_purpose_code":"14020","dac_purpose_name":"Water supply and sanitation - large systems","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39506","activity_name":"MCC Water, Sanitation And Hygiene Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"22350000"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000317","channel_name":"Mercy Corps","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"127535","activity_name":"Logistics and Relief in Syria","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"22248493"},{"country_id":"434","country_code":"LBY","country_name":"Libya","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"18","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"410","dac_sector_name":"General Environmental Protection","dac_purpose_code":"41020","dac_purpose_name":"Biosphere protection","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"16187","activity_name":"Cooperative Threat Reduction Program: Chemical Weapons Destruction [non-ODA]","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"22177000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"25","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000555","channel_name":"John Snow International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13030","dac_purpose_name":"Family planning","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"114810","activity_name":"Family Planning and Reproductive Health","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"22171743"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4000670","channel_name":"Development Alternatives, Inc.","dac_category_id":"6","dac_category_name":"Agriculture","dac_sector_code":"311","dac_sector_name":"Agriculture","dac_purpose_code":"31165","dac_purpose_name":"Agricultural alternative development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"122283","activity_name":"Incentives Driving Economic Alternatives: North, East, and West (IDEA-NEW)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"22074075"},{"country_id":"706","country_code":"SOM","country_name":"Somalia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153222","activity_name":"ITSH Freight Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"22037500"},{"country_id":"426","country_code":"LSO","country_name":"Lesotho","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12230","dac_purpose_name":"Basic health infrastructure","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39130","activity_name":"MCC HEALTH SECTOR PROJECT","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"21854726"},{"country_id":"706","country_code":"SOM","country_name":"Somalia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153140","activity_name":"Commodity Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"21740600"},{"country_id":"887","country_code":"YEM","country_name":"Yemen","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153124","activity_name":"Commodity Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"21599700"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000107","channel_name":"Government of Pakistan","dac_category_id":"6","dac_category_name":"Agriculture","dac_sector_code":"311","dac_sector_name":"Agriculture","dac_purpose_code":"31120","dac_purpose_name":"Agricultural development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128907","activity_name":"Gomal Zam Dam, Command Area Development Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"21500000"},{"country_id":"275","country_code":"PSE","country_name":"West Bank/Gaza","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4001439","channel_name":"Black & Veatch Holding Company","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"210","dac_sector_name":"Transport and Storage","dac_purpose_code":"21010","dac_purpose_name":"Transport policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"124199","activity_name":"Infrastructure Needs Program, Phase II, Architect-Engineering (INP II/A&E)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"21286393"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71574","activity_name":"Second Contribution Towards United Nations High Commissioner for Refugees (UNHCR)'s Overseas Processing Entities Reserve Annual Budget Activities","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"21095000"},{"country_id":"275","country_code":"PSE","country_name":"West Bank/Gaza","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4001439","channel_name":"Black & Veatch Holding Company","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"140","dac_sector_name":"Water Supply and Sanitation","dac_purpose_code":"14020","dac_purpose_name":"Water supply and sanitation - large systems","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"124199","activity_name":"Infrastructure Needs Program, Phase II, Architect-Engineering (INP II/A&E)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"21060562"},{"country_id":"368","country_code":"IRQ","country_name":"Iraq","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4000547","channel_name":"Management Systems International","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"124990","activity_name":"Administrative Reform Project - Tarabot","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"21000000"},{"country_id":"454","country_code":"MWI","country_name":"Malawi","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"5","implementing_agency_acronym":"AGR","implementing_agency_name":"Department of Agriculture","implementing_subagency_id":"8","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12240","dac_purpose_name":"Basic nutrition","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"3838","activity_name":"McGovern-Dole","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"21000000"},{"country_id":"728","country_code":"SSD","country_name":"South Sudan","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153144","activity_name":"Commodity Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20911400"},{"country_id":"736","country_code":"SDN","country_name":"Sudan (former)","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153141","activity_name":"Commodity Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20872600"},{"country_id":"1018","country_code":"WLD","country_name":"Europe Region","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71565","activity_name":"Second Contribution Towards United Nations High Commissioner for Refugees (UNHCR)'s Europe Regional Annual Budget Activities","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20770000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000268","channel_name":"International Relief and Development","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"160","dac_sector_name":"Other Social Infrastructure and Services","dac_purpose_code":"16010","dac_purpose_name":"Social/ welfare services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128438","activity_name":"Afghan Civilian Assistance Program II (ACAP II)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20749667"},{"country_id":"454","country_code":"MWI","country_name":"Malawi","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39327","activity_name":"MCC Program Administration and Control","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20674407"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"123","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"20","channel_subcategory_name":"Enterprises - Non United States","channel_id":"4010709","channel_name":"Terraseis Group","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23010","dac_purpose_name":"Energy policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"156486","activity_name":"Task Force for Business and Stability Operations (TFBSO) Programs (NDAA-funded): Energy Projects.","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20637939"},{"country_id":"180","country_code":"COD","country_name":"Congo (Kinshasa)","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71610","activity_name":"Second Tranche Contribution Towards United Nations High Commissioner for Refugees (UNHCR)s Africa Annual Budget Activities  Democratic Republic of Congo","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20600000"},{"country_id":"320","country_code":"GTM","country_name":"Guatemala","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"5","implementing_agency_acronym":"AGR","implementing_agency_name":"Department of Agriculture","implementing_subagency_id":"8","channel_category_id":"4","channel_category_name":"Church and Faith Based","channel_subcategory_id":"8","channel_subcategory_name":"Church and Faith Based - United States","channel_id":"4000055","channel_name":"Catholic Relief Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12240","dac_purpose_name":"Basic nutrition","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"3827","activity_name":"McGovern-Dole","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20582022"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"16","implementing_agency_acronym":"PC","implementing_agency_name":"Peace Corps","implementing_subagency_id":"115","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000012","channel_name":"U.S. Government - Peace Corps","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"16","funding_agency_name":"Peace Corps","funding_agency_acronym":"PC","activity_id":"53653","activity_name":"Program Support","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20579210"},{"country_id":"788","country_code":"TUN","country_name":"Tunisia","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"16","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"156451","activity_name":"DOD - Foreign Military Financing (FMF) Program, Payment Waived","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20553515"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4000670","channel_name":"Development Alternatives, Inc.","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15112","dac_purpose_name":"Decentralisation and support to subnational government","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"124669","activity_name":"Regional Afghan Municipalities Program for Urban Populations (RAMP UP) - East","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20533575"},{"country_id":"348","country_code":"HUN","country_name":"Hungary","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"13","implementing_agency_acronym":"DOE","implementing_agency_name":"Department of Energy","implementing_subagency_id":"36","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000016","channel_name":"U.S. Government - Department of Energy","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23064","dac_purpose_name":"Nuclear power plants","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"13","funding_agency_name":"Department of Energy","funding_agency_acronym":"DOE","activity_id":"21317","activity_name":"Department of Energy, Office of Global Nuclear Material Threat Reduction (NA-212)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20476925"},{"country_id":"360","country_code":"IDN","country_name":"Indonesia","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"6","dac_category_name":"Agriculture","dac_sector_code":"311","dac_sector_name":"Agriculture","dac_purpose_code":"31164","dac_purpose_name":"Agrarian reform","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39122","activity_name":"MCC Green Prosperity Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20350000"},{"country_id":"1034","country_code":"SSA","country_name":"West Africa Region","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"62","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"58627","activity_name":"International Narcotics & Law Enforcement: Country Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20173910"},{"country_id":"643","country_code":"RUS","country_name":"Russia","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"18","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"16206","activity_name":"Cooperative Threat Reduction Program: Global Nuclear Security/Strategic Offensive Arms Elimination [non-ODA]","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20084000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"25","channel_category_id":"2","channel_category_name":"Universities and Research Institutes","channel_subcategory_id":"3","channel_subcategory_name":"Universities and Research Institutes - United States","channel_id":"4000522","channel_name":"RTI International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12220","dac_purpose_name":"Basic health care","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"125384","activity_name":"ENVISION","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20000000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"22","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"13","channel_subcategory_name":"Multilateral - World Bank Group","channel_id":"4003810","channel_name":"World Bank Group","dac_category_id":"1","dac_category_name":"Education","dac_sector_code":"112","dac_sector_name":"Basic Education","dac_purpose_code":"11220","dac_purpose_name":"Primary education","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128905","activity_name":"Global Partnership for Education (GPE) - Program Contribution","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20000000"},{"country_id":"400","country_code":"JOR","country_name":"Jordan","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000317","channel_name":"Mercy Corps","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"140","dac_sector_name":"Water Supply and Sanitation","dac_purpose_code":"14020","dac_purpose_name":"Water supply and sanitation - large systems","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"110351","activity_name":"Community Based Initiatives for Water Demand Management","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20000000"},{"country_id":"404","country_code":"KEN","country_name":"Kenya","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000074","channel_name":"Government of Kenya","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"128921","activity_name":"Grant to Kenya Medical Supplies Agency","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20000000"},{"country_id":"170","country_code":"COL","country_name":"Colombia","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"26","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4001522","channel_name":"ARD, Inc.","dac_category_id":"6","dac_category_name":"Agriculture","dac_sector_code":"311","dac_sector_name":"Agriculture","dac_purpose_code":"31165","dac_purpose_name":"Agricultural alternative development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129184","activity_name":"Land & Rural Development Activity","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20000000"},{"country_id":"116","country_code":"KHM","country_name":"Cambodia","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"5","implementing_agency_acronym":"AGR","implementing_agency_name":"Department of Agriculture","implementing_subagency_id":"8","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12240","dac_purpose_name":"Basic nutrition","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"3822","activity_name":"McGovern-Dole","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20000000"},{"country_id":"430","country_code":"LBR","country_name":"Liberia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"5","implementing_agency_acronym":"AGR","implementing_agency_name":"Department of Agriculture","implementing_subagency_id":"8","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12240","dac_purpose_name":"Basic nutrition","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"3862","activity_name":"McGovern-Dole","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20000000"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"20","channel_subcategory_name":"Enterprises - Non United States","channel_id":"4010006","channel_name":"Abraaj Group","dac_category_id":"5","dac_category_name":"Economic Growth","dac_sector_code":"331","dac_sector_name":"Trade Policy and Regulations","dac_purpose_code":"33120","dac_purpose_name":"Trade facilitation","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129381","activity_name":"Pakistan Private Investment Initiative (PPII) Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20000000"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"20","channel_subcategory_name":"Enterprises - Non United States","channel_id":"4011159","channel_name":"JSPE Management LLC","dac_category_id":"5","dac_category_name":"Economic Growth","dac_sector_code":"331","dac_sector_name":"Trade Policy and Regulations","dac_purpose_code":"33120","dac_purpose_name":"Trade facilitation","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129382","activity_name":"Pakistan Private Investment Initiative (PPII) Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"20000000"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000317","channel_name":"Mercy Corps","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129290","activity_name":"Mercy Corp Emergency Food Security Program (EFSP) Award - 2013 Award (Flour distribution)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"19996979"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"6","channel_subcategory_name":"NGO - International","channel_id":"4000210","channel_name":"International Committee of the Red Cross","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70933","activity_name":"Contribution To International Committee of the Red Cross (ICRC)'s 2013 Headquarters Appeal","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"19893276"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000269","channel_name":"International Rescue Committee","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129025","activity_name":"Humanitarian Assistance in Syria","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"19735684"},{"country_id":"404","country_code":"KEN","country_name":"Kenya","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"5","implementing_agency_acronym":"AGR","implementing_agency_name":"Department of Agriculture","implementing_subagency_id":"8","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12240","dac_purpose_name":"Basic nutrition","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"3841","activity_name":"McGovern-Dole","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"19569871"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000001","channel_name":"Government of Afghanistan","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13020","dac_purpose_name":"Reproductive health care","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"120205","activity_name":"Partnership Contract for Health Services (PCH) program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"19444335"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000001","channel_name":"U.S. Government - U.S. Agency for International Development","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"4","aid_type_group_name":"Technical Assistance","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"121989","activity_name":"Fund for Civilian Technical Assistance Program (CTAP)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"19439873"},{"country_id":"566","country_code":"NGA","country_name":"Nigeria","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000131","channel_name":"FHI 360","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12262","dac_purpose_name":"Malaria control","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"124297","activity_name":"Malaria Action Program for the States (MAPS)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"19352930"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4000669","channel_name":"Chemonics International, Inc.","dac_category_id":"5","dac_category_name":"Economic Growth","dac_sector_code":"331","dac_sector_name":"Trade Policy and Regulations","dac_purpose_code":"33110","dac_purpose_name":"Trade policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128185","activity_name":"Trade Accession and Facilitation for Afghanistan (TAFA) II","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"19291053"},{"country_id":"516","country_code":"NAM","country_name":"Namibia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32040","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"19218905"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"126","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"156715","activity_name":"Bureau of Conflict and Stabilization Operations(CSO) - Multi-Sector - Unspecified","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"19216029"},{"country_id":"728","country_code":"SSD","country_name":"South Sudan","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"66","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"60871","activity_name":"Department of State - Peacekeeping Operations: South Sudan Security Sector Transformation (SST)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"19200000"},{"country_id":"368","country_code":"IRQ","country_name":"Iraq","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4001522","channel_name":"ARD, Inc.","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"124208","activity_name":"Iraq Access to Justice Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"19000000"},{"country_id":"498","country_code":"MDA","country_name":"Moldova","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"6","dac_category_name":"Agriculture","dac_sector_code":"311","dac_sector_name":"Agriculture","dac_purpose_code":"31140","dac_purpose_name":"Agricultural water resources","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39436","activity_name":"MCC Transition to High Value Agriculture Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"19000000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"13","implementing_agency_acronym":"DOE","implementing_agency_name":"Department of Energy","implementing_subagency_id":"36","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000016","channel_name":"U.S. Government - Department of Energy","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"13","funding_agency_name":"Department of Energy","funding_agency_acronym":"DOE","activity_id":"21280","activity_name":"Department of Energy, International Materials Protection & Cooperation","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"19000000"},{"country_id":"616","country_code":"POL","country_name":"Poland","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"16","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"156451","activity_name":"DOD - Foreign Military Financing (FMF) Program, Payment Waived","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"18988605"},{"country_id":"887","country_code":"YEM","country_name":"Yemen","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"16","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"156451","activity_name":"DOD - Foreign Military Financing (FMF) Program, Payment Waived","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"18988605"},{"country_id":"156","country_code":"CHN","country_name":"China (P.R.C.)","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"13","implementing_agency_acronym":"DOE","implementing_agency_name":"Department of Energy","implementing_subagency_id":"36","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000016","channel_name":"U.S. Government - Department of Energy","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"13","funding_agency_name":"Department of Energy","funding_agency_acronym":"DOE","activity_id":"21112","activity_name":"Department of Energy, International Nuclear Materials Protection, Control & Accounting (MPC&A) (formerly International Nuclear Materials Protection & Cooperation)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"18904184"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"6","channel_subcategory_name":"NGO - International","channel_id":"4000247","channel_name":"International Medical Corps","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"127753","activity_name":"OFDA award for Health in Syria","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"18859448"},{"country_id":"148","country_code":"TCD","country_name":"Chad","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153149","activity_name":"Commodity Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"18809400"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4001415","channel_name":"Advanced Engineering Associates International, Inc.","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23010","dac_purpose_name":"Energy policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"126301","activity_name":"USAID Energy Policy Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"18800330"},{"country_id":"368","country_code":"IRQ","country_name":"Iraq","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"56","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"156793","activity_name":"Bureau of Near Eastern Affairs(NEA) - Multi-Sector - Unspecified","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"18700184"},{"country_id":"748","country_code":"SWZ","country_name":"Swaziland","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32040","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"18655164"},{"country_id":"854","country_code":"BFA","country_name":"Burkina Faso","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"5","implementing_agency_acronym":"AGR","implementing_agency_name":"Department of Agriculture","implementing_subagency_id":"8","channel_category_id":"4","channel_category_name":"Church and Faith Based","channel_subcategory_id":"8","channel_subcategory_name":"Church and Faith Based - United States","channel_id":"4000055","channel_name":"Catholic Relief Services","dac_category_id":"8","dac_category_name":"Commodity Assistance","dac_sector_code":"520","dac_sector_name":"Developmental Food Aid/Food Security Assistance","dac_purpose_code":"52010","dac_purpose_name":"Food aid/Food security programmes","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"3801","activity_name":"Food for Progress","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"18515488"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153125","activity_name":"Commodity Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"18402800"},{"country_id":"404","country_code":"KEN","country_name":"Kenya","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000131","channel_name":"FHI 360","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"123283","activity_name":"APHIA Plus Rift Valley","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"18373852"},{"country_id":"804","country_code":"UKR","country_name":"Ukraine","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"23","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"17","channel_subcategory_name":"Multilateral - Regional Development Banks","channel_id":"4000120","channel_name":"European Bank for Reconstruction and Development","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"410","dac_sector_name":"General Environmental Protection","dac_purpose_code":"41020","dac_purpose_name":"Biosphere protection","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"84908","activity_name":"Chernobyl Shelter Fund","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"18350000"},{"country_id":"710","country_code":"ZAF","country_name":"South Africa","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"20","channel_subcategory_name":"Enterprises - Non United States","channel_id":"4002182","channel_name":"Foundation for Professional Development (South Africa)","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"128153","activity_name":"Systems Strengthening for Better HIV/TB Patient Outcomes (Foundation for Professional Development)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"18349812"},{"country_id":"728","country_code":"SSD","country_name":"South Sudan","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000492","channel_name":"Winrock International","dac_category_id":"1","dac_category_name":"Education","dac_sector_code":"112","dac_sector_name":"Basic Education","dac_purpose_code":"11220","dac_purpose_name":"Primary education","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129715","activity_name":"USAID South Sudan Safer Schools Support (5S) Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"18166260"},{"country_id":"728","country_code":"SSD","country_name":"South Sudan","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"4","channel_category_name":"Church and Faith Based","channel_subcategory_id":"8","channel_subcategory_name":"Church and Faith Based - United States","channel_id":"4000055","channel_name":"Catholic Relief Services","dac_category_id":"8","dac_category_name":"Commodity Assistance","dac_sector_code":"520","dac_sector_name":"Developmental Food Aid/Food Security Assistance","dac_purpose_code":"52010","dac_purpose_name":"Food aid/Food security programmes","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"126237","activity_name":"Title II - CRS for Internal Transport, Storage and Handling (ITSH) and 202e","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"18160886"},{"country_id":"332","country_code":"HTI","country_name":"Haiti","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"26","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4000669","channel_name":"Chemonics International, Inc.","dac_category_id":"6","dac_category_name":"Agriculture","dac_sector_code":"311","dac_sector_name":"Agriculture","dac_purpose_code":"31120","dac_purpose_name":"Agricultural development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"123246","activity_name":"Watershed Initiative for National Natural Environmental Resources (WINNER)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"18063000"},{"country_id":"368","country_code":"IRQ","country_name":"Iraq","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"18","channel_subcategory_name":"Multilateral - Other","channel_id":"4000256","channel_name":"International Organisation for Migration","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70944","activity_name":"Contribution To International Organization for Migration for Its Community Revitalization Program - Phase III","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"18000000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"51","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000519","channel_name":"National Endowment for Democracy","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"51807","activity_name":"National Endowment for Democracy Grant to Operating Expenses","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17919267"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"16","implementing_agency_acronym":"PC","implementing_agency_name":"Peace Corps","implementing_subagency_id":"112","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000012","channel_name":"U.S. Government - Peace Corps","dac_category_id":"1","dac_category_name":"Education","dac_sector_code":"112","dac_sector_name":"Basic Education","dac_purpose_code":"11220","dac_purpose_name":"Primary education","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"4","aid_type_group_name":"Technical Assistance","funding_agency_id":"16","funding_agency_name":"Peace Corps","funding_agency_acronym":"PC","activity_id":"53660","activity_name":"Volunteer Medical Support","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17829814"},{"country_id":"368","country_code":"IRQ","country_name":"Iraq","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"6","channel_subcategory_name":"NGO - International","channel_id":"4000210","channel_name":"International Committee of the Red Cross","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71591","activity_name":"Second Tranche Contribution To International Committee of the Red Cross (ICRC)'s 2013 Emergency Appeal for Iraq","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17740000"},{"country_id":"1033","country_code":"SSA","country_name":"Sub-Saharan Africa Region","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"6","channel_subcategory_name":"NGO - International","channel_id":"4000210","channel_name":"International Committee of the Red Cross","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70925","activity_name":"Contribution To International Committee of the Red Cross (ICRC) 2013 Emergency Appeal for Africaica","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17740000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"25","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000001","channel_name":"U.S. Government - U.S. Agency for International Development","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"128969","activity_name":"HIV/AIDS Working Capital Fund (WCF)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17525779"},{"country_id":"400","country_code":"JOR","country_name":"Jordan","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70992","activity_name":"Contribution To United Nations High Commissioner for Refugees (UNHCR) Needs Defined in The Syria Regional Response Plan (January - June 2013)- Jordan","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17500000"},{"country_id":"800","country_code":"UGA","country_name":"Uganda","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000555","channel_name":"John Snow International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12262","dac_purpose_name":"Malaria control","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"125354","activity_name":"Deliver Project for Malaria","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17500000"},{"country_id":"834","country_code":"TZA","country_name":"Tanzania","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"5","implementing_agency_acronym":"AGR","implementing_agency_name":"Department of Agriculture","implementing_subagency_id":"8","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000368","channel_name":"Project Concern International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12240","dac_purpose_name":"Basic nutrition","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"3845","activity_name":"McGovern-Dole","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17412878"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"123","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23010","dac_purpose_name":"Energy policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"156490","activity_name":"Task Force for Business and Stability Operations (TFBSO) Programs (NDAA-funded): Energy Projects.","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17300000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4000669","channel_name":"Chemonics International, Inc.","dac_category_id":"5","dac_category_name":"Economic Growth","dac_sector_code":"240","dac_sector_name":"Banking and Financial Services","dac_purpose_code":"24040","dac_purpose_name":"Informal/semi-formal financial intermediaries","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"125503","activity_name":"Financial Access for Investing in the Development of Afghanistan (FAIDA)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17300000"},{"country_id":"430","country_code":"LBR","country_name":"Liberia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4009225","channel_name":"IBI International, Inc.","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"125549","activity_name":"Governance and Economic Management Support (GEMS)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17247306"},{"country_id":"466","country_code":"MLI","country_name":"Mali","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000555","channel_name":"John Snow International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12262","dac_purpose_name":"Malaria control","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"125354","activity_name":"Deliver Project for Malaria","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17242223"},{"country_id":"604","country_code":"PER","country_name":"Peru","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"62","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"58627","activity_name":"International Narcotics & Law Enforcement: Country Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17222256"},{"country_id":"716","country_code":"ZWE","country_name":"Zimbabwe","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"6","channel_subcategory_name":"NGO - International","channel_id":"4000363","channel_name":"Population Services International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"124765","activity_name":"Strengthening Private Sector Services","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17216513"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"64","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"4","aid_type_group_name":"Technical Assistance","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"59756","activity_name":"U.S. Department of State: Nonproliferation Assistance Programs - Global Threat Reduction (GTR), Unspecified Program and Travel Expenses","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17209350"},{"country_id":"728","country_code":"SSD","country_name":"South Sudan","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4011420","channel_name":"Deloitte Consulting LLP","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15111","dac_purpose_name":"Public finance management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129640","activity_name":"Strengthening Core Economic Governance Institutions (CORE II) - South Sudan","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17200000"},{"country_id":"404","country_code":"KEN","country_name":"Kenya","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4001527","channel_name":"IntraHealth International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"121587","activity_name":"CAPACITY Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17037435"},{"country_id":"231","country_code":"ETH","country_name":"Ethiopia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153228","activity_name":"ITSH Freight Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17035000"},{"country_id":"566","country_code":"NGA","country_name":"Nigeria","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"81","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32041","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17009642"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"7","channel_subcategory_name":"NGO - Non United States","channel_id":"4009915","channel_name":"Agribusiness Support Fund","dac_category_id":"6","dac_category_name":"Agriculture","dac_sector_code":"311","dac_sector_name":"Agriculture","dac_purpose_code":"31120","dac_purpose_name":"Agricultural development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"125031","activity_name":"Agribusiness Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17000000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4002148","channel_name":"Aircraft Charter Solutions, Inc.","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"123458","activity_name":"Afghanistan/Pakistan Task Force (APTF)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"17000000"},{"country_id":"156","country_code":"CHN","country_name":"China (P.R.C.)","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"13","implementing_agency_acronym":"DOE","implementing_agency_name":"Department of Energy","implementing_subagency_id":"36","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000016","channel_name":"U.S. Government - Department of Energy","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"13","funding_agency_name":"Department of Energy","funding_agency_acronym":"DOE","activity_id":"21280","activity_name":"Department of Energy, International Materials Protection & Cooperation","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"16917000"},{"country_id":"728","country_code":"SSD","country_name":"South Sudan","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153302","activity_name":"Inland Freight Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"16864000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"82","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000031","channel_name":"U.S. Government - General Services Administration","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"126514","activity_name":"Administrative costs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"16777778"},{"country_id":"430","country_code":"LBR","country_name":"Liberia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000131","channel_name":"FHI 360","dac_category_id":"1","dac_category_name":"Education","dac_sector_code":"112","dac_sector_name":"Basic Education","dac_purpose_code":"11220","dac_purpose_name":"Primary education","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"124249","activity_name":"Liberia Teacher Training Program II","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"16750000"},{"country_id":"1005","country_code":"WLD","country_name":"Asia, Middle East and North Africa Region","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71738","activity_name":"To Respond To Syrian Outflows in Jordan, Lebanon, Turkey, and Iraq (United Nations High Commissioner for Refugees (UNHCR) Portion of The Rrp)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"16677000"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"7","channel_subcategory_name":"NGO - Non United States","channel_id":"4001489","channel_name":"GOAL","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129654","activity_name":"Syria Emergency Food and Shelter Program (EFSP) Grant to GOAL","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"16612011"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"126","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"156716","activity_name":"Bureau of Conflict and Stabilization Operations(CSO) - Stabilization Operations and Security Sector Reform","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"16600000"},{"country_id":"706","country_code":"SOM","country_name":"Somalia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4000670","channel_name":"Development Alternatives, Inc.","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15220","dac_purpose_name":"Civilian peace-building, conflict prevention and resolution","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"126276","activity_name":"Transition Initiatives for Stabilization (TIS)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"16590902"},{"country_id":"275","country_code":"PSE","country_name":"West Bank/Gaza","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4001873","channel_name":"APCO/ArCon Construction and Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"140","dac_sector_name":"Water Supply and Sanitation","dac_purpose_code":"14020","dac_purpose_name":"Water supply and sanitation - large systems","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129068","activity_name":"INP II -  Deir Sha'ar water project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"16512214"},{"country_id":"275","country_code":"PSE","country_name":"West Bank/Gaza","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4001873","channel_name":"APCO/ArCon Construction and Services","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"210","dac_sector_name":"Transport and Storage","dac_purpose_code":"21010","dac_purpose_name":"Transport policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129074","activity_name":"INP II -  Roads","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"16495593"},{"country_id":"704","country_code":"VNM","country_name":"Vietnam","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"20","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"3990008","channel_name":"Enterprise - United States Other","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"410","dac_sector_name":"General Environmental Protection","dac_purpose_code":"41020","dac_purpose_name":"Biosphere protection","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129103","activity_name":"InPile Thermal Desorption (IPTD) services for Environmental Remediation Project at the Danang Airport","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"16492658"},{"country_id":"728","country_code":"SSD","country_name":"South Sudan","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153229","activity_name":"ITSH Freight Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"16482300"},{"country_id":"1022","country_code":"MNA","country_name":"Middle East Region","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153103","activity_name":"Commodity Cost of USAID Emergency Food Security Program for Health","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"16445089"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4002116","channel_name":"Tetra Tech, Inc.","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128037","activity_name":"Rule of Law Stabilization Program  Formal Component (RLS-F)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"16400000"},{"country_id":"1033","country_code":"SSA","country_name":"Sub-Saharan Africa Region","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"66","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"60861","activity_name":"Department of State - Peacekeeping Operations: Trans-Sahara Counterterrorism Partnership (TSCTP)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"16100000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"25","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000502","channel_name":"World Health Organisation","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12263","dac_purpose_name":"Tuberculosis control","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"120794","activity_name":"STOP TB Partnership","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15900000"},{"country_id":"887","country_code":"YEM","country_name":"Yemen","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153206","activity_name":"ITSH Freight Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15896500"},{"country_id":"454","country_code":"MWI","country_name":"Malawi","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"430","dac_sector_name":"Other Multisector","dac_purpose_code":"43010","dac_purpose_name":"Multisector aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39249","activity_name":"MCC Natural Resource Management Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15867000"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153210","activity_name":"ITSH Freight Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15838900"},{"country_id":"736","country_code":"SDN","country_name":"Sudan (former)","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153099","activity_name":"Commodity Cost of USAID Emergency Food Security Program for Environment","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15803956"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4000575","channel_name":"Personal Services Contractors - USAID","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"430","dac_sector_name":"Other Multisector","dac_purpose_code":"43010","dac_purpose_name":"Multisector aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"4","aid_type_group_name":"Technical Assistance","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"118104","activity_name":"Administration and Oversight","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15759371"},{"country_id":"51","country_code":"ARM","country_name":"Armenia","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"18","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23064","dac_purpose_name":"Nuclear power plants","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"16190","activity_name":"Cooperative Threat Reduction Program: Cooperative Biological Engagement/Proliferation Prevention [non-ODA]","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15732000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4000669","channel_name":"Chemonics International, Inc.","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15112","dac_purpose_name":"Decentralisation and support to subnational government","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"124670","activity_name":"Regional Afghan Municipalities Program for Urban Populations (RAMP UP) - South","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15719708"},{"country_id":"404","country_code":"KEN","country_name":"Kenya","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000521","channel_name":"Jhpiego Corporation","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"123280","activity_name":"APHIA Plus Central/Eastern","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15649635"},{"country_id":"368","country_code":"IRQ","country_name":"Iraq","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4001880","channel_name":"QED Group, LLC","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"430","dac_sector_name":"Other Multisector","dac_purpose_code":"43010","dac_purpose_name":"Multisector aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128435","activity_name":"Advancing Performance Management (APM)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15618757"},{"country_id":"422","country_code":"LBN","country_name":"Lebanon","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70993","activity_name":"Contribution To United Nations High Commissioner for Refugees (UNHCR) Needs Defined in The Syria Regional Response Plan (January - June 2013)- Lebanon","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15600000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"16","implementing_agency_acronym":"PC","implementing_agency_name":"Peace Corps","implementing_subagency_id":"113","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000012","channel_name":"U.S. Government - Peace Corps","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"16","funding_agency_name":"Peace Corps","funding_agency_acronym":"PC","activity_id":"53653","activity_name":"Program Support","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15586579"},{"country_id":"231","country_code":"ETH","country_name":"Ethiopia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"6","channel_subcategory_name":"NGO - International","channel_id":"4001523","channel_name":"Management Sciences for Health","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"125455","activity_name":"Ethiopia Comprehensive HIV AIDS Treatement Care and Support Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15550038"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"96","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000002","channel_name":"U.S. Government - Department of Agriculture","dac_category_id":"6","dac_category_name":"Agriculture","dac_sector_code":"311","dac_sector_name":"Agriculture","dac_purpose_code":"31110","dac_purpose_name":"Agricultural policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129574","activity_name":"SPPM- BFS-USDA/FAS PASA","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15479593"},{"country_id":"706","country_code":"SOM","country_name":"Somalia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"18","channel_subcategory_name":"Multilateral - Other","channel_id":"4000256","channel_name":"International Organisation for Migration","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15220","dac_purpose_name":"Civilian peace-building, conflict prevention and resolution","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"124831","activity_name":"Transition Initiative for Stabilization (TIS) program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15420929"},{"country_id":"508","country_code":"MOZ","country_name":"Mozambique","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4000692","channel_name":"Abt Associates, Inc.","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"125281","activity_name":"Clinical HIV/AIDS Services Strengthening Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15406510"},{"country_id":"275","country_code":"PSE","country_name":"West Bank/Gaza","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4000670","channel_name":"Development Alternatives, Inc.","dac_category_id":"5","dac_category_name":"Economic Growth","dac_sector_code":"250","dac_sector_name":"Business and Other Services","dac_purpose_code":"25010","dac_purpose_name":"Business support services and institutions","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"126893","activity_name":"Compete","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15400000"},{"country_id":"729","country_code":"SDN","country_name":"Sudan","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71579","activity_name":"Second Contribution Towards United Nations High Commissioner for Refugees (UNHCR)'s Sudan Annual Budget Activities","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15400000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4011420","channel_name":"Deloitte Consulting LLP","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15111","dac_purpose_name":"Public finance management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"121836","activity_name":"Economic Growth & Governance Initiative (EGGI)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15240603"},{"country_id":"834","country_code":"TZA","country_name":"Tanzania","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"2","channel_category_name":"Universities and Research Institutes","channel_subcategory_id":"3","channel_subcategory_name":"Universities and Research Institutes - United States","channel_id":"4000522","channel_name":"RTI International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12262","dac_purpose_name":"Malaria control","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"126134","activity_name":"Scale-up of Indoor Residual Spraying on Mainland and Zanzibar","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15219101"},{"country_id":"332","country_code":"HTI","country_name":"Haiti","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"26","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4009930","channel_name":"Thor Construction, Inc.","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"126943","activity_name":"Construction of 750 Core House Units","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15112430"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153122","activity_name":"Commodity Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15109200"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"25","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4008779","channel_name":"Camris International, Inc.","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"123995","activity_name":"Global Health Support Initiative II (GHSI II)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15099871"},{"country_id":"508","country_code":"MOZ","country_name":"Mozambique","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"5","implementing_agency_acronym":"AGR","implementing_agency_name":"Department of Agriculture","implementing_subagency_id":"8","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000403","channel_name":"Technoserve","dac_category_id":"8","dac_category_name":"Commodity Assistance","dac_sector_code":"520","dac_sector_name":"Developmental Food Aid/Food Security Assistance","dac_purpose_code":"52010","dac_purpose_name":"Food aid/Food security programmes","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"3788","activity_name":"Food for Progress","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15085250"},{"country_id":"231","country_code":"ETH","country_name":"Ethiopia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000021","channel_name":"Agriculture Cooperative Development International/Volunteers in Overseas Cooperative Assistance","dac_category_id":"6","dac_category_name":"Agriculture","dac_sector_code":"311","dac_sector_name":"Agriculture","dac_purpose_code":"31120","dac_purpose_name":"Agricultural development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"125029","activity_name":"Agri-business and Market Development Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15049405"},{"country_id":"368","country_code":"IRQ","country_name":"Iraq","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000131","channel_name":"FHI 360","dac_category_id":"5","dac_category_name":"Economic Growth","dac_sector_code":"250","dac_sector_name":"Business and Other Services","dac_purpose_code":"25010","dac_purpose_name":"Business support services and institutions","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129364","activity_name":"Opportunities 'Foras' Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15047734"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000268","channel_name":"International Relief and Development","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"210","dac_sector_name":"Transport and Storage","dac_purpose_code":"21010","dac_purpose_name":"Transport policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"125452","activity_name":"Engineering Quality and Logistic Support (EQUALS)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15000000"},{"country_id":"792","country_code":"TUR","country_name":"Turkey","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71002","activity_name":"Contribution To United Nations High Commissioner for Refugees (UNHCR) Needs Defined in The Syria Regional Response Plan 5 -Turkey","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15000000"},{"country_id":"360","country_code":"IDN","country_name":"Indonesia","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"1","dac_category_name":"Education","dac_sector_code":"114","dac_sector_name":"Post-Secondary Education","dac_purpose_code":"11430","dac_purpose_name":"Advanced technical and managerial training","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39119","activity_name":"MCC Green Prosperity Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15000000"},{"country_id":"376","country_code":"ISR","country_name":"Israel","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"7","channel_subcategory_name":"NGO - Non United States","channel_id":"4000416","channel_name":"United Israel Appeal","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71537","activity_name":"Resettlement of Jewish Humanitarian Migrants To Israel","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15000000"},{"country_id":"404","country_code":"KEN","country_name":"Kenya","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000555","channel_name":"John Snow International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12262","dac_purpose_name":"Malaria control","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"125354","activity_name":"Deliver Project for Malaria","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15000000"},{"country_id":"231","country_code":"ETH","country_name":"Ethiopia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000627","channel_name":"Pact","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"125924","activity_name":"Orphans and Vulnerable Children (OVC) Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15000000"},{"country_id":"508","country_code":"MOZ","country_name":"Mozambique","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"140","dac_sector_name":"Water Supply and Sanitation","dac_purpose_code":"14021","dac_purpose_name":"Water supply - large systems","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39501","activity_name":"MCC Water Supply And Sanitation Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"15000000"},{"country_id":"608","country_code":"PHL","country_name":"Philippines","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"18","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23064","dac_purpose_name":"Nuclear power plants","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"16215","activity_name":"Cooperative Threat Reduction Program: Proliferation Prevention [non-ODA]","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14993000"},{"country_id":"710","country_code":"ZAF","country_name":"South Africa","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4002165","channel_name":"BroadReach Healthcare","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"128152","activity_name":"Systems Strengthening for Better HIV/TB Patient Outcomes (BroadReach Healthcare)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14900324"},{"country_id":"275","country_code":"PSE","country_name":"West Bank/Gaza","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000268","channel_name":"International Relief and Development","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"140","dac_sector_name":"Water Supply and Sanitation","dac_purpose_code":"14020","dac_purpose_name":"Water supply and sanitation - large systems","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129077","activity_name":"INP II -  Well Rehabilitation Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14721856"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000465","channel_name":"United Nations Relief and Works Agency","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70966","activity_name":"Contribution To UNWRA Appeal As Outlined in Syria Humanitarian Assistance Response Plan","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14700000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"25","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000134","channel_name":"Food and Agricultural Organisation","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12250","dac_purpose_name":"Infectious disease control","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"111158","activity_name":"FAO Grant","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14662315"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"82","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000013","channel_name":"U.S. Government - Department of Homeland Security","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"94490","activity_name":"Administrative costs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14628114"},{"country_id":"894","country_code":"ZMB","country_name":"Zambia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"4","channel_category_name":"Church and Faith Based","channel_subcategory_id":"8","channel_subcategory_name":"Church and Faith Based - United States","channel_id":"4000515","channel_name":"World Vision","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"123706","activity_name":"Community Based Prevention Initiative For Orphans and Vulnerable Children,","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14623439"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000502","channel_name":"World Health Organisation","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12250","dac_purpose_name":"Infectious disease control","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"6","funding_agency_name":"Department of Health and Human Services","funding_agency_acronym":"HHS","activity_id":"28338","activity_name":"CDC: Global Health Programs (Measles)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14609879"},{"country_id":"454","country_code":"MWI","country_name":"Malawi","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23010","dac_purpose_name":"Energy policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39282","activity_name":"MCC Power Sector Reform Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14587322"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"4","channel_category_name":"Church and Faith Based","channel_subcategory_id":"8","channel_subcategory_name":"Church and Faith Based - United States","channel_id":"4000260","channel_name":"International Orthodox Christian Charities","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129023","activity_name":"Humanitarian Assistance for Conflic-Affected Population in Syria","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14552778"},{"country_id":"404","country_code":"KEN","country_name":"Kenya","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153418","activity_name":"Ocean Freight of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14506800"},{"country_id":"400","country_code":"JOR","country_name":"Jordan","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"18","channel_subcategory_name":"Multilateral - Other","channel_id":"4000256","channel_name":"International Organisation for Migration","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70390","activity_name":"Middle East Resettlement Support Center, Op.0001","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14500583"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"82","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000031","channel_name":"U.S. Government - General Services Administration","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"126512","activity_name":"Administrative costs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14453566"},{"country_id":"704","country_code":"VNM","country_name":"Vietnam","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"13","implementing_agency_acronym":"DOE","implementing_agency_name":"Department of Energy","implementing_subagency_id":"36","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000016","channel_name":"U.S. Government - Department of Energy","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"230","dac_sector_name":"Energy Generation and Supply","dac_purpose_code":"23064","dac_purpose_name":"Nuclear power plants","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"13","funding_agency_name":"Department of Energy","funding_agency_acronym":"DOE","activity_id":"21319","activity_name":"Department of Energy, Office of Global Nuclear Material Threat Reduction (NA-212)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14384468"},{"country_id":"50","country_code":"BGD","country_name":"Bangladesh","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"5","implementing_agency_acronym":"AGR","implementing_agency_name":"Department of Agriculture","implementing_subagency_id":"8","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000307","channel_name":"Land-O-Lakes International","dac_category_id":"8","dac_category_name":"Commodity Assistance","dac_sector_code":"520","dac_sector_name":"Developmental Food Aid/Food Security Assistance","dac_purpose_code":"52010","dac_purpose_name":"Food aid/Food security programmes","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"3756","activity_name":"Food for Progress","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14364957"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"8","implementing_agency_acronym":"ARMY","implementing_agency_name":"Department of the Army","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"210","dac_sector_name":"Transport and Storage","dac_purpose_code":"21010","dac_purpose_name":"Transport policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"4","aid_type_group_name":"Technical Assistance","funding_agency_id":"8","funding_agency_name":"Department of the Army","funding_agency_acronym":"ARMY","activity_id":"16161","activity_name":"Commander's Emergency Response Program (CERP): Infrastructure (Transportation)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14357094"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"16","implementing_agency_acronym":"PC","implementing_agency_name":"Peace Corps","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000012","channel_name":"U.S. Government - Peace Corps","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"4","aid_type_group_name":"Technical Assistance","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32071","activity_name":"President's Emergency Plan for AIDS Relief - Technical Oversight & Management","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14331597"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000268","channel_name":"International Relief and Development","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"160","dac_sector_name":"Other Social Infrastructure and Services","dac_purpose_code":"16010","dac_purpose_name":"Social/ welfare services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"126917","activity_name":"Conflict Victim's Support Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14300000"},{"country_id":"1010","country_code":"LAC","country_name":"Caribbean Region","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"16","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"156451","activity_name":"DOD - Foreign Military Financing (FMF) Program, Payment Waived","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14278604"},{"country_id":"148","country_code":"TCD","country_name":"Chad","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153307","activity_name":"Inland Freight Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14236400"},{"country_id":"484","country_code":"MEX","country_name":"Mexico","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"62","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"58655","activity_name":"International Narcotics & Law Enforcement: Program Development and Support","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14204003"},{"country_id":"894","country_code":"ZMB","country_name":"Zambia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000131","channel_name":"FHI 360","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"126363","activity_name":"Zambia-led Prevention Initiative (ZPI)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14164066"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000269","channel_name":"International Rescue Committee","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"127327","activity_name":"Humanitarian Assistance in Syria","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14114581"},{"country_id":"430","country_code":"LBR","country_name":"Liberia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4000670","channel_name":"Development Alternatives, Inc.","dac_category_id":"6","dac_category_name":"Agriculture","dac_sector_code":"311","dac_sector_name":"Agriculture","dac_purpose_code":"31120","dac_purpose_name":"Agricultural development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"125526","activity_name":"Food and Enterprise Development (FED) Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14095047"},{"country_id":"894","country_code":"ZMB","country_name":"Zambia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000555","channel_name":"John Snow International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12262","dac_purpose_name":"Malaria control","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"125354","activity_name":"Deliver Project for Malaria","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14048311"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4001477","channel_name":"Education Development Center","dac_category_id":"1","dac_category_name":"Education","dac_sector_code":"112","dac_sector_name":"Basic Education","dac_purpose_code":"11220","dac_purpose_name":"Primary education","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"126303","activity_name":"USAID Teacher Education Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14034910"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71004","activity_name":"Contribution To United Nations High Commissioner for Refugees (UNHCR)s Needs As Outlined in The Revised Syria Humanitarian Assistance Response Plan (Sharp)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14000000"},{"country_id":"275","country_code":"PSE","country_name":"West Bank/Gaza","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000026","channel_name":"American Near East Refugee Aid (ANERA)","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"140","dac_sector_name":"Water Supply and Sanitation","dac_purpose_code":"14020","dac_purpose_name":"Water supply and sanitation - large systems","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129384","activity_name":"Palestinian Community Infrastructure Development Program (PCID)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14000000"},{"country_id":"180","country_code":"COD","country_name":"Congo (Kinshasa)","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71014","activity_name":"Contribution Towards United Nations High Commissioner for Refugees (UNHCR)s Africa Supplementary Budget Activities  Democratic Republic of Congo","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"14000000"},{"country_id":"360","country_code":"IDN","country_name":"Indonesia","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12261","dac_purpose_name":"Health education","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39025","activity_name":"MCC Community Nutrition Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13920989"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"25","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000002","channel_name":"U.S. Government - Department of Agriculture","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"94476","activity_name":"Administrative costs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13859633"},{"country_id":"104","country_code":"MMR","country_name":"Burma (Myanmar)","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71765","activity_name":"United Nations High Commissioner for Refugees (UNHCR) Myanmar Situation Revised Requirements 2013","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13800000"},{"country_id":"268","country_code":"GEO","country_name":"Georgia","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"16","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"156451","activity_name":"DOD - Foreign Military Financing (FMF) Program, Payment Waived","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13671795"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"6","funding_agency_name":"Department of Health and Human Services","funding_agency_acronym":"HHS","activity_id":"31973","activity_name":"HHS, Center for Disease Control HIV/AIDs Activities - CDC Research","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13653119"},{"country_id":"275","country_code":"PSE","country_name":"West Bank/Gaza","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4001873","channel_name":"APCO/ArCon Construction and Services","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"210","dac_sector_name":"Transport and Storage","dac_purpose_code":"21010","dac_purpose_name":"Transport policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129345","activity_name":"New Road Task Order for the construction of seven roads projects located in the West Bank","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13645234"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"25","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000555","channel_name":"John Snow International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13020","dac_purpose_name":"Reproductive health care","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"116291","activity_name":"Maternal and Child Health","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13546000"},{"country_id":"180","country_code":"COD","country_name":"Congo (Kinshasa)","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000810","channel_name":"PATH","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"122321","activity_name":"Integrated HIV/AIDS Project (ProVIC)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13505402"},{"country_id":"894","country_code":"ZMB","country_name":"Zambia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"81","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32041","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13484011"},{"country_id":"646","country_code":"RWA","country_name":"Rwanda","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4000669","channel_name":"Chemonics International, Inc.","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"127099","activity_name":"Family Health Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13479398"},{"country_id":"558","country_code":"NIC","country_name":"Nicaragua","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"5","implementing_agency_acronym":"AGR","implementing_agency_name":"Department of Agriculture","implementing_subagency_id":"8","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000368","channel_name":"Project Concern International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12240","dac_purpose_name":"Basic nutrition","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"3834","activity_name":"McGovern-Dole","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13410077"},{"country_id":"404","country_code":"KEN","country_name":"Kenya","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129763","activity_name":"World Food Programme Kenya Cash for Assets Emergency Food and Shelter Program (EFSP) - 2013 Award","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13400000"},{"country_id":"275","country_code":"PSE","country_name":"West Bank/Gaza","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000268","channel_name":"International Relief and Development","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"210","dac_sector_name":"Transport and Storage","dac_purpose_code":"21010","dac_purpose_name":"Transport policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129070","activity_name":"INP II -  Five road projects located in the West Bank as follows:  1) Jenin-Al Jalama Road (Phase II), 2) Al Zababida-Raba-American University Road, 3) Mirka-Al Jarba Road, 4) Kufr Al Deek-Deir Ghassaneh Road, and 5)Kufr Rai - Al Ram - Aija","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13373806"},{"country_id":"566","country_code":"NGA","country_name":"Nigeria","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000555","channel_name":"John Snow International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12262","dac_purpose_name":"Malaria control","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"125354","activity_name":"Deliver Project for Malaria","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13360000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"25","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000555","channel_name":"John Snow International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13020","dac_purpose_name":"Reproductive health care","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"116291","activity_name":"Maternal and Child Health","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13350000"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"6","channel_subcategory_name":"NGO - International","channel_id":"4000247","channel_name":"International Medical Corps","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129024","activity_name":"Humanitarian Assistance for Health, NFIs, Protection, and WASH","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13341544"},{"country_id":"584","country_code":"MHL","country_name":"Marshall Islands","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"9","implementing_agency_acronym":"DOI","implementing_agency_name":"Department of the Interior","implementing_subagency_id":"41","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000091","channel_name":"Government of Marshall Islands","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"510","dac_sector_name":"General Budget Support","dac_purpose_code":"51010","dac_purpose_name":"General budget support","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"1","aid_type_group_name":"Budget support","funding_agency_id":"9","funding_agency_name":"Department of the Interior","funding_agency_acronym":"DOI","activity_id":"34738","activity_name":"Compacts of Free Association, Sector Grants: Program Support - Unspecified.","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13306650"},{"country_id":"566","country_code":"NGA","country_name":"Nigeria","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"7","channel_subcategory_name":"NGO - Non United States","channel_id":"4002173","channel_name":"Society for Family Health (Nigeria)","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13030","dac_purpose_name":"Family planning","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"125467","activity_name":"Expanded Social Marketing Project in Nigeria","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13300378"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000134","channel_name":"Food and Agricultural Organisation","dac_category_id":"6","dac_category_name":"Agriculture","dac_sector_code":"311","dac_sector_name":"Agriculture","dac_purpose_code":"31120","dac_purpose_name":"Agricultural development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"118559","activity_name":"Balochistan Agriculture Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13300000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000001","channel_name":"U.S. Government - U.S. Agency for International Development","dac_category_id":"6","dac_category_name":"Agriculture","dac_sector_code":"311","dac_sector_name":"Agriculture","dac_purpose_code":"31120","dac_purpose_name":"Agricultural development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"127082","activity_name":"Establish the Agricultural Development Fund (ADF)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13300000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000186","channel_name":"Government of Afghanistan - Ministry of Education","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"125154","activity_name":"Basic Education, Literacy, and Technical-Vocational Education (BELT)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13300000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"64","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"4","aid_type_group_name":"Technical Assistance","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"59767","activity_name":"U.S. Department of State: Nonproliferation Assistance Programs - Global Threat Reduction (GTR), Unspecified Program and Travel Expenses","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13296800"},{"country_id":"360","country_code":"IDN","country_name":"Indonesia","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"16","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"156451","activity_name":"DOD - Foreign Military Financing (FMF) Program, Payment Waived","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13292023"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"25","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000502","channel_name":"World Health Organisation","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"123270","activity_name":"World Health Organization Consolidated Grant","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13280528"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000001","channel_name":"U.S. Government - U.S. Agency for International Development","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129133","activity_name":"Interagency Agency Agreement (IAA) between USAID and DOS for provision of Embassy Protective Detail (EPD) services","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13235592"},{"country_id":"430","country_code":"LBR","country_name":"Liberia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"5","implementing_agency_acronym":"AGR","implementing_agency_name":"Department of Agriculture","implementing_subagency_id":"8","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000021","channel_name":"Agriculture Cooperative Development International/Volunteers in Overseas Cooperative Assistance","dac_category_id":"8","dac_category_name":"Commodity Assistance","dac_sector_code":"520","dac_sector_name":"Developmental Food Aid/Food Security Assistance","dac_purpose_code":"52010","dac_purpose_name":"Food aid/Food security programmes","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"3793","activity_name":"Food for Progress","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13197917"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4011420","channel_name":"Deloitte Consulting LLP","dac_category_id":"5","dac_category_name":"Economic Growth","dac_sector_code":"331","dac_sector_name":"Trade Policy and Regulations","dac_purpose_code":"33110","dac_purpose_name":"Trade policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"121879","activity_name":"Empower Pakistan (Trade)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13174470"},{"country_id":"585","country_code":"PLW","country_name":"Palau","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"9","implementing_agency_acronym":"DOI","implementing_agency_name":"Department of the Interior","implementing_subagency_id":"41","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000108","channel_name":"Government of Palau","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"510","dac_sector_name":"General Budget Support","dac_purpose_code":"51010","dac_purpose_name":"General budget support","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"1","aid_type_group_name":"Budget support","funding_agency_id":"9","funding_agency_name":"Department of the Interior","funding_agency_acronym":"DOI","activity_id":"34787","activity_name":"Compacts of Free Association, Sector Grants: Program Support - Unspecified.","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13147000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"23","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000002","channel_name":"U.S. Government - Department of Agriculture","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"94476","activity_name":"Administrative costs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13122716"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000031","channel_name":"U.S. Government - General Services Administration","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72050","dac_purpose_name":"Relief co-ordination; protection and support services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"115850","activity_name":"Information Communication Technology (ICT) Support for Office of Foreign Disaster Assistance","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13075395"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153207","activity_name":"ITSH Freight Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13059400"},{"country_id":"804","country_code":"UKR","country_name":"Ukraine","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"64","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"18","channel_subcategory_name":"Multilateral - Other","channel_id":"4000344","channel_name":"Organization for Security and Cooperation in Europe","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"4","aid_type_group_name":"Technical Assistance","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"59893","activity_name":"U.S. Department of State: Nonproliferation Assistance Programs - Nonproliferation and Disarmament Fund","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13000000"},{"country_id":"50","country_code":"BGD","country_name":"Bangladesh","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129737","activity_name":"WFP Mali 2013 Award for IDP Response","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13000000"},{"country_id":"1034","country_code":"SSA","country_name":"West Africa Region","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000268","channel_name":"International Relief and Development","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"125952","activity_name":"Peace Through Development II (PDev II)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13000000"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000521","channel_name":"Jhpiego Corporation","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13020","dac_purpose_name":"Reproductive health care","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129282","activity_name":"Maternal, Newborn and Child Health (MNCH) Services Project.","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"13000000"},{"country_id":"132","country_code":"CPV","country_name":"Cabo Verde","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"430","dac_sector_name":"Other Multisector","dac_purpose_code":"43040","dac_purpose_name":"Rural development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39216","activity_name":"MCC Land Management For Investment Projects","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12980000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"8","implementing_agency_acronym":"ARMY","implementing_agency_name":"Department of the Army","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"1","dac_category_name":"Education","dac_sector_code":"112","dac_sector_name":"Basic Education","dac_purpose_code":"11220","dac_purpose_name":"Primary education","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"4","aid_type_group_name":"Technical Assistance","funding_agency_id":"8","funding_agency_name":"Department of the Army","funding_agency_acronym":"ARMY","activity_id":"16157","activity_name":"Commander's Emergency Response Program (CERP): Basic Education","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12938555"},{"country_id":"148","country_code":"TCD","country_name":"Chad","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153231","activity_name":"ITSH Freight Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12913800"},{"country_id":"626","country_code":"TLS","country_name":"Timor-Leste","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"5","implementing_agency_acronym":"AGR","implementing_agency_name":"Department of Agriculture","implementing_subagency_id":"8","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4000324","channel_name":"National Cooperative Business Association CLUSA","dac_category_id":"8","dac_category_name":"Commodity Assistance","dac_sector_code":"520","dac_sector_name":"Developmental Food Aid/Food Security Assistance","dac_purpose_code":"52010","dac_purpose_name":"Food aid/Food security programmes","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"3760","activity_name":"Food for Progress","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12859922"},{"country_id":"834","country_code":"TZA","country_name":"Tanzania","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"3","implementing_agency_acronym":"MCC","implementing_agency_name":"Millennium Challenge Corporation","implementing_subagency_id":"999","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000006","channel_name":"U.S. Government - Millennium Challenge Corporation","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"210","dac_sector_name":"Transport and Storage","dac_purpose_code":"21020","dac_purpose_name":"Road transport","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"3","funding_agency_name":"Millennium Challenge Corporation","funding_agency_acronym":"MCC","activity_id":"39438","activity_name":"MCC Transport Sector Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12851908"},{"country_id":"398","country_code":"KAZ","country_name":"Kazakhstan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"15","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"160","dac_sector_name":"Other Social Infrastructure and Services","dac_purpose_code":"16063","dac_purpose_name":"Narcotics control","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"4","aid_type_group_name":"Technical Assistance","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"16168","activity_name":"In-Country Counternarcotics Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12826000"},{"country_id":"736","country_code":"SDN","country_name":"Sudan (former)","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153481","activity_name":"Section 202e Cost of USAID Emergency Food Security Program for Social and Economic Services and Protection for Vulnerable Populations","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12813890"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000002","channel_name":"U.S. Government - Department of Agriculture","dac_category_id":"6","dac_category_name":"Agriculture","dac_sector_code":"311","dac_sector_name":"Agriculture","dac_purpose_code":"31120","dac_purpose_name":"Agricultural development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"127413","activity_name":"Inter Agency Agreement with USDA for Pakistan Agriculture Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12787500"},{"country_id":"800","country_code":"UGA","country_name":"Uganda","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"7","channel_subcategory_name":"NGO - Non United States","channel_id":"4009146","channel_name":"Marie Stopes International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13030","dac_purpose_name":"Family planning","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"124277","activity_name":"Long Term Family Planning Methods Program (LTM)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12769440"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"123","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4008144","channel_name":"Triple Canopy, Inc.","dac_category_id":"5","dac_category_name":"Economic Growth","dac_sector_code":"250","dac_sector_name":"Business and Other Services","dac_purpose_code":"25010","dac_purpose_name":"Business support services and institutions","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"156647","activity_name":"Task Force for Business and Stability Operations (TFBSO) Support (OCO-funded): Life Support and Security Support Services.","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12740565"},{"country_id":"124","country_code":"CAN","country_name":"Canada","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"9","implementing_agency_acronym":"DOI","implementing_agency_name":"Department of the Interior","implementing_subagency_id":"49","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"6","channel_subcategory_name":"NGO - International","channel_id":"4001062","channel_name":"Ducks Unlimited","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"410","dac_sector_name":"General Environmental Protection","dac_purpose_code":"41030","dac_purpose_name":"Bio-diversity","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"9","funding_agency_name":"Department of the Interior","funding_agency_acronym":"DOI","activity_id":"38471","activity_name":"Canadian Prairie/Parkland And Western Boreal Habitat Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12729955"},{"country_id":"804","country_code":"UKR","country_name":"Ukraine","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"13","implementing_agency_acronym":"DOE","implementing_agency_name":"Department of Energy","implementing_subagency_id":"36","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000016","channel_name":"U.S. Government - Department of Energy","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"13","funding_agency_name":"Department of Energy","funding_agency_acronym":"DOE","activity_id":"21282","activity_name":"Department of Energy, International Materials Protection & Cooperation","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12590161"},{"country_id":"728","country_code":"SSD","country_name":"South Sudan","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4000692","channel_name":"Abt Associates, Inc.","dac_category_id":"6","dac_category_name":"Agriculture","dac_sector_code":"311","dac_sector_name":"Agriculture","dac_purpose_code":"31120","dac_purpose_name":"Agricultural development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"123974","activity_name":"Food, Agribusiness and Rural Markets (FARM)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12590000"},{"country_id":"48","country_code":"BHR","country_name":"Bahrain","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"16","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"156451","activity_name":"DOD - Foreign Military Financing (FMF) Program, Payment Waived","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12575203"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"64","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"4","aid_type_group_name":"Technical Assistance","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"59889","activity_name":"U.S. Department of State: Nonproliferation Assistance Programs - Nonproliferation and Disarmament Fund","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12550000"},{"country_id":"728","country_code":"SSD","country_name":"South Sudan","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4011420","channel_name":"Deloitte Consulting LLP","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"127977","activity_name":"Project on Good Governance in the Republic of South Sudan (PROGRESS)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12540931"},{"country_id":"180","country_code":"COD","country_name":"Congo (Kinshasa)","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"6","channel_subcategory_name":"NGO - International","channel_id":"4001523","channel_name":"Management Sciences for Health","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13020","dac_purpose_name":"Reproductive health care","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"124203","activity_name":"Integrated Health Project (IHP)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12523000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"65","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000016","channel_name":"U.S. Government - Department of Energy","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"410","dac_sector_name":"General Environmental Protection","dac_purpose_code":"41010","dac_purpose_name":"Environmental policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"60682","activity_name":"Climate REDI 3 and Energy Efficiency, Emissions Reduction, and Grid Management in Emerging Economies","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12500000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4002153","channel_name":"Checchi and Company Consulting, Inc.","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128038","activity_name":"Rule of Law Stabilization Program  Informal Component (RLS-I) Phase 3","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12476859"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"62","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"160","dac_sector_name":"Other Social Infrastructure and Services","dac_purpose_code":"16063","dac_purpose_name":"Narcotics control","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"58631","activity_name":"International Narcotics & Law Enforcement: Demand Reduction","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12463375"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"16","implementing_agency_acronym":"PC","implementing_agency_name":"Peace Corps","implementing_subagency_id":"114","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000012","channel_name":"U.S. Government - Peace Corps","dac_category_id":"1","dac_category_name":"Education","dac_sector_code":"112","dac_sector_name":"Basic Education","dac_purpose_code":"11220","dac_purpose_name":"Primary education","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"4","aid_type_group_name":"Technical Assistance","funding_agency_id":"16","funding_agency_name":"Peace Corps","funding_agency_acronym":"PC","activity_id":"53634","activity_name":"Direct Volunteer Support","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12450247"},{"country_id":"417","country_code":"KGZ","country_name":"Kyrgyzstan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"15","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"160","dac_sector_name":"Other Social Infrastructure and Services","dac_purpose_code":"16063","dac_purpose_name":"Narcotics control","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"4","aid_type_group_name":"Technical Assistance","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"16168","activity_name":"In-Country Counternarcotics Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12441000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000894","channel_name":"Roots of Peace","dac_category_id":"6","dac_category_name":"Agriculture","dac_sector_code":"311","dac_sector_name":"Agriculture","dac_purpose_code":"31165","dac_purpose_name":"Agricultural alternative development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"123698","activity_name":"Commercial Horticulture and Agriculture Marketing Program (CHAMP)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12413083"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"6","channel_subcategory_name":"NGO - International","channel_id":"4000210","channel_name":"International Committee of the Red Cross","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71132","activity_name":"First Tranche Contribution To International Committee of the Red Cross (ICRC)'s 2013 Emergency Appeal for Afghanistan","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12400000"},{"country_id":"1071","country_code":"CS-KM","country_name":"Kosovo","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"62","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"58616","activity_name":"International Narcotics & Law Enforcement: Anti-Crime Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12394600"},{"country_id":"404","country_code":"KEN","country_name":"Kenya","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"4","channel_category_name":"Church and Faith Based","channel_subcategory_id":"8","channel_subcategory_name":"Church and Faith Based - United States","channel_id":"4000068","channel_name":"Church World Service","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70578","activity_name":"Resettlement Support Center Nairobi","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12384137"},{"country_id":"466","country_code":"MLI","country_name":"Mali","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"66","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"60876","activity_name":"Department of State - Peacekeeping Operations: Mali Support - Africa Union and UN Mission Support","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12369000"},{"country_id":"50","country_code":"BGD","country_name":"Bangladesh","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"20","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"6","channel_subcategory_name":"NGO - International","channel_id":"4001532","channel_name":"Pathfinder International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13030","dac_purpose_name":"Family planning","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"127673","activity_name":"NGO Health Service Delivery Project (NHSDP)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12306397"},{"country_id":"368","country_code":"IRQ","country_name":"Iraq","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000131","channel_name":"FHI 360","dac_category_id":"5","dac_category_name":"Economic Growth","dac_sector_code":"321","dac_sector_name":"Industry","dac_purpose_code":"32130","dac_purpose_name":"Small and medium-sized enterprises (SME) development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129364","activity_name":"Opportunities 'Foras' Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12294000"},{"country_id":"275","country_code":"PSE","country_name":"West Bank/Gaza","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4001873","channel_name":"APCO/ArCon Construction and Services","dac_category_id":"4","dac_category_name":"Infrastructure","dac_sector_code":"210","dac_sector_name":"Transport and Storage","dac_purpose_code":"21010","dac_purpose_name":"Transport policy and administrative management","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129073","activity_name":"INP II -  Roads","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12259300"},{"country_id":"275","country_code":"PSE","country_name":"West Bank/Gaza","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000317","channel_name":"Mercy Corps","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"160","dac_sector_name":"Other Social Infrastructure and Services","dac_purpose_code":"16010","dac_purpose_name":"Social/ welfare services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"124437","activity_name":"Palestinian Community Assistance Program (PCAP)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12250000"},{"country_id":"275","country_code":"PSE","country_name":"West Bank/Gaza","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"28","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4001873","channel_name":"APCO/ArCon Construction and Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"140","dac_sector_name":"Water Supply and Sanitation","dac_purpose_code":"14020","dac_purpose_name":"Water supply and sanitation - large systems","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129071","activity_name":"INP II -  Nahaleen Pipiline water project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12214885"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"6","channel_subcategory_name":"NGO - International","channel_id":"4000210","channel_name":"International Committee of the Red Cross","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70932","activity_name":"Contribution To International Committee of the Red Cross (ICRC)'s 2013 Emergency Appeal for Syria - Syria","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12200000"},{"country_id":"728","country_code":"SSD","country_name":"South Sudan","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"6","channel_subcategory_name":"NGO - International","channel_id":"4000210","channel_name":"International Committee of the Red Cross","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71597","activity_name":"Second Tranche Contribution To International Committee of the Red Cross (ICRC)'s 2013 Emergency Appeal for South Sudan","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12200000"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000531","channel_name":"World Learning","dac_category_id":"1","dac_category_name":"Education","dac_sector_code":"112","dac_sector_name":"Basic Education","dac_purpose_code":"11220","dac_purpose_name":"Primary education","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129701","activity_name":"Training for Pakistan (TFP)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12128609"},{"country_id":"710","country_code":"ZAF","country_name":"South Africa","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"2","channel_category_name":"Universities and Research Institutes","channel_subcategory_id":"3","channel_subcategory_name":"Universities and Research Institutes - United States","channel_id":"4000554","channel_name":"Johns Hopkins University","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"119747","activity_name":"Johns Hopkins Health and Education in South Africa (JHHESA)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12056471"},{"country_id":"180","country_code":"COD","country_name":"Congo (Kinshasa)","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"66","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"60832","activity_name":"Department of State - Peacekeeping Operations: Democratic Republic of the Congo - Security Sector Reform","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12000000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000623","channel_name":"National Democratic Institute","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15151","dac_purpose_name":"Elections","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129647","activity_name":"Strengthening Political Entities and Civil Society (SPECS)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"12000000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71258","activity_name":"Initial Contribution Towards United Nations High Commissioner for Refugees (UNHCR)'s Asia and The Pacific Annual Budget Activities - Afghans","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11920000"},{"country_id":"404","country_code":"KEN","country_name":"Kenya","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"6","channel_subcategory_name":"NGO - International","channel_id":"4001532","channel_name":"Pathfinder International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"123281","activity_name":"APHIA Plus Nairobi/Coast (AIDS, Population and Health Integrated Assistance)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11871204"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"13","implementing_agency_acronym":"DOE","implementing_agency_name":"Department of Energy","implementing_subagency_id":"36","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000016","channel_name":"U.S. Government - Department of Energy","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15210","dac_purpose_name":"Security system management and reform","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"13","funding_agency_name":"Department of Energy","funding_agency_acronym":"DOE","activity_id":"21136","activity_name":"Department of Energy, International Nuclear Materials Protection, Control & Accounting (MPC&A) (formerly International Nuclear Materials Protection & Cooperation)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11844162"},{"country_id":"736","country_code":"SDN","country_name":"Sudan (former)","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153473","activity_name":"Section 202e Cost of USAID Emergency Food Security Program for Health","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11837770"},{"country_id":"710","country_code":"ZAF","country_name":"South Africa","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"2","channel_category_name":"Universities and Research Institutes","channel_subcategory_id":"4","channel_subcategory_name":"Universities and Research Institutes - Non United States","channel_id":"4002143","channel_name":"University of the Witwatersrand","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"128155","activity_name":"Systems Strengthening for Better HIV/TB Patient Outcomes (Wits Reproductive Health and HIV Institute)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11815563"},{"country_id":"1018","country_code":"WLD","country_name":"Europe Region","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"55","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"156740","activity_name":"Bureau of European and Eurasian Affairs(EUR) - Multi-Sector - Unspecified","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11773434"},{"country_id":"1021","country_code":"LAC","country_name":"Latin America and Caribbean Region","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"59","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"3990001","channel_name":"NGO - United States Other","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15150","dac_purpose_name":"Democratic participation and civil society","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"56091","activity_name":"Democracy, Human Rights and Labor Program - Unspecified Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11742701"},{"country_id":"736","country_code":"SDN","country_name":"Sudan (former)","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153102","activity_name":"Commodity Cost of USAID Emergency Food Security Program for Health","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11739340"},{"country_id":"764","country_code":"THA","country_name":"Thailand","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"18","channel_subcategory_name":"Multilateral - Other","channel_id":"4000256","channel_name":"International Organisation for Migration","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70371","activity_name":"Medical Screening, East Asia, Mh.0001","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11710311"},{"country_id":"404","country_code":"KEN","country_name":"Kenya","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"7","channel_subcategory_name":"NGO - Non United States","channel_id":"4009918","channel_name":"Moi Teaching and Referral Hospital","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"126404","activity_name":"Academic Model Providing Access to Healthcare - People-centered, Leadership, Universal Access, Sustainability (AMPATH plus)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11691872"},{"country_id":"231","country_code":"ETH","country_name":"Ethiopia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"90","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32040","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11684916"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"16","implementing_agency_acronym":"PC","implementing_agency_name":"Peace Corps","implementing_subagency_id":"116","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000012","channel_name":"U.S. Government - Peace Corps","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"16","funding_agency_name":"Peace Corps","funding_agency_acronym":"PC","activity_id":"53653","activity_name":"Program Support","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11664608"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"62","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000004","channel_name":"U.S. Government - Department of State","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15130","dac_purpose_name":"Legal and judicial development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"58675","activity_name":"International Narcotics & Law Enforcement: Unspecified (Reimbursements)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11659868"},{"country_id":"422","country_code":"LBN","country_name":"Lebanon","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4000669","channel_name":"Chemonics International, Inc.","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15220","dac_purpose_name":"Civilian peace-building, conflict prevention and resolution","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"123678","activity_name":"Civic Support Initiative in Lebanon","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11632536"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"20","channel_subcategory_name":"Enterprises - Non United States","channel_id":"3990007","channel_name":"Enterprise - Non United States Other","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"430","dac_sector_name":"Other Multisector","dac_purpose_code":"43010","dac_purpose_name":"Multisector aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"118099","activity_name":"Administration and Oversight","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11585130"},{"country_id":"736","country_code":"SDN","country_name":"Sudan (former)","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153470","activity_name":"Section 202e Cost of USAID Emergency Food Security Program for Environment","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11557880"},{"country_id":"288","country_code":"GHA","country_name":"Ghana","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000555","channel_name":"John Snow International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12262","dac_purpose_name":"Malaria control","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"125354","activity_name":"Deliver Project for Malaria","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11555000"},{"country_id":"231","country_code":"ETH","country_name":"Ethiopia","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"7","channel_subcategory_name":"NGO - Non United States","channel_id":"4000376","channel_name":"Relief Society of Tigray","dac_category_id":"8","dac_category_name":"Commodity Assistance","dac_sector_code":"520","dac_sector_name":"Developmental Food Aid/Food Security Assistance","dac_purpose_code":"52010","dac_purpose_name":"Food aid/Food security programmes","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"125999","activity_name":"Productive Safety Net Program/ Development Food Assistance Program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11542602"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000001","channel_name":"U.S. Government - U.S. Agency for International Development","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"94472","activity_name":"Administrative costs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11541827"},{"country_id":"642","country_code":"ROU","country_name":"Romania","region_id":"2","region_name":"Europe and Eurasia","implementing_agency_id":"7","implementing_agency_acronym":"DOD","implementing_agency_name":"Department of Defense","implementing_subagency_id":"16","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000003","channel_name":"U.S. Government - Department of Defense","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15110","dac_purpose_name":"Public sector policy and administrative management","assistance_category_id":"2","assistance_category_name":"Military","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"7","funding_agency_name":"Department of Defense","funding_agency_acronym":"DOD","activity_id":"156451","activity_name":"DOD - Foreign Military Financing (FMF) Program, Payment Waived","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11390699"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"2","channel_subcategory_name":"Government - Non United States","channel_id":"2000001","channel_name":"Government of Afghanistan","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12263","dac_purpose_name":"Tuberculosis control","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"120205","activity_name":"Partnership Contract for Health Services (PCH) program","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11385000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4000670","channel_name":"Development Alternatives, Inc.","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15112","dac_purpose_name":"Decentralisation and support to subnational government","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"126100","activity_name":"Regional Afghan Municipalities Program for Urban Populations (RAMP UP)  North","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11324990"},{"country_id":"180","country_code":"COD","country_name":"Congo (Kinshasa)","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"6","channel_subcategory_name":"NGO - International","channel_id":"4000210","channel_name":"International Committee of the Red Cross","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71588","activity_name":"Second Tranche Contribution To International Committee of the Red Cross (ICRC)'s 2013 Emergency Appeal for Democratic Republic of Congo","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11300000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71277","activity_name":"Initial Contribution Towards United Nations High Commissioner for Refugees (UNHCR)s Africa Annual Budget Activities  Including N. Africa","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11220000"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"29","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000002","channel_name":"U.S. Government - Department of Agriculture","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"94476","activity_name":"Administrative costs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11201990"},{"country_id":"340","country_code":"HND","country_name":"Honduras","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"26","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4002117","channel_name":"Fintrac, Inc.","dac_category_id":"5","dac_category_name":"Economic Growth","dac_sector_code":"331","dac_sector_name":"Trade Policy and Regulations","dac_purpose_code":"33120","dac_purpose_name":"Trade facilitation","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"124912","activity_name":"ACCESO","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11156288"},{"country_id":"566","country_code":"NGA","country_name":"Nigeria","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000555","channel_name":"John Snow International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13020","dac_purpose_name":"Reproductive health care","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"123091","activity_name":"Targeted States High Impact Project (TSHIP)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11138646"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000454","channel_name":"United Nations Office of the United Nations High Commissioner for Refugees","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"71566","activity_name":"Second Contribution Towards United Nations High Commissioner for Refugees (UNHCR)'s Global Overseas Processing Entities Annual Budget Activities","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11120000"},{"country_id":"360","country_code":"IDN","country_name":"Indonesia","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"20","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000521","channel_name":"Jhpiego Corporation","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13020","dac_purpose_name":"Reproductive health care","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"125468","activity_name":"Expanding Maternal and Neonatal Survival (EMAS)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11116924"},{"country_id":"834","country_code":"TZA","country_name":"Tanzania","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000521","channel_name":"Jhpiego Corporation","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"120033","activity_name":"Maternal and Child Health Integrated Program (MCHIP)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11071418"},{"country_id":"1002","country_code":"WLD","country_name":"World","region_id":"7","region_name":"World","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4002146","channel_name":"Macfadden & Associates, Inc.","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"430","dac_sector_name":"Other Multisector","dac_purpose_code":"43010","dac_purpose_name":"Multisector aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"111921","activity_name":"Institutional Support Services for OFDA","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11057720"},{"country_id":"180","country_code":"COD","country_name":"Congo (Kinshasa)","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153145","activity_name":"Commodity Cost of USAID Title II Emergency Program for Humanitarian Assistance: Assistance and Recovery","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11040900"},{"country_id":"716","country_code":"ZWE","country_name":"Zimbabwe","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"6","implementing_agency_acronym":"HHS","implementing_agency_name":"Department of Health and Human Services","implementing_subagency_id":"10","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000007","channel_name":"U.S. Government - Department of Health and Human Services","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"32040","activity_name":"President's Emergency Plan for AIDS Relief - PEPFAR Operational Plan Programs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11032597"},{"country_id":"404","country_code":"KEN","country_name":"Kenya","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"6","channel_subcategory_name":"NGO - International","channel_id":"4001523","channel_name":"Management Sciences for Health","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13040","dac_purpose_name":"STD control including HIV/AIDS","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"125470","activity_name":"FANIKISHA Institutional Strengthening Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11027708"},{"country_id":"400","country_code":"JOR","country_name":"Jordan","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000421","channel_name":"United Nations Children's Fund","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70959","activity_name":"Contribution To UNICEF Needs Defined in The Syria Regional Response Plan 5 - Jordan","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11000000"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000502","channel_name":"World Health Organisation","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"128927","activity_name":"Grant to WHO Humanitarian Assistance for health, protection and WASH","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11000000"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000465","channel_name":"United Nations Relief and Works Agency","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70977","activity_name":"Contribution To UNWRA's Syria Crisis Response As Outlined in The Syria Humanitarian Response Plan (January - June 2013)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11000000"},{"country_id":"760","country_code":"SYR","country_name":"Syria","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"6","channel_subcategory_name":"NGO - International","channel_id":"4000210","channel_name":"International Committee of the Red Cross","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70929","activity_name":"Contribution To International Committee of the Red Cross (ICRC)'s 2013 Emergency Appeal for Syria","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11000000"},{"country_id":"422","country_code":"LBN","country_name":"Lebanon","region_id":"3","region_name":"Middle East and North Africa","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"67","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000421","channel_name":"United Nations Children's Fund","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"2","aid_type_group_name":"Core contributions","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"70960","activity_name":"Contribution To UNICEF Needs Defined in The Syria Regional Response Plan 5 - Lebanon","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11000000"},{"country_id":"4","country_code":"AFG","country_name":"Afghanistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4001522","channel_name":"ARD, Inc.","dac_category_id":"5","dac_category_name":"Economic Growth","dac_sector_code":"250","dac_sector_name":"Business and Other Services","dac_purpose_code":"25010","dac_purpose_name":"Business support services and institutions","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"125762","activity_name":"Land Reform in Afghanistan (LARA) Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"11000000"},{"country_id":"332","country_code":"HTI","country_name":"Haiti","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"26","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4008775","channel_name":"CEEPCO Contracting, LLC","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129610","activity_name":"Site Preparation construction works for the housing development sites in Ouanaminthe, Terrier Rouge and Quartier Morin","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"10991677"},{"country_id":"180","country_code":"COD","country_name":"Congo (Kinshasa)","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"8","channel_category_name":"Enterprises","channel_subcategory_id":"19","channel_subcategory_name":"Enterprises - United States","channel_id":"4001477","channel_name":"Education Development Center","dac_category_id":"1","dac_category_name":"Education","dac_sector_code":"112","dac_sector_name":"Basic Education","dac_purpose_code":"11220","dac_purpose_name":"Primary education","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"122636","activity_name":"Package for Improving Education Quality (PIEQ)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"10970976"},{"country_id":"170","country_code":"COL","country_name":"Colombia","region_id":"6","region_name":"Western Hemisphere","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"26","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"18","channel_subcategory_name":"Multilateral - Other","channel_id":"4000256","channel_name":"International Organisation for Migration","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"152","dac_sector_name":"Conflict Prevention & Resolution, Peace and Security","dac_purpose_code":"15240","dac_purpose_name":"Reintegration and SALW control","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"110369","activity_name":"Community Oriented Reintegration of Ex-combatants","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"10949000"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"13","channel_subcategory_name":"Multilateral - World Bank Group","channel_id":"4003810","channel_name":"World Bank Group","dac_category_id":"6","dac_category_name":"Agriculture","dac_sector_code":"311","dac_sector_name":"Agriculture","dac_purpose_code":"31120","dac_purpose_name":"Agricultural development","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"125197","activity_name":"CGIAR Fund grant with the World Bank.","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"10900000"},{"country_id":"156","country_code":"CHN","country_name":"China (P.R.C.)","region_id":"1","region_name":"East Asia and Oceania","implementing_agency_id":"2","implementing_agency_acronym":"STATE","implementing_agency_name":"Department of State","implementing_subagency_id":"59","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"3990001","channel_name":"NGO - United States Other","dac_category_id":"3","dac_category_name":"Governance","dac_sector_code":"151","dac_sector_name":"Government and Civil Society, General","dac_purpose_code":"15150","dac_purpose_name":"Democratic participation and civil society","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"56091","activity_name":"Democracy, Human Rights and Labor Program - Unspecified Project","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"10882097"},{"country_id":"566","country_code":"NGA","country_name":"Nigeria","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000555","channel_name":"John Snow International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"130","dac_sector_name":"Population Policies/Programmes and Reproductive Health","dac_purpose_code":"13030","dac_purpose_name":"Family planning","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"123091","activity_name":"Targeted States High Impact Project (TSHIP)","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"10860302"},{"country_id":"834","country_code":"TZA","country_name":"Tanzania","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"19","channel_category_id":"3","channel_category_name":"NGO","channel_subcategory_id":"5","channel_subcategory_name":"NGO - United States","channel_id":"4000555","channel_name":"John Snow International","dac_category_id":"2","dac_category_name":"Health and Population","dac_sector_code":"122","dac_sector_name":"Basic Health","dac_purpose_code":"12262","dac_purpose_name":"Malaria control","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"2","funding_agency_name":"Department of State","funding_agency_acronym":"STATE","activity_id":"125354","activity_name":"Deliver Project for Malaria","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"10858480"},{"country_id":"586","country_code":"PAK","country_name":"Pakistan","region_id":"4","region_name":"South and Central Asia","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"92","channel_category_id":"1","channel_category_name":"Government","channel_subcategory_id":"1","channel_subcategory_name":"Government - United States","channel_id":"1000002","channel_name":"U.S. Government - Department of Agriculture","dac_category_id":"7","dac_category_name":"Other","dac_sector_code":"910","dac_sector_name":"Administrative Costs Of Donors","dac_purpose_code":"91010","dac_purpose_name":"Administrative costs","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"6","aid_type_group_name":"Administrative Costs","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"94476","activity_name":"Administrative costs","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"10833889"},{"country_id":"728","country_code":"SSD","country_name":"South Sudan","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72010","dac_purpose_name":"Material relief assistance and services","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"1","funding_agency_name":"U.S. Agency for International Development","funding_agency_acronym":"USAID","activity_id":"129736","activity_name":"WFP Base Macro Grant","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"10800000"},{"country_id":"736","country_code":"SDN","country_name":"Sudan (former)","region_id":"5","region_name":"Sub-Saharan Africa","implementing_agency_id":"1","implementing_agency_acronym":"USAID","implementing_agency_name":"U.S. Agency for International Development","implementing_subagency_id":"21","channel_category_id":"7","channel_category_name":"Multilateral","channel_subcategory_id":"12","channel_subcategory_name":"Multilateral - United Nations","channel_id":"4000501","channel_name":"World Food Program","dac_category_id":"9","dac_category_name":"Humanitarian","dac_sector_code":"720","dac_sector_name":"Emergency Response","dac_purpose_code":"72040","dac_purpose_name":"Emergency food aid","assistance_category_id":"1","assistance_category_name":"Economic","aid_type_group_id":"3","aid_type_group_name":"Project-Type","funding_agency_id":"5","funding_agency_name":"Department of Agriculture","funding_agency_acronym":"AGR","activity_id":"153200","activity_name":"ITSH Freight Cost of USAID Emergency Food Security Program for Social and Economic Services and Protection for Vulnerable Populations","transaction_type_id":"2","transaction_type_name":"Obligations","fiscal_year":"2013.0","current_amount":"10779950"}];
	
	    return fixture;
	}
	
	function loadDateFixture2() {
	    var fixture = JSON.parse(
	        "[" +
	            "{\"value\":\"11\",\"nvalue\":\"-4\",\"countrycode\":\"UK\",\"state\":\"Liverpool\",\"status\":\"T\",\"id\":11,\"region\":\"South\",\"date\":\"2012-05-25T16:20:09Z\"}, " +
	            "{\"value\":\"76\",\"nvalue\":\"-1\",\"countrycode\":\"UK\",\"state\":\"London\",\"status\":\"F\",\"id\":12,\"region\":\"\",\"date\":\"2012-06-10T16:20:39Z\"}" +
	            "]");
	
	    fixture.forEach(dateCleaner);
	    return fixture;
	}
	
	
	function loadBoxPlotFixture() {
	    return JSON.parse("[" +
	        "{\"value\":\"44\",\"nvalue\":\"-4\",\"countrycode\":\"US\",\"state\":\"California\",\"status\":\"T\",\"id\":1,\"region\":\"South\",\"date\":\"2012-05-25T16:10:09Z\"}, " +
	        "{\"value\":\"22\",\"nvalue\":\"-2\",\"countrycode\":\"US\",\"state\":\"Colorado\",\"status\":\"F\",\"id\":2,\"region\":\"West\",\"date\":\"2012-06-10T16:10:19Z\"}, " +
	        "{\"value\":\"33\",\"nvalue\":\"1\",\"countrycode\":\"US\",\"state\":\"Delaware\",\"status\":\"T\",\"id\":3,\"region\":\"West\",\"date\":\"2012-08-10T16:20:29Z\"}, " +
	        "{\"value\":\"44\",\"nvalue\":\"-3\",\"countrycode\":\"US\",\"state\":\"California\",\"status\":\"F\",\"id\":4,\"region\":\"South\",\"date\":\"2012-07-01T16:10:39Z\"}, " +
	        "{\"value\":\"55\",\"nvalue\":\"-5\",\"countrycode\":\"US\",\"state\":\"Ontario\",\"status\":\"T\",\"id\":5,\"region\":\"Central\",\"date\":\"2012-06-10T16:10:49Z\"}, " +
	        "{\"value\":\"66\",\"nvalue\":\"-4\",\"countrycode\":\"US\",\"state\":\"California\",\"status\":\"F\",\"id\":6,\"region\":\"West\",\"date\":\"2012-06-08T16:10:59Z\"}, " +
	        "{\"value\":\"33\",\"nvalue\":\"10\",\"countrycode\":\"US\",\"state\":\"Ontario\",\"status\":\"T\",\"id\":7,\"region\":\"East\",\"date\":\"2012-07-10T16:10:09Z\"}, " +
	        "{\"value\":\"33\",\"nvalue\":\"1\",\"countrycode\":\"US\",\"state\":\"Mississippi\",\"status\":\"F\",\"id\":8,\"region\":\"Central\",\"date\":\"2012-07-10T16:10:19Z\"}, " +
	        "{\"value\":\"44\",\"nvalue\":\"2\",\"countrycode\":\"US\",\"state\":\"Mississippi\",\"status\":\"T\",\"id\":9,\"region\":\"Central\",\"date\":\"2012-08-10T16:30:29Z\"}, " +
	        "{\"value\":\"1\",\"nvalue\":\"-12\",\"countrycode\":\"US\",\"state\":\"Washington\",\"status\":\"F\",\"id\":12,\"region\":\"\",\"date\":\"2012-06-10T16:10:39Z\"}, " +
	        "{\"value\":\"144\",\"nvalue\":\"-3\",\"countrycode\":\"US\",\"state\":\"Massachusetts\",\"status\":\"T\",\"id\":15,\"region\":\"\",\"date\":\"2012-06-10T16:10:39Z\"}, " +
	        "{\"value\":\"1\",\"nvalue\":\"-4\",\"countrycode\":\"CA\",\"state\":\"California\",\"statCA\":\"T\",\"id\":1,\"region\":\"South\",\"date\":\"2012-05-25T16:10:09Z\"}, " +
	        "{\"value\":\"2\",\"nvalue\":\"-2\",\"countrycode\":\"CA\",\"state\":\"Colorado\",\"statCA\":\"F\",\"id\":2,\"region\":\"West\",\"date\":\"2012-06-10T16:10:19Z\"}, " +
	        "{\"value\":\"3\",\"nvalue\":\"1\",\"countrycode\":\"CA\",\"state\":\"Delaware\",\"statCA\":\"T\",\"id\":3,\"region\":\"West\",\"date\":\"2012-08-10T16:20:29Z\"}" +
	        "]");
	}
	
	function loadColorFixture() {
	    return JSON.parse("[" +
	        "{\"colData\":\"1\", \"rowData\": \"1\", \"colorData\": \"1\"}," +
	        "{\"colData\":\"1\", \"rowData\": \"1\", \"colorData\": \"1\"}," +
	        "{\"colData\":\"1\", \"rowData\": \"2\", \"colorData\": \"2\"}," +
	        "{\"colData\":\"1\", \"rowData\": \"2\", \"colorData\": \"2\"}," +
	        "{\"colData\":\"2\", \"rowData\": \"1\", \"colorData\": \"3\"}," +
	        "{\"colData\":\"2\", \"rowData\": \"1\", \"colorData\": \"3\"}," +
	        "{\"colData\":\"2\", \"rowData\": \"2\", \"colorData\": \"4\"}," +
	        "{\"colData\":\"2\", \"rowData\": \"2\", \"colorData\": \"4\"}" +
	        "]");
	}
	
	function loadColorFixture2() {
	    return JSON.parse("[" +
	        "{\"colData\":\"3\", \"rowData\": \"3\", \"colorData\": \"5\"}," +
	        "{\"colData\":\"3\", \"rowData\": \"4\", \"colorData\": \"5\"}," +
	        "{\"colData\":\"4\", \"rowData\": \"5\", \"colorData\": \"6\"}," +
	        "{\"colData\":\"4\", \"rowData\": \"6\", \"colorData\": \"6\"}," +
	        "{\"colData\":\"5\", \"rowData\": \"3\", \"colorData\": \"7\"}," +
	        "{\"colData\":\"5\", \"rowData\": \"4\", \"colorData\": \"7\"}," +
	        "{\"colData\":\"6\", \"rowData\": \"5\", \"colorData\": \"8\"}," +
	        "{\"colData\":\"6\", \"rowData\": \"6\", \"colorData\": \"8\"}" +
	        "]");
	}
	
	function dateCleaner(e) {
	    e.dd = d3.time.format.iso.parse(e.date);
	}
	
	module.exports = {
	    loadDateFixture: loadDateFixture,
	    loadForeignAidFixture: loadForeignAidFixture,
	    loadDateFixture2: loadDateFixture2,
	    loadColorFixture: loadColorFixture,
	    loadColorFixture2: loadColorFixture2,
	    loadBoxPlotFixture: loadBoxPlotFixture,
	    dateCleaner: dateCleaner
	};

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(41);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(14)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../css-loader/index.js!./dc.css", function() {
				var newContent = require("!!./../css-loader/index.js!./dc.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(13)();
	// imports
	
	
	// module
	exports.push([module.id, "div.dc-chart {\n    float: left;\n}\n\n.dc-chart rect.bar {\n    stroke: none;\n    cursor: pointer;\n}\n\n.dc-chart rect.bar:hover {\n    fill-opacity: .5;\n}\n\n.dc-chart rect.stack1 {\n    stroke: none;\n    fill: red;\n}\n\n.dc-chart rect.stack2 {\n    stroke: none;\n    fill: green;\n}\n\n.dc-chart rect.deselected {\n    stroke: none;\n    fill: #ccc;\n}\n\n.dc-chart .empty-chart .pie-slice path {\n    fill: #FFEEEE;\n    cursor: default;\n}\n\n.dc-chart .empty-chart .pie-slice {\n    cursor: default;\n}\n\n.dc-chart .pie-slice {\n    fill: white;\n    font-size: 12px;\n    cursor: pointer;\n}\n\n.dc-chart .pie-slice.external{\n    fill: black;\n}\n\n.dc-chart .pie-slice :hover {\n    fill-opacity: .8;\n}\n\n.dc-chart .pie-slice.highlight {\n    fill-opacity: .8;\n}\n\n.dc-chart .selected path {\n    stroke-width: 3;\n    stroke: #ccc;\n    fill-opacity: 1;\n}\n\n.dc-chart .deselected path {\n    stroke: none;\n    fill-opacity: .5;\n    fill: #ccc;\n}\n\n.dc-chart .axis path, .axis line {\n    fill: none;\n    stroke: #000;\n    shape-rendering: crispEdges;\n}\n\n.dc-chart .axis text {\n    font: 10px sans-serif;\n}\n\n.dc-chart .grid-line {\n    fill: none;\n    stroke: #ccc;\n    opacity: .5;\n    shape-rendering: crispEdges;\n}\n\n.dc-chart .grid-line line {\n    fill: none;\n    stroke: #ccc;\n    opacity: .5;\n    shape-rendering: crispEdges;\n}\n\n.dc-chart .brush rect.background {\n    z-index: -999;\n}\n\n.dc-chart .brush rect.extent {\n    fill: steelblue;\n    fill-opacity: .125;\n}\n\n.dc-chart .brush .resize path {\n    fill: #eee;\n    stroke: #666;\n}\n\n.dc-chart path.line {\n    fill: none;\n    stroke-width: 1.5px;\n}\n\n.dc-chart circle.dot {\n    stroke: none;\n}\n\n.dc-chart g.dc-tooltip path {\n    fill: none;\n    stroke: grey;\n    stroke-opacity: .8;\n}\n\n.dc-chart path.area {\n    fill-opacity: .3;\n    stroke: none;\n}\n\n.dc-chart .node {\n    font-size: 0.7em;\n    cursor: pointer;\n}\n\n.dc-chart .node :hover {\n    fill-opacity: .8;\n}\n\n.dc-chart .selected circle {\n    stroke-width: 3;\n    stroke: #ccc;\n    fill-opacity: 1;\n}\n\n.dc-chart .deselected circle {\n    stroke: none;\n    fill-opacity: .5;\n    fill: #ccc;\n}\n\n.dc-chart .bubble {\n    stroke: none;\n    fill-opacity: 0.6;\n}\n\n.dc-data-count {\n    float: right;\n    margin-top: 15px;\n    margin-right: 15px;\n}\n\n.dc-data-count .filter-count {\n    color: #3182bd;\n    font-weight: bold;\n}\n\n.dc-data-count .total-count {\n    color: #3182bd;\n    font-weight: bold;\n}\n\n.dc-data-table {\n}\n\n.dc-chart g.state {\n    cursor: pointer;\n}\n\n.dc-chart g.state :hover {\n    fill-opacity: .8;\n}\n\n.dc-chart g.state path {\n    stroke: white;\n}\n\n.dc-chart g.selected path {\n}\n\n.dc-chart g.deselected path {\n    fill: grey;\n}\n\n.dc-chart g.selected text {\n}\n\n.dc-chart g.deselected text {\n    display: none;\n}\n\n.dc-chart g.county path {\n    stroke: white;\n    fill: none;\n}\n\n.dc-chart g.debug rect {\n    fill: blue;\n    fill-opacity: .2;\n}\n\n.dc-chart g.row rect {\n    fill-opacity: 0.8;\n    cursor: pointer;\n}\n\n.dc-chart g.row rect:hover {\n    fill-opacity: 0.6;\n}\n\n.dc-chart g.row text {\n    fill: white;\n    font-size: 12px;\n    cursor: pointer;\n}\n\n.dc-legend {\n    font-size: 11px;\n}\n\n.dc-legend-item {\n    cursor: pointer;\n}\n\n.dc-chart g.axis text {\n    /* Makes it so the user can't accidentally click and select text that is meant as a label only */\n    -webkit-user-select: none; /* Chrome/Safari */\n    -moz-user-select: none; /* Firefox */\n    -ms-user-select: none; /* IE10 */\n    -o-user-select: none;\n    user-select: none;\n    pointer-events: none;\n}\n\n.dc-chart path.highlight {\n    stroke-width: 3;\n    fill-opacity: 1;\n    stroke-opacity: 1;\n}\n\n.dc-chart .highlight {\n    fill-opacity: 1;\n    stroke-opacity: 1;\n}\n\n.dc-chart .fadeout {\n    fill-opacity: 0.2;\n    stroke-opacity: 0.2;\n}\n\n.dc-chart path.dc-symbol, g.dc-legend-item.fadeout {\n    fill-opacity: 0.5;\n    stroke-opacity: 0.5;\n}\n\n.dc-hard .number-display {\n    float: none;\n}\n\n.dc-chart .box text {\n    font: 10px sans-serif;\n    -webkit-user-select: none; /* Chrome/Safari */\n    -moz-user-select: none; /* Firefox */\n    -ms-user-select: none; /* IE10 */\n    -o-user-select: none;\n    user-select: none;\n    pointer-events: none;\n}\n\n.dc-chart .box line,\n.dc-chart .box circle {\n    fill: #fff;\n    stroke: #000;\n    stroke-width: 1.5px;\n}\n\n.dc-chart .box rect {\n    stroke: #000;\n    stroke-width: 1.5px;\n}\n\n.dc-chart .box .center {\n    stroke-dasharray: 3,3;\n}\n\n.dc-chart .box .outlier {\n    fill: none;\n    stroke: #ccc;\n}\n\n.dc-chart .box.deselected .box {\n    fill: #ccc;\n}\n\n.dc-chart .box.deselected {\n    opacity: .5;\n}\n\n.dc-chart .symbol{\n    stroke: none;\n}\n\n.dc-chart .heatmap .box-group.deselected rect {\n    stroke: none;\n    fill-opacity: .5;\n    fill: #ccc;\n}\n\n.dc-chart .heatmap g.axis text {\n    pointer-events: all;\n    cursor: pointer;\n}\n\n.dc-arc-gauge-background {\n    fill: #9BE8D4;\n}\n\n.dc-arc-gauge-foreground {\n    fill: #04ADB0;\n}\n\n.dc-sankey g.node.Central rect{\n    stroke: blue;    \n}\n\n.dc-bar-gauge-background {\n    fill: #04ADB0;\n    opacity: .7;\n}\n\n.dc-bar-gauge-foreground {\n    fill: #9BE8D4; \n    opacity: .7;\n}\n\n.dc-bar-gauge .axis path, .axis line {\n    fill: none;\n    stroke: #000;\n    shape-rendering: crispEdges;\n    opacity: .5;\n}\n\n.dc-bar-gauge .axis text {\n    font: 10px sans-serif;\n}\n\n.dc-bar-gauge .grid-line {\n    fill: none;\n    stroke: #ccc;\n    opacity: .5;\n    shape-rendering: crispEdges;\n}\n\n\n.dc-bar-gauge .marker-line {\n    fill:none;\n    stroke: #000;\n    opacity: 1;\n    shape-rendering: crispEdges;\n}\n\n.dc-bar-gauge .marker-rect {\n    fill: green;\n}\n\n.dc-zoom-button {\n    background-color: #FFF;\n    color: #555;\n    cursor: pointer;\n    width: 20px;\n    font-size: 10px;\n    text-align: center;\n    border: 1px solid #CCC;\n    border-radius: 4px;\n}\n.dc-zoom-button div {\n    font-size: 14px;\n    text-align: center;\n    font-weight: bold;\n}\n.dc-zoom-button .in {\n    border-bottom: 1px solid #CCC;\n}\n\n.dc-zoom-reset {\n    background-color: #FFF;\n    font-size: 10px;\n    cursor: pointer;\n    width: 60px;\n    text-align: center;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n}", ""]);
	
	// exports


/***/ }
/******/ ]);
//# sourceMappingURL=dynatable-shortload-bundle.js.map